[
 {
  "classes": [
   {
    "fields": [],
    "name": "WordUtils",
    "methods": [
     {
      "type": "String",
      "name": "wrap",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "wrapLength"
       }
      ]
     },
     {
      "type": "String",
      "name": "wrap",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "wrapLength"
       },
       {
        "type": "String",
        "name": "newLineStr"
       },
       {
        "type": "boolean",
        "name": "wrapLongWords"
       }
      ]
     },
     {
      "type": "String",
      "name": "capitalize",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "capitalize",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "delimiters"
       }
      ]
     },
     {
      "type": "String",
      "name": "capitalizeFully",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "capitalizeFully",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "delimiters"
       }
      ]
     },
     {
      "type": "String",
      "name": "uncapitalize",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "uncapitalize",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "delimiters"
       }
      ]
     },
     {
      "type": "String",
      "name": "swapCase",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "initials",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "initials",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "delimiters"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isDelimiter",
      "params": [
       {
        "type": "char",
        "name": "ch"
       },
       {
        "type": "char",
        "name": "delimiters"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "WordUtils.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "SerializationUtils",
    "methods": [
     {
      "type": "Object",
      "name": "clone",
      "params": [
       {
        "type": "Serializable",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "serialize",
      "params": [
       {
        "type": "Serializable",
        "name": "obj"
       },
       {
        "type": "OutputStream",
        "name": "outputStream"
       }
      ]
     },
     {
      "type": "byte",
      "name": "serialize",
      "params": [
       {
        "type": "Serializable",
        "name": "obj"
       }
      ]
     },
     {
      "type": "Object",
      "name": "deserialize",
      "params": [
       {
        "type": "InputStream",
        "name": "inputStream"
       }
      ]
     },
     {
      "type": "Object",
      "name": "deserialize",
      "params": [
       {
        "type": "byte",
        "name": "objectData"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "SerializationUtils.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "BooleanUtils",
    "methods": [
     {
      "type": "Boolean",
      "name": "negate",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isTrue",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFalse",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "Boolean",
      "name": "toBooleanObject",
      "params": [
       {
        "type": "boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toBoolean",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toBooleanDefaultIfNull",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       },
       {
        "type": "boolean",
        "name": "valueIfNull"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toBoolean",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Boolean",
      "name": "toBooleanObject",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Boolean",
      "name": "toBooleanObject",
      "params": [
       {
        "type": "Integer",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toBoolean",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "trueValue"
       },
       {
        "type": "int",
        "name": "falseValue"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toBoolean",
      "params": [
       {
        "type": "Integer",
        "name": "value"
       },
       {
        "type": "Integer",
        "name": "trueValue"
       },
       {
        "type": "Integer",
        "name": "falseValue"
       }
      ]
     },
     {
      "type": "Boolean",
      "name": "toBooleanObject",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "trueValue"
       },
       {
        "type": "int",
        "name": "falseValue"
       },
       {
        "type": "int",
        "name": "nullValue"
       }
      ]
     },
     {
      "type": "Boolean",
      "name": "toBooleanObject",
      "params": [
       {
        "type": "Integer",
        "name": "value"
       },
       {
        "type": "Integer",
        "name": "trueValue"
       },
       {
        "type": "Integer",
        "name": "falseValue"
       },
       {
        "type": "Integer",
        "name": "nullValue"
       }
      ]
     },
     {
      "type": "int",
      "name": "toInteger",
      "params": [
       {
        "type": "boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "Integer",
      "name": "toIntegerObject",
      "params": [
       {
        "type": "boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "Integer",
      "name": "toIntegerObject",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "int",
      "name": "toInteger",
      "params": [
       {
        "type": "boolean",
        "name": "bool"
       },
       {
        "type": "int",
        "name": "trueValue"
       },
       {
        "type": "int",
        "name": "falseValue"
       }
      ]
     },
     {
      "type": "int",
      "name": "toInteger",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       },
       {
        "type": "int",
        "name": "trueValue"
       },
       {
        "type": "int",
        "name": "falseValue"
       },
       {
        "type": "int",
        "name": "nullValue"
       }
      ]
     },
     {
      "type": "Integer",
      "name": "toIntegerObject",
      "params": [
       {
        "type": "boolean",
        "name": "bool"
       },
       {
        "type": "Integer",
        "name": "trueValue"
       },
       {
        "type": "Integer",
        "name": "falseValue"
       }
      ]
     },
     {
      "type": "Integer",
      "name": "toIntegerObject",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       },
       {
        "type": "Integer",
        "name": "trueValue"
       },
       {
        "type": "Integer",
        "name": "falseValue"
       },
       {
        "type": "Integer",
        "name": "nullValue"
       }
      ]
     },
     {
      "type": "Boolean",
      "name": "toBooleanObject",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "Boolean",
      "name": "toBooleanObject",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "trueString"
       },
       {
        "type": "String",
        "name": "falseString"
       },
       {
        "type": "String",
        "name": "nullString"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toBoolean",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toBoolean",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "trueString"
       },
       {
        "type": "String",
        "name": "falseString"
       }
      ]
     },
     {
      "type": "String",
      "name": "toStringTrueFalse",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "String",
      "name": "toStringOnOff",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "String",
      "name": "toStringYesNo",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Boolean",
        "name": "bool"
       },
       {
        "type": "String",
        "name": "trueString"
       },
       {
        "type": "String",
        "name": "falseString"
       },
       {
        "type": "String",
        "name": "nullString"
       }
      ]
     },
     {
      "type": "String",
      "name": "toStringTrueFalse",
      "params": [
       {
        "type": "boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "String",
      "name": "toStringOnOff",
      "params": [
       {
        "type": "boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "String",
      "name": "toStringYesNo",
      "params": [
       {
        "type": "boolean",
        "name": "bool"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "boolean",
        "name": "bool"
       },
       {
        "type": "String",
        "name": "trueString"
       },
       {
        "type": "String",
        "name": "falseString"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "xor",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": "Boolean",
      "name": "xor",
      "params": [
       {
        "type": "Boolean",
        "name": "array"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "BooleanUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "CHAR_STRING"
     },
     {
      "type": "String",
      "name": "CHAR_STRING_ARRAY"
     },
     {
      "type": "Character",
      "name": "CHAR_ARRAY"
     },
     {
      "type": "char",
      "name": "LF"
     },
     {
      "type": "char",
      "name": "CR"
     }
    ],
    "name": "CharUtils",
    "methods": [
     {
      "type": "Character",
      "name": "toCharacterObject",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "Character",
      "name": "toCharacterObject",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "char",
      "name": "toChar",
      "params": [
       {
        "type": "Character",
        "name": "ch"
       }
      ]
     },
     {
      "type": "char",
      "name": "toChar",
      "params": [
       {
        "type": "Character",
        "name": "ch"
       },
       {
        "type": "char",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "char",
      "name": "toChar",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "char",
      "name": "toChar",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "int",
      "name": "toIntValue",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "int",
      "name": "toIntValue",
      "params": [
       {
        "type": "char",
        "name": "ch"
       },
       {
        "type": "int",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "int",
      "name": "toIntValue",
      "params": [
       {
        "type": "Character",
        "name": "ch"
       }
      ]
     },
     {
      "type": "int",
      "name": "toIntValue",
      "params": [
       {
        "type": "Character",
        "name": "ch"
       },
       {
        "type": "int",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Character",
        "name": "ch"
       }
      ]
     },
     {
      "type": "String",
      "name": "unicodeEscaped",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "String",
      "name": "unicodeEscaped",
      "params": [
       {
        "type": "Character",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAscii",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAsciiPrintable",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAsciiControl",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAsciiAlpha",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAsciiAlphaUpper",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAsciiAlphaLower",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAsciiNumeric",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAsciiAlphanumeric",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "CharUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "IncompleteArgumentException",
    "methods": [
     {
      "type": "String",
      "name": "safeArrayToString",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "IncompleteArgumentException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "BASIC_ARRAY"
     },
     {
      "type": "String",
      "name": "APOS_ARRAY"
     },
     {
      "type": "String",
      "name": "ISO8859_1_ARRAY"
     },
     {
      "type": "String",
      "name": "HTML40_ARRAY"
     },
     {
      "type": "Entities",
      "name": "XML"
     },
     {
      "type": "Entities",
      "name": "HTML32"
     },
     {
      "type": "Entities",
      "name": "HTML40"
     },
     {
      "type": "EntityMap",
      "name": "map"
     }
    ],
    "name": "Entities",
    "methods": [
     {
      "type": null,
      "name": "fillWithHtml40Entities",
      "params": [
       {
        "type": "Entities",
        "name": "entities"
       }
      ]
     },
     {
      "type": null,
      "name": "addEntities",
      "params": [
       {
        "type": "String",
        "name": "entityArray"
       }
      ]
     },
     {
      "type": null,
      "name": "addEntity",
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "String",
      "name": "entityName",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "entityValue",
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ]
     },
     {
      "type": "String",
      "name": "escape",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "escape",
      "params": [
       {
        "type": "Writer",
        "name": "writer"
       },
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "unescape",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "unescape",
      "params": [
       {
        "type": "Writer",
        "name": "writer"
       },
       {
        "type": "String",
        "name": "string"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "Entities.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Object",
      "name": "EMPTY_OBJECT_ARRAY"
     },
     {
      "type": "Class",
      "name": "EMPTY_CLASS_ARRAY"
     },
     {
      "type": "String",
      "name": "EMPTY_STRING_ARRAY"
     },
     {
      "type": "long",
      "name": "EMPTY_LONG_ARRAY"
     },
     {
      "type": "Long",
      "name": "EMPTY_LONG_OBJECT_ARRAY"
     },
     {
      "type": "int",
      "name": "EMPTY_INT_ARRAY"
     },
     {
      "type": "Integer",
      "name": "EMPTY_INTEGER_OBJECT_ARRAY"
     },
     {
      "type": "short",
      "name": "EMPTY_SHORT_ARRAY"
     },
     {
      "type": "Short",
      "name": "EMPTY_SHORT_OBJECT_ARRAY"
     },
     {
      "type": "byte",
      "name": "EMPTY_BYTE_ARRAY"
     },
     {
      "type": "Byte",
      "name": "EMPTY_BYTE_OBJECT_ARRAY"
     },
     {
      "type": "double",
      "name": "EMPTY_DOUBLE_ARRAY"
     },
     {
      "type": "Double",
      "name": "EMPTY_DOUBLE_OBJECT_ARRAY"
     },
     {
      "type": "float",
      "name": "EMPTY_FLOAT_ARRAY"
     },
     {
      "type": "Float",
      "name": "EMPTY_FLOAT_OBJECT_ARRAY"
     },
     {
      "type": "boolean",
      "name": "EMPTY_BOOLEAN_ARRAY"
     },
     {
      "type": "Boolean",
      "name": "EMPTY_BOOLEAN_OBJECT_ARRAY"
     },
     {
      "type": "char",
      "name": "EMPTY_CHAR_ARRAY"
     },
     {
      "type": "Character",
      "name": "EMPTY_CHARACTER_OBJECT_ARRAY"
     },
     {
      "type": "int",
      "name": "INDEX_NOT_FOUND"
     }
    ],
    "name": "ArrayUtils",
    "methods": [
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "String",
        "name": "stringIfNull"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEquals",
      "params": [
       {
        "type": "Object",
        "name": "array1"
       },
       {
        "type": "Object",
        "name": "array2"
       }
      ]
     },
     {
      "type": "Map",
      "name": "toMap",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "Object",
      "name": "clone",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "long",
      "name": "clone",
      "params": [
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": "int",
      "name": "clone",
      "params": [
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": "short",
      "name": "clone",
      "params": [
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": "char",
      "name": "clone",
      "params": [
       {
        "type": "char",
        "name": "array"
       }
      ]
     },
     {
      "type": "byte",
      "name": "clone",
      "params": [
       {
        "type": "byte",
        "name": "array"
       }
      ]
     },
     {
      "type": "double",
      "name": "clone",
      "params": [
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": "float",
      "name": "clone",
      "params": [
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "clone",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": "Object",
      "name": "subarray",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "int",
        "name": "startIndexInclusive"
       },
       {
        "type": "int",
        "name": "endIndexExclusive"
       }
      ]
     },
     {
      "type": "long",
      "name": "subarray",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "int",
        "name": "startIndexInclusive"
       },
       {
        "type": "int",
        "name": "endIndexExclusive"
       }
      ]
     },
     {
      "type": "int",
      "name": "subarray",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "startIndexInclusive"
       },
       {
        "type": "int",
        "name": "endIndexExclusive"
       }
      ]
     },
     {
      "type": "short",
      "name": "subarray",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "int",
        "name": "startIndexInclusive"
       },
       {
        "type": "int",
        "name": "endIndexExclusive"
       }
      ]
     },
     {
      "type": "char",
      "name": "subarray",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "int",
        "name": "startIndexInclusive"
       },
       {
        "type": "int",
        "name": "endIndexExclusive"
       }
      ]
     },
     {
      "type": "byte",
      "name": "subarray",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "int",
        "name": "startIndexInclusive"
       },
       {
        "type": "int",
        "name": "endIndexExclusive"
       }
      ]
     },
     {
      "type": "double",
      "name": "subarray",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "int",
        "name": "startIndexInclusive"
       },
       {
        "type": "int",
        "name": "endIndexExclusive"
       }
      ]
     },
     {
      "type": "float",
      "name": "subarray",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "int",
        "name": "startIndexInclusive"
       },
       {
        "type": "int",
        "name": "endIndexExclusive"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "subarray",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "int",
        "name": "startIndexInclusive"
       },
       {
        "type": "int",
        "name": "endIndexExclusive"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLength",
      "params": [
       {
        "type": "Object",
        "name": "array1"
       },
       {
        "type": "Object",
        "name": "array2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLength",
      "params": [
       {
        "type": "long",
        "name": "array1"
       },
       {
        "type": "long",
        "name": "array2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLength",
      "params": [
       {
        "type": "int",
        "name": "array1"
       },
       {
        "type": "int",
        "name": "array2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLength",
      "params": [
       {
        "type": "short",
        "name": "array1"
       },
       {
        "type": "short",
        "name": "array2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLength",
      "params": [
       {
        "type": "char",
        "name": "array1"
       },
       {
        "type": "char",
        "name": "array2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLength",
      "params": [
       {
        "type": "byte",
        "name": "array1"
       },
       {
        "type": "byte",
        "name": "array2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLength",
      "params": [
       {
        "type": "double",
        "name": "array1"
       },
       {
        "type": "double",
        "name": "array2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLength",
      "params": [
       {
        "type": "float",
        "name": "array1"
       },
       {
        "type": "float",
        "name": "array2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLength",
      "params": [
       {
        "type": "boolean",
        "name": "array1"
       },
       {
        "type": "boolean",
        "name": "array2"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLength",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameType",
      "params": [
       {
        "type": "Object",
        "name": "array1"
       },
       {
        "type": "Object",
        "name": "array2"
       }
      ]
     },
     {
      "type": null,
      "name": "reverse",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "reverse",
      "params": [
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "reverse",
      "params": [
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "reverse",
      "params": [
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "reverse",
      "params": [
       {
        "type": "char",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "reverse",
      "params": [
       {
        "type": "byte",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "reverse",
      "params": [
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "reverse",
      "params": [
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "reverse",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Object",
        "name": "objectToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Object",
        "name": "objectToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Object",
        "name": "objectToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Object",
        "name": "objectToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Object",
        "name": "objectToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "long",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "long",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "long",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "long",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "long",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "short",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "short",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "short",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "short",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "short",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "char",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "char",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "char",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "char",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "char",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "byte",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "byte",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "byte",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "byte",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "byte",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       },
       {
        "type": "double",
        "name": "tolerance"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "double",
        "name": "tolerance"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       },
       {
        "type": "double",
        "name": "tolerance"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "double",
        "name": "tolerance"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueToFind"
       },
       {
        "type": "double",
        "name": "tolerance"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "float",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "float",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "float",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "float",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "float",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "valueToFind"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "valueToFind"
       }
      ]
     },
     {
      "type": "char",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Character",
        "name": "array"
       }
      ]
     },
     {
      "type": "char",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Character",
        "name": "array"
       },
       {
        "type": "char",
        "name": "valueForNull"
       }
      ]
     },
     {
      "type": "Character",
      "name": "toObject",
      "params": [
       {
        "type": "char",
        "name": "array"
       }
      ]
     },
     {
      "type": "long",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Long",
        "name": "array"
       }
      ]
     },
     {
      "type": "long",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Long",
        "name": "array"
       },
       {
        "type": "long",
        "name": "valueForNull"
       }
      ]
     },
     {
      "type": "Long",
      "name": "toObject",
      "params": [
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": "int",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Integer",
        "name": "array"
       }
      ]
     },
     {
      "type": "int",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Integer",
        "name": "array"
       },
       {
        "type": "int",
        "name": "valueForNull"
       }
      ]
     },
     {
      "type": "Integer",
      "name": "toObject",
      "params": [
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": "short",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Short",
        "name": "array"
       }
      ]
     },
     {
      "type": "short",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Short",
        "name": "array"
       },
       {
        "type": "short",
        "name": "valueForNull"
       }
      ]
     },
     {
      "type": "Short",
      "name": "toObject",
      "params": [
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": "byte",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Byte",
        "name": "array"
       }
      ]
     },
     {
      "type": "byte",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Byte",
        "name": "array"
       },
       {
        "type": "byte",
        "name": "valueForNull"
       }
      ]
     },
     {
      "type": "Byte",
      "name": "toObject",
      "params": [
       {
        "type": "byte",
        "name": "array"
       }
      ]
     },
     {
      "type": "double",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Double",
        "name": "array"
       }
      ]
     },
     {
      "type": "double",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "valueForNull"
       }
      ]
     },
     {
      "type": "Double",
      "name": "toObject",
      "params": [
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": "float",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Float",
        "name": "array"
       }
      ]
     },
     {
      "type": "float",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Float",
        "name": "array"
       },
       {
        "type": "float",
        "name": "valueForNull"
       }
      ]
     },
     {
      "type": "Float",
      "name": "toObject",
      "params": [
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toPrimitive",
      "params": [
       {
        "type": "Boolean",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "valueForNull"
       }
      ]
     },
     {
      "type": "Boolean",
      "name": "toObject",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "char",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "byte",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": "Object",
      "name": "addAll",
      "params": [
       {
        "type": "Object",
        "name": "array1"
       },
       {
        "type": "Object",
        "name": "array2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "addAll",
      "params": [
       {
        "type": "boolean",
        "name": "array1"
       },
       {
        "type": "boolean",
        "name": "array2"
       }
      ]
     },
     {
      "type": "char",
      "name": "addAll",
      "params": [
       {
        "type": "char",
        "name": "array1"
       },
       {
        "type": "char",
        "name": "array2"
       }
      ]
     },
     {
      "type": "byte",
      "name": "addAll",
      "params": [
       {
        "type": "byte",
        "name": "array1"
       },
       {
        "type": "byte",
        "name": "array2"
       }
      ]
     },
     {
      "type": "short",
      "name": "addAll",
      "params": [
       {
        "type": "short",
        "name": "array1"
       },
       {
        "type": "short",
        "name": "array2"
       }
      ]
     },
     {
      "type": "int",
      "name": "addAll",
      "params": [
       {
        "type": "int",
        "name": "array1"
       },
       {
        "type": "int",
        "name": "array2"
       }
      ]
     },
     {
      "type": "long",
      "name": "addAll",
      "params": [
       {
        "type": "long",
        "name": "array1"
       },
       {
        "type": "long",
        "name": "array2"
       }
      ]
     },
     {
      "type": "float",
      "name": "addAll",
      "params": [
       {
        "type": "float",
        "name": "array1"
       },
       {
        "type": "float",
        "name": "array2"
       }
      ]
     },
     {
      "type": "double",
      "name": "addAll",
      "params": [
       {
        "type": "double",
        "name": "array1"
       },
       {
        "type": "double",
        "name": "array2"
       }
      ]
     },
     {
      "type": "Object",
      "name": "add",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Object",
        "name": "element"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "add",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "element"
       }
      ]
     },
     {
      "type": "byte",
      "name": "add",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "byte",
        "name": "element"
       }
      ]
     },
     {
      "type": "char",
      "name": "add",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "char",
        "name": "element"
       }
      ]
     },
     {
      "type": "double",
      "name": "add",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "element"
       }
      ]
     },
     {
      "type": "float",
      "name": "add",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "float",
        "name": "element"
       }
      ]
     },
     {
      "type": "int",
      "name": "add",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "element"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "long",
        "name": "element"
       }
      ]
     },
     {
      "type": "short",
      "name": "add",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "short",
        "name": "element"
       }
      ]
     },
     {
      "type": "Object",
      "name": "copyArrayGrow1",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Class",
        "name": "newArrayComponentType"
       }
      ]
     },
     {
      "type": "Object",
      "name": "add",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "element"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "add",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "boolean",
        "name": "element"
       }
      ]
     },
     {
      "type": "char",
      "name": "add",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "char",
        "name": "element"
       }
      ]
     },
     {
      "type": "byte",
      "name": "add",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "byte",
        "name": "element"
       }
      ]
     },
     {
      "type": "short",
      "name": "add",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "short",
        "name": "element"
       }
      ]
     },
     {
      "type": "int",
      "name": "add",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "element"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "long",
        "name": "element"
       }
      ]
     },
     {
      "type": "float",
      "name": "add",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "float",
        "name": "element"
       }
      ]
     },
     {
      "type": "double",
      "name": "add",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "double",
        "name": "element"
       }
      ]
     },
     {
      "type": "Object",
      "name": "add",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "element"
       },
       {
        "type": "Class",
        "name": "clss"
       }
      ]
     },
     {
      "type": "Object",
      "name": "remove",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "Object",
      "name": "removeElement",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Object",
        "name": "element"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "remove",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "removeElement",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "element"
       }
      ]
     },
     {
      "type": "byte",
      "name": "remove",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "byte",
      "name": "removeElement",
      "params": [
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "byte",
        "name": "element"
       }
      ]
     },
     {
      "type": "char",
      "name": "remove",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "char",
      "name": "removeElement",
      "params": [
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "char",
        "name": "element"
       }
      ]
     },
     {
      "type": "double",
      "name": "remove",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "double",
      "name": "removeElement",
      "params": [
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "double",
        "name": "element"
       }
      ]
     },
     {
      "type": "float",
      "name": "remove",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "float",
      "name": "removeElement",
      "params": [
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "float",
        "name": "element"
       }
      ]
     },
     {
      "type": "int",
      "name": "remove",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "removeElement",
      "params": [
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "int",
        "name": "element"
       }
      ]
     },
     {
      "type": "long",
      "name": "remove",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "long",
      "name": "removeElement",
      "params": [
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "long",
        "name": "element"
       }
      ]
     },
     {
      "type": "short",
      "name": "remove",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "short",
      "name": "removeElement",
      "params": [
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "short",
        "name": "element"
       }
      ]
     },
     {
      "type": "Object",
      "name": "remove",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "ArrayUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "CharSet",
      "name": "EMPTY"
     },
     {
      "type": "CharSet",
      "name": "ASCII_ALPHA"
     },
     {
      "type": "CharSet",
      "name": "ASCII_ALPHA_LOWER"
     },
     {
      "type": "CharSet",
      "name": "ASCII_ALPHA_UPPER"
     },
     {
      "type": "CharSet",
      "name": "ASCII_NUMERIC"
     },
     {
      "type": "Map",
      "name": "COMMON"
     },
     {
      "type": "Set",
      "name": "set"
     }
    ],
    "name": "CharSet",
    "methods": [
     {
      "type": "CharSet",
      "name": "getInstance",
      "params": [
       {
        "type": "String",
        "name": "setStr"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "CharRange",
      "name": "getCharRanges",
      "params": []
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "CharSet.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "List",
      "name": "cAvailableLocaleList"
     },
     {
      "type": "Set",
      "name": "cAvailableLocaleSet"
     },
     {
      "type": "Map",
      "name": "cLanguagesByCountry"
     },
     {
      "type": "Map",
      "name": "cCountriesByLanguage"
     }
    ],
    "name": "LocaleUtils",
    "methods": [
     {
      "type": "Locale",
      "name": "toLocale",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "List",
      "name": "localeLookupList",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "List",
      "name": "localeLookupList",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       },
       {
        "type": "Locale",
        "name": "defaultLocale"
       }
      ]
     },
     {
      "type": "List",
      "name": "availableLocaleList",
      "params": []
     },
     {
      "type": "Set",
      "name": "availableLocaleSet",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isAvailableLocale",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "List",
      "name": "languagesByCountry",
      "params": [
       {
        "type": "String",
        "name": "countryCode"
       }
      ]
     },
     {
      "type": "List",
      "name": "countriesByLanguage",
      "params": [
       {
        "type": "String",
        "name": "languageCode"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "LocaleUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Number",
      "name": "min"
     },
     {
      "type": "Number",
      "name": "max"
     }
    ],
    "name": "NumberRange",
    "methods": [
     {
      "type": "Number",
      "name": "getMinimum",
      "params": []
     },
     {
      "type": "Number",
      "name": "getMaximum",
      "params": []
     },
     {
      "type": "boolean",
      "name": "includesNumber",
      "params": [
       {
        "type": "Number",
        "name": "number"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "includesRange",
      "params": [
       {
        "type": "NumberRange",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "overlaps",
      "params": [
       {
        "type": "NumberRange",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "NumberRange.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "NumberUtils",
    "methods": [
     {
      "type": "int",
      "name": "stringToInt",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "stringToInt",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "Number",
      "name": "createNumber",
      "params": [
       {
        "type": "String",
        "name": "val"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAllZeros",
      "params": [
       {
        "type": "String",
        "name": "s"
       }
      ]
     },
     {
      "type": "Float",
      "name": "createFloat",
      "params": [
       {
        "type": "String",
        "name": "val"
       }
      ]
     },
     {
      "type": "Double",
      "name": "createDouble",
      "params": [
       {
        "type": "String",
        "name": "val"
       }
      ]
     },
     {
      "type": "Integer",
      "name": "createInteger",
      "params": [
       {
        "type": "String",
        "name": "val"
       }
      ]
     },
     {
      "type": "Long",
      "name": "createLong",
      "params": [
       {
        "type": "String",
        "name": "val"
       }
      ]
     },
     {
      "type": "BigInteger",
      "name": "createBigInteger",
      "params": [
       {
        "type": "String",
        "name": "val"
       }
      ]
     },
     {
      "type": "BigDecimal",
      "name": "createBigDecimal",
      "params": [
       {
        "type": "String",
        "name": "val"
       }
      ]
     },
     {
      "type": "long",
      "name": "minimum",
      "params": [
       {
        "type": "long",
        "name": "a"
       },
       {
        "type": "long",
        "name": "b"
       },
       {
        "type": "long",
        "name": "c"
       }
      ]
     },
     {
      "type": "int",
      "name": "minimum",
      "params": [
       {
        "type": "int",
        "name": "a"
       },
       {
        "type": "int",
        "name": "b"
       },
       {
        "type": "int",
        "name": "c"
       }
      ]
     },
     {
      "type": "long",
      "name": "maximum",
      "params": [
       {
        "type": "long",
        "name": "a"
       },
       {
        "type": "long",
        "name": "b"
       },
       {
        "type": "long",
        "name": "c"
       }
      ]
     },
     {
      "type": "int",
      "name": "maximum",
      "params": [
       {
        "type": "int",
        "name": "a"
       },
       {
        "type": "int",
        "name": "b"
       },
       {
        "type": "int",
        "name": "c"
       }
      ]
     },
     {
      "type": "int",
      "name": "compare",
      "params": [
       {
        "type": "double",
        "name": "lhs"
       },
       {
        "type": "double",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "int",
      "name": "compare",
      "params": [
       {
        "type": "float",
        "name": "lhs"
       },
       {
        "type": "float",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isDigits",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isNumber",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "NumberUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "OS_NAME_WINDOWS_PREFIX"
     },
     {
      "type": "String",
      "name": "USER_HOME_KEY"
     },
     {
      "type": "String",
      "name": "USER_DIR_KEY"
     },
     {
      "type": "String",
      "name": "JAVA_IO_TMPDIR_KEY"
     },
     {
      "type": "String",
      "name": "JAVA_HOME_KEY"
     },
     {
      "type": "String",
      "name": "AWT_TOOLKIT"
     },
     {
      "type": "String",
      "name": "FILE_ENCODING"
     },
     {
      "type": "String",
      "name": "FILE_SEPARATOR"
     },
     {
      "type": "String",
      "name": "JAVA_AWT_FONTS"
     },
     {
      "type": "String",
      "name": "JAVA_AWT_GRAPHICSENV"
     },
     {
      "type": "String",
      "name": "JAVA_AWT_HEADLESS"
     },
     {
      "type": "String",
      "name": "JAVA_AWT_PRINTERJOB"
     },
     {
      "type": "String",
      "name": "JAVA_CLASS_PATH"
     },
     {
      "type": "String",
      "name": "JAVA_CLASS_VERSION"
     },
     {
      "type": "String",
      "name": "JAVA_COMPILER"
     },
     {
      "type": "String",
      "name": "JAVA_ENDORSED_DIRS"
     },
     {
      "type": "String",
      "name": "JAVA_EXT_DIRS"
     },
     {
      "type": "String",
      "name": "JAVA_HOME"
     },
     {
      "type": "String",
      "name": "JAVA_IO_TMPDIR"
     },
     {
      "type": "String",
      "name": "JAVA_LIBRARY_PATH"
     },
     {
      "type": "String",
      "name": "JAVA_RUNTIME_NAME"
     },
     {
      "type": "String",
      "name": "JAVA_RUNTIME_VERSION"
     },
     {
      "type": "String",
      "name": "JAVA_SPECIFICATION_NAME"
     },
     {
      "type": "String",
      "name": "JAVA_SPECIFICATION_VENDOR"
     },
     {
      "type": "String",
      "name": "JAVA_SPECIFICATION_VERSION"
     },
     {
      "type": "String",
      "name": "JAVA_UTIL_PREFS_PREFERENCES_FACTORY"
     },
     {
      "type": "String",
      "name": "JAVA_VENDOR"
     },
     {
      "type": "String",
      "name": "JAVA_VENDOR_URL"
     },
     {
      "type": "String",
      "name": "JAVA_VERSION"
     },
     {
      "type": "String",
      "name": "JAVA_VM_INFO"
     },
     {
      "type": "String",
      "name": "JAVA_VM_NAME"
     },
     {
      "type": "String",
      "name": "JAVA_VM_SPECIFICATION_NAME"
     },
     {
      "type": "String",
      "name": "JAVA_VM_SPECIFICATION_VENDOR"
     },
     {
      "type": "String",
      "name": "JAVA_VM_SPECIFICATION_VERSION"
     },
     {
      "type": "String",
      "name": "JAVA_VM_VENDOR"
     },
     {
      "type": "String",
      "name": "JAVA_VM_VERSION"
     },
     {
      "type": "String",
      "name": "LINE_SEPARATOR"
     },
     {
      "type": "String",
      "name": "OS_ARCH"
     },
     {
      "type": "String",
      "name": "OS_NAME"
     },
     {
      "type": "String",
      "name": "OS_VERSION"
     },
     {
      "type": "String",
      "name": "PATH_SEPARATOR"
     },
     {
      "type": "String",
      "name": "USER_COUNTRY"
     },
     {
      "type": "String",
      "name": "USER_DIR"
     },
     {
      "type": "String",
      "name": "USER_HOME"
     },
     {
      "type": "String",
      "name": "USER_LANGUAGE"
     },
     {
      "type": "String",
      "name": "USER_NAME"
     },
     {
      "type": "String",
      "name": "USER_TIMEZONE"
     },
     {
      "type": "String",
      "name": "JAVA_VERSION_TRIMMED"
     },
     {
      "type": "float",
      "name": "JAVA_VERSION_FLOAT"
     },
     {
      "type": "int",
      "name": "JAVA_VERSION_INT"
     },
     {
      "type": "boolean",
      "name": "IS_JAVA_1_1"
     },
     {
      "type": "boolean",
      "name": "IS_JAVA_1_2"
     },
     {
      "type": "boolean",
      "name": "IS_JAVA_1_3"
     },
     {
      "type": "boolean",
      "name": "IS_JAVA_1_4"
     },
     {
      "type": "boolean",
      "name": "IS_JAVA_1_5"
     },
     {
      "type": "boolean",
      "name": "IS_JAVA_1_6"
     },
     {
      "type": "boolean",
      "name": "IS_OS_AIX"
     },
     {
      "type": "boolean",
      "name": "IS_OS_HP_UX"
     },
     {
      "type": "boolean",
      "name": "IS_OS_IRIX"
     },
     {
      "type": "boolean",
      "name": "IS_OS_LINUX"
     },
     {
      "type": "boolean",
      "name": "IS_OS_MAC"
     },
     {
      "type": "boolean",
      "name": "IS_OS_MAC_OSX"
     },
     {
      "type": "boolean",
      "name": "IS_OS_OS2"
     },
     {
      "type": "boolean",
      "name": "IS_OS_SOLARIS"
     },
     {
      "type": "boolean",
      "name": "IS_OS_SUN_OS"
     },
     {
      "type": "boolean",
      "name": "IS_OS_UNIX"
     },
     {
      "type": "boolean",
      "name": "IS_OS_WINDOWS"
     },
     {
      "type": "boolean",
      "name": "IS_OS_WINDOWS_2000"
     },
     {
      "type": "boolean",
      "name": "IS_OS_WINDOWS_95"
     },
     {
      "type": "boolean",
      "name": "IS_OS_WINDOWS_98"
     },
     {
      "type": "boolean",
      "name": "IS_OS_WINDOWS_ME"
     },
     {
      "type": "boolean",
      "name": "IS_OS_WINDOWS_NT"
     },
     {
      "type": "boolean",
      "name": "IS_OS_WINDOWS_XP"
     }
    ],
    "name": "SystemUtils",
    "methods": [
     {
      "type": "float",
      "name": "getJavaVersion",
      "params": []
     },
     {
      "type": "float",
      "name": "getJavaVersionAsFloat",
      "params": []
     },
     {
      "type": "int",
      "name": "getJavaVersionAsInt",
      "params": []
     },
     {
      "type": "String",
      "name": "getJavaVersionTrimmed",
      "params": []
     },
     {
      "type": "boolean",
      "name": "getJavaVersionMatches",
      "params": [
       {
        "type": "String",
        "name": "versionPrefix"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "getOSMatches",
      "params": [
       {
        "type": "String",
        "name": "osNamePrefix"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "getOSMatches",
      "params": [
       {
        "type": "String",
        "name": "osNamePrefix"
       },
       {
        "type": "String",
        "name": "osVersionPrefix"
       }
      ]
     },
     {
      "type": "String",
      "name": "getSystemProperty",
      "params": [
       {
        "type": "String",
        "name": "property"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isJavaVersionAtLeast",
      "params": [
       {
        "type": "float",
        "name": "requiredVersion"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isJavaVersionAtLeast",
      "params": [
       {
        "type": "int",
        "name": "requiredVersion"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isJavaAwtHeadless",
      "params": []
     },
     {
      "type": "File",
      "name": "getJavaHome",
      "params": []
     },
     {
      "type": "File",
      "name": "getJavaIoTmpDir",
      "params": []
     },
     {
      "type": "File",
      "name": "getUserDir",
      "params": []
     },
     {
      "type": "File",
      "name": "getUserHome",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "SystemUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "DEFAULT_MESSAGE"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NestableDelegate",
      "name": "delegate"
     },
     {
      "type": "Throwable",
      "name": "cause"
     }
    ],
    "name": "NotImplementedException",
    "methods": [
     {
      "type": "Throwable",
      "name": "getCause",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "String",
      "name": "getMessages",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowable",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getThrowableCount",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowables",
      "params": []
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "int",
        "name": "fromIndex"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": []
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintStream",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printPartialStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "NotImplementedException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "IllegalClassException",
    "methods": [
     {
      "type": "String",
      "name": "safeGetClassName",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "IllegalClassException.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "StringEscapeUtils",
    "methods": [
     {
      "type": "String",
      "name": "escapeJava",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "escapeJava",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "escapeJavaScript",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "escapeJavaScript",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "escapeJavaStyleString",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "boolean",
        "name": "escapeSingleQuotes"
       }
      ]
     },
     {
      "type": null,
      "name": "escapeJavaStyleString",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "boolean",
        "name": "escapeSingleQuote"
       }
      ]
     },
     {
      "type": "String",
      "name": "hex",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "String",
      "name": "unescapeJava",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "unescapeJava",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "unescapeJavaScript",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "unescapeJavaScript",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "escapeHtml",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "escapeHtml",
      "params": [
       {
        "type": "Writer",
        "name": "writer"
       },
       {
        "type": "String",
        "name": "string"
       }
      ]
     },
     {
      "type": "String",
      "name": "unescapeHtml",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "unescapeHtml",
      "params": [
       {
        "type": "Writer",
        "name": "writer"
       },
       {
        "type": "String",
        "name": "string"
       }
      ]
     },
     {
      "type": null,
      "name": "escapeXml",
      "params": [
       {
        "type": "Writer",
        "name": "writer"
       },
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "escapeXml",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "unescapeXml",
      "params": [
       {
        "type": "Writer",
        "name": "writer"
       },
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "unescapeXml",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "escapeSql",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "StringEscapeUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "UnhandledException",
    "methods": []
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "UnhandledException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Entry",
      "name": "table"
     },
     {
      "type": "int",
      "name": "count"
     },
     {
      "type": "int",
      "name": "threshold"
     },
     {
      "type": "float",
      "name": "loadFactor"
     }
    ],
    "name": "IntHashMap",
    "methods": [
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": []
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsKey",
      "params": [
       {
        "type": "int",
        "name": "key"
       }
      ]
     },
     {
      "type": "Object",
      "name": "get",
      "params": [
       {
        "type": "int",
        "name": "key"
       }
      ]
     },
     {
      "type": null,
      "name": "rehash",
      "params": []
     },
     {
      "type": "Object",
      "name": "put",
      "params": [
       {
        "type": "int",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "Object",
      "name": "remove",
      "params": [
       {
        "type": "int",
        "name": "key"
       }
      ]
     },
     {
      "type": null,
      "name": "clear",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "IntHashMap.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Null",
      "name": "NULL"
     }
    ],
    "name": "ObjectUtils",
    "methods": [
     {
      "type": "Object",
      "name": "defaultIfNull",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Object",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "object1"
       },
       {
        "type": "Object",
        "name": "object2"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "String",
      "name": "identityToString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "StringBuffer",
      "name": "appendIdentityToString",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       },
       {
        "type": "String",
        "name": "nullStr"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "ObjectUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "SerializationException",
    "methods": []
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "SerializationException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "EMPTY"
     },
     {
      "type": "int",
      "name": "INDEX_NOT_FOUND"
     },
     {
      "type": "int",
      "name": "PAD_LIMIT"
     }
    ],
    "name": "StringUtils",
    "methods": [
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isNotEmpty",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBlank",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isNotBlank",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "clean",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "trim",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "trimToNull",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "trimToEmpty",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "strip",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "stripToNull",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "stripToEmpty",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "strip",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "stripChars"
       }
      ]
     },
     {
      "type": "String",
      "name": "stripStart",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "stripChars"
       }
      ]
     },
     {
      "type": "String",
      "name": "stripEnd",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "stripChars"
       }
      ]
     },
     {
      "type": "String",
      "name": "stripAll",
      "params": [
       {
        "type": "String",
        "name": "strs"
       }
      ]
     },
     {
      "type": "String",
      "name": "stripAll",
      "params": [
       {
        "type": "String",
        "name": "strs"
       },
       {
        "type": "String",
        "name": "stripChars"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "String",
        "name": "str1"
       },
       {
        "type": "String",
        "name": "str2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equalsIgnoreCase",
      "params": [
       {
        "type": "String",
        "name": "str1"
       },
       {
        "type": "String",
        "name": "str2"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "searchChar"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "searchChar"
       },
       {
        "type": "int",
        "name": "startPos"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchStr"
       }
      ]
     },
     {
      "type": "int",
      "name": "ordinalIndexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchStr"
       },
       {
        "type": "int",
        "name": "ordinal"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchStr"
       },
       {
        "type": "int",
        "name": "startPos"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "searchChar"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "searchChar"
       },
       {
        "type": "int",
        "name": "startPos"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchStr"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchStr"
       },
       {
        "type": "int",
        "name": "startPos"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "searchChar"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchStr"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsIgnoreCase",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchStr"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfAny",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "searchChars"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfAny",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchChars"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfAnyBut",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "searchChars"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfAnyBut",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchChars"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsOnly",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "valid"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsOnly",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "validChars"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsNone",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "invalidChars"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsNone",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "invalidChars"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfAny",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchStrs"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOfAny",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchStrs"
       }
      ]
     },
     {
      "type": "String",
      "name": "substring",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "start"
       }
      ]
     },
     {
      "type": "String",
      "name": "substring",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "end"
       }
      ]
     },
     {
      "type": "String",
      "name": "left",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "len"
       }
      ]
     },
     {
      "type": "String",
      "name": "right",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "len"
       }
      ]
     },
     {
      "type": "String",
      "name": "mid",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "pos"
       },
       {
        "type": "int",
        "name": "len"
       }
      ]
     },
     {
      "type": "String",
      "name": "substringBefore",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "substringAfter",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "substringBeforeLast",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "substringAfterLast",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "substringBetween",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "tag"
       }
      ]
     },
     {
      "type": "String",
      "name": "substringBetween",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "open"
       },
       {
        "type": "String",
        "name": "close"
       }
      ]
     },
     {
      "type": "String",
      "name": "getNestedString",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "tag"
       }
      ]
     },
     {
      "type": "String",
      "name": "getNestedString",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "open"
       },
       {
        "type": "String",
        "name": "close"
       }
      ]
     },
     {
      "type": "String",
      "name": "split",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "split",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "separatorChar"
       }
      ]
     },
     {
      "type": "String",
      "name": "split",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separatorChars"
       }
      ]
     },
     {
      "type": "String",
      "name": "split",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separatorChars"
       },
       {
        "type": "int",
        "name": "max"
       }
      ]
     },
     {
      "type": "String",
      "name": "splitByWholeSeparator",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "splitByWholeSeparator",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separator"
       },
       {
        "type": "int",
        "name": "max"
       }
      ]
     },
     {
      "type": "String",
      "name": "splitPreserveAllTokens",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "splitPreserveAllTokens",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "separatorChar"
       }
      ]
     },
     {
      "type": "String",
      "name": "splitWorker",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "separatorChar"
       },
       {
        "type": "boolean",
        "name": "preserveAllTokens"
       }
      ]
     },
     {
      "type": "String",
      "name": "splitPreserveAllTokens",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separatorChars"
       }
      ]
     },
     {
      "type": "String",
      "name": "splitPreserveAllTokens",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separatorChars"
       },
       {
        "type": "int",
        "name": "max"
       }
      ]
     },
     {
      "type": "String",
      "name": "splitWorker",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separatorChars"
       },
       {
        "type": "int",
        "name": "max"
       },
       {
        "type": "boolean",
        "name": "preserveAllTokens"
       }
      ]
     },
     {
      "type": "String",
      "name": "concatenate",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "String",
      "name": "join",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "String",
      "name": "join",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "char",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "join",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "join",
      "params": [
       {
        "type": "Iterator",
        "name": "iterator"
       },
       {
        "type": "char",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "join",
      "params": [
       {
        "type": "Iterator",
        "name": "iterator"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "deleteSpaces",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "deleteWhitespace",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "removeStart",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "remove"
       }
      ]
     },
     {
      "type": "String",
      "name": "removeEnd",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "remove"
       }
      ]
     },
     {
      "type": "String",
      "name": "remove",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "remove"
       }
      ]
     },
     {
      "type": "String",
      "name": "remove",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "remove"
       }
      ]
     },
     {
      "type": "String",
      "name": "replaceOnce",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "String",
        "name": "repl"
       },
       {
        "type": "String",
        "name": "with"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "String",
        "name": "repl"
       },
       {
        "type": "String",
        "name": "with"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "String",
        "name": "repl"
       },
       {
        "type": "String",
        "name": "with"
       },
       {
        "type": "int",
        "name": "max"
       }
      ]
     },
     {
      "type": "String",
      "name": "replaceChars",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "searchChar"
       },
       {
        "type": "char",
        "name": "replaceChar"
       }
      ]
     },
     {
      "type": "String",
      "name": "replaceChars",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchChars"
       },
       {
        "type": "String",
        "name": "replaceChars"
       }
      ]
     },
     {
      "type": "String",
      "name": "overlayString",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "String",
        "name": "overlay"
       },
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "end"
       }
      ]
     },
     {
      "type": "String",
      "name": "overlay",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "overlay"
       },
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "end"
       }
      ]
     },
     {
      "type": "String",
      "name": "chomp",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "chomp",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "String",
      "name": "chompLast",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "chompLast",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "sep"
       }
      ]
     },
     {
      "type": "String",
      "name": "getChomp",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "sep"
       }
      ]
     },
     {
      "type": "String",
      "name": "prechomp",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "sep"
       }
      ]
     },
     {
      "type": "String",
      "name": "getPrechomp",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "sep"
       }
      ]
     },
     {
      "type": "String",
      "name": "chop",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "chopNewline",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "escape",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "repeat",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "repeat"
       }
      ]
     },
     {
      "type": "String",
      "name": "padding",
      "params": [
       {
        "type": "int",
        "name": "repeat"
       },
       {
        "type": "char",
        "name": "padChar"
       }
      ]
     },
     {
      "type": "String",
      "name": "rightPad",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "size"
       }
      ]
     },
     {
      "type": "String",
      "name": "rightPad",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "size"
       },
       {
        "type": "char",
        "name": "padChar"
       }
      ]
     },
     {
      "type": "String",
      "name": "rightPad",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "size"
       },
       {
        "type": "String",
        "name": "padStr"
       }
      ]
     },
     {
      "type": "String",
      "name": "leftPad",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "size"
       }
      ]
     },
     {
      "type": "String",
      "name": "leftPad",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "size"
       },
       {
        "type": "char",
        "name": "padChar"
       }
      ]
     },
     {
      "type": "String",
      "name": "leftPad",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "size"
       },
       {
        "type": "String",
        "name": "padStr"
       }
      ]
     },
     {
      "type": "String",
      "name": "center",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "size"
       }
      ]
     },
     {
      "type": "String",
      "name": "center",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "size"
       },
       {
        "type": "char",
        "name": "padChar"
       }
      ]
     },
     {
      "type": "String",
      "name": "center",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "size"
       },
       {
        "type": "String",
        "name": "padStr"
       }
      ]
     },
     {
      "type": "String",
      "name": "upperCase",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "lowerCase",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "capitalize",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "capitalise",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "uncapitalize",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "uncapitalise",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "swapCase",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "capitaliseAllWords",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "countMatches",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "sub"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAlpha",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAlphaSpace",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAlphanumeric",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAlphanumericSpace",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAsciiPrintable",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isNumeric",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isNumericSpace",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isWhitespace",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "defaultString",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "defaultString",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "defaultStr"
       }
      ]
     },
     {
      "type": "String",
      "name": "defaultIfEmpty",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "defaultStr"
       }
      ]
     },
     {
      "type": "String",
      "name": "reverse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "reverseDelimited",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "char",
        "name": "separatorChar"
       }
      ]
     },
     {
      "type": "String",
      "name": "reverseDelimitedString",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "separatorChars"
       }
      ]
     },
     {
      "type": "String",
      "name": "abbreviate",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "maxWidth"
       }
      ]
     },
     {
      "type": "String",
      "name": "abbreviate",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "maxWidth"
       }
      ]
     },
     {
      "type": "String",
      "name": "difference",
      "params": [
       {
        "type": "String",
        "name": "str1"
       },
       {
        "type": "String",
        "name": "str2"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfDifference",
      "params": [
       {
        "type": "String",
        "name": "str1"
       },
       {
        "type": "String",
        "name": "str2"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLevenshteinDistance",
      "params": [
       {
        "type": "String",
        "name": "s"
       },
       {
        "type": "String",
        "name": "t"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "StringUtils.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "CharSetUtils",
    "methods": [
     {
      "type": "CharSet",
      "name": "evaluateSet",
      "params": [
       {
        "type": "String",
        "name": "set"
       }
      ]
     },
     {
      "type": "String",
      "name": "squeeze",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "set"
       }
      ]
     },
     {
      "type": "String",
      "name": "squeeze",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "set"
       }
      ]
     },
     {
      "type": "int",
      "name": "count",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "set"
       }
      ]
     },
     {
      "type": "int",
      "name": "count",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "set"
       }
      ]
     },
     {
      "type": "String",
      "name": "keep",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "set"
       }
      ]
     },
     {
      "type": "String",
      "name": "keep",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "set"
       }
      ]
     },
     {
      "type": "String",
      "name": "delete",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "set"
       }
      ]
     },
     {
      "type": "String",
      "name": "delete",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "set"
       }
      ]
     },
     {
      "type": "String",
      "name": "modify",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "set"
       },
       {
        "type": "boolean",
        "name": "expect"
       }
      ]
     },
     {
      "type": "String",
      "name": "translate",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "searchChars"
       },
       {
        "type": "String",
        "name": "replaceChars"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "CharSetUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Random",
      "name": "RANDOM"
     }
    ],
    "name": "RandomStringUtils",
    "methods": [
     {
      "type": "String",
      "name": "random",
      "params": [
       {
        "type": "int",
        "name": "count"
       }
      ]
     },
     {
      "type": "String",
      "name": "randomAscii",
      "params": [
       {
        "type": "int",
        "name": "count"
       }
      ]
     },
     {
      "type": "String",
      "name": "randomAlphabetic",
      "params": [
       {
        "type": "int",
        "name": "count"
       }
      ]
     },
     {
      "type": "String",
      "name": "randomAlphanumeric",
      "params": [
       {
        "type": "int",
        "name": "count"
       }
      ]
     },
     {
      "type": "String",
      "name": "randomNumeric",
      "params": [
       {
        "type": "int",
        "name": "count"
       }
      ]
     },
     {
      "type": "String",
      "name": "random",
      "params": [
       {
        "type": "int",
        "name": "count"
       },
       {
        "type": "boolean",
        "name": "letters"
       },
       {
        "type": "boolean",
        "name": "numbers"
       }
      ]
     },
     {
      "type": "String",
      "name": "random",
      "params": [
       {
        "type": "int",
        "name": "count"
       },
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "end"
       },
       {
        "type": "boolean",
        "name": "letters"
       },
       {
        "type": "boolean",
        "name": "numbers"
       }
      ]
     },
     {
      "type": "String",
      "name": "random",
      "params": [
       {
        "type": "int",
        "name": "count"
       },
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "end"
       },
       {
        "type": "boolean",
        "name": "letters"
       },
       {
        "type": "boolean",
        "name": "numbers"
       },
       {
        "type": "char",
        "name": "chars"
       }
      ]
     },
     {
      "type": "String",
      "name": "random",
      "params": [
       {
        "type": "int",
        "name": "count"
       },
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "end"
       },
       {
        "type": "boolean",
        "name": "letters"
       },
       {
        "type": "boolean",
        "name": "numbers"
       },
       {
        "type": "char",
        "name": "chars"
       },
       {
        "type": "Random",
        "name": "random"
       }
      ]
     },
     {
      "type": "String",
      "name": "random",
      "params": [
       {
        "type": "int",
        "name": "count"
       },
       {
        "type": "String",
        "name": "chars"
       }
      ]
     },
     {
      "type": "String",
      "name": "random",
      "params": [
       {
        "type": "int",
        "name": "count"
       },
       {
        "type": "char",
        "name": "chars"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "RandomStringUtils.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Validate",
    "methods": [
     {
      "type": null,
      "name": "isTrue",
      "params": [
       {
        "type": "boolean",
        "name": "expression"
       },
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "isTrue",
      "params": [
       {
        "type": "boolean",
        "name": "expression"
       },
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "isTrue",
      "params": [
       {
        "type": "boolean",
        "name": "expression"
       },
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "isTrue",
      "params": [
       {
        "type": "boolean",
        "name": "expression"
       },
       {
        "type": "String",
        "name": "message"
       }
      ]
     },
     {
      "type": null,
      "name": "isTrue",
      "params": [
       {
        "type": "boolean",
        "name": "expression"
       }
      ]
     },
     {
      "type": null,
      "name": "notNull",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "message"
       }
      ]
     },
     {
      "type": null,
      "name": "notNull",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "notEmpty",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "String",
        "name": "message"
       }
      ]
     },
     {
      "type": null,
      "name": "notEmpty",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "notEmpty",
      "params": [
       {
        "type": "Collection",
        "name": "collection"
       },
       {
        "type": "String",
        "name": "message"
       }
      ]
     },
     {
      "type": null,
      "name": "notEmpty",
      "params": [
       {
        "type": "Collection",
        "name": "collection"
       }
      ]
     },
     {
      "type": null,
      "name": "notEmpty",
      "params": [
       {
        "type": "Map",
        "name": "map"
       },
       {
        "type": "String",
        "name": "message"
       }
      ]
     },
     {
      "type": null,
      "name": "notEmpty",
      "params": [
       {
        "type": "Map",
        "name": "map"
       }
      ]
     },
     {
      "type": null,
      "name": "notEmpty",
      "params": [
       {
        "type": "String",
        "name": "string"
       },
       {
        "type": "String",
        "name": "message"
       }
      ]
     },
     {
      "type": null,
      "name": "notEmpty",
      "params": [
       {
        "type": "String",
        "name": "string"
       }
      ]
     },
     {
      "type": null,
      "name": "noNullElements",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "String",
        "name": "message"
       }
      ]
     },
     {
      "type": null,
      "name": "noNullElements",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "noNullElements",
      "params": [
       {
        "type": "Collection",
        "name": "collection"
       },
       {
        "type": "String",
        "name": "message"
       }
      ]
     },
     {
      "type": null,
      "name": "noNullElements",
      "params": [
       {
        "type": "Collection",
        "name": "collection"
       }
      ]
     },
     {
      "type": null,
      "name": "allElementsOfType",
      "params": [
       {
        "type": "Collection",
        "name": "collection"
       },
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "String",
        "name": "message"
       }
      ]
     },
     {
      "type": null,
      "name": "allElementsOfType",
      "params": [
       {
        "type": "Collection",
        "name": "collection"
       },
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "Validate.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "char",
      "name": "PACKAGE_SEPARATOR_CHAR"
     },
     {
      "type": "String",
      "name": "PACKAGE_SEPARATOR"
     },
     {
      "type": "char",
      "name": "INNER_CLASS_SEPARATOR_CHAR"
     },
     {
      "type": "String",
      "name": "INNER_CLASS_SEPARATOR"
     },
     {
      "type": "Map",
      "name": "primitiveWrapperMap"
     },
     {
      "type": "Map",
      "name": "abbreviationMap"
     }
    ],
    "name": "ClassUtils",
    "methods": [
     {
      "type": "String",
      "name": "getShortClassName",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "valueIfNull"
       }
      ]
     },
     {
      "type": "String",
      "name": "getShortClassName",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     },
     {
      "type": "String",
      "name": "getShortClassName",
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ]
     },
     {
      "type": "String",
      "name": "getPackageName",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "valueIfNull"
       }
      ]
     },
     {
      "type": "String",
      "name": "getPackageName",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     },
     {
      "type": "String",
      "name": "getPackageName",
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ]
     },
     {
      "type": "List",
      "name": "getAllSuperclasses",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     },
     {
      "type": "List",
      "name": "getAllInterfaces",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     },
     {
      "type": "List",
      "name": "convertClassNamesToClasses",
      "params": [
       {
        "type": "List",
        "name": "classNames"
       }
      ]
     },
     {
      "type": "List",
      "name": "convertClassesToClassNames",
      "params": [
       {
        "type": "List",
        "name": "classes"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAssignable",
      "params": [
       {
        "type": "Class",
        "name": "classArray"
       },
       {
        "type": "Class",
        "name": "toClassArray"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAssignable",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Class",
        "name": "toClass"
       }
      ]
     },
     {
      "type": "Class",
      "name": "primitiveToWrapper",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     },
     {
      "type": "Class",
      "name": "primitivesToWrappers",
      "params": [
       {
        "type": "Class",
        "name": "classes"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isInnerClass",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getClass",
      "params": [
       {
        "type": "ClassLoader",
        "name": "classLoader"
       },
       {
        "type": "String",
        "name": "className"
       },
       {
        "type": "boolean",
        "name": "initialize"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getClass",
      "params": [
       {
        "type": "ClassLoader",
        "name": "classLoader"
       },
       {
        "type": "String",
        "name": "className"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getClass",
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getClass",
      "params": [
       {
        "type": "String",
        "name": "className"
       },
       {
        "type": "boolean",
        "name": "initialize"
       }
      ]
     },
     {
      "type": "Method",
      "name": "getPublicMethod",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "String",
        "name": "methodName"
       },
       {
        "type": "Class",
        "name": "parameterTypes"
       }
      ]
     },
     {
      "type": "String",
      "name": "toProperClassName",
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "ClassUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "_mask"
     },
     {
      "type": "int",
      "name": "_shift_count"
     }
    ],
    "name": "BitField",
    "methods": [
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "holder"
       }
      ]
     },
     {
      "type": "short",
      "name": "getShortValue",
      "params": [
       {
        "type": "short",
        "name": "holder"
       }
      ]
     },
     {
      "type": "int",
      "name": "getRawValue",
      "params": [
       {
        "type": "int",
        "name": "holder"
       }
      ]
     },
     {
      "type": "short",
      "name": "getShortRawValue",
      "params": [
       {
        "type": "short",
        "name": "holder"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSet",
      "params": [
       {
        "type": "int",
        "name": "holder"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAllSet",
      "params": [
       {
        "type": "int",
        "name": "holder"
       }
      ]
     },
     {
      "type": "int",
      "name": "setValue",
      "params": [
       {
        "type": "int",
        "name": "holder"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "short",
      "name": "setShortValue",
      "params": [
       {
        "type": "short",
        "name": "holder"
       },
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "clear",
      "params": [
       {
        "type": "int",
        "name": "holder"
       }
      ]
     },
     {
      "type": "short",
      "name": "clearShort",
      "params": [
       {
        "type": "short",
        "name": "holder"
       }
      ]
     },
     {
      "type": "byte",
      "name": "clearByte",
      "params": [
       {
        "type": "byte",
        "name": "holder"
       }
      ]
     },
     {
      "type": "int",
      "name": "set",
      "params": [
       {
        "type": "int",
        "name": "holder"
       }
      ]
     },
     {
      "type": "short",
      "name": "setShort",
      "params": [
       {
        "type": "short",
        "name": "holder"
       }
      ]
     },
     {
      "type": "byte",
      "name": "setByte",
      "params": [
       {
        "type": "byte",
        "name": "holder"
       }
      ]
     },
     {
      "type": "int",
      "name": "setBoolean",
      "params": [
       {
        "type": "int",
        "name": "holder"
       },
       {
        "type": "boolean",
        "name": "flag"
       }
      ]
     },
     {
      "type": "short",
      "name": "setShortBoolean",
      "params": [
       {
        "type": "short",
        "name": "holder"
       },
       {
        "type": "boolean",
        "name": "flag"
       }
      ]
     },
     {
      "type": "byte",
      "name": "setByteBoolean",
      "params": [
       {
        "type": "byte",
        "name": "holder"
       },
       {
        "type": "boolean",
        "name": "flag"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "BitField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "NullArgumentException",
    "methods": []
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "NullArgumentException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "ISO_8859_1"
     },
     {
      "type": "String",
      "name": "US_ASCII"
     },
     {
      "type": "String",
      "name": "UTF_16"
     },
     {
      "type": "String",
      "name": "UTF_16BE"
     },
     {
      "type": "String",
      "name": "UTF_16LE"
     },
     {
      "type": "String",
      "name": "UTF_8"
     }
    ],
    "name": "CharEncoding",
    "methods": [
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "CharEncoding.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "char",
      "name": "start"
     },
     {
      "type": "char",
      "name": "end"
     },
     {
      "type": "boolean",
      "name": "negated"
     },
     {
      "type": "String",
      "name": "iToString"
     }
    ],
    "name": "CharRange",
    "methods": [
     {
      "type": "char",
      "name": "getStart",
      "params": []
     },
     {
      "type": "char",
      "name": "getEnd",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isNegated",
      "params": []
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "CharRange",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang",
  "filename": "CharRange.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "StandardToStringStyle",
    "methods": [
     {
      "type": "boolean",
      "name": "isUseClassName",
      "params": []
     },
     {
      "type": null,
      "name": "setUseClassName",
      "params": [
       {
        "type": "boolean",
        "name": "useClassName"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isUseShortClassName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isShortClassName",
      "params": []
     },
     {
      "type": null,
      "name": "setUseShortClassName",
      "params": [
       {
        "type": "boolean",
        "name": "useShortClassName"
       }
      ]
     },
     {
      "type": null,
      "name": "setShortClassName",
      "params": [
       {
        "type": "boolean",
        "name": "shortClassName"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isUseIdentityHashCode",
      "params": []
     },
     {
      "type": null,
      "name": "setUseIdentityHashCode",
      "params": [
       {
        "type": "boolean",
        "name": "useIdentityHashCode"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isUseFieldNames",
      "params": []
     },
     {
      "type": null,
      "name": "setUseFieldNames",
      "params": [
       {
        "type": "boolean",
        "name": "useFieldNames"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isDefaultFullDetail",
      "params": []
     },
     {
      "type": null,
      "name": "setDefaultFullDetail",
      "params": [
       {
        "type": "boolean",
        "name": "defaultFullDetail"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isArrayContentDetail",
      "params": []
     },
     {
      "type": null,
      "name": "setArrayContentDetail",
      "params": [
       {
        "type": "boolean",
        "name": "arrayContentDetail"
       }
      ]
     },
     {
      "type": "String",
      "name": "getArrayStart",
      "params": []
     },
     {
      "type": null,
      "name": "setArrayStart",
      "params": [
       {
        "type": "String",
        "name": "arrayStart"
       }
      ]
     },
     {
      "type": "String",
      "name": "getArrayEnd",
      "params": []
     },
     {
      "type": null,
      "name": "setArrayEnd",
      "params": [
       {
        "type": "String",
        "name": "arrayEnd"
       }
      ]
     },
     {
      "type": "String",
      "name": "getArraySeparator",
      "params": []
     },
     {
      "type": null,
      "name": "setArraySeparator",
      "params": [
       {
        "type": "String",
        "name": "arraySeparator"
       }
      ]
     },
     {
      "type": "String",
      "name": "getContentStart",
      "params": []
     },
     {
      "type": null,
      "name": "setContentStart",
      "params": [
       {
        "type": "String",
        "name": "contentStart"
       }
      ]
     },
     {
      "type": "String",
      "name": "getContentEnd",
      "params": []
     },
     {
      "type": null,
      "name": "setContentEnd",
      "params": [
       {
        "type": "String",
        "name": "contentEnd"
       }
      ]
     },
     {
      "type": "String",
      "name": "getFieldNameValueSeparator",
      "params": []
     },
     {
      "type": null,
      "name": "setFieldNameValueSeparator",
      "params": [
       {
        "type": "String",
        "name": "fieldNameValueSeparator"
       }
      ]
     },
     {
      "type": "String",
      "name": "getFieldSeparator",
      "params": []
     },
     {
      "type": null,
      "name": "setFieldSeparator",
      "params": [
       {
        "type": "String",
        "name": "fieldSeparator"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFieldSeparatorAtStart",
      "params": []
     },
     {
      "type": null,
      "name": "setFieldSeparatorAtStart",
      "params": [
       {
        "type": "boolean",
        "name": "fieldSeparatorAtStart"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFieldSeparatorAtEnd",
      "params": []
     },
     {
      "type": null,
      "name": "setFieldSeparatorAtEnd",
      "params": [
       {
        "type": "boolean",
        "name": "fieldSeparatorAtEnd"
       }
      ]
     },
     {
      "type": "String",
      "name": "getNullText",
      "params": []
     },
     {
      "type": null,
      "name": "setNullText",
      "params": [
       {
        "type": "String",
        "name": "nullText"
       }
      ]
     },
     {
      "type": "String",
      "name": "getSizeStartText",
      "params": []
     },
     {
      "type": null,
      "name": "setSizeStartText",
      "params": [
       {
        "type": "String",
        "name": "sizeStartText"
       }
      ]
     },
     {
      "type": "String",
      "name": "getSizeEndText",
      "params": []
     },
     {
      "type": null,
      "name": "setSizeEndText",
      "params": [
       {
        "type": "String",
        "name": "sizeEndText"
       }
      ]
     },
     {
      "type": "String",
      "name": "getSummaryObjectStartText",
      "params": []
     },
     {
      "type": null,
      "name": "setSummaryObjectStartText",
      "params": [
       {
        "type": "String",
        "name": "summaryObjectStartText"
       }
      ]
     },
     {
      "type": "String",
      "name": "getSummaryObjectEndText",
      "params": []
     },
     {
      "type": null,
      "name": "setSummaryObjectEndText",
      "params": [
       {
        "type": "String",
        "name": "summaryObjectEndText"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.builder",
  "filename": "StandardToStringStyle.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "iConstant"
     },
     {
      "type": "int",
      "name": "iTotal"
     }
    ],
    "name": "HashCodeBuilder",
    "methods": [
     {
      "type": "int",
      "name": "reflectionHashCode",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionHashCode",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Collection",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionHashCode",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionHashCode",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "boolean",
        "name": "testTransients"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionHashCode",
      "params": [
       {
        "type": "int",
        "name": "initialNonZeroOddNumber"
       },
       {
        "type": "int",
        "name": "multiplierNonZeroOddNumber"
       },
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionHashCode",
      "params": [
       {
        "type": "int",
        "name": "initialNonZeroOddNumber"
       },
       {
        "type": "int",
        "name": "multiplierNonZeroOddNumber"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "boolean",
        "name": "testTransients"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionHashCode",
      "params": [
       {
        "type": "int",
        "name": "initialNonZeroOddNumber"
       },
       {
        "type": "int",
        "name": "multiplierNonZeroOddNumber"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "boolean",
        "name": "testTransients"
       },
       {
        "type": "Class",
        "name": "reflectUpToClass"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": null,
      "name": "reflectionAppend",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "HashCodeBuilder",
        "name": "builder"
       },
       {
        "type": "boolean",
        "name": "useTransients"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "appendSuper",
      "params": [
       {
        "type": "int",
        "name": "superHashCode"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "value"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "array"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "array"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": "HashCodeBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": "int",
      "name": "toHashCode",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.builder",
  "filename": "HashCodeBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ToStringStyle",
      "name": "defaultStyle"
     },
     {
      "type": "StringBuffer",
      "name": "buffer"
     },
     {
      "type": "Object",
      "name": "object"
     },
     {
      "type": "ToStringStyle",
      "name": "style"
     }
    ],
    "name": "ToStringBuilder",
    "methods": [
     {
      "type": "ToStringStyle",
      "name": "getDefaultStyle",
      "params": []
     },
     {
      "type": "String",
      "name": "reflectionToString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "String",
      "name": "reflectionToString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "ToStringStyle",
        "name": "style"
       }
      ]
     },
     {
      "type": "String",
      "name": "reflectionToString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "ToStringStyle",
        "name": "style"
       },
       {
        "type": "boolean",
        "name": "outputTransients"
       }
      ]
     },
     {
      "type": "String",
      "name": "reflectionToString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "ToStringStyle",
        "name": "style"
       },
       {
        "type": "boolean",
        "name": "outputTransients"
       },
       {
        "type": "Class",
        "name": "reflectUpToClass"
       }
      ]
     },
     {
      "type": null,
      "name": "setDefaultStyle",
      "params": [
       {
        "type": "ToStringStyle",
        "name": "style"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "byte",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "char",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "char",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "appendAsObjectToString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "appendSuper",
      "params": [
       {
        "type": "String",
        "name": "superToString"
       }
      ]
     },
     {
      "type": "ToStringBuilder",
      "name": "appendToString",
      "params": [
       {
        "type": "String",
        "name": "toString"
       }
      ]
     },
     {
      "type": "Object",
      "name": "getObject",
      "params": []
     },
     {
      "type": "StringBuffer",
      "name": "getStringBuffer",
      "params": []
     },
     {
      "type": "ToStringStyle",
      "name": "getStyle",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.builder",
  "filename": "ToStringBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ThreadLocal",
      "name": "registry"
     },
     {
      "type": "boolean",
      "name": "appendStatics"
     },
     {
      "type": "boolean",
      "name": "appendTransients"
     },
     {
      "type": "String",
      "name": "excludeFieldNames"
     },
     {
      "type": "Class",
      "name": "upToClass"
     }
    ],
    "name": "ReflectionToStringBuilder",
    "methods": [
     {
      "type": "Set",
      "name": "getRegistry",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isRegistered",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "register",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "ToStringStyle",
        "name": "style"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "ToStringStyle",
        "name": "style"
       },
       {
        "type": "boolean",
        "name": "outputTransients"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "ToStringStyle",
        "name": "style"
       },
       {
        "type": "boolean",
        "name": "outputTransients"
       },
       {
        "type": "boolean",
        "name": "outputStatics"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "ToStringStyle",
        "name": "style"
       },
       {
        "type": "boolean",
        "name": "outputTransients"
       },
       {
        "type": "boolean",
        "name": "outputStatics"
       },
       {
        "type": "Class",
        "name": "reflectUpToClass"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "ToStringStyle",
        "name": "style"
       },
       {
        "type": "boolean",
        "name": "outputTransients"
       },
       {
        "type": "Class",
        "name": "reflectUpToClass"
       }
      ]
     },
     {
      "type": "String",
      "name": "toStringExclude",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "excludeFieldName"
       }
      ]
     },
     {
      "type": "String",
      "name": "toStringExclude",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Collection",
        "name": "excludeFieldNames"
       }
      ]
     },
     {
      "type": "String",
      "name": "toNoNullStringArray",
      "params": [
       {
        "type": "Collection",
        "name": "collection"
       }
      ]
     },
     {
      "type": "String",
      "name": "toNoNullStringArray",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": "String",
      "name": "toStringExclude",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "excludeFieldNames"
       }
      ]
     },
     {
      "type": null,
      "name": "unregister",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "accept",
      "params": [
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "appendFieldsIn",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "String",
      "name": "getExcludeFieldNames",
      "params": []
     },
     {
      "type": "Class",
      "name": "getUpToClass",
      "params": []
     },
     {
      "type": "Object",
      "name": "getValue",
      "params": [
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAppendStatics",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isAppendTransients",
      "params": []
     },
     {
      "type": "ToStringBuilder",
      "name": "reflectionAppendArray",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "registerObject",
      "params": []
     },
     {
      "type": null,
      "name": "setAppendStatics",
      "params": [
       {
        "type": "boolean",
        "name": "appendStatics"
       }
      ]
     },
     {
      "type": null,
      "name": "setAppendTransients",
      "params": [
       {
        "type": "boolean",
        "name": "appendTransients"
       }
      ]
     },
     {
      "type": "ReflectionToStringBuilder",
      "name": "setExcludeFieldNames",
      "params": [
       {
        "type": "String",
        "name": "excludeFieldNamesParam"
       }
      ]
     },
     {
      "type": null,
      "name": "setUpToClass",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": null,
      "name": "unregisterObject",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.builder",
  "filename": "ReflectionToStringBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "comparison"
     }
    ],
    "name": "CompareToBuilder",
    "methods": [
     {
      "type": "int",
      "name": "reflectionCompare",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionCompare",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "boolean",
        "name": "compareTransients"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionCompare",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "Collection",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionCompare",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "int",
      "name": "reflectionCompare",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "boolean",
        "name": "compareTransients"
       },
       {
        "type": "Class",
        "name": "reflectUpToClass"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": null,
      "name": "reflectionAppend",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "CompareToBuilder",
        "name": "builder"
       },
       {
        "type": "boolean",
        "name": "useTransients"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "appendSuper",
      "params": [
       {
        "type": "int",
        "name": "superCompareTo"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "Comparator",
        "name": "comparator"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "lhs"
       },
       {
        "type": "long",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "lhs"
       },
       {
        "type": "int",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "lhs"
       },
       {
        "type": "short",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "lhs"
       },
       {
        "type": "char",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "lhs"
       },
       {
        "type": "byte",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "lhs"
       },
       {
        "type": "double",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "lhs"
       },
       {
        "type": "float",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "lhs"
       },
       {
        "type": "boolean",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "Comparator",
        "name": "comparator"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "lhs"
       },
       {
        "type": "long",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "lhs"
       },
       {
        "type": "int",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "lhs"
       },
       {
        "type": "short",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "lhs"
       },
       {
        "type": "char",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "lhs"
       },
       {
        "type": "byte",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "lhs"
       },
       {
        "type": "double",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "lhs"
       },
       {
        "type": "float",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "CompareToBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "lhs"
       },
       {
        "type": "boolean",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "int",
      "name": "toComparison",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.builder",
  "filename": "CompareToBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "boolean",
      "name": "isEquals"
     }
    ],
    "name": "EqualsBuilder",
    "methods": [
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "Collection",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "boolean",
        "name": "testTransients"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "boolean",
        "name": "testTransients"
       },
       {
        "type": "Class",
        "name": "reflectUpToClass"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "boolean",
        "name": "testTransients"
       },
       {
        "type": "Class",
        "name": "reflectUpToClass"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": null,
      "name": "reflectionAppend",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "EqualsBuilder",
        "name": "builder"
       },
       {
        "type": "boolean",
        "name": "useTransients"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "appendSuper",
      "params": [
       {
        "type": "boolean",
        "name": "superEquals"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "lhs"
       },
       {
        "type": "long",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "lhs"
       },
       {
        "type": "int",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "lhs"
       },
       {
        "type": "short",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "lhs"
       },
       {
        "type": "char",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "lhs"
       },
       {
        "type": "byte",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "lhs"
       },
       {
        "type": "double",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "lhs"
       },
       {
        "type": "float",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "lhs"
       },
       {
        "type": "boolean",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "lhs"
       },
       {
        "type": "long",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "lhs"
       },
       {
        "type": "int",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "lhs"
       },
       {
        "type": "short",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "lhs"
       },
       {
        "type": "char",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "lhs"
       },
       {
        "type": "byte",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "lhs"
       },
       {
        "type": "double",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "lhs"
       },
       {
        "type": "float",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "lhs"
       },
       {
        "type": "boolean",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEquals",
      "params": []
     },
     {
      "type": null,
      "name": "setEquals",
      "params": [
       {
        "type": "boolean",
        "name": "isEquals"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.builder",
  "filename": "EqualsBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ToStringStyle",
      "name": "DEFAULT_STYLE"
     },
     {
      "type": "ToStringStyle",
      "name": "MULTI_LINE_STYLE"
     },
     {
      "type": "ToStringStyle",
      "name": "NO_FIELD_NAMES_STYLE"
     },
     {
      "type": "ToStringStyle",
      "name": "SHORT_PREFIX_STYLE"
     },
     {
      "type": "ToStringStyle",
      "name": "SIMPLE_STYLE"
     },
     {
      "type": "boolean",
      "name": "useFieldNames"
     },
     {
      "type": "boolean",
      "name": "useClassName"
     },
     {
      "type": "boolean",
      "name": "useShortClassName"
     },
     {
      "type": "boolean",
      "name": "useIdentityHashCode"
     },
     {
      "type": "String",
      "name": "contentStart"
     },
     {
      "type": "String",
      "name": "contentEnd"
     },
     {
      "type": "String",
      "name": "fieldNameValueSeparator"
     },
     {
      "type": "boolean",
      "name": "fieldSeparatorAtStart"
     },
     {
      "type": "boolean",
      "name": "fieldSeparatorAtEnd"
     },
     {
      "type": "String",
      "name": "fieldSeparator"
     },
     {
      "type": "String",
      "name": "arrayStart"
     },
     {
      "type": "String",
      "name": "arraySeparator"
     },
     {
      "type": "boolean",
      "name": "arrayContentDetail"
     },
     {
      "type": "String",
      "name": "arrayEnd"
     },
     {
      "type": "boolean",
      "name": "defaultFullDetail"
     },
     {
      "type": "String",
      "name": "nullText"
     },
     {
      "type": "String",
      "name": "sizeStartText"
     },
     {
      "type": "String",
      "name": "sizeEndText"
     },
     {
      "type": "String",
      "name": "summaryObjectStartText"
     },
     {
      "type": "String",
      "name": "summaryObjectEndText"
     }
    ],
    "name": "ToStringStyle",
    "methods": [
     {
      "type": null,
      "name": "appendSuper",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "superToString"
       }
      ]
     },
     {
      "type": null,
      "name": "appendToString",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "toString"
       }
      ]
     },
     {
      "type": null,
      "name": "appendStart",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "appendEnd",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "removeLastFieldSeparator",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendInternal",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "boolean",
        "name": "detail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Collection",
        "name": "coll"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Map",
        "name": "map"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "char",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "char",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "reflectionAppendArrayDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "long",
        "name": "array"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "array"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "short",
        "name": "array"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "byte",
        "name": "array"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "byte",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "byte",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "char",
        "name": "array"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "char",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "char",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "double",
        "name": "array"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "float",
        "name": "array"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "boolean",
        "name": "array"
       },
       {
        "type": "Boolean",
        "name": "fullDetail"
       }
      ]
     },
     {
      "type": null,
      "name": "appendDetail",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummary",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "boolean",
        "name": "array"
       }
      ]
     },
     {
      "type": null,
      "name": "appendClassName",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "appendIdentityHashCode",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "appendContentStart",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       }
      ]
     },
     {
      "type": null,
      "name": "appendContentEnd",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       }
      ]
     },
     {
      "type": null,
      "name": "appendNullText",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       }
      ]
     },
     {
      "type": null,
      "name": "appendFieldSeparator",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       }
      ]
     },
     {
      "type": null,
      "name": "appendFieldStart",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       }
      ]
     },
     {
      "type": null,
      "name": "appendFieldEnd",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSummarySize",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "size"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFullDetail",
      "params": [
       {
        "type": "Boolean",
        "name": "fullDetailRequest"
       }
      ]
     },
     {
      "type": "String",
      "name": "getShortClassName",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isUseClassName",
      "params": []
     },
     {
      "type": null,
      "name": "setUseClassName",
      "params": [
       {
        "type": "boolean",
        "name": "useClassName"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isUseShortClassName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isShortClassName",
      "params": []
     },
     {
      "type": null,
      "name": "setUseShortClassName",
      "params": [
       {
        "type": "boolean",
        "name": "useShortClassName"
       }
      ]
     },
     {
      "type": null,
      "name": "setShortClassName",
      "params": [
       {
        "type": "boolean",
        "name": "shortClassName"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isUseIdentityHashCode",
      "params": []
     },
     {
      "type": null,
      "name": "setUseIdentityHashCode",
      "params": [
       {
        "type": "boolean",
        "name": "useIdentityHashCode"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isUseFieldNames",
      "params": []
     },
     {
      "type": null,
      "name": "setUseFieldNames",
      "params": [
       {
        "type": "boolean",
        "name": "useFieldNames"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isDefaultFullDetail",
      "params": []
     },
     {
      "type": null,
      "name": "setDefaultFullDetail",
      "params": [
       {
        "type": "boolean",
        "name": "defaultFullDetail"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isArrayContentDetail",
      "params": []
     },
     {
      "type": null,
      "name": "setArrayContentDetail",
      "params": [
       {
        "type": "boolean",
        "name": "arrayContentDetail"
       }
      ]
     },
     {
      "type": "String",
      "name": "getArrayStart",
      "params": []
     },
     {
      "type": null,
      "name": "setArrayStart",
      "params": [
       {
        "type": "String",
        "name": "arrayStart"
       }
      ]
     },
     {
      "type": "String",
      "name": "getArrayEnd",
      "params": []
     },
     {
      "type": null,
      "name": "setArrayEnd",
      "params": [
       {
        "type": "String",
        "name": "arrayEnd"
       }
      ]
     },
     {
      "type": "String",
      "name": "getArraySeparator",
      "params": []
     },
     {
      "type": null,
      "name": "setArraySeparator",
      "params": [
       {
        "type": "String",
        "name": "arraySeparator"
       }
      ]
     },
     {
      "type": "String",
      "name": "getContentStart",
      "params": []
     },
     {
      "type": null,
      "name": "setContentStart",
      "params": [
       {
        "type": "String",
        "name": "contentStart"
       }
      ]
     },
     {
      "type": "String",
      "name": "getContentEnd",
      "params": []
     },
     {
      "type": null,
      "name": "setContentEnd",
      "params": [
       {
        "type": "String",
        "name": "contentEnd"
       }
      ]
     },
     {
      "type": "String",
      "name": "getFieldNameValueSeparator",
      "params": []
     },
     {
      "type": null,
      "name": "setFieldNameValueSeparator",
      "params": [
       {
        "type": "String",
        "name": "fieldNameValueSeparator"
       }
      ]
     },
     {
      "type": "String",
      "name": "getFieldSeparator",
      "params": []
     },
     {
      "type": null,
      "name": "setFieldSeparator",
      "params": [
       {
        "type": "String",
        "name": "fieldSeparator"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFieldSeparatorAtStart",
      "params": []
     },
     {
      "type": null,
      "name": "setFieldSeparatorAtStart",
      "params": [
       {
        "type": "boolean",
        "name": "fieldSeparatorAtStart"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFieldSeparatorAtEnd",
      "params": []
     },
     {
      "type": null,
      "name": "setFieldSeparatorAtEnd",
      "params": [
       {
        "type": "boolean",
        "name": "fieldSeparatorAtEnd"
       }
      ]
     },
     {
      "type": "String",
      "name": "getNullText",
      "params": []
     },
     {
      "type": null,
      "name": "setNullText",
      "params": [
       {
        "type": "String",
        "name": "nullText"
       }
      ]
     },
     {
      "type": "String",
      "name": "getSizeStartText",
      "params": []
     },
     {
      "type": null,
      "name": "setSizeStartText",
      "params": [
       {
        "type": "String",
        "name": "sizeStartText"
       }
      ]
     },
     {
      "type": "String",
      "name": "getSizeEndText",
      "params": []
     },
     {
      "type": null,
      "name": "setSizeEndText",
      "params": [
       {
        "type": "String",
        "name": "sizeEndText"
       }
      ]
     },
     {
      "type": "String",
      "name": "getSummaryObjectStartText",
      "params": []
     },
     {
      "type": null,
      "name": "setSummaryObjectStartText",
      "params": [
       {
        "type": "String",
        "name": "summaryObjectStartText"
       }
      ]
     },
     {
      "type": "String",
      "name": "getSummaryObjectEndText",
      "params": []
     },
     {
      "type": null,
      "name": "setSummaryObjectEndText",
      "params": [
       {
        "type": "String",
        "name": "summaryObjectEndText"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.builder",
  "filename": "ToStringStyle.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "iValue"
     }
    ],
    "name": "ValuedEnum",
    "methods": [
     {
      "type": "Enum",
      "name": "getEnum",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.enums",
  "filename": "ValuedEnum.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Map",
      "name": "EMPTY_MAP"
     },
     {
      "type": "Map",
      "name": "cEnumClasses"
     },
     {
      "type": "String",
      "name": "iName"
     },
     {
      "type": "int",
      "name": "iHashCode"
     },
     {
      "type": "String",
      "name": "iToString"
     }
    ],
    "name": "Enum",
    "methods": [
     {
      "type": null,
      "name": "init",
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "Enum",
      "name": "getEnum",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "String",
        "name": "name"
       }
      ]
     },
     {
      "type": "Map",
      "name": "getEnumMap",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       }
      ]
     },
     {
      "type": "List",
      "name": "getEnumList",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       }
      ]
     },
     {
      "type": "Iterator",
      "name": "iterator",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       }
      ]
     },
     {
      "type": "Entry",
      "name": "getEntry",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       }
      ]
     },
     {
      "type": "Entry",
      "name": "createEntry",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       }
      ]
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "Class",
      "name": "getEnumClass",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "other"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "getNameInOtherClassLoader",
      "params": [
       {
        "type": "Object",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.enums",
  "filename": "Enum.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "EnumUtils",
    "methods": [
     {
      "type": "Enum",
      "name": "getEnum",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "String",
        "name": "name"
       }
      ]
     },
     {
      "type": "ValuedEnum",
      "name": "getEnum",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Map",
      "name": "getEnumMap",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       }
      ]
     },
     {
      "type": "List",
      "name": "getEnumList",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       }
      ]
     },
     {
      "type": "Iterator",
      "name": "iterator",
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.enums",
  "filename": "EnumUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "value"
     }
    ],
    "name": "MutableInt",
    "methods": [
     {
      "type": "Object",
      "name": "getValue",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "increment",
      "params": []
     },
     {
      "type": null,
      "name": "decrement",
      "params": []
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "int",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "int",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": "int",
      "name": "intValue",
      "params": []
     },
     {
      "type": "long",
      "name": "longValue",
      "params": []
     },
     {
      "type": "float",
      "name": "floatValue",
      "params": []
     },
     {
      "type": "double",
      "name": "doubleValue",
      "params": []
     },
     {
      "type": "Integer",
      "name": "toInteger",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.mutable",
  "filename": "MutableInt.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Mutable",
    "methods": [
     {
      "type": "Object",
      "name": "getValue",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.mutable",
  "filename": "Mutable.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "double",
      "name": "value"
     }
    ],
    "name": "MutableDouble",
    "methods": [
     {
      "type": "Object",
      "name": "getValue",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "intValue",
      "params": []
     },
     {
      "type": "long",
      "name": "longValue",
      "params": []
     },
     {
      "type": "float",
      "name": "floatValue",
      "params": []
     },
     {
      "type": "double",
      "name": "doubleValue",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isNaN",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isInfinite",
      "params": []
     },
     {
      "type": "Double",
      "name": "toDouble",
      "params": []
     },
     {
      "type": null,
      "name": "increment",
      "params": []
     },
     {
      "type": null,
      "name": "decrement",
      "params": []
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "double",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "double",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.mutable",
  "filename": "MutableDouble.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "byte",
      "name": "value"
     }
    ],
    "name": "MutableByte",
    "methods": [
     {
      "type": "Object",
      "name": "getValue",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "byte",
      "name": "byteValue",
      "params": []
     },
     {
      "type": "int",
      "name": "intValue",
      "params": []
     },
     {
      "type": "long",
      "name": "longValue",
      "params": []
     },
     {
      "type": "float",
      "name": "floatValue",
      "params": []
     },
     {
      "type": "double",
      "name": "doubleValue",
      "params": []
     },
     {
      "type": "Byte",
      "name": "toByte",
      "params": []
     },
     {
      "type": null,
      "name": "increment",
      "params": []
     },
     {
      "type": null,
      "name": "decrement",
      "params": []
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "byte",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "byte",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.mutable",
  "filename": "MutableByte.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "float",
      "name": "value"
     }
    ],
    "name": "MutableFloat",
    "methods": [
     {
      "type": "Object",
      "name": "getValue",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "increment",
      "params": []
     },
     {
      "type": null,
      "name": "decrement",
      "params": []
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "float",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "float",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": "int",
      "name": "intValue",
      "params": []
     },
     {
      "type": "long",
      "name": "longValue",
      "params": []
     },
     {
      "type": "float",
      "name": "floatValue",
      "params": []
     },
     {
      "type": "double",
      "name": "doubleValue",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isNaN",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isInfinite",
      "params": []
     },
     {
      "type": "Float",
      "name": "toFloat",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.mutable",
  "filename": "MutableFloat.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "short",
      "name": "value"
     }
    ],
    "name": "MutableShort",
    "methods": [
     {
      "type": "Object",
      "name": "getValue",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "increment",
      "params": []
     },
     {
      "type": null,
      "name": "decrement",
      "params": []
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "short",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "short",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": "short",
      "name": "shortValue",
      "params": []
     },
     {
      "type": "int",
      "name": "intValue",
      "params": []
     },
     {
      "type": "long",
      "name": "longValue",
      "params": []
     },
     {
      "type": "float",
      "name": "floatValue",
      "params": []
     },
     {
      "type": "double",
      "name": "doubleValue",
      "params": []
     },
     {
      "type": "Short",
      "name": "toShort",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.mutable",
  "filename": "MutableShort.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "value"
     }
    ],
    "name": "MutableObject",
    "methods": [
     {
      "type": "Object",
      "name": "getValue",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.mutable",
  "filename": "MutableObject.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "value"
     }
    ],
    "name": "MutableLong",
    "methods": [
     {
      "type": "Object",
      "name": "getValue",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "increment",
      "params": []
     },
     {
      "type": null,
      "name": "decrement",
      "params": []
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "long",
        "name": "operand"
       }
      ]
     },
     {
      "type": null,
      "name": "subtract",
      "params": [
       {
        "type": "Number",
        "name": "operand"
       }
      ]
     },
     {
      "type": "int",
      "name": "intValue",
      "params": []
     },
     {
      "type": "long",
      "name": "longValue",
      "params": []
     },
     {
      "type": "float",
      "name": "floatValue",
      "params": []
     },
     {
      "type": "double",
      "name": "doubleValue",
      "params": []
     },
     {
      "type": "Long",
      "name": "toLong",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.mutable",
  "filename": "MutableLong.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "boolean",
      "name": "value"
     }
    ],
    "name": "MutableBoolean",
    "methods": [
     {
      "type": "boolean",
      "name": "booleanValue",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "Object",
      "name": "getValue",
      "params": []
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.mutable",
  "filename": "MutableBoolean.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "TimeZone",
      "name": "UTC_TIME_ZONE"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_SECOND"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_MINUTE"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_HOUR"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_DAY"
     },
     {
      "type": "int",
      "name": "SEMI_MONTH"
     },
     {
      "type": "int",
      "name": "fields"
     },
     {
      "type": "int",
      "name": "RANGE_WEEK_SUNDAY"
     },
     {
      "type": "int",
      "name": "RANGE_WEEK_MONDAY"
     },
     {
      "type": "int",
      "name": "RANGE_WEEK_RELATIVE"
     },
     {
      "type": "int",
      "name": "RANGE_WEEK_CENTER"
     },
     {
      "type": "int",
      "name": "RANGE_MONTH_SUNDAY"
     },
     {
      "type": "int",
      "name": "RANGE_MONTH_MONDAY"
     },
     {
      "type": "int",
      "name": "MILLIS_IN_SECOND"
     },
     {
      "type": "int",
      "name": "MILLIS_IN_MINUTE"
     },
     {
      "type": "int",
      "name": "MILLIS_IN_HOUR"
     },
     {
      "type": "int",
      "name": "MILLIS_IN_DAY"
     }
    ],
    "name": "DateUtils",
    "methods": [
     {
      "type": "boolean",
      "name": "isSameDay",
      "params": [
       {
        "type": "Date",
        "name": "date1"
       },
       {
        "type": "Date",
        "name": "date2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameDay",
      "params": [
       {
        "type": "Calendar",
        "name": "cal1"
       },
       {
        "type": "Calendar",
        "name": "cal2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameInstant",
      "params": [
       {
        "type": "Date",
        "name": "date1"
       },
       {
        "type": "Date",
        "name": "date2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameInstant",
      "params": [
       {
        "type": "Calendar",
        "name": "cal1"
       },
       {
        "type": "Calendar",
        "name": "cal2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSameLocalTime",
      "params": [
       {
        "type": "Calendar",
        "name": "cal1"
       },
       {
        "type": "Calendar",
        "name": "cal2"
       }
      ]
     },
     {
      "type": "Date",
      "name": "parseDate",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "String",
        "name": "parsePatterns"
       }
      ]
     },
     {
      "type": "Date",
      "name": "addYears",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Date",
      "name": "addMonths",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Date",
      "name": "addWeeks",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Date",
      "name": "addDays",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Date",
      "name": "addHours",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Date",
      "name": "addMinutes",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Date",
      "name": "addSeconds",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Date",
      "name": "addMilliseconds",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Date",
      "name": "add",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "calendarField"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Date",
      "name": "round",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "field"
       }
      ]
     },
     {
      "type": "Calendar",
      "name": "round",
      "params": [
       {
        "type": "Calendar",
        "name": "date"
       },
       {
        "type": "int",
        "name": "field"
       }
      ]
     },
     {
      "type": "Date",
      "name": "round",
      "params": [
       {
        "type": "Object",
        "name": "date"
       },
       {
        "type": "int",
        "name": "field"
       }
      ]
     },
     {
      "type": "Date",
      "name": "truncate",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "int",
        "name": "field"
       }
      ]
     },
     {
      "type": "Calendar",
      "name": "truncate",
      "params": [
       {
        "type": "Calendar",
        "name": "date"
       },
       {
        "type": "int",
        "name": "field"
       }
      ]
     },
     {
      "type": "Date",
      "name": "truncate",
      "params": [
       {
        "type": "Object",
        "name": "date"
       },
       {
        "type": "int",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "modify",
      "params": [
       {
        "type": "Calendar",
        "name": "val"
       },
       {
        "type": "int",
        "name": "field"
       },
       {
        "type": "boolean",
        "name": "round"
       }
      ]
     },
     {
      "type": "Iterator",
      "name": "iterator",
      "params": [
       {
        "type": "Date",
        "name": "focus"
       },
       {
        "type": "int",
        "name": "rangeStyle"
       }
      ]
     },
     {
      "type": "Iterator",
      "name": "iterator",
      "params": [
       {
        "type": "Calendar",
        "name": "focus"
       },
       {
        "type": "int",
        "name": "rangeStyle"
       }
      ]
     },
     {
      "type": "Iterator",
      "name": "iterator",
      "params": [
       {
        "type": "Object",
        "name": "focus"
       },
       {
        "type": "int",
        "name": "rangeStyle"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.time",
  "filename": "DateUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "ISO_EXTENDED_FORMAT_PATTERN"
     },
     {
      "type": "Object",
      "name": "y"
     },
     {
      "type": "Object",
      "name": "M"
     },
     {
      "type": "Object",
      "name": "d"
     },
     {
      "type": "Object",
      "name": "H"
     },
     {
      "type": "Object",
      "name": "m"
     },
     {
      "type": "Object",
      "name": "s"
     },
     {
      "type": "Object",
      "name": "S"
     }
    ],
    "name": "DurationFormatUtils",
    "methods": [
     {
      "type": "String",
      "name": "formatDurationHMS",
      "params": [
       {
        "type": "long",
        "name": "durationMillis"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatDurationISO",
      "params": [
       {
        "type": "long",
        "name": "durationMillis"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatDuration",
      "params": [
       {
        "type": "long",
        "name": "durationMillis"
       },
       {
        "type": "String",
        "name": "format"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatDuration",
      "params": [
       {
        "type": "long",
        "name": "durationMillis"
       },
       {
        "type": "String",
        "name": "format"
       },
       {
        "type": "boolean",
        "name": "padWithZeros"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatDurationWords",
      "params": [
       {
        "type": "long",
        "name": "durationMillis"
       },
       {
        "type": "boolean",
        "name": "suppressLeadingZeroElements"
       },
       {
        "type": "boolean",
        "name": "suppressTrailingZeroElements"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatPeriodISO",
      "params": [
       {
        "type": "long",
        "name": "startMillis"
       },
       {
        "type": "long",
        "name": "endMillis"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatPeriod",
      "params": [
       {
        "type": "long",
        "name": "startMillis"
       },
       {
        "type": "long",
        "name": "endMillis"
       },
       {
        "type": "String",
        "name": "format"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatPeriod",
      "params": [
       {
        "type": "long",
        "name": "startMillis"
       },
       {
        "type": "long",
        "name": "endMillis"
       },
       {
        "type": "String",
        "name": "format"
       },
       {
        "type": "boolean",
        "name": "padWithZeros"
       },
       {
        "type": "TimeZone",
        "name": "timezone"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "Token",
        "name": "tokens"
       },
       {
        "type": "int",
        "name": "years"
       },
       {
        "type": "int",
        "name": "months"
       },
       {
        "type": "int",
        "name": "days"
       },
       {
        "type": "int",
        "name": "hours"
       },
       {
        "type": "int",
        "name": "minutes"
       },
       {
        "type": "int",
        "name": "seconds"
       },
       {
        "type": "int",
        "name": "milliseconds"
       },
       {
        "type": "boolean",
        "name": "padWithZeros"
       }
      ]
     },
     {
      "type": "int",
      "name": "reduceAndCorrect",
      "params": [
       {
        "type": "Calendar",
        "name": "start"
       },
       {
        "type": "Calendar",
        "name": "end"
       },
       {
        "type": "int",
        "name": "field"
       },
       {
        "type": "int",
        "name": "difference"
       }
      ]
     },
     {
      "type": "Token",
      "name": "lexx",
      "params": [
       {
        "type": "String",
        "name": "format"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.time",
  "filename": "DurationFormatUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "STATE_UNSTARTED"
     },
     {
      "type": "int",
      "name": "STATE_RUNNING"
     },
     {
      "type": "int",
      "name": "STATE_STOPPED"
     },
     {
      "type": "int",
      "name": "STATE_SUSPENDED"
     },
     {
      "type": "int",
      "name": "STATE_UNSPLIT"
     },
     {
      "type": "int",
      "name": "STATE_SPLIT"
     },
     {
      "type": "int",
      "name": "runningState"
     },
     {
      "type": "int",
      "name": "splitState"
     },
     {
      "type": "long",
      "name": "startTime"
     },
     {
      "type": "long",
      "name": "stopTime"
     }
    ],
    "name": "StopWatch",
    "methods": [
     {
      "type": null,
      "name": "start",
      "params": []
     },
     {
      "type": null,
      "name": "stop",
      "params": []
     },
     {
      "type": null,
      "name": "reset",
      "params": []
     },
     {
      "type": null,
      "name": "split",
      "params": []
     },
     {
      "type": null,
      "name": "unsplit",
      "params": []
     },
     {
      "type": null,
      "name": "suspend",
      "params": []
     },
     {
      "type": null,
      "name": "resume",
      "params": []
     },
     {
      "type": "long",
      "name": "getTime",
      "params": []
     },
     {
      "type": "long",
      "name": "getSplitTime",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toSplitString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.time",
  "filename": "StopWatch.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "FULL"
     },
     {
      "type": "int",
      "name": "LONG"
     },
     {
      "type": "int",
      "name": "MEDIUM"
     },
     {
      "type": "int",
      "name": "SHORT"
     },
     {
      "type": "String",
      "name": "cDefaultPattern"
     },
     {
      "type": "Map",
      "name": "cInstanceCache"
     },
     {
      "type": "Map",
      "name": "cDateInstanceCache"
     },
     {
      "type": "Map",
      "name": "cTimeInstanceCache"
     },
     {
      "type": "Map",
      "name": "cDateTimeInstanceCache"
     },
     {
      "type": "Map",
      "name": "cTimeZoneDisplayCache"
     },
     {
      "type": "String",
      "name": "mPattern"
     },
     {
      "type": "TimeZone",
      "name": "mTimeZone"
     },
     {
      "type": "boolean",
      "name": "mTimeZoneForced"
     },
     {
      "type": "Locale",
      "name": "mLocale"
     },
     {
      "type": "boolean",
      "name": "mLocaleForced"
     },
     {
      "type": "Rule",
      "name": "mRules"
     },
     {
      "type": "int",
      "name": "mMaxLengthEstimate"
     }
    ],
    "name": "FastDateFormat",
    "methods": [
     {
      "type": "FastDateFormat",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "FastDateFormat",
      "name": "getInstance",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getInstance",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getInstance",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getInstance",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getDateInstance",
      "params": [
       {
        "type": "int",
        "name": "style"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getDateInstance",
      "params": [
       {
        "type": "int",
        "name": "style"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getDateInstance",
      "params": [
       {
        "type": "int",
        "name": "style"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getDateInstance",
      "params": [
       {
        "type": "int",
        "name": "style"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getTimeInstance",
      "params": [
       {
        "type": "int",
        "name": "style"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getTimeInstance",
      "params": [
       {
        "type": "int",
        "name": "style"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getTimeInstance",
      "params": [
       {
        "type": "int",
        "name": "style"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getTimeInstance",
      "params": [
       {
        "type": "int",
        "name": "style"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getDateTimeInstance",
      "params": [
       {
        "type": "int",
        "name": "dateStyle"
       },
       {
        "type": "int",
        "name": "timeStyle"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getDateTimeInstance",
      "params": [
       {
        "type": "int",
        "name": "dateStyle"
       },
       {
        "type": "int",
        "name": "timeStyle"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getDateTimeInstance",
      "params": [
       {
        "type": "int",
        "name": "dateStyle"
       },
       {
        "type": "int",
        "name": "timeStyle"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       }
      ]
     },
     {
      "type": "FastDateFormat",
      "name": "getDateTimeInstance",
      "params": [
       {
        "type": "int",
        "name": "dateStyle"
       },
       {
        "type": "int",
        "name": "timeStyle"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getTimeZoneDisplay",
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       },
       {
        "type": "boolean",
        "name": "daylight"
       },
       {
        "type": "int",
        "name": "style"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getDefaultPattern",
      "params": []
     },
     {
      "type": null,
      "name": "init",
      "params": []
     },
     {
      "type": "List",
      "name": "parsePattern",
      "params": []
     },
     {
      "type": "String",
      "name": "parseToken",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "int",
        "name": "indexRef"
       }
      ]
     },
     {
      "type": "NumberRule",
      "name": "selectNumberRule",
      "params": [
       {
        "type": "int",
        "name": "field"
       },
       {
        "type": "int",
        "name": "padding"
       }
      ]
     },
     {
      "type": "StringBuffer",
      "name": "format",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       },
       {
        "type": "StringBuffer",
        "name": "toAppendTo"
       },
       {
        "type": "FieldPosition",
        "name": "pos"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "Date",
        "name": "date"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       }
      ]
     },
     {
      "type": "StringBuffer",
      "name": "format",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "StringBuffer",
        "name": "buf"
       }
      ]
     },
     {
      "type": "StringBuffer",
      "name": "format",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "StringBuffer",
        "name": "buf"
       }
      ]
     },
     {
      "type": "StringBuffer",
      "name": "format",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       },
       {
        "type": "StringBuffer",
        "name": "buf"
       }
      ]
     },
     {
      "type": "StringBuffer",
      "name": "applyRules",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       },
       {
        "type": "StringBuffer",
        "name": "buf"
       }
      ]
     },
     {
      "type": "Object",
      "name": "parseObject",
      "params": [
       {
        "type": "String",
        "name": "source"
       },
       {
        "type": "ParsePosition",
        "name": "pos"
       }
      ]
     },
     {
      "type": "String",
      "name": "getPattern",
      "params": []
     },
     {
      "type": "TimeZone",
      "name": "getTimeZone",
      "params": []
     },
     {
      "type": "boolean",
      "name": "getTimeZoneOverridesCalendar",
      "params": []
     },
     {
      "type": "Locale",
      "name": "getLocale",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaxLengthEstimate",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.time",
  "filename": "FastDateFormat.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "FastDateFormat",
      "name": "ISO_DATETIME_FORMAT"
     },
     {
      "type": "FastDateFormat",
      "name": "ISO_DATETIME_TIME_ZONE_FORMAT"
     },
     {
      "type": "FastDateFormat",
      "name": "ISO_DATE_FORMAT"
     },
     {
      "type": "FastDateFormat",
      "name": "ISO_DATE_TIME_ZONE_FORMAT"
     },
     {
      "type": "FastDateFormat",
      "name": "ISO_TIME_FORMAT"
     },
     {
      "type": "FastDateFormat",
      "name": "ISO_TIME_TIME_ZONE_FORMAT"
     },
     {
      "type": "FastDateFormat",
      "name": "ISO_TIME_NO_T_FORMAT"
     },
     {
      "type": "FastDateFormat",
      "name": "ISO_TIME_NO_T_TIME_ZONE_FORMAT"
     },
     {
      "type": "FastDateFormat",
      "name": "SMTP_DATETIME_FORMAT"
     }
    ],
    "name": "DateFormatUtils",
    "methods": [
     {
      "type": "String",
      "name": "formatUTC",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatUTC",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatUTC",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "formatUTC",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "format",
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "TimeZone",
        "name": "timeZone"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.time",
  "filename": "DateFormatUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "boolean",
      "name": "constructed"
     }
    ],
    "name": "JVMRandom",
    "methods": [
     {
      "type": null,
      "name": "setSeed",
      "params": [
       {
        "type": "long",
        "name": "seed"
       }
      ]
     },
     {
      "type": "double",
      "name": "nextGaussian",
      "params": []
     },
     {
      "type": null,
      "name": "nextBytes",
      "params": [
       {
        "type": "byte",
        "name": "byteArray"
       }
      ]
     },
     {
      "type": "int",
      "name": "nextInt",
      "params": []
     },
     {
      "type": "int",
      "name": "nextInt",
      "params": [
       {
        "type": "int",
        "name": "n"
       }
      ]
     },
     {
      "type": "long",
      "name": "nextLong",
      "params": []
     },
     {
      "type": "long",
      "name": "nextLong",
      "params": [
       {
        "type": "long",
        "name": "n"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "nextBoolean",
      "params": []
     },
     {
      "type": "float",
      "name": "nextFloat",
      "params": []
     },
     {
      "type": "double",
      "name": "nextDouble",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "JVMRandom.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "float",
      "name": "min"
     },
     {
      "type": "float",
      "name": "max"
     },
     {
      "type": "Float",
      "name": "minObject"
     },
     {
      "type": "Float",
      "name": "maxObject"
     },
     {
      "type": "int",
      "name": "hashCode"
     },
     {
      "type": "String",
      "name": "toString"
     }
    ],
    "name": "FloatRange",
    "methods": [
     {
      "type": "Number",
      "name": "getMinimumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMinimumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMinimumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMinimumFloat",
      "params": []
     },
     {
      "type": "Number",
      "name": "getMaximumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMaximumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMaximumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMaximumFloat",
      "params": []
     },
     {
      "type": "boolean",
      "name": "containsNumber",
      "params": [
       {
        "type": "Number",
        "name": "number"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsFloat",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "overlapsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "FloatRange.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Fraction",
      "name": "ZERO"
     },
     {
      "type": "Fraction",
      "name": "ONE"
     },
     {
      "type": "Fraction",
      "name": "ONE_HALF"
     },
     {
      "type": "Fraction",
      "name": "ONE_THIRD"
     },
     {
      "type": "Fraction",
      "name": "TWO_THIRDS"
     },
     {
      "type": "Fraction",
      "name": "ONE_QUARTER"
     },
     {
      "type": "Fraction",
      "name": "TWO_QUARTERS"
     },
     {
      "type": "Fraction",
      "name": "THREE_QUARTERS"
     },
     {
      "type": "Fraction",
      "name": "ONE_FIFTH"
     },
     {
      "type": "Fraction",
      "name": "TWO_FIFTHS"
     },
     {
      "type": "Fraction",
      "name": "THREE_FIFTHS"
     },
     {
      "type": "Fraction",
      "name": "FOUR_FIFTHS"
     },
     {
      "type": "int",
      "name": "numerator"
     },
     {
      "type": "int",
      "name": "denominator"
     },
     {
      "type": "int",
      "name": "hashCode"
     },
     {
      "type": "String",
      "name": "toString"
     },
     {
      "type": "String",
      "name": "toProperString"
     }
    ],
    "name": "Fraction",
    "methods": [
     {
      "type": "Fraction",
      "name": "getFraction",
      "params": [
       {
        "type": "int",
        "name": "numerator"
       },
       {
        "type": "int",
        "name": "denominator"
       }
      ]
     },
     {
      "type": "Fraction",
      "name": "getFraction",
      "params": [
       {
        "type": "int",
        "name": "whole"
       },
       {
        "type": "int",
        "name": "numerator"
       },
       {
        "type": "int",
        "name": "denominator"
       }
      ]
     },
     {
      "type": "Fraction",
      "name": "getReducedFraction",
      "params": [
       {
        "type": "int",
        "name": "numerator"
       },
       {
        "type": "int",
        "name": "denominator"
       }
      ]
     },
     {
      "type": "Fraction",
      "name": "getFraction",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "Fraction",
      "name": "getFraction",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "getNumerator",
      "params": []
     },
     {
      "type": "int",
      "name": "getDenominator",
      "params": []
     },
     {
      "type": "int",
      "name": "getProperNumerator",
      "params": []
     },
     {
      "type": "int",
      "name": "getProperWhole",
      "params": []
     },
     {
      "type": "int",
      "name": "intValue",
      "params": []
     },
     {
      "type": "long",
      "name": "longValue",
      "params": []
     },
     {
      "type": "float",
      "name": "floatValue",
      "params": []
     },
     {
      "type": "double",
      "name": "doubleValue",
      "params": []
     },
     {
      "type": "Fraction",
      "name": "reduce",
      "params": []
     },
     {
      "type": "Fraction",
      "name": "invert",
      "params": []
     },
     {
      "type": "Fraction",
      "name": "negate",
      "params": []
     },
     {
      "type": "Fraction",
      "name": "abs",
      "params": []
     },
     {
      "type": "Fraction",
      "name": "pow",
      "params": [
       {
        "type": "int",
        "name": "power"
       }
      ]
     },
     {
      "type": "int",
      "name": "greatestCommonDivisor",
      "params": [
       {
        "type": "int",
        "name": "u"
       },
       {
        "type": "int",
        "name": "v"
       }
      ]
     },
     {
      "type": "int",
      "name": "mulAndCheck",
      "params": [
       {
        "type": "int",
        "name": "x"
       },
       {
        "type": "int",
        "name": "y"
       }
      ]
     },
     {
      "type": "int",
      "name": "mulPosAndCheck",
      "params": [
       {
        "type": "int",
        "name": "x"
       },
       {
        "type": "int",
        "name": "y"
       }
      ]
     },
     {
      "type": "int",
      "name": "addAndCheck",
      "params": [
       {
        "type": "int",
        "name": "x"
       },
       {
        "type": "int",
        "name": "y"
       }
      ]
     },
     {
      "type": "int",
      "name": "subAndCheck",
      "params": [
       {
        "type": "int",
        "name": "x"
       },
       {
        "type": "int",
        "name": "y"
       }
      ]
     },
     {
      "type": "Fraction",
      "name": "add",
      "params": [
       {
        "type": "Fraction",
        "name": "fraction"
       }
      ]
     },
     {
      "type": "Fraction",
      "name": "subtract",
      "params": [
       {
        "type": "Fraction",
        "name": "fraction"
       }
      ]
     },
     {
      "type": "Fraction",
      "name": "addSub",
      "params": [
       {
        "type": "Fraction",
        "name": "fraction"
       },
       {
        "type": "boolean",
        "name": "isAdd"
       }
      ]
     },
     {
      "type": "Fraction",
      "name": "multiplyBy",
      "params": [
       {
        "type": "Fraction",
        "name": "fraction"
       }
      ]
     },
     {
      "type": "Fraction",
      "name": "divideBy",
      "params": [
       {
        "type": "Fraction",
        "name": "fraction"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toProperString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "Fraction.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Number",
      "name": "min"
     },
     {
      "type": "Number",
      "name": "max"
     },
     {
      "type": "int",
      "name": "hashCode"
     },
     {
      "type": "String",
      "name": "toString"
     }
    ],
    "name": "NumberRange",
    "methods": [
     {
      "type": "Number",
      "name": "getMinimumNumber",
      "params": []
     },
     {
      "type": "Number",
      "name": "getMaximumNumber",
      "params": []
     },
     {
      "type": "boolean",
      "name": "containsNumber",
      "params": [
       {
        "type": "Number",
        "name": "number"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "NumberRange.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Long",
      "name": "LONG_ZERO"
     },
     {
      "type": "Long",
      "name": "LONG_ONE"
     },
     {
      "type": "Long",
      "name": "LONG_MINUS_ONE"
     },
     {
      "type": "Integer",
      "name": "INTEGER_ZERO"
     },
     {
      "type": "Integer",
      "name": "INTEGER_ONE"
     },
     {
      "type": "Integer",
      "name": "INTEGER_MINUS_ONE"
     },
     {
      "type": "Short",
      "name": "SHORT_ZERO"
     },
     {
      "type": "Short",
      "name": "SHORT_ONE"
     },
     {
      "type": "Short",
      "name": "SHORT_MINUS_ONE"
     },
     {
      "type": "Byte",
      "name": "BYTE_ZERO"
     },
     {
      "type": "Byte",
      "name": "BYTE_ONE"
     },
     {
      "type": "Byte",
      "name": "BYTE_MINUS_ONE"
     },
     {
      "type": "Double",
      "name": "DOUBLE_ZERO"
     },
     {
      "type": "Double",
      "name": "DOUBLE_ONE"
     },
     {
      "type": "Double",
      "name": "DOUBLE_MINUS_ONE"
     },
     {
      "type": "Float",
      "name": "FLOAT_ZERO"
     },
     {
      "type": "Float",
      "name": "FLOAT_ONE"
     },
     {
      "type": "Float",
      "name": "FLOAT_MINUS_ONE"
     }
    ],
    "name": "NumberUtils",
    "methods": [
     {
      "type": "int",
      "name": "stringToInt",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "toInt",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "stringToInt",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "int",
      "name": "toInt",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "long",
      "name": "toLong",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "long",
      "name": "toLong",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "long",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "float",
      "name": "toFloat",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "float",
      "name": "toFloat",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "float",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "double",
      "name": "toDouble",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "double",
      "name": "toDouble",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "double",
        "name": "defaultValue"
       }
      ]
     },
     {
      "type": "Number",
      "name": "createNumber",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAllZeros",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "Float",
      "name": "createFloat",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "Double",
      "name": "createDouble",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "Integer",
      "name": "createInteger",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "Long",
      "name": "createLong",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "BigInteger",
      "name": "createBigInteger",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "BigDecimal",
      "name": "createBigDecimal",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "long",
      "name": "min",
      "params": [
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": "int",
      "name": "min",
      "params": [
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": "short",
      "name": "min",
      "params": [
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": "double",
      "name": "min",
      "params": [
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": "float",
      "name": "min",
      "params": [
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": "long",
      "name": "max",
      "params": [
       {
        "type": "long",
        "name": "array"
       }
      ]
     },
     {
      "type": "int",
      "name": "max",
      "params": [
       {
        "type": "int",
        "name": "array"
       }
      ]
     },
     {
      "type": "short",
      "name": "max",
      "params": [
       {
        "type": "short",
        "name": "array"
       }
      ]
     },
     {
      "type": "double",
      "name": "max",
      "params": [
       {
        "type": "double",
        "name": "array"
       }
      ]
     },
     {
      "type": "float",
      "name": "max",
      "params": [
       {
        "type": "float",
        "name": "array"
       }
      ]
     },
     {
      "type": "long",
      "name": "min",
      "params": [
       {
        "type": "long",
        "name": "a"
       },
       {
        "type": "long",
        "name": "b"
       },
       {
        "type": "long",
        "name": "c"
       }
      ]
     },
     {
      "type": "int",
      "name": "min",
      "params": [
       {
        "type": "int",
        "name": "a"
       },
       {
        "type": "int",
        "name": "b"
       },
       {
        "type": "int",
        "name": "c"
       }
      ]
     },
     {
      "type": "short",
      "name": "min",
      "params": [
       {
        "type": "short",
        "name": "a"
       },
       {
        "type": "short",
        "name": "b"
       },
       {
        "type": "short",
        "name": "c"
       }
      ]
     },
     {
      "type": "byte",
      "name": "min",
      "params": [
       {
        "type": "byte",
        "name": "a"
       },
       {
        "type": "byte",
        "name": "b"
       },
       {
        "type": "byte",
        "name": "c"
       }
      ]
     },
     {
      "type": "double",
      "name": "min",
      "params": [
       {
        "type": "double",
        "name": "a"
       },
       {
        "type": "double",
        "name": "b"
       },
       {
        "type": "double",
        "name": "c"
       }
      ]
     },
     {
      "type": "float",
      "name": "min",
      "params": [
       {
        "type": "float",
        "name": "a"
       },
       {
        "type": "float",
        "name": "b"
       },
       {
        "type": "float",
        "name": "c"
       }
      ]
     },
     {
      "type": "long",
      "name": "max",
      "params": [
       {
        "type": "long",
        "name": "a"
       },
       {
        "type": "long",
        "name": "b"
       },
       {
        "type": "long",
        "name": "c"
       }
      ]
     },
     {
      "type": "int",
      "name": "max",
      "params": [
       {
        "type": "int",
        "name": "a"
       },
       {
        "type": "int",
        "name": "b"
       },
       {
        "type": "int",
        "name": "c"
       }
      ]
     },
     {
      "type": "short",
      "name": "max",
      "params": [
       {
        "type": "short",
        "name": "a"
       },
       {
        "type": "short",
        "name": "b"
       },
       {
        "type": "short",
        "name": "c"
       }
      ]
     },
     {
      "type": "byte",
      "name": "max",
      "params": [
       {
        "type": "byte",
        "name": "a"
       },
       {
        "type": "byte",
        "name": "b"
       },
       {
        "type": "byte",
        "name": "c"
       }
      ]
     },
     {
      "type": "double",
      "name": "max",
      "params": [
       {
        "type": "double",
        "name": "a"
       },
       {
        "type": "double",
        "name": "b"
       },
       {
        "type": "double",
        "name": "c"
       }
      ]
     },
     {
      "type": "float",
      "name": "max",
      "params": [
       {
        "type": "float",
        "name": "a"
       },
       {
        "type": "float",
        "name": "b"
       },
       {
        "type": "float",
        "name": "c"
       }
      ]
     },
     {
      "type": "int",
      "name": "compare",
      "params": [
       {
        "type": "double",
        "name": "lhs"
       },
       {
        "type": "double",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "int",
      "name": "compare",
      "params": [
       {
        "type": "float",
        "name": "lhs"
       },
       {
        "type": "float",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isDigits",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isNumber",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "NumberUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "min"
     },
     {
      "type": "long",
      "name": "max"
     },
     {
      "type": "Long",
      "name": "minObject"
     },
     {
      "type": "Long",
      "name": "maxObject"
     },
     {
      "type": "int",
      "name": "hashCode"
     },
     {
      "type": "String",
      "name": "toString"
     }
    ],
    "name": "LongRange",
    "methods": [
     {
      "type": "Number",
      "name": "getMinimumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMinimumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMinimumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMinimumFloat",
      "params": []
     },
     {
      "type": "Number",
      "name": "getMaximumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMaximumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMaximumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMaximumFloat",
      "params": []
     },
     {
      "type": "boolean",
      "name": "containsNumber",
      "params": [
       {
        "type": "Number",
        "name": "number"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsLong",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "overlapsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "LongRange.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Range",
    "methods": [
     {
      "type": "Number",
      "name": "getMinimumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMinimumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMinimumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMinimumFloat",
      "params": []
     },
     {
      "type": "Number",
      "name": "getMaximumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMaximumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMaximumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMaximumFloat",
      "params": []
     },
     {
      "type": "boolean",
      "name": "containsNumber",
      "params": [
       {
        "type": "Number",
        "name": "number"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsLong",
      "params": [
       {
        "type": "Number",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsLong",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsInteger",
      "params": [
       {
        "type": "Number",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsInteger",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsDouble",
      "params": [
       {
        "type": "Number",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsDouble",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsFloat",
      "params": [
       {
        "type": "Number",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsFloat",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "overlapsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "Range.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "min"
     },
     {
      "type": "int",
      "name": "max"
     },
     {
      "type": "Integer",
      "name": "minObject"
     },
     {
      "type": "Integer",
      "name": "maxObject"
     },
     {
      "type": "int",
      "name": "hashCode"
     },
     {
      "type": "String",
      "name": "toString"
     }
    ],
    "name": "IntRange",
    "methods": [
     {
      "type": "Number",
      "name": "getMinimumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMinimumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMinimumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMinimumFloat",
      "params": []
     },
     {
      "type": "Number",
      "name": "getMaximumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMaximumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMaximumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMaximumFloat",
      "params": []
     },
     {
      "type": "boolean",
      "name": "containsNumber",
      "params": [
       {
        "type": "Number",
        "name": "number"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsInteger",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "overlapsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "IntRange.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Random",
      "name": "JVM_RANDOM"
     }
    ],
    "name": "RandomUtils",
    "methods": [
     {
      "type": "int",
      "name": "nextInt",
      "params": []
     },
     {
      "type": "int",
      "name": "nextInt",
      "params": [
       {
        "type": "Random",
        "name": "random"
       }
      ]
     },
     {
      "type": "int",
      "name": "nextInt",
      "params": [
       {
        "type": "int",
        "name": "n"
       }
      ]
     },
     {
      "type": "int",
      "name": "nextInt",
      "params": [
       {
        "type": "Random",
        "name": "random"
       },
       {
        "type": "int",
        "name": "n"
       }
      ]
     },
     {
      "type": "long",
      "name": "nextLong",
      "params": []
     },
     {
      "type": "long",
      "name": "nextLong",
      "params": [
       {
        "type": "Random",
        "name": "random"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "nextBoolean",
      "params": []
     },
     {
      "type": "boolean",
      "name": "nextBoolean",
      "params": [
       {
        "type": "Random",
        "name": "random"
       }
      ]
     },
     {
      "type": "float",
      "name": "nextFloat",
      "params": []
     },
     {
      "type": "float",
      "name": "nextFloat",
      "params": [
       {
        "type": "Random",
        "name": "random"
       }
      ]
     },
     {
      "type": "double",
      "name": "nextDouble",
      "params": []
     },
     {
      "type": "double",
      "name": "nextDouble",
      "params": [
       {
        "type": "Random",
        "name": "random"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "RandomUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "double",
      "name": "min"
     },
     {
      "type": "double",
      "name": "max"
     },
     {
      "type": "Double",
      "name": "minObject"
     },
     {
      "type": "Double",
      "name": "maxObject"
     },
     {
      "type": "int",
      "name": "hashCode"
     },
     {
      "type": "String",
      "name": "toString"
     }
    ],
    "name": "DoubleRange",
    "methods": [
     {
      "type": "Number",
      "name": "getMinimumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMinimumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMinimumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMinimumFloat",
      "params": []
     },
     {
      "type": "Number",
      "name": "getMaximumNumber",
      "params": []
     },
     {
      "type": "long",
      "name": "getMaximumLong",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumInteger",
      "params": []
     },
     {
      "type": "double",
      "name": "getMaximumDouble",
      "params": []
     },
     {
      "type": "float",
      "name": "getMaximumFloat",
      "params": []
     },
     {
      "type": "boolean",
      "name": "containsNumber",
      "params": [
       {
        "type": "Number",
        "name": "number"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsDouble",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "overlapsRange",
      "params": [
       {
        "type": "Range",
        "name": "range"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.math",
  "filename": "DoubleRange.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NestableDelegate",
      "name": "delegate"
     },
     {
      "type": "Throwable",
      "name": "cause"
     }
    ],
    "name": "NestableException",
    "methods": [
     {
      "type": "Throwable",
      "name": "getCause",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "String",
      "name": "getMessages",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowable",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getThrowableCount",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowables",
      "params": []
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "int",
        "name": "fromIndex"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": []
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintStream",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printPartialStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.exception",
  "filename": "NestableException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NestableDelegate",
      "name": "delegate"
     },
     {
      "type": "Throwable",
      "name": "cause"
     }
    ],
    "name": "NestableRuntimeException",
    "methods": [
     {
      "type": "Throwable",
      "name": "getCause",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "String",
      "name": "getMessages",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowable",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getThrowableCount",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowables",
      "params": []
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "int",
        "name": "fromIndex"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": []
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintStream",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printPartialStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.exception",
  "filename": "NestableRuntimeException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NestableDelegate",
      "name": "delegate"
     },
     {
      "type": "Throwable",
      "name": "cause"
     }
    ],
    "name": "NestableError",
    "methods": [
     {
      "type": "Throwable",
      "name": "getCause",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "String",
      "name": "getMessages",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowable",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getThrowableCount",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowables",
      "params": []
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "int",
        "name": "fromIndex"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": []
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintStream",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printPartialStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.exception",
  "filename": "NestableError.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "MUST_BE_THROWABLE"
     },
     {
      "type": "Throwable",
      "name": "nestable"
     },
     {
      "type": "boolean",
      "name": "topDown"
     },
     {
      "type": "boolean",
      "name": "trimStackFrames"
     },
     {
      "type": "boolean",
      "name": "matchSubclasses"
     }
    ],
    "name": "NestableDelegate",
    "methods": [
     {
      "type": "String",
      "name": "getMessage",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": [
       {
        "type": "String",
        "name": "baseMsg"
       }
      ]
     },
     {
      "type": "String",
      "name": "getMessages",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowable",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getThrowableCount",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowables",
      "params": []
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "int",
        "name": "fromIndex"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": []
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintStream",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     },
     {
      "type": "String",
      "name": "getStackFrames",
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ]
     },
     {
      "type": null,
      "name": "trimStackFrames",
      "params": [
       {
        "type": "List",
        "name": "stacks"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.exception",
  "filename": "NestableDelegate.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "WRAPPED_MARKER"
     },
     {
      "type": "String",
      "name": "CAUSE_METHOD_NAMES"
     },
     {
      "type": "Method",
      "name": "THROWABLE_CAUSE_METHOD"
     },
     {
      "type": "Method",
      "name": "THROWABLE_INITCAUSE_METHOD"
     }
    ],
    "name": "ExceptionUtils",
    "methods": [
     {
      "type": null,
      "name": "addCauseMethodName",
      "params": [
       {
        "type": "String",
        "name": "methodName"
       }
      ]
     },
     {
      "type": null,
      "name": "removeCauseMethodName",
      "params": [
       {
        "type": "String",
        "name": "methodName"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "setCause",
      "params": [
       {
        "type": "Throwable",
        "name": "target"
       },
       {
        "type": "Throwable",
        "name": "cause"
       }
      ]
     },
     {
      "type": "String",
      "name": "toArray",
      "params": [
       {
        "type": "List",
        "name": "list"
       }
      ]
     },
     {
      "type": "ArrayList",
      "name": "getCauseMethodNameList",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isCauseMethodName",
      "params": [
       {
        "type": "String",
        "name": "methodName"
       }
      ]
     },
     {
      "type": "Throwable",
      "name": "getCause",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "Throwable",
      "name": "getCause",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "String",
        "name": "methodNames"
       }
      ]
     },
     {
      "type": "Throwable",
      "name": "getRootCause",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "Throwable",
      "name": "getCauseUsingWellKnownTypes",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "Throwable",
      "name": "getCauseUsingMethodName",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "String",
        "name": "methodName"
       }
      ]
     },
     {
      "type": "Throwable",
      "name": "getCauseUsingFieldName",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "String",
        "name": "fieldName"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isThrowableNested",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isNestedThrowable",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "int",
      "name": "getThrowableCount",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "Throwable",
      "name": "getThrowables",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "List",
      "name": "getThrowableList",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "int",
        "name": "fromIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfType",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfType",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "int",
        "name": "fromIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "int",
        "name": "fromIndex"
       },
       {
        "type": "boolean",
        "name": "subclass"
       }
      ]
     },
     {
      "type": null,
      "name": "printRootCauseStackTrace",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": null,
      "name": "printRootCauseStackTrace",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "PrintStream",
        "name": "stream"
       }
      ]
     },
     {
      "type": null,
      "name": "printRootCauseStackTrace",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       },
       {
        "type": "PrintWriter",
        "name": "writer"
       }
      ]
     },
     {
      "type": "String",
      "name": "getRootCauseStackTrace",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": null,
      "name": "removeCommonFrames",
      "params": [
       {
        "type": "List",
        "name": "causeFrames"
       },
       {
        "type": "List",
        "name": "wrapperFrames"
       }
      ]
     },
     {
      "type": "String",
      "name": "getFullStackTrace",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "String",
      "name": "getStackTrace",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "String",
      "name": "getStackFrames",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "String",
      "name": "getStackFrames",
      "params": [
       {
        "type": "String",
        "name": "stackTrace"
       }
      ]
     },
     {
      "type": "List",
      "name": "getStackFrameList",
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ]
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": [
       {
        "type": "Throwable",
        "name": "th"
       }
      ]
     },
     {
      "type": "String",
      "name": "getRootCauseMessage",
      "params": [
       {
        "type": "Throwable",
        "name": "th"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.exception",
  "filename": "ExceptionUtils.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Nestable",
    "methods": [
     {
      "type": "Throwable",
      "name": "getCause",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "String",
      "name": "getMessages",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowable",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getThrowableCount",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowables",
      "params": []
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfThrowable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "int",
        "name": "fromIndex"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printStackTrace",
      "params": [
       {
        "type": "PrintStream",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "printPartialStackTrace",
      "params": [
       {
        "type": "PrintWriter",
        "name": "out"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.exception",
  "filename": "Nestable.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Format",
      "name": "parser"
     },
     {
      "type": "Format",
      "name": "formatter"
     }
    ],
    "name": "CompositeFormat",
    "methods": [
     {
      "type": "StringBuffer",
      "name": "format",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       },
       {
        "type": "StringBuffer",
        "name": "toAppendTo"
       },
       {
        "type": "FieldPosition",
        "name": "pos"
       }
      ]
     },
     {
      "type": "Object",
      "name": "parseObject",
      "params": [
       {
        "type": "String",
        "name": "source"
       },
       {
        "type": "ParsePosition",
        "name": "pos"
       }
      ]
     },
     {
      "type": "Format",
      "name": "getParser",
      "params": []
     },
     {
      "type": "Format",
      "name": "getFormatter",
      "params": []
     },
     {
      "type": "String",
      "name": "reformat",
      "params": [
       {
        "type": "String",
        "name": "input"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.text",
  "filename": "CompositeFormat.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "CAPACITY"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "char",
      "name": "buffer"
     },
     {
      "type": "int",
      "name": "size"
     },
     {
      "type": "String",
      "name": "newLine"
     },
     {
      "type": "String",
      "name": "nullText"
     }
    ],
    "name": "StrBuilder",
    "methods": [
     {
      "type": "String",
      "name": "getNewLineText",
      "params": []
     },
     {
      "type": "StrBuilder",
      "name": "setNewLineText",
      "params": [
       {
        "type": "String",
        "name": "newLine"
       }
      ]
     },
     {
      "type": "String",
      "name": "getNullText",
      "params": []
     },
     {
      "type": "StrBuilder",
      "name": "setNullText",
      "params": [
       {
        "type": "String",
        "name": "nullText"
       }
      ]
     },
     {
      "type": "int",
      "name": "length",
      "params": []
     },
     {
      "type": "StrBuilder",
      "name": "setLength",
      "params": [
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "int",
      "name": "capacity",
      "params": []
     },
     {
      "type": "StrBuilder",
      "name": "ensureCapacity",
      "params": [
       {
        "type": "int",
        "name": "capacity"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "minimizeCapacity",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": []
     },
     {
      "type": "StrBuilder",
      "name": "clear",
      "params": []
     },
     {
      "type": "char",
      "name": "charAt",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "setCharAt",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "deleteCharAt",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "char",
      "name": "toCharArray",
      "params": []
     },
     {
      "type": "char",
      "name": "toCharArray",
      "params": [
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       }
      ]
     },
     {
      "type": "char",
      "name": "getChars",
      "params": [
       {
        "type": "char",
        "name": "destination"
       }
      ]
     },
     {
      "type": null,
      "name": "getChars",
      "params": [
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       },
       {
        "type": "char",
        "name": "destination"
       },
       {
        "type": "int",
        "name": "destinationIndex"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "appendNewLine",
      "params": []
     },
     {
      "type": "StrBuilder",
      "name": "appendNull",
      "params": []
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "str"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "StringBuffer",
        "name": "str"
       },
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "StrBuilder",
        "name": "str"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "StrBuilder",
        "name": "str"
       },
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "chars"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "chars"
       },
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "appendWithSeparators",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "appendWithSeparators",
      "params": [
       {
        "type": "Collection",
        "name": "coll"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "appendWithSeparators",
      "params": [
       {
        "type": "Iterator",
        "name": "it"
       },
       {
        "type": "String",
        "name": "separator"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "appendPadding",
      "params": [
       {
        "type": "int",
        "name": "length"
       },
       {
        "type": "char",
        "name": "padChar"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "appendFixedWidthPadLeft",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       },
       {
        "type": "int",
        "name": "width"
       },
       {
        "type": "char",
        "name": "padChar"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "appendFixedWidthPadLeft",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "width"
       },
       {
        "type": "char",
        "name": "padChar"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "appendFixedWidthPadRight",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       },
       {
        "type": "int",
        "name": "width"
       },
       {
        "type": "char",
        "name": "padChar"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "appendFixedWidthPadRight",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "width"
       },
       {
        "type": "char",
        "name": "padChar"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "char",
        "name": "chars"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "char",
        "name": "chars"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "char",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "insert",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "deleteImpl",
      "params": [
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       },
       {
        "type": "int",
        "name": "len"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "delete",
      "params": [
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "deleteAll",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "deleteFirst",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "deleteAll",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "deleteFirst",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "deleteAll",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "deleteFirst",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": null,
      "name": "replaceImpl",
      "params": [
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       },
       {
        "type": "int",
        "name": "removeLen"
       },
       {
        "type": "String",
        "name": "insertStr"
       },
       {
        "type": "int",
        "name": "insertLen"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "replace",
      "params": [
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       },
       {
        "type": "String",
        "name": "replaceStr"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "replaceAll",
      "params": [
       {
        "type": "char",
        "name": "search"
       },
       {
        "type": "char",
        "name": "replace"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "replaceFirst",
      "params": [
       {
        "type": "char",
        "name": "search"
       },
       {
        "type": "char",
        "name": "replace"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "replaceAll",
      "params": [
       {
        "type": "String",
        "name": "searchStr"
       },
       {
        "type": "String",
        "name": "replaceStr"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "replaceFirst",
      "params": [
       {
        "type": "String",
        "name": "searchStr"
       },
       {
        "type": "String",
        "name": "replaceStr"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "replaceAll",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       },
       {
        "type": "String",
        "name": "replaceStr"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "replaceFirst",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       },
       {
        "type": "String",
        "name": "replaceStr"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "replace",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       },
       {
        "type": "String",
        "name": "replaceStr"
       },
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       },
       {
        "type": "int",
        "name": "replaceCount"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "replaceImpl",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       },
       {
        "type": "String",
        "name": "replaceStr"
       },
       {
        "type": "int",
        "name": "from"
       },
       {
        "type": "int",
        "name": "to"
       },
       {
        "type": "int",
        "name": "replaceCount"
       }
      ]
     },
     {
      "type": "StrBuilder",
      "name": "reverse",
      "params": []
     },
     {
      "type": "StrBuilder",
      "name": "trim",
      "params": []
     },
     {
      "type": "boolean",
      "name": "startsWith",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "endsWith",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "substring",
      "params": [
       {
        "type": "int",
        "name": "start"
       }
      ]
     },
     {
      "type": "String",
      "name": "substring",
      "params": [
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       }
      ]
     },
     {
      "type": "String",
      "name": "leftString",
      "params": [
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "String",
      "name": "rightString",
      "params": [
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "String",
      "name": "midString",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "char",
        "name": "ch"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "char",
        "name": "ch"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastIndexOf",
      "params": [
       {
        "type": "StrMatcher",
        "name": "matcher"
       },
       {
        "type": "int",
        "name": "startIndex"
       }
      ]
     },
     {
      "type": "StrTokenizer",
      "name": "asTokenizer",
      "params": []
     },
     {
      "type": "Reader",
      "name": "asReader",
      "params": []
     },
     {
      "type": "Writer",
      "name": "asWriter",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equalsIgnoreCase",
      "params": [
       {
        "type": "StrBuilder",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "StrBuilder",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "StringBuffer",
      "name": "toStringBuffer",
      "params": []
     },
     {
      "type": "int",
      "name": "validateRange",
      "params": [
       {
        "type": "int",
        "name": "startIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       }
      ]
     },
     {
      "type": null,
      "name": "validateIndex",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.text",
  "filename": "StrBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "char",
      "name": "DEFAULT_ESCAPE"
     },
     {
      "type": "StrMatcher",
      "name": "DEFAULT_PREFIX"
     },
     {
      "type": "StrMatcher",
      "name": "DEFAULT_SUFFIX"
     },
     {
      "type": "char",
      "name": "escapeChar"
     },
     {
      "type": "StrMatcher",
      "name": "prefixMatcher"
     },
     {
      "type": "StrMatcher",
      "name": "suffixMatcher"
     },
     {
      "type": "StrLookup",
      "name": "variableResolver"
     }
    ],
    "name": "StrSubstitutor",
    "methods": [
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "Object",
        "name": "source"
       },
       {
        "type": "Map",
        "name": "valueMap"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "Object",
        "name": "source"
       },
       {
        "type": "Map",
        "name": "valueMap"
       },
       {
        "type": "String",
        "name": "prefix"
       },
       {
        "type": "String",
        "name": "suffix"
       }
      ]
     },
     {
      "type": "String",
      "name": "replaceSystemProperties",
      "params": [
       {
        "type": "Object",
        "name": "source"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "String",
        "name": "source"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "String",
        "name": "source"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "char",
        "name": "source"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "char",
        "name": "source"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "StringBuffer",
        "name": "source"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "StringBuffer",
        "name": "source"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "StrBuilder",
        "name": "source"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "StrBuilder",
        "name": "source"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "String",
      "name": "replace",
      "params": [
       {
        "type": "Object",
        "name": "source"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "replaceIn",
      "params": [
       {
        "type": "StringBuffer",
        "name": "source"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "replaceIn",
      "params": [
       {
        "type": "StringBuffer",
        "name": "source"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "replaceIn",
      "params": [
       {
        "type": "StrBuilder",
        "name": "source"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "replaceIn",
      "params": [
       {
        "type": "StrBuilder",
        "name": "source"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "substitute",
      "params": [
       {
        "type": "StrBuilder",
        "name": "buf"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ]
     },
     {
      "type": "int",
      "name": "substitute",
      "params": [
       {
        "type": "StrBuilder",
        "name": "buf"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       },
       {
        "type": "List",
        "name": "priorVariables"
       }
      ]
     },
     {
      "type": null,
      "name": "checkCyclicSubstitution",
      "params": [
       {
        "type": "String",
        "name": "varName"
       },
       {
        "type": "List",
        "name": "priorVariables"
       }
      ]
     },
     {
      "type": "String",
      "name": "resolveVariable",
      "params": [
       {
        "type": "String",
        "name": "variableName"
       },
       {
        "type": "StrBuilder",
        "name": "buf"
       },
       {
        "type": "int",
        "name": "startPos"
       },
       {
        "type": "int",
        "name": "endPos"
       }
      ]
     },
     {
      "type": "char",
      "name": "getEscapeChar",
      "params": []
     },
     {
      "type": null,
      "name": "setEscapeChar",
      "params": [
       {
        "type": "char",
        "name": "escapeCharacter"
       }
      ]
     },
     {
      "type": "StrMatcher",
      "name": "getVariablePrefixMatcher",
      "params": []
     },
     {
      "type": "StrSubstitutor",
      "name": "setVariablePrefixMatcher",
      "params": [
       {
        "type": "StrMatcher",
        "name": "prefixMatcher"
       }
      ]
     },
     {
      "type": "StrSubstitutor",
      "name": "setVariablePrefix",
      "params": [
       {
        "type": "char",
        "name": "prefix"
       }
      ]
     },
     {
      "type": "StrSubstitutor",
      "name": "setVariablePrefix",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ]
     },
     {
      "type": "StrMatcher",
      "name": "getVariableSuffixMatcher",
      "params": []
     },
     {
      "type": "StrSubstitutor",
      "name": "setVariableSuffixMatcher",
      "params": [
       {
        "type": "StrMatcher",
        "name": "suffixMatcher"
       }
      ]
     },
     {
      "type": "StrSubstitutor",
      "name": "setVariableSuffix",
      "params": [
       {
        "type": "char",
        "name": "suffix"
       }
      ]
     },
     {
      "type": "StrSubstitutor",
      "name": "setVariableSuffix",
      "params": [
       {
        "type": "String",
        "name": "suffix"
       }
      ]
     },
     {
      "type": "StrLookup",
      "name": "getVariableResolver",
      "params": []
     },
     {
      "type": null,
      "name": "setVariableResolver",
      "params": [
       {
        "type": "StrLookup",
        "name": "variableResolver"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.text",
  "filename": "StrSubstitutor.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "StrLookup",
      "name": "NONE_LOOKUP"
     },
     {
      "type": "StrLookup",
      "name": "SYSTEM_PROPERTIES_LOOKUP"
     }
    ],
    "name": "StrLookup",
    "methods": [
     {
      "type": "StrLookup",
      "name": "noneLookup",
      "params": []
     },
     {
      "type": "StrLookup",
      "name": "systemPropertiesLookup",
      "params": []
     },
     {
      "type": "StrLookup",
      "name": "mapLookup",
      "params": [
       {
        "type": "Map",
        "name": "map"
       }
      ]
     },
     {
      "type": "String",
      "name": "lookup",
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.text",
  "filename": "StrLookup.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "StrTokenizer",
      "name": "CSV_TOKENIZER_PROTOTYPE"
     },
     {
      "type": "StrTokenizer",
      "name": "TSV_TOKENIZER_PROTOTYPE"
     },
     {
      "type": "char",
      "name": "chars"
     },
     {
      "type": "String",
      "name": "tokens"
     },
     {
      "type": "int",
      "name": "tokenPos"
     },
     {
      "type": "StrMatcher",
      "name": "delimMatcher"
     },
     {
      "type": "StrMatcher",
      "name": "quoteMatcher"
     },
     {
      "type": "StrMatcher",
      "name": "ignoredMatcher"
     },
     {
      "type": "StrMatcher",
      "name": "trimmerMatcher"
     },
     {
      "type": "boolean",
      "name": "emptyAsNull"
     },
     {
      "type": "boolean",
      "name": "ignoreEmptyTokens"
     }
    ],
    "name": "StrTokenizer",
    "methods": [
     {
      "type": "StrTokenizer",
      "name": "getCSVClone",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "getCSVInstance",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "getCSVInstance",
      "params": [
       {
        "type": "String",
        "name": "input"
       }
      ]
     },
     {
      "type": "StrTokenizer",
      "name": "getCSVInstance",
      "params": [
       {
        "type": "char",
        "name": "input"
       }
      ]
     },
     {
      "type": "StrTokenizer",
      "name": "getTSVClone",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "getTSVInstance",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "getTSVInstance",
      "params": [
       {
        "type": "String",
        "name": "input"
       }
      ]
     },
     {
      "type": "StrTokenizer",
      "name": "getTSVInstance",
      "params": [
       {
        "type": "char",
        "name": "input"
       }
      ]
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "String",
      "name": "nextToken",
      "params": []
     },
     {
      "type": "String",
      "name": "previousToken",
      "params": []
     },
     {
      "type": "String",
      "name": "getTokenArray",
      "params": []
     },
     {
      "type": "List",
      "name": "getTokenList",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "reset",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "reset",
      "params": [
       {
        "type": "String",
        "name": "input"
       }
      ]
     },
     {
      "type": "StrTokenizer",
      "name": "reset",
      "params": [
       {
        "type": "char",
        "name": "input"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "hasNext",
      "params": []
     },
     {
      "type": "Object",
      "name": "next",
      "params": []
     },
     {
      "type": "int",
      "name": "nextIndex",
      "params": []
     },
     {
      "type": "boolean",
      "name": "hasPrevious",
      "params": []
     },
     {
      "type": "Object",
      "name": "previous",
      "params": []
     },
     {
      "type": "int",
      "name": "previousIndex",
      "params": []
     },
     {
      "type": null,
      "name": "remove",
      "params": []
     },
     {
      "type": null,
      "name": "set",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": null,
      "name": "checkTokenized",
      "params": []
     },
     {
      "type": "List",
      "name": "tokenize",
      "params": [
       {
        "type": "char",
        "name": "chars"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "count"
       }
      ]
     },
     {
      "type": null,
      "name": "addToken",
      "params": [
       {
        "type": "List",
        "name": "list"
       },
       {
        "type": "String",
        "name": "tok"
       }
      ]
     },
     {
      "type": "int",
      "name": "readNextToken",
      "params": [
       {
        "type": "char",
        "name": "chars"
       },
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "len"
       },
       {
        "type": "StrBuilder",
        "name": "workArea"
       },
       {
        "type": "List",
        "name": "tokens"
       }
      ]
     },
     {
      "type": "int",
      "name": "readWithQuotes",
      "params": [
       {
        "type": "char",
        "name": "chars"
       },
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "len"
       },
       {
        "type": "StrBuilder",
        "name": "workArea"
       },
       {
        "type": "List",
        "name": "tokens"
       },
       {
        "type": "int",
        "name": "quoteStart"
       },
       {
        "type": "int",
        "name": "quoteLen"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isQuote",
      "params": [
       {
        "type": "char",
        "name": "chars"
       },
       {
        "type": "int",
        "name": "pos"
       },
       {
        "type": "int",
        "name": "len"
       },
       {
        "type": "int",
        "name": "quoteStart"
       },
       {
        "type": "int",
        "name": "quoteLen"
       }
      ]
     },
     {
      "type": "StrMatcher",
      "name": "getDelimiterMatcher",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "setDelimiterMatcher",
      "params": [
       {
        "type": "StrMatcher",
        "name": "delim"
       }
      ]
     },
     {
      "type": "StrTokenizer",
      "name": "setDelimiterChar",
      "params": [
       {
        "type": "char",
        "name": "delim"
       }
      ]
     },
     {
      "type": "StrTokenizer",
      "name": "setDelimiterString",
      "params": [
       {
        "type": "String",
        "name": "delim"
       }
      ]
     },
     {
      "type": "StrMatcher",
      "name": "getQuoteMatcher",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "setQuoteMatcher",
      "params": [
       {
        "type": "StrMatcher",
        "name": "quote"
       }
      ]
     },
     {
      "type": "StrTokenizer",
      "name": "setQuoteChar",
      "params": [
       {
        "type": "char",
        "name": "quote"
       }
      ]
     },
     {
      "type": "StrMatcher",
      "name": "getIgnoredMatcher",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "setIgnoredMatcher",
      "params": [
       {
        "type": "StrMatcher",
        "name": "ignored"
       }
      ]
     },
     {
      "type": "StrTokenizer",
      "name": "setIgnoredChar",
      "params": [
       {
        "type": "char",
        "name": "ignored"
       }
      ]
     },
     {
      "type": "StrMatcher",
      "name": "getTrimmerMatcher",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "setTrimmerMatcher",
      "params": [
       {
        "type": "StrMatcher",
        "name": "trimmer"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmptyTokenAsNull",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "setEmptyTokenAsNull",
      "params": [
       {
        "type": "boolean",
        "name": "emptyAsNull"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isIgnoreEmptyTokens",
      "params": []
     },
     {
      "type": "StrTokenizer",
      "name": "setIgnoreEmptyTokens",
      "params": [
       {
        "type": "boolean",
        "name": "ignoreEmptyTokens"
       }
      ]
     },
     {
      "type": "String",
      "name": "getContent",
      "params": []
     },
     {
      "type": "Object",
      "name": "clone",
      "params": []
     },
     {
      "type": "Object",
      "name": "cloneReset",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.text",
  "filename": "StrTokenizer.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "StrMatcher",
      "name": "COMMA_MATCHER"
     },
     {
      "type": "StrMatcher",
      "name": "TAB_MATCHER"
     },
     {
      "type": "StrMatcher",
      "name": "SPACE_MATCHER"
     },
     {
      "type": "StrMatcher",
      "name": "SPLIT_MATCHER"
     },
     {
      "type": "StrMatcher",
      "name": "TRIM_MATCHER"
     },
     {
      "type": "StrMatcher",
      "name": "SINGLE_QUOTE_MATCHER"
     },
     {
      "type": "StrMatcher",
      "name": "DOUBLE_QUOTE_MATCHER"
     },
     {
      "type": "StrMatcher",
      "name": "QUOTE_MATCHER"
     },
     {
      "type": "StrMatcher",
      "name": "NONE_MATCHER"
     }
    ],
    "name": "StrMatcher",
    "methods": [
     {
      "type": "StrMatcher",
      "name": "commaMatcher",
      "params": []
     },
     {
      "type": "StrMatcher",
      "name": "tabMatcher",
      "params": []
     },
     {
      "type": "StrMatcher",
      "name": "spaceMatcher",
      "params": []
     },
     {
      "type": "StrMatcher",
      "name": "splitMatcher",
      "params": []
     },
     {
      "type": "StrMatcher",
      "name": "trimMatcher",
      "params": []
     },
     {
      "type": "StrMatcher",
      "name": "singleQuoteMatcher",
      "params": []
     },
     {
      "type": "StrMatcher",
      "name": "doubleQuoteMatcher",
      "params": []
     },
     {
      "type": "StrMatcher",
      "name": "quoteMatcher",
      "params": []
     },
     {
      "type": "StrMatcher",
      "name": "noneMatcher",
      "params": []
     },
     {
      "type": "StrMatcher",
      "name": "charMatcher",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     },
     {
      "type": "StrMatcher",
      "name": "charSetMatcher",
      "params": [
       {
        "type": "char",
        "name": "chars"
       }
      ]
     },
     {
      "type": "StrMatcher",
      "name": "charSetMatcher",
      "params": [
       {
        "type": "String",
        "name": "chars"
       }
      ]
     },
     {
      "type": "StrMatcher",
      "name": "stringMatcher",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "isMatch",
      "params": [
       {
        "type": "char",
        "name": "buffer"
       },
       {
        "type": "int",
        "name": "pos"
       },
       {
        "type": "int",
        "name": "bufferStart"
       },
       {
        "type": "int",
        "name": "bufferEnd"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.apache.commons.lang.text",
  "filename": "StrMatcher.java"
 }
]