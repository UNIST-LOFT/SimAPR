[
 {
  "classes": [],
  "package_name": "org.mockito",
  "filename": "Spy.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockingProgress",
      "name": "MOCKING_PROGRESS"
     }
    ],
    "name": "Matchers",
    "methods": [
     {
      "type": "boolean",
      "name": "anyBoolean",
      "params": []
     },
     {
      "type": "byte",
      "name": "anyByte",
      "params": []
     },
     {
      "type": "char",
      "name": "anyChar",
      "params": []
     },
     {
      "type": "int",
      "name": "anyInt",
      "params": []
     },
     {
      "type": "long",
      "name": "anyLong",
      "params": []
     },
     {
      "type": "float",
      "name": "anyFloat",
      "params": []
     },
     {
      "type": "double",
      "name": "anyDouble",
      "params": []
     },
     {
      "type": "short",
      "name": "anyShort",
      "params": []
     },
     {
      "type": "T",
      "name": "anyObject",
      "params": []
     },
     {
      "type": "T",
      "name": "anyVararg",
      "params": []
     },
     {
      "type": "T",
      "name": "any",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "T",
      "name": "any",
      "params": []
     },
     {
      "type": "String",
      "name": "anyString",
      "params": []
     },
     {
      "type": "List",
      "name": "anyList",
      "params": []
     },
     {
      "type": "List",
      "name": "anyListOf",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "Set",
      "name": "anySet",
      "params": []
     },
     {
      "type": "Set",
      "name": "anySetOf",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "Map",
      "name": "anyMap",
      "params": []
     },
     {
      "type": "Map",
      "name": "anyMapOf",
      "params": [
       {
        "type": "Class",
        "name": "keyClazz"
       },
       {
        "type": "Class",
        "name": "valueClazz"
       }
      ]
     },
     {
      "type": "Collection",
      "name": "anyCollection",
      "params": []
     },
     {
      "type": "Collection",
      "name": "anyCollectionOf",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "T",
      "name": "isA",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "eq",
      "params": [
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": "byte",
      "name": "eq",
      "params": [
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": "char",
      "name": "eq",
      "params": [
       {
        "type": "char",
        "name": "value"
       }
      ]
     },
     {
      "type": "double",
      "name": "eq",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "float",
      "name": "eq",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "eq",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "eq",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "short",
      "name": "eq",
      "params": [
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "T",
      "name": "eq",
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ]
     },
     {
      "type": "T",
      "name": "refEq",
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "T",
      "name": "same",
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ]
     },
     {
      "type": "Object",
      "name": "isNull",
      "params": []
     },
     {
      "type": "T",
      "name": "isNull",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "Object",
      "name": "notNull",
      "params": []
     },
     {
      "type": "T",
      "name": "notNull",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "Object",
      "name": "isNotNull",
      "params": []
     },
     {
      "type": "T",
      "name": "isNotNull",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "String",
      "name": "contains",
      "params": [
       {
        "type": "String",
        "name": "substring"
       }
      ]
     },
     {
      "type": "String",
      "name": "matches",
      "params": [
       {
        "type": "String",
        "name": "regex"
       }
      ]
     },
     {
      "type": "String",
      "name": "endsWith",
      "params": [
       {
        "type": "String",
        "name": "suffix"
       }
      ]
     },
     {
      "type": "String",
      "name": "startsWith",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ]
     },
     {
      "type": "T",
      "name": "argThat",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "char",
      "name": "charThat",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "booleanThat",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "byte",
      "name": "byteThat",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "short",
      "name": "shortThat",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "int",
      "name": "intThat",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "long",
      "name": "longThat",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "float",
      "name": "floatThat",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "double",
      "name": "doubleThat",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "HandyReturnValues",
      "name": "reportMatcher",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "Matchers.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockSettings",
    "methods": [
     {
      "type": "MockSettings",
      "name": "extraInterfaces",
      "params": [
       {
        "type": "Class",
        "name": "interfaces"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "name",
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "spiedInstance",
      "params": [
       {
        "type": "Object",
        "name": "instance"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "defaultAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "defaultAnswer"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "serializable",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "serializable",
      "params": [
       {
        "type": "SerializableMode",
        "name": "mode"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "verboseLogging",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "invocationListeners",
      "params": [
       {
        "type": "InvocationListener",
        "name": "listeners"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "stubOnly",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "useConstructor",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "outerInstance",
      "params": [
       {
        "type": "Object",
        "name": "outerClassInstance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "MockSettings.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "BDDMockito",
    "methods": [
     {
      "type": "BDDMyOngoingStubbing",
      "name": "given",
      "params": [
       {
        "type": "T",
        "name": "methodCall"
       }
      ]
     },
     {
      "type": "Then",
      "name": "then",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "BDDStubber",
      "name": "willThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "toBeThrown"
       }
      ]
     },
     {
      "type": "BDDStubber",
      "name": "willThrow",
      "params": [
       {
        "type": "Class",
        "name": "toBeThrown"
       }
      ]
     },
     {
      "type": "BDDStubber",
      "name": "willAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "BDDStubber",
      "name": "willDoNothing",
      "params": []
     },
     {
      "type": "BDDStubber",
      "name": "willReturn",
      "params": [
       {
        "type": "Object",
        "name": "toBeReturned"
       }
      ]
     },
     {
      "type": "BDDStubber",
      "name": "willCallRealMethod",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "BDDMockito.java"
 },
 {
  "classes": [],
  "package_name": "org.mockito",
  "filename": "Incubating.java"
 },
 {
  "classes": [],
  "package_name": "org.mockito",
  "filename": "Mock.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Answer",
      "name": "implementation"
     }
    ],
    "name": "Answers",
    "methods": [
     {
      "type": "Answer",
      "name": "get",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "Answers.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockitoDebugger",
    "methods": [
     {
      "type": "String",
      "name": "printInvocations",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "MockitoDebugger.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "ArgumentMatcher",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "argument"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "ArgumentMatcher.java"
 },
 {
  "classes": [],
  "package_name": "org.mockito",
  "filename": "InjectMocks.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InOrder",
    "methods": [
     {
      "type": "T",
      "name": "verify",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "T",
      "name": "verify",
      "params": [
       {
        "type": "T",
        "name": "mock"
       },
       {
        "type": "VerificationMode",
        "name": "mode"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyNoMoreInteractions",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "InOrder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockingProgress",
      "name": "MOCKING_PROGRESS"
     }
    ],
    "name": "AdditionalMatchers",
    "methods": [
     {
      "type": "T",
      "name": "geq",
      "params": [
       {
        "type": "Comparable",
        "name": "value"
       }
      ]
     },
     {
      "type": "byte",
      "name": "geq",
      "params": [
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": "double",
      "name": "geq",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "float",
      "name": "geq",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "geq",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "geq",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "short",
      "name": "geq",
      "params": [
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "T",
      "name": "leq",
      "params": [
       {
        "type": "Comparable",
        "name": "value"
       }
      ]
     },
     {
      "type": "byte",
      "name": "leq",
      "params": [
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": "double",
      "name": "leq",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "float",
      "name": "leq",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "leq",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "leq",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "short",
      "name": "leq",
      "params": [
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "T",
      "name": "gt",
      "params": [
       {
        "type": "Comparable",
        "name": "value"
       }
      ]
     },
     {
      "type": "byte",
      "name": "gt",
      "params": [
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": "double",
      "name": "gt",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "float",
      "name": "gt",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "gt",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "gt",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "short",
      "name": "gt",
      "params": [
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "T",
      "name": "lt",
      "params": [
       {
        "type": "Comparable",
        "name": "value"
       }
      ]
     },
     {
      "type": "byte",
      "name": "lt",
      "params": [
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": "double",
      "name": "lt",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "float",
      "name": "lt",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "lt",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "lt",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "short",
      "name": "lt",
      "params": [
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "T",
      "name": "cmpEq",
      "params": [
       {
        "type": "Comparable",
        "name": "value"
       }
      ]
     },
     {
      "type": "String",
      "name": "find",
      "params": [
       {
        "type": "String",
        "name": "regex"
       }
      ]
     },
     {
      "type": "T",
      "name": "aryEq",
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ]
     },
     {
      "type": "short",
      "name": "aryEq",
      "params": [
       {
        "type": "short",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "aryEq",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "aryEq",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "float",
      "name": "aryEq",
      "params": [
       {
        "type": "float",
        "name": "value"
       }
      ]
     },
     {
      "type": "double",
      "name": "aryEq",
      "params": [
       {
        "type": "double",
        "name": "value"
       }
      ]
     },
     {
      "type": "char",
      "name": "aryEq",
      "params": [
       {
        "type": "char",
        "name": "value"
       }
      ]
     },
     {
      "type": "byte",
      "name": "aryEq",
      "params": [
       {
        "type": "byte",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "aryEq",
      "params": [
       {
        "type": "boolean",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "and",
      "params": [
       {
        "type": "boolean",
        "name": "first"
       },
       {
        "type": "boolean",
        "name": "second"
       }
      ]
     },
     {
      "type": "byte",
      "name": "and",
      "params": [
       {
        "type": "byte",
        "name": "first"
       },
       {
        "type": "byte",
        "name": "second"
       }
      ]
     },
     {
      "type": "char",
      "name": "and",
      "params": [
       {
        "type": "char",
        "name": "first"
       },
       {
        "type": "char",
        "name": "second"
       }
      ]
     },
     {
      "type": "double",
      "name": "and",
      "params": [
       {
        "type": "double",
        "name": "first"
       },
       {
        "type": "double",
        "name": "second"
       }
      ]
     },
     {
      "type": "float",
      "name": "and",
      "params": [
       {
        "type": "float",
        "name": "first"
       },
       {
        "type": "float",
        "name": "second"
       }
      ]
     },
     {
      "type": "int",
      "name": "and",
      "params": [
       {
        "type": "int",
        "name": "first"
       },
       {
        "type": "int",
        "name": "second"
       }
      ]
     },
     {
      "type": "long",
      "name": "and",
      "params": [
       {
        "type": "long",
        "name": "first"
       },
       {
        "type": "long",
        "name": "second"
       }
      ]
     },
     {
      "type": "short",
      "name": "and",
      "params": [
       {
        "type": "short",
        "name": "first"
       },
       {
        "type": "short",
        "name": "second"
       }
      ]
     },
     {
      "type": "T",
      "name": "and",
      "params": [
       {
        "type": "T",
        "name": "first"
       },
       {
        "type": "T",
        "name": "second"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "or",
      "params": [
       {
        "type": "boolean",
        "name": "first"
       },
       {
        "type": "boolean",
        "name": "second"
       }
      ]
     },
     {
      "type": "T",
      "name": "or",
      "params": [
       {
        "type": "T",
        "name": "first"
       },
       {
        "type": "T",
        "name": "second"
       }
      ]
     },
     {
      "type": "short",
      "name": "or",
      "params": [
       {
        "type": "short",
        "name": "first"
       },
       {
        "type": "short",
        "name": "second"
       }
      ]
     },
     {
      "type": "long",
      "name": "or",
      "params": [
       {
        "type": "long",
        "name": "first"
       },
       {
        "type": "long",
        "name": "second"
       }
      ]
     },
     {
      "type": "int",
      "name": "or",
      "params": [
       {
        "type": "int",
        "name": "first"
       },
       {
        "type": "int",
        "name": "second"
       }
      ]
     },
     {
      "type": "float",
      "name": "or",
      "params": [
       {
        "type": "float",
        "name": "first"
       },
       {
        "type": "float",
        "name": "second"
       }
      ]
     },
     {
      "type": "double",
      "name": "or",
      "params": [
       {
        "type": "double",
        "name": "first"
       },
       {
        "type": "double",
        "name": "second"
       }
      ]
     },
     {
      "type": "char",
      "name": "or",
      "params": [
       {
        "type": "char",
        "name": "first"
       },
       {
        "type": "char",
        "name": "second"
       }
      ]
     },
     {
      "type": "byte",
      "name": "or",
      "params": [
       {
        "type": "byte",
        "name": "first"
       },
       {
        "type": "byte",
        "name": "second"
       }
      ]
     },
     {
      "type": "T",
      "name": "not",
      "params": [
       {
        "type": "T",
        "name": "first"
       }
      ]
     },
     {
      "type": "short",
      "name": "not",
      "params": [
       {
        "type": "short",
        "name": "first"
       }
      ]
     },
     {
      "type": "int",
      "name": "not",
      "params": [
       {
        "type": "int",
        "name": "first"
       }
      ]
     },
     {
      "type": "long",
      "name": "not",
      "params": [
       {
        "type": "long",
        "name": "first"
       }
      ]
     },
     {
      "type": "float",
      "name": "not",
      "params": [
       {
        "type": "float",
        "name": "first"
       }
      ]
     },
     {
      "type": "double",
      "name": "not",
      "params": [
       {
        "type": "double",
        "name": "first"
       }
      ]
     },
     {
      "type": "char",
      "name": "not",
      "params": [
       {
        "type": "char",
        "name": "first"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "not",
      "params": [
       {
        "type": "boolean",
        "name": "first"
       }
      ]
     },
     {
      "type": "byte",
      "name": "not",
      "params": [
       {
        "type": "byte",
        "name": "first"
       }
      ]
     },
     {
      "type": "double",
      "name": "eq",
      "params": [
       {
        "type": "double",
        "name": "value"
       },
       {
        "type": "double",
        "name": "delta"
       }
      ]
     },
     {
      "type": "float",
      "name": "eq",
      "params": [
       {
        "type": "float",
        "name": "value"
       },
       {
        "type": "float",
        "name": "delta"
       }
      ]
     },
     {
      "type": "HandyReturnValues",
      "name": "reportMatcher",
      "params": [
       {
        "type": "ArgumentMatcher",
        "name": "matcher"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "AdditionalMatchers.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReturnValues",
    "methods": [
     {
      "type": "Object",
      "name": "valueFor",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "ReturnValues.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ReturnsArgumentAt",
      "name": "RETURNS_FIRST_ARGUMENT"
     },
     {
      "type": "ReturnsArgumentAt",
      "name": "RETURNS_SECOND_ARGUMENT"
     },
     {
      "type": "ReturnsArgumentAt",
      "name": "RETURNS_LAST_ARGUMENT"
     }
    ],
    "name": "AdditionalAnswers",
    "methods": [
     {
      "type": "Answer",
      "name": "returnsFirstArg",
      "params": []
     },
     {
      "type": "Answer",
      "name": "returnsSecondArg",
      "params": []
     },
     {
      "type": "Answer",
      "name": "returnsLastArg",
      "params": []
     },
     {
      "type": "Answer",
      "name": "returnsArgAt",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ]
     },
     {
      "type": "Answer",
      "name": "delegatesTo",
      "params": [
       {
        "type": "Object",
        "name": "delegate"
       }
      ]
     },
     {
      "type": "Answer",
      "name": "returnsElementsOf",
      "params": [
       {
        "type": "Collection",
        "name": "elements"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "AdditionalAnswers.java"
 },
 {
  "classes": [],
  "package_name": "org.mockito",
  "filename": "Captor.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockitoAnnotations",
    "methods": [
     {
      "type": null,
      "name": "initMocks",
      "params": [
       {
        "type": "Object",
        "name": "testClass"
       }
      ]
     },
     {
      "type": null,
      "name": "scanDeprecatedWay",
      "params": [
       {
        "type": "AnnotationEngine",
        "name": "annotationEngine"
       },
       {
        "type": "Object",
        "name": "testClass"
       },
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": null,
      "name": "processAnnotationDeprecatedWay",
      "params": [
       {
        "type": "AnnotationEngine",
        "name": "annotationEngine"
       },
       {
        "type": "Object",
        "name": "testClass"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "throwIfAlreadyAssigned",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "boolean",
        "name": "alreadyAssigned"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "MockitoAnnotations.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockingDetails",
    "methods": [
     {
      "type": "boolean",
      "name": "isMock",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSpy",
      "params": []
     },
     {
      "type": "Collection",
      "name": "getInvocations",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "MockingDetails.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockitoCore",
      "name": "MOCKITO_CORE"
     },
     {
      "type": "Answer",
      "name": "RETURNS_DEFAULTS"
     },
     {
      "type": "Answer",
      "name": "RETURNS_SMART_NULLS"
     },
     {
      "type": "Answer",
      "name": "RETURNS_MOCKS"
     },
     {
      "type": "Answer",
      "name": "RETURNS_DEEP_STUBS"
     },
     {
      "type": "Answer",
      "name": "CALLS_REAL_METHODS"
     }
    ],
    "name": "Mockito",
    "methods": [
     {
      "type": "T",
      "name": "mock",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       }
      ]
     },
     {
      "type": "T",
      "name": "mock",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       },
       {
        "type": "String",
        "name": "name"
       }
      ]
     },
     {
      "type": "MockingDetails",
      "name": "mockingDetails",
      "params": [
       {
        "type": "Object",
        "name": "toInspect"
       }
      ]
     },
     {
      "type": "T",
      "name": "mock",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       },
       {
        "type": "ReturnValues",
        "name": "returnValues"
       }
      ]
     },
     {
      "type": "T",
      "name": "mock",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       },
       {
        "type": "Answer",
        "name": "defaultAnswer"
       }
      ]
     },
     {
      "type": "T",
      "name": "mock",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       },
       {
        "type": "MockSettings",
        "name": "mockSettings"
       }
      ]
     },
     {
      "type": "T",
      "name": "spy",
      "params": [
       {
        "type": "T",
        "name": "object"
       }
      ]
     },
     {
      "type": "T",
      "name": "spy",
      "params": [
       {
        "type": "Class",
        "name": "classToSpy"
       }
      ]
     },
     {
      "type": "DeprecatedOngoingStubbing",
      "name": "stub",
      "params": [
       {
        "type": "T",
        "name": "methodCall"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "when",
      "params": [
       {
        "type": "T",
        "name": "methodCall"
       }
      ]
     },
     {
      "type": "T",
      "name": "verify",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "T",
      "name": "verify",
      "params": [
       {
        "type": "T",
        "name": "mock"
       },
       {
        "type": "VerificationMode",
        "name": "mode"
       }
      ]
     },
     {
      "type": null,
      "name": "reset",
      "params": [
       {
        "type": "T",
        "name": "mocks"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyNoMoreInteractions",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyZeroInteractions",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "VoidMethodStubbable",
      "name": "stubVoid",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "toBeThrown"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doThrow",
      "params": [
       {
        "type": "Class",
        "name": "toBeThrown"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doCallRealMethod",
      "params": []
     },
     {
      "type": "Stubber",
      "name": "doAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doNothing",
      "params": []
     },
     {
      "type": "Stubber",
      "name": "doReturn",
      "params": [
       {
        "type": "Object",
        "name": "toBeReturned"
       }
      ]
     },
     {
      "type": "InOrder",
      "name": "inOrder",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "Object",
      "name": "ignoreStubs",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "times",
      "params": [
       {
        "type": "int",
        "name": "wantedNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "never",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atLeastOnce",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atLeast",
      "params": [
       {
        "type": "int",
        "name": "minNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "atMost",
      "params": [
       {
        "type": "int",
        "name": "maxNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "calls",
      "params": [
       {
        "type": "int",
        "name": "wantedNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "only",
      "params": []
     },
     {
      "type": "VerificationWithTimeout",
      "name": "timeout",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "VerificationAfterDelay",
      "name": "after",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "validateMockitoUsage",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "withSettings",
      "params": []
     },
     {
      "type": "MockitoDebugger",
      "name": "debug",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "Mockito.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "HandyReturnValues",
      "name": "handyReturnValues"
     },
     {
      "type": "CapturingMatcher",
      "name": "capturingMatcher"
     },
     {
      "type": "Class",
      "name": "clazz"
     }
    ],
    "name": "ArgumentCaptor",
    "methods": [
     {
      "type": "T",
      "name": "capture",
      "params": []
     },
     {
      "type": "T",
      "name": "getValue",
      "params": []
     },
     {
      "type": "List",
      "name": "getAllValues",
      "params": []
     },
     {
      "type": "ArgumentCaptor",
      "name": "forClass",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito",
  "filename": "ArgumentCaptor.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VerificationMode",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.verification",
  "filename": "VerificationMode.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Timeout",
    "methods": [
     {
      "type": "VerificationMode",
      "name": "copySelfWithNewVerificationMode",
      "params": [
       {
        "type": "VerificationMode",
        "name": "newVerificationMode"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "atMost",
      "params": [
       {
        "type": "int",
        "name": "maxNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "never",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.verification",
  "filename": "Timeout.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VerificationWithTimeout",
    "methods": [
     {
      "type": "VerificationMode",
      "name": "times",
      "params": [
       {
        "type": "int",
        "name": "wantedNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "never",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atLeastOnce",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atLeast",
      "params": [
       {
        "type": "int",
        "name": "minNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "atMost",
      "params": [
       {
        "type": "int",
        "name": "maxNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "only",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.verification",
  "filename": "VerificationWithTimeout.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "After",
    "methods": [
     {
      "type": "VerificationMode",
      "name": "copySelfWithNewVerificationMode",
      "params": [
       {
        "type": "VerificationMode",
        "name": "verificationMode"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.verification",
  "filename": "After.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "WrapperType",
      "name": "wrappedVerification"
     }
    ],
    "name": "VerificationWrapper",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "copySelfWithNewVerificationMode",
      "params": [
       {
        "type": "VerificationMode",
        "name": "verificationMode"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "times",
      "params": [
       {
        "type": "int",
        "name": "wantedNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "never",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atLeastOnce",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atLeast",
      "params": [
       {
        "type": "int",
        "name": "minNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "atMost",
      "params": [
       {
        "type": "int",
        "name": "maxNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "only",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.verification",
  "filename": "VerificationWrapper.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VerificationAfterDelay",
    "methods": [
     {
      "type": "VerificationMode",
      "name": "times",
      "params": [
       {
        "type": "int",
        "name": "wantedNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "never",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atLeastOnce",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atLeast",
      "params": [
       {
        "type": "int",
        "name": "minNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "atMost",
      "params": [
       {
        "type": "int",
        "name": "maxNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "only",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.verification",
  "filename": "VerificationAfterDelay.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockitoRule",
    "methods": []
   }
  ],
  "package_name": "org.mockito.junit",
  "filename": "MockitoRule.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockitoJUnit",
    "methods": [
     {
      "type": "MockitoRule",
      "name": "rule",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.junit",
  "filename": "MockitoJUnit.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "JUnitRule",
      "name": "jUnitRule"
     }
    ],
    "name": "MockitoJUnitRule",
    "methods": [
     {
      "type": "Statement",
      "name": "apply",
      "params": [
       {
        "type": "Statement",
        "name": "base"
       },
       {
        "type": "FrameworkMethod",
        "name": "method"
       },
       {
        "type": "Object",
        "name": "target"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.junit",
  "filename": "MockitoJUnitRule.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "IMockitoConfiguration",
    "methods": [
     {
      "type": "ReturnValues",
      "name": "getReturnValues",
      "params": []
     },
     {
      "type": "Answer",
      "name": "getDefaultAnswer",
      "params": []
     },
     {
      "type": "AnnotationEngine",
      "name": "getAnnotationEngine",
      "params": []
     },
     {
      "type": "boolean",
      "name": "cleansStackTrace",
      "params": []
     },
     {
      "type": "boolean",
      "name": "enableClassCache",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.configuration",
  "filename": "IMockitoConfiguration.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AnnotationEngine",
    "methods": [
     {
      "type": "Object",
      "name": "createMockFor",
      "params": [
       {
        "type": "Annotation",
        "name": "annotation"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "process",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "Object",
        "name": "testInstance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.configuration",
  "filename": "AnnotationEngine.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DefaultMockitoConfiguration",
    "methods": [
     {
      "type": "ReturnValues",
      "name": "getReturnValues",
      "params": []
     },
     {
      "type": "Answer",
      "name": "getDefaultAnswer",
      "params": []
     },
     {
      "type": "AnnotationEngine",
      "name": "getAnnotationEngine",
      "params": []
     },
     {
      "type": "boolean",
      "name": "cleansStackTrace",
      "params": []
     },
     {
      "type": "boolean",
      "name": "enableClassCache",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.configuration",
  "filename": "DefaultMockitoConfiguration.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InvocationListener",
    "methods": [
     {
      "type": null,
      "name": "reportInvocation",
      "params": [
       {
        "type": "MethodInvocationReport",
        "name": "methodInvocationReport"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.listeners",
  "filename": "InvocationListener.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MethodInvocationReport",
    "methods": [
     {
      "type": "DescribedInvocation",
      "name": "getInvocation",
      "params": []
     },
     {
      "type": "Object",
      "name": "getReturnedValue",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowable",
      "params": []
     },
     {
      "type": "boolean",
      "name": "threwException",
      "params": []
     },
     {
      "type": "String",
      "name": "getLocationOfStubbing",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.listeners",
  "filename": "MethodInvocationReport.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Answer",
    "methods": [
     {
      "type": "T",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.stubbing",
  "filename": "Answer.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VoidMethodStubbable",
    "methods": [
     {
      "type": "VoidMethodStubbable",
      "name": "toThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "VoidMethodStubbable",
      "name": "toReturn",
      "params": []
     },
     {
      "type": "VoidMethodStubbable",
      "name": "toAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "T",
      "name": "on",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.stubbing",
  "filename": "VoidMethodStubbable.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DeprecatedOngoingStubbing",
    "methods": [
     {
      "type": "DeprecatedOngoingStubbing",
      "name": "toReturn",
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ]
     },
     {
      "type": "DeprecatedOngoingStubbing",
      "name": "toThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "DeprecatedOngoingStubbing",
      "name": "toAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.stubbing",
  "filename": "DeprecatedOngoingStubbing.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "OngoingStubbing",
    "methods": [
     {
      "type": "OngoingStubbing",
      "name": "thenReturn",
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenReturn",
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "T",
        "name": "values"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "throwables"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenThrow",
      "params": [
       {
        "type": "Class",
        "name": "throwableClasses"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenCallRealMethod",
      "params": []
     },
     {
      "type": "OngoingStubbing",
      "name": "thenAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "then",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "M",
      "name": "getMock",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.stubbing",
  "filename": "OngoingStubbing.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Stubber",
    "methods": [
     {
      "type": "T",
      "name": "when",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "toBeThrown"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doThrow",
      "params": [
       {
        "type": "Class",
        "name": "toBeThrown"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doNothing",
      "params": []
     },
     {
      "type": "Stubber",
      "name": "doReturn",
      "params": [
       {
        "type": "Object",
        "name": "toBeReturned"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doCallRealMethod",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.stubbing",
  "filename": "Stubber.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReturnsElementsOf",
    "methods": []
   }
  ],
  "package_name": "org.mockito.stubbing.answers",
  "filename": "ReturnsElementsOf.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockCreationSettings",
    "methods": [
     {
      "type": "Class",
      "name": "getTypeToMock",
      "params": []
     },
     {
      "type": "Set",
      "name": "getExtraInterfaces",
      "params": []
     },
     {
      "type": "MockName",
      "name": "getMockName",
      "params": []
     },
     {
      "type": "Answer",
      "name": "getDefaultAnswer",
      "params": []
     },
     {
      "type": "Object",
      "name": "getSpiedInstance",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSerializable",
      "params": []
     },
     {
      "type": "SerializableMode",
      "name": "getSerializableMode",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isStubOnly",
      "params": []
     },
     {
      "type": "List",
      "name": "getInvocationListeners",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isUsingConstructor",
      "params": []
     },
     {
      "type": "Object",
      "name": "getOuterClassInstance",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.mock",
  "filename": "MockCreationSettings.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockName",
    "methods": [
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isDefault",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.mock",
  "filename": "MockName.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "SerializableMode",
    "methods": []
   }
  ],
  "package_name": "org.mockito.mock",
  "filename": "SerializableMode.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "PluginSwitch",
    "methods": [
     {
      "type": "boolean",
      "name": "isEnabled",
      "params": [
       {
        "type": "String",
        "name": "pluginClassName"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.plugins",
  "filename": "PluginSwitch.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockMaker",
    "methods": [
     {
      "type": "T",
      "name": "createMock",
      "params": [
       {
        "type": "MockCreationSettings",
        "name": "settings"
       },
       {
        "type": "MockHandler",
        "name": "handler"
       }
      ]
     },
     {
      "type": "MockHandler",
      "name": "getHandler",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": null,
      "name": "resetMock",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "MockHandler",
        "name": "newHandler"
       },
       {
        "type": "MockCreationSettings",
        "name": "settings"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.plugins",
  "filename": "MockMaker.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "StackTraceCleanerProvider",
    "methods": [
     {
      "type": "StackTraceCleaner",
      "name": "getStackTraceCleaner",
      "params": [
       {
        "type": "StackTraceCleaner",
        "name": "defaultCleaner"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.plugins",
  "filename": "StackTraceCleanerProvider.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InternalMockHandler",
    "methods": [
     {
      "type": "MockCreationSettings",
      "name": "getMockSettings",
      "params": []
     },
     {
      "type": "VoidMethodStubbable",
      "name": "voidMethodStubbable",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": null,
      "name": "setAnswersForStubbing",
      "params": [
       {
        "type": "List",
        "name": "answers"
       }
      ]
     },
     {
      "type": "InvocationContainer",
      "name": "getInvocationContainer",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal",
  "filename": "InternalMockHandler.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockitoCore",
      "name": "mockitoCore"
     },
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "List",
      "name": "mocksToBeVerifiedInOrder"
     },
     {
      "type": "InOrderContext",
      "name": "inOrderContext"
     }
    ],
    "name": "InOrderImpl",
    "methods": [
     {
      "type": "List",
      "name": "getMocksToBeVerifiedInOrder",
      "params": []
     },
     {
      "type": "T",
      "name": "verify",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "T",
      "name": "verify",
      "params": [
       {
        "type": "T",
        "name": "mock"
       },
       {
        "type": "VerificationMode",
        "name": "mode"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isVerified",
      "params": [
       {
        "type": "Invocation",
        "name": "i"
       }
      ]
     },
     {
      "type": null,
      "name": "markVerified",
      "params": [
       {
        "type": "Invocation",
        "name": "i"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyNoMoreInteractions",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal",
  "filename": "InOrderImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "MockUtil",
      "name": "mockUtil"
     },
     {
      "type": "MockingProgress",
      "name": "mockingProgress"
     }
    ],
    "name": "MockitoCore",
    "methods": [
     {
      "type": "boolean",
      "name": "isTypeMockable",
      "params": [
       {
        "type": "Class",
        "name": "typeToMock"
       }
      ]
     },
     {
      "type": "T",
      "name": "mock",
      "params": [
       {
        "type": "Class",
        "name": "typeToMock"
       },
       {
        "type": "MockSettings",
        "name": "settings"
       }
      ]
     },
     {
      "type": "IOngoingStubbing",
      "name": "stub",
      "params": []
     },
     {
      "type": "DeprecatedOngoingStubbing",
      "name": "stub",
      "params": [
       {
        "type": "T",
        "name": "methodCall"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "when",
      "params": [
       {
        "type": "T",
        "name": "methodCall"
       }
      ]
     },
     {
      "type": "T",
      "name": "verify",
      "params": [
       {
        "type": "T",
        "name": "mock"
       },
       {
        "type": "VerificationMode",
        "name": "mode"
       }
      ]
     },
     {
      "type": null,
      "name": "reset",
      "params": [
       {
        "type": "T",
        "name": "mocks"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyNoMoreInteractions",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyNoMoreInteractionsInOrder",
      "params": [
       {
        "type": "List",
        "name": "mocks"
       },
       {
        "type": "InOrderContext",
        "name": "inOrderContext"
       }
      ]
     },
     {
      "type": null,
      "name": "assertMocksNotEmpty",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "InOrder",
      "name": "inOrder",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "VoidMethodStubbable",
      "name": "stubVoid",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": null,
      "name": "validateMockitoUsage",
      "params": []
     },
     {
      "type": "Invocation",
      "name": "getLastInvocation",
      "params": []
     },
     {
      "type": "Object",
      "name": "ignoreStubs",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "MockingDetails",
      "name": "mockingDetails",
      "params": [
       {
        "type": "Object",
        "name": "toInspect"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal",
  "filename": "MockitoCore.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Comparable",
      "name": "wanted"
     }
    ],
    "name": "CompareTo",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "matchResult",
      "params": [
       {
        "type": "int",
        "name": "result"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "CompareTo.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "wanted"
     }
    ],
    "name": "Same",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     },
     {
      "type": null,
      "name": "appendQuoting",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Same.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "GreaterThan",
    "methods": [
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "matchResult",
      "params": [
       {
        "type": "int",
        "name": "result"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "GreaterThan.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Null",
      "name": "NULL"
     }
    ],
    "name": "Null",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Null.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "LessThan",
    "methods": [
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "matchResult",
      "params": [
       {
        "type": "int",
        "name": "result"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "LessThan.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "LessOrEqual",
    "methods": [
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "matchResult",
      "params": [
       {
        "type": "int",
        "name": "result"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "LessOrEqual.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Matcher",
      "name": "first"
     }
    ],
    "name": "Not",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Not.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Any",
      "name": "ANY"
     }
    ],
    "name": "Any",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Any.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "List",
      "name": "matchers"
     }
    ],
    "name": "And",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "And.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "wanted"
     }
    ],
    "name": "Equals",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     },
     {
      "type": "String",
      "name": "describe",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "String",
      "name": "quoting",
      "params": []
     },
     {
      "type": "Object",
      "name": "getWanted",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "SelfDescribing",
      "name": "withExtraTypeInfo",
      "params": []
     },
     {
      "type": "boolean",
      "name": "typeMatches",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Equals.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "prefix"
     }
    ],
    "name": "StartsWith",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "StartsWith.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "CapturesArguments",
    "methods": [
     {
      "type": null,
      "name": "captureFrom",
      "params": [
       {
        "type": "Object",
        "name": "argument"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "CapturesArguments.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MatcherDecorator",
    "methods": [
     {
      "type": "Matcher",
      "name": "getActualMatcher",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "MatcherDecorator.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "List",
      "name": "matchers"
     }
    ],
    "name": "Or",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Or.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MatchersPrinter",
    "methods": [
     {
      "type": "String",
      "name": "getArgumentsLine",
      "params": [
       {
        "type": "List",
        "name": "matchers"
       },
       {
        "type": "PrintSettings",
        "name": "printSettings"
       }
      ]
     },
     {
      "type": "String",
      "name": "getArgumentsBlock",
      "params": [
       {
        "type": "List",
        "name": "matchers"
       },
       {
        "type": "PrintSettings",
        "name": "printSettings"
       }
      ]
     },
     {
      "type": "List",
      "name": "applyPrintSettings",
      "params": [
       {
        "type": "List",
        "name": "matchers"
       },
       {
        "type": "PrintSettings",
        "name": "printSettings"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "MatchersPrinter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "LinkedList",
      "name": "arguments"
     }
    ],
    "name": "CapturingMatcher",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "argument"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     },
     {
      "type": "T",
      "name": "getLastValue",
      "params": []
     },
     {
      "type": "List",
      "name": "getAllValues",
      "params": []
     },
     {
      "type": null,
      "name": "captureFrom",
      "params": [
       {
        "type": "Object",
        "name": "argument"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "CapturingMatcher.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Equality",
    "methods": [
     {
      "type": "boolean",
      "name": "areEqual",
      "params": [
       {
        "type": "Object",
        "name": "o1"
       },
       {
        "type": "Object",
        "name": "o2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "areArraysEqual",
      "params": [
       {
        "type": "Object",
        "name": "o1"
       },
       {
        "type": "Object",
        "name": "o2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "areArrayLengthsEqual",
      "params": [
       {
        "type": "Object",
        "name": "o1"
       },
       {
        "type": "Object",
        "name": "o2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "areArrayElementsEqual",
      "params": [
       {
        "type": "Object",
        "name": "o1"
       },
       {
        "type": "Object",
        "name": "o2"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isArray",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Equality.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "ArrayEquals",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     },
     {
      "type": null,
      "name": "appendArray",
      "params": [
       {
        "type": "Object",
        "name": "array"
       },
       {
        "type": "Description",
        "name": "description"
       }
      ]
     },
     {
      "type": "Object",
      "name": "createObjectArray",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "ArrayEquals.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "regex"
     }
    ],
    "name": "Find",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Find.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Matcher",
      "name": "ANY_VARARG"
     }
    ],
    "name": "AnyVararg",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "arg"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "AnyVararg.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "suffix"
     }
    ],
    "name": "EndsWith",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "EndsWith.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "regex"
     }
    ],
    "name": "Matches",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Matches.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VarargMatcher",
    "methods": []
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "VarargMatcher.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NotNull",
      "name": "NOT_NULL"
     }
    ],
    "name": "NotNull",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "NotNull.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ContainsExtraTypeInformation",
    "methods": [
     {
      "type": "SelfDescribing",
      "name": "withExtraTypeInfo",
      "params": []
     },
     {
      "type": "boolean",
      "name": "typeMatches",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "ContainsExtraTypeInformation.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "GreaterOrEqual",
    "methods": [
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "matchResult",
      "params": [
       {
        "type": "int",
        "name": "result"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "GreaterOrEqual.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "clazz"
     }
    ],
    "name": "InstanceOf",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "InstanceOf.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "substring"
     }
    ],
    "name": "Contains",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "Contains.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "LinkedList",
      "name": "arguments"
     }
    ],
    "name": "VarargCapturingMatcher",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "argument"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     },
     {
      "type": "List",
      "name": "getLastVarargs",
      "params": []
     },
     {
      "type": "List",
      "name": "getAllVarargs",
      "params": []
     },
     {
      "type": null,
      "name": "captureFrom",
      "params": [
       {
        "type": "Object",
        "name": "varArgArray"
       }
      ]
     },
     {
      "type": "List",
      "name": "unpackAsList",
      "params": [
       {
        "type": "Object",
        "name": "varArgArray"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "VarargCapturingMatcher.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Matcher",
      "name": "actualMatcher"
     },
     {
      "type": "Location",
      "name": "location"
     }
    ],
    "name": "LocalizedMatcher",
    "methods": [
     {
      "type": null,
      "name": "_dont_implement_Matcher___instead_extend_BaseMatcher_",
      "params": []
     },
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "item"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     },
     {
      "type": "Location",
      "name": "getLocation",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "SelfDescribing",
      "name": "withExtraTypeInfo",
      "params": []
     },
     {
      "type": "boolean",
      "name": "typeMatches",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "captureFrom",
      "params": [
       {
        "type": "Object",
        "name": "argument"
       }
      ]
     },
     {
      "type": "Matcher",
      "name": "getActualMatcher",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "LocalizedMatcher.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Number",
      "name": "wanted"
     },
     {
      "type": "Number",
      "name": "delta"
     }
    ],
    "name": "EqualsWithDelta",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "EqualsWithDelta.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "CompareEqual",
    "methods": [
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "matchResult",
      "params": [
       {
        "type": "int",
        "name": "result"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers",
  "filename": "CompareEqual.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "boolean",
      "name": "isEquals"
     }
    ],
    "name": "EqualsBuilder",
    "methods": [
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "boolean",
        "name": "testTransients"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "boolean",
        "name": "testTransients"
       },
       {
        "type": "Class",
        "name": "reflectUpToClass"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "reflectionEquals",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "boolean",
        "name": "testTransients"
       },
       {
        "type": "Class",
        "name": "reflectUpToClass"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": null,
      "name": "reflectionAppend",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       },
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "EqualsBuilder",
        "name": "builder"
       },
       {
        "type": "boolean",
        "name": "useTransients"
       },
       {
        "type": "String",
        "name": "excludeFields"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "appendSuper",
      "params": [
       {
        "type": "boolean",
        "name": "superEquals"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "lhs"
       },
       {
        "type": "long",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "lhs"
       },
       {
        "type": "int",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "lhs"
       },
       {
        "type": "short",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "lhs"
       },
       {
        "type": "char",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "lhs"
       },
       {
        "type": "byte",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "lhs"
       },
       {
        "type": "double",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "lhs"
       },
       {
        "type": "float",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "lhs"
       },
       {
        "type": "boolean",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "Object",
        "name": "lhs"
       },
       {
        "type": "Object",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "long",
        "name": "lhs"
       },
       {
        "type": "long",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "int",
        "name": "lhs"
       },
       {
        "type": "int",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "short",
        "name": "lhs"
       },
       {
        "type": "short",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "char",
        "name": "lhs"
       },
       {
        "type": "char",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "byte",
        "name": "lhs"
       },
       {
        "type": "byte",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "double",
        "name": "lhs"
       },
       {
        "type": "double",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "float",
        "name": "lhs"
       },
       {
        "type": "float",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "EqualsBuilder",
      "name": "append",
      "params": [
       {
        "type": "boolean",
        "name": "lhs"
       },
       {
        "type": "boolean",
        "name": "rhs"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEquals",
      "params": []
     },
     {
      "type": null,
      "name": "setEquals",
      "params": [
       {
        "type": "boolean",
        "name": "isEquals"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers.apachecommons",
  "filename": "EqualsBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "wanted"
     },
     {
      "type": "String",
      "name": "excludeFields"
     }
    ],
    "name": "ReflectionEquals",
    "methods": [
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Object",
        "name": "actual"
       }
      ]
     },
     {
      "type": null,
      "name": "describeTo",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.matchers.apachecommons",
  "filename": "ReflectionEquals.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "MAX_LINE_LENGTH"
     },
     {
      "type": "boolean",
      "name": "multiline"
     },
     {
      "type": "List",
      "name": "withTypeInfo"
     }
    ],
    "name": "PrintSettings",
    "methods": [
     {
      "type": null,
      "name": "setMultiline",
      "params": [
       {
        "type": "boolean",
        "name": "multiline"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isMultiline",
      "params": []
     },
     {
      "type": "PrintSettings",
      "name": "verboseMatchers",
      "params": [
       {
        "type": "Integer",
        "name": "indexesOfMatchers"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "extraTypeInfoFor",
      "params": [
       {
        "type": "int",
        "name": "argumentIndex"
       }
      ]
     },
     {
      "type": null,
      "name": "setMatchersToBeDescribedWithExtraTypeInfo",
      "params": [
       {
        "type": "Integer",
        "name": "indexesOfMatchers"
       }
      ]
     },
     {
      "type": "String",
      "name": "print",
      "params": [
       {
        "type": "List",
        "name": "matchers"
       },
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "String",
      "name": "print",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "String",
      "name": "print",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "invocationMatcher"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.reporting",
  "filename": "PrintSettings.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "wanted"
     },
     {
      "type": "String",
      "name": "actual"
     }
    ],
    "name": "SmartPrinter",
    "methods": [
     {
      "type": "String",
      "name": "getWanted",
      "params": []
     },
     {
      "type": "String",
      "name": "getActual",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.reporting",
  "filename": "SmartPrinter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "wantedCount"
     },
     {
      "type": "int",
      "name": "actualCount"
     }
    ],
    "name": "Discrepancy",
    "methods": [
     {
      "type": "int",
      "name": "getWantedCount",
      "params": []
     },
     {
      "type": "String",
      "name": "getPluralizedWantedCount",
      "params": []
     },
     {
      "type": "int",
      "name": "getActualCount",
      "params": []
     },
     {
      "type": "String",
      "name": "getPluralizedActualCount",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.reporting",
  "filename": "Discrepancy.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Pluralizer",
    "methods": [
     {
      "type": "String",
      "name": "pluralize",
      "params": [
       {
        "type": "int",
        "name": "number"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.reporting",
  "filename": "Pluralizer.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockingProgress",
    "methods": [
     {
      "type": null,
      "name": "reportOngoingStubbing",
      "params": [
       {
        "type": "IOngoingStubbing",
        "name": "iOngoingStubbing"
       }
      ]
     },
     {
      "type": "IOngoingStubbing",
      "name": "pullOngoingStubbing",
      "params": []
     },
     {
      "type": null,
      "name": "verificationStarted",
      "params": [
       {
        "type": "VerificationMode",
        "name": "verificationMode"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "pullVerificationMode",
      "params": []
     },
     {
      "type": null,
      "name": "stubbingStarted",
      "params": []
     },
     {
      "type": null,
      "name": "stubbingCompleted",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "validateState",
      "params": []
     },
     {
      "type": null,
      "name": "reset",
      "params": []
     },
     {
      "type": null,
      "name": "resetOngoingStubbing",
      "params": []
     },
     {
      "type": "ArgumentMatcherStorage",
      "name": "getArgumentMatcherStorage",
      "params": []
     },
     {
      "type": null,
      "name": "mockingStarted",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "Class",
        "name": "classToMock"
       }
      ]
     },
     {
      "type": null,
      "name": "setListener",
      "params": [
       {
        "type": "MockingProgressListener",
        "name": "listener"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.progress",
  "filename": "MockingProgress.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "TWO_SUB_MATCHERS"
     },
     {
      "type": "int",
      "name": "ONE_SUB_MATCHER"
     },
     {
      "type": "Stack",
      "name": "matcherStack"
     }
    ],
    "name": "ArgumentMatcherStorageImpl",
    "methods": [
     {
      "type": "HandyReturnValues",
      "name": "reportMatcher",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "List",
      "name": "pullLocalizedMatchers",
      "params": []
     },
     {
      "type": "HandyReturnValues",
      "name": "reportAnd",
      "params": []
     },
     {
      "type": "HandyReturnValues",
      "name": "reportOr",
      "params": []
     },
     {
      "type": "HandyReturnValues",
      "name": "reportNot",
      "params": []
     },
     {
      "type": null,
      "name": "assertStateFor",
      "params": [
       {
        "type": "String",
        "name": "additionalMatcherName"
       },
       {
        "type": "int",
        "name": "subMatchersCount"
       }
      ]
     },
     {
      "type": "List",
      "name": "popLastArgumentMatchers",
      "params": [
       {
        "type": "int",
        "name": "count"
       }
      ]
     },
     {
      "type": null,
      "name": "assertMatchersFoundFor",
      "params": [
       {
        "type": "String",
        "name": "additionalMatcherName"
       }
      ]
     },
     {
      "type": null,
      "name": "assertIncorrectUseOfAdditionalMatchers",
      "params": [
       {
        "type": "String",
        "name": "additionalMatcherName"
       },
       {
        "type": "int",
        "name": "count"
       }
      ]
     },
     {
      "type": null,
      "name": "validateState",
      "params": []
     },
     {
      "type": null,
      "name": "reset",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.progress",
  "filename": "ArgumentMatcherStorageImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "HandyReturnValues",
    "methods": [
     {
      "type": "byte",
      "name": "returnZero",
      "params": []
     },
     {
      "type": "char",
      "name": "returnChar",
      "params": []
     },
     {
      "type": "T",
      "name": "returnNull",
      "params": []
     },
     {
      "type": "boolean",
      "name": "returnFalse",
      "params": []
     },
     {
      "type": "String",
      "name": "returnString",
      "params": []
     },
     {
      "type": "T",
      "name": "returnFor",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "Map",
      "name": "returnMap",
      "params": []
     },
     {
      "type": "List",
      "name": "returnList",
      "params": []
     },
     {
      "type": "Set",
      "name": "returnSet",
      "params": []
     },
     {
      "type": "T",
      "name": "returnFor",
      "params": [
       {
        "type": "T",
        "name": "instance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.progress",
  "filename": "HandyReturnValues.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ArgumentMatcherStorage",
    "methods": [
     {
      "type": "HandyReturnValues",
      "name": "reportMatcher",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "List",
      "name": "pullLocalizedMatchers",
      "params": []
     },
     {
      "type": "HandyReturnValues",
      "name": "reportAnd",
      "params": []
     },
     {
      "type": "HandyReturnValues",
      "name": "reportNot",
      "params": []
     },
     {
      "type": "HandyReturnValues",
      "name": "reportOr",
      "params": []
     },
     {
      "type": null,
      "name": "validateState",
      "params": []
     },
     {
      "type": null,
      "name": "reset",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.progress",
  "filename": "ArgumentMatcherStorage.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ThreadLocal",
      "name": "mockingProgress"
     }
    ],
    "name": "ThreadSafeMockingProgress",
    "methods": [
     {
      "type": "MockingProgress",
      "name": "threadSafely",
      "params": []
     },
     {
      "type": null,
      "name": "reportOngoingStubbing",
      "params": [
       {
        "type": "IOngoingStubbing",
        "name": "iOngoingStubbing"
       }
      ]
     },
     {
      "type": "IOngoingStubbing",
      "name": "pullOngoingStubbing",
      "params": []
     },
     {
      "type": null,
      "name": "verificationStarted",
      "params": [
       {
        "type": "VerificationMode",
        "name": "verify"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "pullVerificationMode",
      "params": []
     },
     {
      "type": null,
      "name": "stubbingStarted",
      "params": []
     },
     {
      "type": null,
      "name": "validateState",
      "params": []
     },
     {
      "type": null,
      "name": "stubbingCompleted",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": null,
      "name": "reset",
      "params": []
     },
     {
      "type": null,
      "name": "resetOngoingStubbing",
      "params": []
     },
     {
      "type": "ArgumentMatcherStorage",
      "name": "getArgumentMatcherStorage",
      "params": []
     },
     {
      "type": null,
      "name": "mockingStarted",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "Class",
        "name": "classToMock"
       }
      ]
     },
     {
      "type": null,
      "name": "setListener",
      "params": [
       {
        "type": "MockingProgressListener",
        "name": "listener"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.progress",
  "filename": "ThreadSafeMockingProgress.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "IOngoingStubbing",
    "methods": []
   }
  ],
  "package_name": "org.mockito.internal.progress",
  "filename": "IOngoingStubbing.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "sequenceNumber"
     }
    ],
    "name": "SequenceNumber",
    "methods": [
     {
      "type": "int",
      "name": "next",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.progress",
  "filename": "SequenceNumber.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "ArgumentMatcherStorage",
      "name": "argumentMatcherStorage"
     },
     {
      "type": "IOngoingStubbing",
      "name": "iOngoingStubbing"
     },
     {
      "type": "Localized",
      "name": "verificationMode"
     },
     {
      "type": "Location",
      "name": "stubbingInProgress"
     },
     {
      "type": "MockingProgressListener",
      "name": "listener"
     }
    ],
    "name": "MockingProgressImpl",
    "methods": [
     {
      "type": null,
      "name": "reportOngoingStubbing",
      "params": [
       {
        "type": "IOngoingStubbing",
        "name": "iOngoingStubbing"
       }
      ]
     },
     {
      "type": "IOngoingStubbing",
      "name": "pullOngoingStubbing",
      "params": []
     },
     {
      "type": null,
      "name": "verificationStarted",
      "params": [
       {
        "type": "VerificationMode",
        "name": "verify"
       }
      ]
     },
     {
      "type": null,
      "name": "resetOngoingStubbing",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "pullVerificationMode",
      "params": []
     },
     {
      "type": null,
      "name": "stubbingStarted",
      "params": []
     },
     {
      "type": null,
      "name": "validateState",
      "params": []
     },
     {
      "type": null,
      "name": "validateMostStuff",
      "params": []
     },
     {
      "type": null,
      "name": "stubbingCompleted",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": null,
      "name": "reset",
      "params": []
     },
     {
      "type": "ArgumentMatcherStorage",
      "name": "getArgumentMatcherStorage",
      "params": []
     },
     {
      "type": null,
      "name": "mockingStarted",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "Class",
        "name": "classToMock"
       }
      ]
     },
     {
      "type": null,
      "name": "setListener",
      "params": [
       {
        "type": "MockingProgressListener",
        "name": "listener"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.progress",
  "filename": "MockingProgressImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Object",
      "name": "mock"
     },
     {
      "type": "VerificationMode",
      "name": "mode"
     }
    ],
    "name": "MockAwareVerificationMode",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     },
     {
      "type": "Object",
      "name": "getMock",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "MockAwareVerificationMode.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "wantedCount"
     }
    ],
    "name": "AtLeast",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyInOrder",
      "params": [
       {
        "type": "VerificationDataInOrder",
        "name": "data"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "AtLeast.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "IdentitySet",
      "name": "verified"
     }
    ],
    "name": "InOrderContextImpl",
    "methods": [
     {
      "type": "boolean",
      "name": "isVerified",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "markVerified",
      "params": [
       {
        "type": "Invocation",
        "name": "i"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "InOrderContextImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "RegisteredInvocations",
    "methods": [
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "removeLast",
      "params": []
     },
     {
      "type": "List",
      "name": "getAll",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "RegisteredInvocations.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "pollingPeriodMillis"
     },
     {
      "type": "long",
      "name": "durationMillis"
     },
     {
      "type": "VerificationMode",
      "name": "delegate"
     },
     {
      "type": "boolean",
      "name": "returnOnSuccess"
     },
     {
      "type": "Timer",
      "name": "timer"
     }
    ],
    "name": "VerificationOverTimeImpl",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     },
     {
      "type": "AssertionError",
      "name": "handleVerifyException",
      "params": [
       {
        "type": "AssertionError",
        "name": "e"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "canRecoverFromFailure",
      "params": [
       {
        "type": "VerificationMode",
        "name": "verificationMode"
       }
      ]
     },
     {
      "type": null,
      "name": "sleep",
      "params": [
       {
        "type": "long",
        "name": "sleep"
       }
      ]
     },
     {
      "type": "long",
      "name": "getPollingPeriod",
      "params": []
     },
     {
      "type": "long",
      "name": "getDuration",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "getDelegate",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "VerificationOverTimeImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VerificationModeFactory",
    "methods": [
     {
      "type": "VerificationMode",
      "name": "atLeastOnce",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atLeast",
      "params": [
       {
        "type": "int",
        "name": "minNumberOfInvocations"
       }
      ]
     },
     {
      "type": "VerificationMode",
      "name": "only",
      "params": []
     },
     {
      "type": "Times",
      "name": "times",
      "params": [
       {
        "type": "int",
        "name": "wantedNumberOfInvocations"
       }
      ]
     },
     {
      "type": "Calls",
      "name": "calls",
      "params": [
       {
        "type": "int",
        "name": "wantedNumberOfInvocations"
       }
      ]
     },
     {
      "type": "NoMoreInteractions",
      "name": "noMoreInteractions",
      "params": []
     },
     {
      "type": "VerificationMode",
      "name": "atMost",
      "params": [
       {
        "type": "int",
        "name": "maxNumberOfInvocations"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "VerificationModeFactory.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "wantedCount"
     }
    ],
    "name": "Calls",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyInOrder",
      "params": [
       {
        "type": "VerificationDataInOrder",
        "name": "data"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "Calls.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "wantedCount"
     }
    ],
    "name": "Times",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyInOrder",
      "params": [
       {
        "type": "VerificationDataInOrder",
        "name": "data"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "Times.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "maxNumberOfInvocations"
     },
     {
      "type": "InvocationMarker",
      "name": "invocationMarker"
     }
    ],
    "name": "AtMost",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "AtMost.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "LinkedList",
      "name": "invocations"
     }
    ],
    "name": "DefaultRegisteredInvocations",
    "methods": [
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "removeLast",
      "params": []
     },
     {
      "type": "List",
      "name": "getAll",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "DefaultRegisteredInvocations.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "InvocationsFinder",
      "name": "finder"
     },
     {
      "type": "InvocationMarker",
      "name": "marker"
     },
     {
      "type": "Reporter",
      "name": "reporter"
     }
    ],
    "name": "Only",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "Only.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Invocation",
      "name": "invocation"
     }
    ],
    "name": "SingleRegisteredInvocation",
    "methods": [
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "removeLast",
      "params": []
     },
     {
      "type": "List",
      "name": "getAll",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "SingleRegisteredInvocation.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "VerificationInOrderMode",
      "name": "mode"
     },
     {
      "type": "InOrderImpl",
      "name": "inOrder"
     }
    ],
    "name": "InOrderWrapper",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "InOrderWrapper.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "NoMoreInteractions",
    "methods": [
     {
      "type": null,
      "name": "verify",
      "params": [
       {
        "type": "VerificationData",
        "name": "data"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyInOrder",
      "params": [
       {
        "type": "VerificationDataInOrder",
        "name": "data"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "NoMoreInteractions.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "InvocationMatcher",
      "name": "wanted"
     },
     {
      "type": "InvocationContainer",
      "name": "invocations"
     }
    ],
    "name": "VerificationDataImpl",
    "methods": [
     {
      "type": "List",
      "name": "getAllInvocations",
      "params": []
     },
     {
      "type": "InvocationMatcher",
      "name": "getWanted",
      "params": []
     },
     {
      "type": null,
      "name": "assertWantedIsVerifiable",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification",
  "filename": "VerificationDataImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "InvocationsFinder",
      "name": "finder"
     },
     {
      "type": "InvocationMarker",
      "name": "invocationMarker"
     }
    ],
    "name": "NumberOfInvocationsChecker",
    "methods": [
     {
      "type": null,
      "name": "check",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "int",
        "name": "wantedCount"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.checkers",
  "filename": "NumberOfInvocationsChecker.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AtLeastDiscrepancy",
    "methods": [
     {
      "type": "String",
      "name": "getPluralizedWantedCount",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.checkers",
  "filename": "AtLeastDiscrepancy.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "InvocationsFinder",
      "name": "finder"
     },
     {
      "type": "InvocationMarker",
      "name": "invocationMarker"
     },
     {
      "type": "InOrderContext",
      "name": "orderingContext"
     }
    ],
    "name": "AtLeastXNumberOfInvocationsInOrderChecker",
    "methods": [
     {
      "type": null,
      "name": "check",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "int",
        "name": "wantedCount"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.checkers",
  "filename": "AtLeastXNumberOfInvocationsInOrderChecker.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "InvocationsFinder",
      "name": "finder"
     },
     {
      "type": "InvocationMarker",
      "name": "invocationMarker"
     }
    ],
    "name": "AtLeastXNumberOfInvocationsChecker",
    "methods": [
     {
      "type": null,
      "name": "check",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "int",
        "name": "wantedCount"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.checkers",
  "filename": "AtLeastXNumberOfInvocationsChecker.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "InvocationsFinder",
      "name": "finder"
     },
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "InvocationMarker",
      "name": "marker"
     }
    ],
    "name": "NonGreedyNumberOfInvocationsInOrderChecker",
    "methods": [
     {
      "type": null,
      "name": "check",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "int",
        "name": "wantedCount"
       },
       {
        "type": "InOrderContext",
        "name": "context"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.checkers",
  "filename": "NonGreedyNumberOfInvocationsInOrderChecker.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "InvocationsFinder",
      "name": "finder"
     },
     {
      "type": "InvocationMarker",
      "name": "invocationMarker"
     }
    ],
    "name": "NumberOfInvocationsInOrderChecker",
    "methods": [
     {
      "type": null,
      "name": "check",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "int",
        "name": "wantedCount"
       },
       {
        "type": "InOrderContext",
        "name": "context"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.checkers",
  "filename": "NumberOfInvocationsInOrderChecker.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "InvocationsFinder",
      "name": "finder"
     }
    ],
    "name": "MissingInvocationInOrderChecker",
    "methods": [
     {
      "type": null,
      "name": "check",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "VerificationMode",
        "name": "mode"
       },
       {
        "type": "InOrderContext",
        "name": "context"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.checkers",
  "filename": "MissingInvocationInOrderChecker.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Reporter",
      "name": "reporter"
     },
     {
      "type": "InvocationsFinder",
      "name": "finder"
     }
    ],
    "name": "MissingInvocationChecker",
    "methods": [
     {
      "type": null,
      "name": "check",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.checkers",
  "filename": "MissingInvocationChecker.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VerificationInOrderMode",
    "methods": [
     {
      "type": null,
      "name": "verifyInOrder",
      "params": [
       {
        "type": "VerificationDataInOrder",
        "name": "data"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.api",
  "filename": "VerificationInOrderMode.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InOrderContext",
    "methods": [
     {
      "type": "boolean",
      "name": "isVerified",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "markVerified",
      "params": [
       {
        "type": "Invocation",
        "name": "i"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.api",
  "filename": "InOrderContext.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VerificationData",
    "methods": [
     {
      "type": "List",
      "name": "getAllInvocations",
      "params": []
     },
     {
      "type": "InvocationMatcher",
      "name": "getWanted",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.api",
  "filename": "VerificationData.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "InOrderContext",
      "name": "inOrder"
     },
     {
      "type": "List",
      "name": "allInvocations"
     },
     {
      "type": "InvocationMatcher",
      "name": "wanted"
     }
    ],
    "name": "VerificationDataInOrderImpl",
    "methods": [
     {
      "type": "List",
      "name": "getAllInvocations",
      "params": []
     },
     {
      "type": "InOrderContext",
      "name": "getOrderingContext",
      "params": []
     },
     {
      "type": "InvocationMatcher",
      "name": "getWanted",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.api",
  "filename": "VerificationDataInOrderImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VerificationDataInOrder",
    "methods": [
     {
      "type": "List",
      "name": "getAllInvocations",
      "params": []
     },
     {
      "type": "InvocationMatcher",
      "name": "getWanted",
      "params": []
     },
     {
      "type": "InOrderContext",
      "name": "getOrderingContext",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.api",
  "filename": "VerificationDataInOrder.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ArgumentMatchingTool",
    "methods": [
     {
      "type": "Integer",
      "name": "getSuspiciouslyNotMatchingArgsIndexes",
      "params": [
       {
        "type": "List",
        "name": "matchers"
       },
       {
        "type": "Object",
        "name": "arguments"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "safelyMatches",
      "params": [
       {
        "type": "Matcher",
        "name": "m"
       },
       {
        "type": "Object",
        "name": "arg"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "toStringEquals",
      "params": [
       {
        "type": "Matcher",
        "name": "m"
       },
       {
        "type": "Object",
        "name": "arg"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.verification.argumentmatching",
  "filename": "ArgumentMatchingTool.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "JUnitDetecter",
      "name": "detecter"
     }
    ],
    "name": "JUnitTool",
    "methods": [
     {
      "type": "boolean",
      "name": "hasJUnit",
      "params": []
     },
     {
      "type": "AssertionError",
      "name": "createArgumentsAreDifferentException",
      "params": [
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "String",
        "name": "wanted"
       },
       {
        "type": "String",
        "name": "actual"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.junit",
  "filename": "JUnitTool.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "JUnitRule",
    "methods": [
     {
      "type": "Statement",
      "name": "apply",
      "params": [
       {
        "type": "Statement",
        "name": "base"
       },
       {
        "type": "Object",
        "name": "target"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.junit",
  "filename": "JUnitRule.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "boolean",
      "name": "hasJUnit"
     }
    ],
    "name": "JUnitDetecter",
    "methods": [
     {
      "type": "boolean",
      "name": "hasJUnit",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.junit",
  "filename": "JUnitDetecter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "JUnitDetecter",
      "name": "detecter"
     }
    ],
    "name": "FriendlyExceptionMaker",
    "methods": [
     {
      "type": "AssertionError",
      "name": "createArgumentsAreDifferentException",
      "params": [
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "String",
        "name": "wanted"
       },
       {
        "type": "String",
        "name": "actual"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.junit",
  "filename": "FriendlyExceptionMaker.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ThreadLocal",
      "name": "GLOBAL_CONFIGURATION"
     }
    ],
    "name": "GlobalConfiguration",
    "methods": [
     {
      "type": "IMockitoConfiguration",
      "name": "getIt",
      "params": []
     },
     {
      "type": "IMockitoConfiguration",
      "name": "createConfig",
      "params": []
     },
     {
      "type": null,
      "name": "validate",
      "params": []
     },
     {
      "type": "ReturnValues",
      "name": "getReturnValues",
      "params": []
     },
     {
      "type": "AnnotationEngine",
      "name": "getAnnotationEngine",
      "params": []
     },
     {
      "type": "boolean",
      "name": "cleansStackTrace",
      "params": []
     },
     {
      "type": "boolean",
      "name": "enableClassCache",
      "params": []
     },
     {
      "type": "Answer",
      "name": "getDefaultAnswer",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "GlobalConfiguration.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "AnnotationEngine",
      "name": "delegate"
     },
     {
      "type": "AnnotationEngine",
      "name": "spyAnnotationEngine"
     }
    ],
    "name": "InjectingAnnotationEngine",
    "methods": [
     {
      "type": "Object",
      "name": "createMockFor",
      "params": [
       {
        "type": "Annotation",
        "name": "annotation"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "process",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "Object",
        "name": "testInstance"
       }
      ]
     },
     {
      "type": null,
      "name": "processInjectMocks",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "Object",
        "name": "testInstance"
       }
      ]
     },
     {
      "type": null,
      "name": "processIndependentAnnotations",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "Object",
        "name": "testInstance"
       }
      ]
     },
     {
      "type": null,
      "name": "injectMocks",
      "params": [
       {
        "type": "Object",
        "name": "testClassInstance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "InjectingAnnotationEngine.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DefaultInjectionEngine",
    "methods": [
     {
      "type": null,
      "name": "injectMocksOnFields",
      "params": [
       {
        "type": "Set",
        "name": "needingInjection"
       },
       {
        "type": "Set",
        "name": "mocks"
       },
       {
        "type": "Object",
        "name": "testClassInstance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "DefaultInjectionEngine.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Map",
      "name": "annotationProcessorMap"
     }
    ],
    "name": "DefaultAnnotationEngine",
    "methods": [
     {
      "type": "Object",
      "name": "createMockFor",
      "params": [
       {
        "type": "Annotation",
        "name": "annotation"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": "FieldAnnotationProcessor",
      "name": "forAnnotation",
      "params": [
       {
        "type": "A",
        "name": "annotation"
       }
      ]
     },
     {
      "type": null,
      "name": "registerAnnotationProcessor",
      "params": [
       {
        "type": "Class",
        "name": "annotationClass"
       },
       {
        "type": "FieldAnnotationProcessor",
        "name": "fieldAnnotationProcessor"
       }
      ]
     },
     {
      "type": null,
      "name": "process",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "Object",
        "name": "testInstance"
       }
      ]
     },
     {
      "type": null,
      "name": "throwIfAlreadyAssigned",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "boolean",
        "name": "alreadyAssigned"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "DefaultAnnotationEngine.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "CaptorAnnotationProcessor",
    "methods": [
     {
      "type": "Object",
      "name": "process",
      "params": [
       {
        "type": "Captor",
        "name": "annotation"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "CaptorAnnotationProcessor.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockAnnotationProcessor",
    "methods": [
     {
      "type": "Object",
      "name": "process",
      "params": [
       {
        "type": "Mock",
        "name": "annotation"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "MockAnnotationProcessor.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "MOCKITO_CONFIGURATION_CLASS_NAME"
     }
    ],
    "name": "ClassPathLoader",
    "methods": [
     {
      "type": "IMockitoConfiguration",
      "name": "loadConfiguration",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "ClassPathLoader.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "SpyAnnotationEngine",
    "methods": [
     {
      "type": "Object",
      "name": "createMockFor",
      "params": [
       {
        "type": "Annotation",
        "name": "annotation"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "process",
      "params": [
       {
        "type": "Class",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "testInstance"
       }
      ]
     },
     {
      "type": null,
      "name": "assertNotInterface",
      "params": [
       {
        "type": "Object",
        "name": "testInstance"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "Object",
      "name": "newSpyInstance",
      "params": [
       {
        "type": "Object",
        "name": "testInstance"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "assertNoIncompatibleAnnotations",
      "params": [
       {
        "type": "Class",
        "name": "annotation"
       },
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Class",
        "name": "undesiredAnnotations"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "SpyAnnotationEngine.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "FieldAnnotationProcessor",
    "methods": [
     {
      "type": "Object",
      "name": "process",
      "params": [
       {
        "type": "A",
        "name": "annotation"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "FieldAnnotationProcessor.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockitoAnnotationsMockAnnotationProcessor",
    "methods": [
     {
      "type": "Object",
      "name": "process",
      "params": [
       {
        "type": "Mock",
        "name": "annotation"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration",
  "filename": "MockitoAnnotationsMockAnnotationProcessor.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockInjection",
    "methods": [
     {
      "type": "OngoingMockInjection",
      "name": "onField",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "ofInstance"
       }
      ]
     },
     {
      "type": "OngoingMockInjection",
      "name": "onFields",
      "params": [
       {
        "type": "Set",
        "name": "fields"
       },
       {
        "type": "Object",
        "name": "ofInstance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection",
  "filename": "MockInjection.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockCandidateFilter",
      "name": "mockCandidateFilter"
     },
     {
      "type": "Comparator",
      "name": "superTypesLast"
     },
     {
      "type": "ListUtil",
      "name": "notFinalOrStatic"
     }
    ],
    "name": "PropertyAndSetterInjection",
    "methods": [
     {
      "type": "boolean",
      "name": "processInjection",
      "params": [
       {
        "type": "Field",
        "name": "injectMocksField"
       },
       {
        "type": "Object",
        "name": "injectMocksFieldOwner"
       },
       {
        "type": "Set",
        "name": "mockCandidates"
       }
      ]
     },
     {
      "type": "FieldInitializationReport",
      "name": "initializeInjectMocksField",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "fieldOwner"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "injectMockCandidates",
      "params": [
       {
        "type": "Class",
        "name": "awaitingInjectionClazz"
       },
       {
        "type": "Set",
        "name": "mocks"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "injectMockCandidatesOnFields",
      "params": [
       {
        "type": "Set",
        "name": "mocks"
       },
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "boolean",
        "name": "injectionOccurred"
       },
       {
        "type": "List",
        "name": "orderedInstanceFields"
       }
      ]
     },
     {
      "type": "List",
      "name": "orderedInstanceFieldsFrom",
      "params": [
       {
        "type": "Class",
        "name": "awaitingInjectionClazz"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection",
  "filename": "PropertyAndSetterInjection.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ConstructorArgumentResolver",
      "name": "argResolver"
     }
    ],
    "name": "ConstructorInjection",
    "methods": [
     {
      "type": "boolean",
      "name": "processInjection",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "fieldOwner"
       },
       {
        "type": "Set",
        "name": "mockCandidates"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection",
  "filename": "ConstructorInjection.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockInjectionStrategy",
      "name": "nextStrategy"
     }
    ],
    "name": "MockInjectionStrategy",
    "methods": [
     {
      "type": "MockInjectionStrategy",
      "name": "nop",
      "params": []
     },
     {
      "type": "MockInjectionStrategy",
      "name": "thenTry",
      "params": [
       {
        "type": "MockInjectionStrategy",
        "name": "strategy"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "process",
      "params": [
       {
        "type": "Field",
        "name": "onField"
       },
       {
        "type": "Object",
        "name": "fieldOwnedBy"
       },
       {
        "type": "Set",
        "name": "mockCandidates"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "processInjection",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "fieldOwner"
       },
       {
        "type": "Set",
        "name": "mockCandidates"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "relayProcessToNextStrategy",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "fieldOwner"
       },
       {
        "type": "Set",
        "name": "mockCandidates"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection",
  "filename": "MockInjectionStrategy.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "SpyOnInjectedFieldsHandler",
    "methods": [
     {
      "type": "boolean",
      "name": "processInjection",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "fieldOwner"
       },
       {
        "type": "Set",
        "name": "mockCandidates"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection",
  "filename": "SpyOnInjectedFieldsHandler.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "FinalMockCandidateFilter",
    "methods": [
     {
      "type": "OngoingInjecter",
      "name": "filterCandidate",
      "params": [
       {
        "type": "Collection",
        "name": "mocks"
       },
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "fieldInstance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection.filter",
  "filename": "FinalMockCandidateFilter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockCandidateFilter",
    "methods": [
     {
      "type": "OngoingInjecter",
      "name": "filterCandidate",
      "params": [
       {
        "type": "Collection",
        "name": "mocks"
       },
       {
        "type": "Field",
        "name": "fieldToBeInjected"
       },
       {
        "type": "Object",
        "name": "fieldInstance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection.filter",
  "filename": "MockCandidateFilter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockCandidateFilter",
      "name": "next"
     },
     {
      "type": "MockUtil",
      "name": "mockUtil"
     }
    ],
    "name": "NameBasedCandidateFilter",
    "methods": [
     {
      "type": "OngoingInjecter",
      "name": "filterCandidate",
      "params": [
       {
        "type": "Collection",
        "name": "mocks"
       },
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "fieldInstance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection.filter",
  "filename": "NameBasedCandidateFilter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockCandidateFilter",
      "name": "next"
     }
    ],
    "name": "TypeBasedCandidateFilter",
    "methods": [
     {
      "type": "OngoingInjecter",
      "name": "filterCandidate",
      "params": [
       {
        "type": "Collection",
        "name": "mocks"
       },
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "fieldInstance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection.filter",
  "filename": "TypeBasedCandidateFilter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "OngoingInjecter",
    "methods": [
     {
      "type": "Object",
      "name": "thenInject",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection.filter",
  "filename": "OngoingInjecter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Class",
      "name": "clazz"
     }
    ],
    "name": "InjectMocksScanner",
    "methods": [
     {
      "type": null,
      "name": "addTo",
      "params": [
       {
        "type": "Set",
        "name": "mockDependentFields"
       }
      ]
     },
     {
      "type": "Set",
      "name": "scan",
      "params": []
     },
     {
      "type": null,
      "name": "assertNoAnnotations",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Class",
        "name": "annotations"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection.scanner",
  "filename": "InjectMocksScanner.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockUtil",
      "name": "mockUtil"
     },
     {
      "type": "Object",
      "name": "instance"
     },
     {
      "type": "Class",
      "name": "clazz"
     }
    ],
    "name": "MockScanner",
    "methods": [
     {
      "type": null,
      "name": "addPreparedMocks",
      "params": [
       {
        "type": "Set",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "Set",
      "name": "scan",
      "params": []
     },
     {
      "type": "Object",
      "name": "preparedMock",
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAnnotatedByMockOrSpy",
      "params": [
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isMockOrSpy",
      "params": [
       {
        "type": "Object",
        "name": "instance"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.injection.scanner",
  "filename": "MockScanner.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DefaultPluginSwitch",
    "methods": [
     {
      "type": "boolean",
      "name": "isEnabled",
      "params": [
       {
        "type": "String",
        "name": "pluginClassName"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.plugins",
  "filename": "DefaultPluginSwitch.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "PluginRegistry",
      "name": "registry"
     }
    ],
    "name": "Plugins",
    "methods": [
     {
      "type": "StackTraceCleanerProvider",
      "name": "getStackTraceCleanerProvider",
      "params": []
     },
     {
      "type": "MockMaker",
      "name": "getMockMaker",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.plugins",
  "filename": "Plugins.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "PluginFileReader",
    "methods": [
     {
      "type": "String",
      "name": "readPluginClass",
      "params": [
       {
        "type": "InputStream",
        "name": "input"
       }
      ]
     },
     {
      "type": "String",
      "name": "stripCommentAndWhitespace",
      "params": [
       {
        "type": "String",
        "name": "line"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.plugins",
  "filename": "PluginFileReader.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "PluginSwitch",
      "name": "pluginSwitch"
     }
    ],
    "name": "PluginLoader",
    "methods": [
     {
      "type": "T",
      "name": "loadPlugin",
      "params": [
       {
        "type": "Class",
        "name": "pluginType"
       },
       {
        "type": "String",
        "name": "defaultPluginClassName"
       }
      ]
     },
     {
      "type": "T",
      "name": "loadImpl",
      "params": [
       {
        "type": "Class",
        "name": "service"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.plugins",
  "filename": "PluginLoader.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "PluginSwitch",
      "name": "pluginSwitch"
     }
    ],
    "name": "PluginFinder",
    "methods": [
     {
      "type": "String",
      "name": "findPluginClass",
      "params": [
       {
        "type": "Iterable",
        "name": "resources"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.plugins",
  "filename": "PluginFinder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "PluginSwitch",
      "name": "pluginSwitch"
     },
     {
      "type": "MockMaker",
      "name": "mockMaker"
     },
     {
      "type": "StackTraceCleanerProvider",
      "name": "stackTraceCleanerProvider"
     }
    ],
    "name": "PluginRegistry",
    "methods": [
     {
      "type": "StackTraceCleanerProvider",
      "name": "getStackTraceCleanerProvider",
      "params": []
     },
     {
      "type": "MockMaker",
      "name": "getMockMaker",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.configuration.plugins",
  "filename": "PluginRegistry.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockingProgressListener",
    "methods": []
   }
  ],
  "package_name": "org.mockito.internal.listeners",
  "filename": "MockingProgressListener.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockingStartedListener",
    "methods": [
     {
      "type": null,
      "name": "mockingStarted",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "Class",
        "name": "classToMock"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.listeners",
  "filename": "MockingStartedListener.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Invocation",
      "name": "invocation"
     },
     {
      "type": "Object",
      "name": "returnedValue"
     },
     {
      "type": "Throwable",
      "name": "throwable"
     }
    ],
    "name": "NotifiedMethodInvocationReport",
    "methods": [
     {
      "type": "DescribedInvocation",
      "name": "getInvocation",
      "params": []
     },
     {
      "type": "Object",
      "name": "getReturnedValue",
      "params": []
     },
     {
      "type": "Throwable",
      "name": "getThrowable",
      "params": []
     },
     {
      "type": "boolean",
      "name": "threwException",
      "params": []
     },
     {
      "type": "String",
      "name": "getLocationOfStubbing",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.listeners",
  "filename": "NotifiedMethodInvocationReport.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "List",
      "name": "toBeFilled"
     }
    ],
    "name": "CollectCreatedMocks",
    "methods": [
     {
      "type": null,
      "name": "mockingStarted",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "Class",
        "name": "classToMock"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.listeners",
  "filename": "CollectCreatedMocks.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "PrintStream",
      "name": "printStream"
     },
     {
      "type": "int",
      "name": "mockInvocationsCounter"
     }
    ],
    "name": "VerboseMockInvocationLogger",
    "methods": [
     {
      "type": null,
      "name": "reportInvocation",
      "params": [
       {
        "type": "MethodInvocationReport",
        "name": "methodInvocationReport"
       }
      ]
     },
     {
      "type": null,
      "name": "printReturnedValueOrThrowable",
      "params": [
       {
        "type": "MethodInvocationReport",
        "name": "methodInvocationReport"
       }
      ]
     },
     {
      "type": null,
      "name": "printStubInfo",
      "params": [
       {
        "type": "MethodInvocationReport",
        "name": "methodInvocationReport"
       }
      ]
     },
     {
      "type": null,
      "name": "printHeader",
      "params": []
     },
     {
      "type": null,
      "name": "printInvocation",
      "params": [
       {
        "type": "DescribedInvocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "printFooter",
      "params": []
     },
     {
      "type": null,
      "name": "printlnIndented",
      "params": [
       {
        "type": "String",
        "name": "message"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.debugging",
  "filename": "VerboseMockInvocationLogger.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "List",
      "name": "baseUnusedStubs"
     },
     {
      "type": "List",
      "name": "baseAllInvocations"
     }
    ],
    "name": "WarningsFinder",
    "methods": [
     {
      "type": null,
      "name": "find",
      "params": [
       {
        "type": "FindingsListener",
        "name": "findingsListener"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.debugging",
  "filename": "WarningsFinder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "T",
      "name": "object"
     },
     {
      "type": "Location",
      "name": "location"
     }
    ],
    "name": "Localized",
    "methods": [
     {
      "type": "T",
      "name": "getObject",
      "params": []
     },
     {
      "type": "Location",
      "name": "getLocation",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.debugging",
  "filename": "Localized.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "boolean",
      "name": "warnAboutUnstubbed"
     },
     {
      "type": "MockitoLogger",
      "name": "logger"
     }
    ],
    "name": "LoggingListener",
    "methods": [
     {
      "type": null,
      "name": "foundStubCalledWithDifferentArgs",
      "params": [
       {
        "type": "Invocation",
        "name": "unused"
       },
       {
        "type": "InvocationMatcher",
        "name": "unstubbed"
       }
      ]
     },
     {
      "type": null,
      "name": "foundUnusedStub",
      "params": [
       {
        "type": "Invocation",
        "name": "unused"
       }
      ]
     },
     {
      "type": null,
      "name": "foundUnstubbed",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "unstubbed"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isWarnAboutUnstubbed",
      "params": []
     },
     {
      "type": "MockitoLogger",
      "name": "getLogger",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.debugging",
  "filename": "LoggingListener.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "boolean",
      "name": "warnAboutUnstubbed"
     },
     {
      "type": "WarningsFinder",
      "name": "finder"
     }
    ],
    "name": "WarningsPrinterImpl",
    "methods": [
     {
      "type": null,
      "name": "print",
      "params": [
       {
        "type": "MockitoLogger",
        "name": "logger"
       }
      ]
     },
     {
      "type": "String",
      "name": "print",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.debugging",
  "filename": "WarningsPrinterImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "List",
      "name": "createdMocks"
     }
    ],
    "name": "WarningsCollector",
    "methods": [
     {
      "type": "String",
      "name": "getWarnings",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.debugging",
  "filename": "WarningsCollector.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "AllInvocationsFinder",
      "name": "allInvocationsFinder"
     },
     {
      "type": "UnusedStubsFinder",
      "name": "unusedStubsFinder"
     }
    ],
    "name": "MockitoDebuggerImpl",
    "methods": [
     {
      "type": "String",
      "name": "printInvocations",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "String",
      "name": "line",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "String",
      "name": "print",
      "params": [
       {
        "type": "String",
        "name": "out"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.debugging",
  "filename": "MockitoDebuggerImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "FindingsListener",
    "methods": [
     {
      "type": null,
      "name": "foundStubCalledWithDifferentArgs",
      "params": [
       {
        "type": "Invocation",
        "name": "unused"
       },
       {
        "type": "InvocationMatcher",
        "name": "unstubbed"
       }
      ]
     },
     {
      "type": null,
      "name": "foundUnusedStub",
      "params": [
       {
        "type": "Invocation",
        "name": "unused"
       }
      ]
     },
     {
      "type": null,
      "name": "foundUnstubbed",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "unstubbed"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.debugging",
  "filename": "FindingsListener.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Throwable",
      "name": "stackTraceHolder"
     },
     {
      "type": "StackTraceFilter",
      "name": "stackTraceFilter"
     }
    ],
    "name": "LocationImpl",
    "methods": [
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.debugging",
  "filename": "LocationImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Queue",
      "name": "answers"
     },
     {
      "type": "DescribedInvocation",
      "name": "usedAt"
     }
    ],
    "name": "StubbedInvocationMatcher",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "addAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": null,
      "name": "markStubUsed",
      "params": [
       {
        "type": "DescribedInvocation",
        "name": "usedAt"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "wasUsed",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing",
  "filename": "StubbedInvocationMatcher.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "BaseStubbing",
    "methods": [
     {
      "type": "OngoingStubbing",
      "name": "thenReturn",
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenReturn",
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "T",
        "name": "values"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "throwables"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenThrow",
      "params": [
       {
        "type": "Class",
        "name": "throwableClass"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenThrow",
      "params": [
       {
        "type": "Class",
        "name": "throwableClasses"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "thenCallRealMethod",
      "params": []
     },
     {
      "type": "DeprecatedOngoingStubbing",
      "name": "toReturn",
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ]
     },
     {
      "type": "DeprecatedOngoingStubbing",
      "name": "toThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing",
  "filename": "BaseStubbing.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InvocationContainer",
    "methods": [
     {
      "type": "List",
      "name": "getInvocations",
      "params": []
     },
     {
      "type": "List",
      "name": "getStubbedInvocations",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing",
  "filename": "InvocationContainer.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "InvocationContainerImpl",
      "name": "invocationContainerImpl"
     }
    ],
    "name": "ConsecutiveStubbing",
    "methods": [
     {
      "type": "OngoingStubbing",
      "name": "thenAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "then",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "DeprecatedOngoingStubbing",
      "name": "toAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "M",
      "name": "getMock",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing",
  "filename": "ConsecutiveStubbing.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "List",
      "name": "answers"
     },
     {
      "type": "Reporter",
      "name": "reporter"
     }
    ],
    "name": "StubberImpl",
    "methods": [
     {
      "type": "T",
      "name": "when",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doReturn",
      "params": [
       {
        "type": "Object",
        "name": "toBeReturned"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "toBeThrown"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doThrow",
      "params": [
       {
        "type": "Class",
        "name": "toBeThrown"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doNothing",
      "params": []
     },
     {
      "type": "Stubber",
      "name": "doAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "Stubber",
      "name": "doCallRealMethod",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing",
  "filename": "StubberImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "InvocationContainerImpl",
      "name": "invocationContainerImpl"
     }
    ],
    "name": "OngoingStubbingImpl",
    "methods": [
     {
      "type": "OngoingStubbing",
      "name": "thenAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "OngoingStubbing",
      "name": "then",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "DeprecatedOngoingStubbing",
      "name": "toAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "List",
      "name": "getRegisteredInvocations",
      "params": []
     },
     {
      "type": "M",
      "name": "getMock",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing",
  "filename": "OngoingStubbingImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "T",
      "name": "mock"
     },
     {
      "type": "InvocationContainerImpl",
      "name": "invocationContainerImpl"
     }
    ],
    "name": "VoidMethodStubbableImpl",
    "methods": [
     {
      "type": "VoidMethodStubbable",
      "name": "toThrow",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "VoidMethodStubbable",
      "name": "toReturn",
      "params": []
     },
     {
      "type": "VoidMethodStubbable",
      "name": "toAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": "T",
      "name": "on",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing",
  "filename": "VoidMethodStubbableImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "LinkedList",
      "name": "stubbed"
     },
     {
      "type": "MockingProgress",
      "name": "mockingProgress"
     },
     {
      "type": "List",
      "name": "answersForStubbing"
     },
     {
      "type": "RegisteredInvocations",
      "name": "registeredInvocations"
     },
     {
      "type": "InvocationMatcher",
      "name": "invocationForStubbing"
     }
    ],
    "name": "InvocationContainerImpl",
    "methods": [
     {
      "type": null,
      "name": "setInvocationForPotentialStubbing",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "resetInvocationForPotentialStubbing",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "invocationMatcher"
       }
      ]
     },
     {
      "type": null,
      "name": "addAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": null,
      "name": "addConsecutiveAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": null,
      "name": "addAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       },
       {
        "type": "boolean",
        "name": "isConsecutive"
       }
      ]
     },
     {
      "type": "Object",
      "name": "answerTo",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "StubbedInvocationMatcher",
      "name": "findAnswerFor",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "addAnswerForVoidMethod",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       }
      ]
     },
     {
      "type": null,
      "name": "setAnswersForStubbing",
      "params": [
       {
        "type": "List",
        "name": "answers"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "hasAnswersForStubbing",
      "params": []
     },
     {
      "type": "boolean",
      "name": "hasInvocationForPotentialStubbing",
      "params": []
     },
     {
      "type": null,
      "name": "setMethodForStubbing",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "List",
      "name": "getInvocations",
      "params": []
     },
     {
      "type": "List",
      "name": "getStubbedInvocations",
      "params": []
     },
     {
      "type": "Object",
      "name": "invokedMock",
      "params": []
     },
     {
      "type": "InvocationMatcher",
      "name": "getInvocationForStubbing",
      "params": []
     },
     {
      "type": "RegisteredInvocations",
      "name": "createRegisteredInvocations",
      "params": [
       {
        "type": "MockCreationSettings",
        "name": "mockSettings"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing",
  "filename": "InvocationContainerImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Answer",
      "name": "delegate"
     }
    ],
    "name": "ReturnsMoreEmptyValues",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "Object",
      "name": "returnValueFor",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.defaultanswers",
  "filename": "ReturnsMoreEmptyValues.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "MockitoCore",
      "name": "mockitoCore"
     },
     {
      "type": "Answer",
      "name": "delegate"
     }
    ],
    "name": "ReturnsMocks",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "Object",
      "name": "returnValueFor",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.defaultanswers",
  "filename": "ReturnsMocks.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Answer",
      "name": "implementation"
     }
    ],
    "name": "Answers",
    "methods": [
     {
      "type": "Answer",
      "name": "get",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.defaultanswers",
  "filename": "Answers.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Answer",
      "name": "delegate"
     }
    ],
    "name": "ReturnsSmartNulls",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.defaultanswers",
  "filename": "ReturnsSmartNulls.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "delegatedObject"
     }
    ],
    "name": "ForwardsInvocations",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "Method",
      "name": "getDelegateMethod",
      "params": [
       {
        "type": "Method",
        "name": "mockMethod"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "compatibleReturnTypes",
      "params": [
       {
        "type": "Class",
        "name": "superType"
       },
       {
        "type": "Class",
        "name": "subType"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.defaultanswers",
  "filename": "ForwardsInvocations.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ObjectMethodsGuru",
      "name": "methodsGuru"
     },
     {
      "type": "MockUtil",
      "name": "mockUtil"
     }
    ],
    "name": "ReturnsEmptyValues",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "Object",
      "name": "returnValueFor",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.defaultanswers",
  "filename": "ReturnsEmptyValues.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "ReturnsDeepStubs",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "Object",
      "name": "deepStub",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       },
       {
        "type": "GenericMetadataSupport",
        "name": "returnTypeGenericMetadata"
       }
      ]
     },
     {
      "type": "Object",
      "name": "newDeepStubMock",
      "params": [
       {
        "type": "GenericMetadataSupport",
        "name": "returnTypeGenericMetadata"
       },
       {
        "type": "Object",
        "name": "parentMock"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "withSettingsUsing",
      "params": [
       {
        "type": "GenericMetadataSupport",
        "name": "returnTypeGenericMetadata"
       },
       {
        "type": "MockCreationSettings",
        "name": "parentMockSettings"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "propagateSerializationSettings",
      "params": [
       {
        "type": "MockSettings",
        "name": "mockSettings"
       },
       {
        "type": "MockCreationSettings",
        "name": "parentMockSettings"
       }
      ]
     },
     {
      "type": "ReturnsDeepStubs",
      "name": "returnsDeepStubsAnswerUsing",
      "params": [
       {
        "type": "GenericMetadataSupport",
        "name": "returnTypeGenericMetadata"
       }
      ]
     },
     {
      "type": "Object",
      "name": "recordDeepStubAnswer",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "InvocationContainerImpl",
        "name": "container"
       }
      ]
     },
     {
      "type": "GenericMetadataSupport",
      "name": "actualParameterizedType",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": "MockitoCore",
      "name": "mockitoCore",
      "params": []
     },
     {
      "type": "ReturnsEmptyValues",
      "name": "delegate",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.defaultanswers",
  "filename": "ReturnsDeepStubs.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "GloballyConfiguredAnswer",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.defaultanswers",
  "filename": "GloballyConfiguredAnswer.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Class",
      "name": "throwableClass"
     },
     {
      "type": "ConditionalStackTraceFilter",
      "name": "filter"
     }
    ],
    "name": "ThrowsExceptionClass",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getThrowableClass",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "ThrowsExceptionClass.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "LAST_ARGUMENT"
     },
     {
      "type": "int",
      "name": "wantedArgumentPosition"
     }
    ],
    "name": "ReturnsArgumentAt",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "int",
      "name": "actualArgumentPosition",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "returningLastArg",
      "params": []
     },
     {
      "type": "int",
      "name": "argumentIndexOf",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "int",
      "name": "lastArgumentIndexOf",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "int",
      "name": "checkWithinAllowedRange",
      "params": [
       {
        "type": "int",
        "name": "argumentPosition"
       }
      ]
     },
     {
      "type": "int",
      "name": "wantedArgumentPosition",
      "params": []
     },
     {
      "type": null,
      "name": "validateIndexWithinInvocationRange",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "argumentPositionInRange",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "Class",
      "name": "returnedTypeOnSignature",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "ReturnsArgumentAt.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ClonesArguments",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "ClonesArguments.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "CallsRealMethods",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "CallsRealMethods.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Method",
      "name": "method"
     }
    ],
    "name": "MethodInfo",
    "methods": [
     {
      "type": "boolean",
      "name": "isValidException",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isValidReturnType",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isVoid",
      "params": []
     },
     {
      "type": "String",
      "name": "printMethodReturnType",
      "params": []
     },
     {
      "type": "String",
      "name": "getMethodName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "returnsPrimitive",
      "params": []
     },
     {
      "type": "Method",
      "name": "getMethod",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isDeclaredOnInterface",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isAbstract",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "MethodInfo.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "LinkedList",
      "name": "elements"
     }
    ],
    "name": "ReturnsElementsOf",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "ReturnsElementsOf.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Reporter",
      "name": "reporter"
     }
    ],
    "name": "AnswersValidator",
    "methods": [
     {
      "type": null,
      "name": "validate",
      "params": [
       {
        "type": "Answer",
        "name": "answer"
       },
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "validateReturnArgIdentity",
      "params": [
       {
        "type": "ReturnsArgumentAt",
        "name": "returnsArgumentAt"
       },
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "validateMockingConcreteClass",
      "params": [
       {
        "type": "CallsRealMethods",
        "name": "answer"
       },
       {
        "type": "MethodInfo",
        "name": "methodInfo"
       }
      ]
     },
     {
      "type": null,
      "name": "validateDoNothing",
      "params": [
       {
        "type": "DoesNothing",
        "name": "answer"
       },
       {
        "type": "MethodInfo",
        "name": "methodInfo"
       }
      ]
     },
     {
      "type": null,
      "name": "validateReturnValue",
      "params": [
       {
        "type": "Returns",
        "name": "answer"
       },
       {
        "type": "MethodInfo",
        "name": "methodInfo"
       }
      ]
     },
     {
      "type": null,
      "name": "validateException",
      "params": [
       {
        "type": "ThrowsException",
        "name": "answer"
       },
       {
        "type": "MethodInfo",
        "name": "methodInfo"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "AnswersValidator.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ReturnValues",
      "name": "returnValues"
     }
    ],
    "name": "AnswerReturnValuesAdapter",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "AnswerReturnValuesAdapter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "value"
     }
    ],
    "name": "Returns",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "String",
      "name": "printReturnType",
      "params": []
     },
     {
      "type": "Class",
      "name": "getReturnType",
      "params": []
     },
     {
      "type": "boolean",
      "name": "returnsNull",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "Returns.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Throwable",
      "name": "throwable"
     },
     {
      "type": "ConditionalStackTraceFilter",
      "name": "filter"
     }
    ],
    "name": "ThrowsException",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "Throwable",
      "name": "getThrowable",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "ThrowsException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "DoesNothing",
    "methods": [
     {
      "type": "Object",
      "name": "answer",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.stubbing.answers",
  "filename": "DoesNothing.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Pattern",
      "name": "CAPS"
     }
    ],
    "name": "Decamelizer",
    "methods": [
     {
      "type": "String",
      "name": "decamelizeMatcher",
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ]
     },
     {
      "type": "String",
      "name": "decamelizeClassName",
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "Decamelizer.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "StringBuilder",
      "name": "loggedInfo"
     }
    ],
    "name": "SimpleMockitoLogger",
    "methods": [
     {
      "type": null,
      "name": "log",
      "params": [
       {
        "type": "Object",
        "name": "what"
       }
      ]
     },
     {
      "type": "String",
      "name": "getLoggedInfo",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "SimpleMockitoLogger.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "durationMillis"
     },
     {
      "type": "long",
      "name": "startTime"
     }
    ],
    "name": "Timer",
    "methods": [
     {
      "type": "boolean",
      "name": "isCounting",
      "params": []
     },
     {
      "type": null,
      "name": "start",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "Timer.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "mockName"
     },
     {
      "type": "boolean",
      "name": "defaultName"
     }
    ],
    "name": "MockNameImpl",
    "methods": [
     {
      "type": "String",
      "name": "toInstanceName",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isDefault",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "MockNameImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Object",
      "name": "toInspect"
     },
     {
      "type": "MockUtil",
      "name": "delegate"
     }
    ],
    "name": "DefaultMockingDetails",
    "methods": [
     {
      "type": "boolean",
      "name": "isMock",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSpy",
      "params": []
     },
     {
      "type": "Collection",
      "name": "getInvocations",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "DefaultMockingDetails.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "ObjectMethodsGuru",
    "methods": [
     {
      "type": "boolean",
      "name": "isToString",
      "params": [
       {
        "type": "Method",
        "name": "method"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isToString",
      "params": [
       {
        "type": "MockitoMethod",
        "name": "method"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEqualsMethod",
      "params": [
       {
        "type": "Method",
        "name": "method"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isHashCodeMethod",
      "params": [
       {
        "type": "Method",
        "name": "method"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isCompareToMethod",
      "params": [
       {
        "type": "Method",
        "name": "method"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "ObjectMethodsGuru.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Map",
      "name": "PRIMITIVE_TYPES"
     },
     {
      "type": "Map",
      "name": "PRIMITIVE_OR_WRAPPER_DEFAULT_VALUES"
     }
    ],
    "name": "Primitives",
    "methods": [
     {
      "type": "Class",
      "name": "primitiveTypeOf",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isPrimitiveOrWrapper",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "T",
      "name": "defaultValueForPrimitiveOrWrapper",
      "params": [
       {
        "type": "Class",
        "name": "primitiveOrWrapperType"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "Primitives.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockitoLogger",
    "methods": [
     {
      "type": null,
      "name": "log",
      "params": [
       {
        "type": "Object",
        "name": "what"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "MockitoLogger.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockUtil",
      "name": "mockUtil"
     }
    ],
    "name": "MockCreationValidator",
    "methods": [
     {
      "type": null,
      "name": "validateType",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       }
      ]
     },
     {
      "type": null,
      "name": "validateExtraInterfaces",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       },
       {
        "type": "Collection",
        "name": "extraInterfaces"
       }
      ]
     },
     {
      "type": null,
      "name": "validateMockedType",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       },
       {
        "type": "Object",
        "name": "spiedInstance"
       }
      ]
     },
     {
      "type": null,
      "name": "validateDelegatedInstance",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       },
       {
        "type": "Object",
        "name": "delegatedInstance"
       }
      ]
     },
     {
      "type": null,
      "name": "validateSerializable",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       },
       {
        "type": "boolean",
        "name": "serializable"
       }
      ]
     },
     {
      "type": null,
      "name": "validateConstructorUse",
      "params": [
       {
        "type": "boolean",
        "name": "usingConstructor"
       },
       {
        "type": "SerializableMode",
        "name": "mode"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "MockCreationValidator.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "StringJoiner",
    "methods": [
     {
      "type": "String",
      "name": "join",
      "params": [
       {
        "type": "Object",
        "name": "linesToBreak"
       }
      ]
     },
     {
      "type": "String",
      "name": "join",
      "params": [
       {
        "type": "StringBuilder",
        "name": "out"
       },
       {
        "type": "Object",
        "name": "linesToBreak"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "StringJoiner.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ConsoleMockitoLogger",
    "methods": [
     {
      "type": null,
      "name": "log",
      "params": [
       {
        "type": "Object",
        "name": "what"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "ConsoleMockitoLogger.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "RemoveFirstLine",
    "methods": [
     {
      "type": "String",
      "name": "of",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "RemoveFirstLine.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockMaker",
      "name": "mockMaker"
     }
    ],
    "name": "MockUtil",
    "methods": [
     {
      "type": "boolean",
      "name": "isTypeMockable",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "T",
      "name": "createMock",
      "params": [
       {
        "type": "MockCreationSettings",
        "name": "settings"
       }
      ]
     },
     {
      "type": null,
      "name": "resetMock",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "InternalMockHandler",
      "name": "getMockHandler",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isMock",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSpy",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isMockitoMock",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "MockName",
      "name": "getMockName",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": null,
      "name": "maybeRedefineMockName",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "String",
        "name": "newName"
       }
      ]
     },
     {
      "type": "MockCreationSettings",
      "name": "getMockSettings",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "MockUtil.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Checks",
    "methods": [
     {
      "type": "T",
      "name": "checkNotNull",
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "String",
        "name": "checkedValue"
       }
      ]
     },
     {
      "type": "T",
      "name": "checkItemsNotNull",
      "params": [
       {
        "type": "T",
        "name": "iterable"
       },
       {
        "type": "String",
        "name": "checkedIterable"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util",
  "filename": "Checks.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "SET_PREFIX"
     },
     {
      "type": "Object",
      "name": "target"
     },
     {
      "type": "boolean",
      "name": "reportNoSetterFound"
     },
     {
      "type": "Field",
      "name": "field"
     }
    ],
    "name": "BeanPropertySetter",
    "methods": [
     {
      "type": "boolean",
      "name": "set",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "String",
      "name": "setterName",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ]
     },
     {
      "type": null,
      "name": "reportNoSetterFound",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "BeanPropertySetter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "FieldCopier",
    "methods": [
     {
      "type": null,
      "name": "copyValue",
      "params": [
       {
        "type": "T",
        "name": "from"
       },
       {
        "type": "T",
        "name": "to"
       },
       {
        "type": "Field",
        "name": "field"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "FieldCopier.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "GenericMaster",
    "methods": [
     {
      "type": "Class",
      "name": "getGenericType",
      "params": [
       {
        "type": "Field",
        "name": "field"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "GenericMaster.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Field",
      "name": "field"
     },
     {
      "type": "Object",
      "name": "instance"
     },
     {
      "type": "FieldReader",
      "name": "fieldReader"
     }
    ],
    "name": "InstanceField",
    "methods": [
     {
      "type": "Object",
      "name": "read",
      "params": []
     },
     {
      "type": null,
      "name": "set",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isNull",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isAnnotatedBy",
      "params": [
       {
        "type": "Class",
        "name": "annotationClass"
       }
      ]
     },
     {
      "type": "A",
      "name": "annotation",
      "params": [
       {
        "type": "Class",
        "name": "annotationClass"
       }
      ]
     },
     {
      "type": "Field",
      "name": "jdkField",
      "params": []
     },
     {
      "type": "FieldReader",
      "name": "reader",
      "params": []
     },
     {
      "type": "String",
      "name": "name",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "InstanceField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Object",
      "name": "fieldInstance"
     },
     {
      "type": "boolean",
      "name": "wasInitialized"
     },
     {
      "type": "boolean",
      "name": "wasInitializedUsingConstructorArgs"
     }
    ],
    "name": "FieldInitializationReport",
    "methods": [
     {
      "type": "Object",
      "name": "fieldInstance",
      "params": []
     },
     {
      "type": "boolean",
      "name": "fieldWasInitialized",
      "params": []
     },
     {
      "type": "boolean",
      "name": "fieldWasInitializedUsingContructorArgs",
      "params": []
     },
     {
      "type": "Class",
      "name": "fieldClass",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "FieldInitializationReport.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Map",
      "name": "contextualActualTypeParameters"
     }
    ],
    "name": "GenericMetadataSupport",
    "methods": [
     {
      "type": null,
      "name": "registerTypeVariablesOn",
      "params": [
       {
        "type": "Type",
        "name": "classType"
       }
      ]
     },
     {
      "type": null,
      "name": "registerTypeParametersOn",
      "params": [
       {
        "type": "TypeVariable",
        "name": "typeParameters"
       }
      ]
     },
     {
      "type": null,
      "name": "registerTypeVariableIfNotPresent",
      "params": [
       {
        "type": "TypeVariable",
        "name": "typeVariable"
       }
      ]
     },
     {
      "type": "BoundedType",
      "name": "boundsOf",
      "params": [
       {
        "type": "TypeVariable",
        "name": "typeParameter"
       }
      ]
     },
     {
      "type": "BoundedType",
      "name": "boundsOf",
      "params": [
       {
        "type": "WildcardType",
        "name": "wildCard"
       }
      ]
     },
     {
      "type": "Class",
      "name": "rawType",
      "params": []
     },
     {
      "type": "List",
      "name": "extraInterfaces",
      "params": []
     },
     {
      "type": "Class",
      "name": "rawExtraInterfaces",
      "params": []
     },
     {
      "type": "boolean",
      "name": "hasRawExtraInterfaces",
      "params": []
     },
     {
      "type": "Map",
      "name": "actualTypeArguments",
      "params": []
     },
     {
      "type": "Type",
      "name": "getActualTypeArgumentFor",
      "params": [
       {
        "type": "TypeVariable",
        "name": "typeParameter"
       }
      ]
     },
     {
      "type": "GenericMetadataSupport",
      "name": "resolveGenericReturnType",
      "params": [
       {
        "type": "Method",
        "name": "method"
       }
      ]
     },
     {
      "type": "GenericMetadataSupport",
      "name": "inferFrom",
      "params": [
       {
        "type": "Type",
        "name": "type"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "GenericMetadataSupport.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Object",
      "name": "target"
     },
     {
      "type": "Field",
      "name": "field"
     },
     {
      "type": "AccessibilityChanger",
      "name": "changer"
     }
    ],
    "name": "FieldReader",
    "methods": [
     {
      "type": "boolean",
      "name": "isNull",
      "params": []
     },
     {
      "type": "Object",
      "name": "read",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "FieldReader.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Fields",
    "methods": [
     {
      "type": "InstanceFields",
      "name": "allDeclaredFieldsOf",
      "params": [
       {
        "type": "Object",
        "name": "instance"
       }
      ]
     },
     {
      "type": "InstanceFields",
      "name": "declaredFieldsOf",
      "params": [
       {
        "type": "Object",
        "name": "instance"
       }
      ]
     },
     {
      "type": "List",
      "name": "instanceFieldsIn",
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Field",
        "name": "fields"
       }
      ]
     },
     {
      "type": "Filter",
      "name": "annotatedBy",
      "params": [
       {
        "type": "Class",
        "name": "annotations"
       }
      ]
     },
     {
      "type": "Filter",
      "name": "nullField",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "Fields.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Object",
      "name": "fieldOwner"
     },
     {
      "type": "Field",
      "name": "field"
     },
     {
      "type": "ConstructorInstantiator",
      "name": "instantiator"
     }
    ],
    "name": "FieldInitializer",
    "methods": [
     {
      "type": "FieldInitializationReport",
      "name": "initialize",
      "params": []
     },
     {
      "type": null,
      "name": "checkNotLocal",
      "params": [
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "checkNotInner",
      "params": [
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "checkNotInterface",
      "params": [
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "checkNotAbstract",
      "params": [
       {
        "type": "Field",
        "name": "field"
       }
      ]
     },
     {
      "type": "FieldInitializationReport",
      "name": "acquireFieldInstance",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "FieldInitializer.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Boolean",
      "name": "wasAccessible"
     }
    ],
    "name": "AccessibilityChanger",
    "methods": [
     {
      "type": null,
      "name": "safelyDisableAccess",
      "params": [
       {
        "type": "AccessibleObject",
        "name": "accessibleObject"
       }
      ]
     },
     {
      "type": null,
      "name": "enableAccess",
      "params": [
       {
        "type": "AccessibleObject",
        "name": "accessibleObject"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "AccessibilityChanger.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Constructors",
    "methods": [
     {
      "type": "Constructor",
      "name": "noArgConstructorOf",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "Constructors.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Whitebox",
    "methods": [
     {
      "type": "Object",
      "name": "getInternalState",
      "params": [
       {
        "type": "Object",
        "name": "target"
       },
       {
        "type": "String",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "setInternalState",
      "params": [
       {
        "type": "Object",
        "name": "target"
       },
       {
        "type": "String",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ]
     },
     {
      "type": "Field",
      "name": "getFieldFromHierarchy",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "String",
        "name": "field"
       }
      ]
     },
     {
      "type": "Field",
      "name": "getField",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "String",
        "name": "field"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "Whitebox.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "FieldCopier",
      "name": "fieldCopier"
     }
    ],
    "name": "LenientCopyTool",
    "methods": [
     {
      "type": null,
      "name": "copyToMock",
      "params": [
       {
        "type": "T",
        "name": "from"
       },
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": null,
      "name": "copyToRealObject",
      "params": [
       {
        "type": "T",
        "name": "from"
       },
       {
        "type": "T",
        "name": "to"
       }
      ]
     },
     {
      "type": null,
      "name": "copy",
      "params": [
       {
        "type": "T",
        "name": "from"
       },
       {
        "type": "T",
        "name": "to"
       },
       {
        "type": "Class",
        "name": "fromClazz"
       },
       {
        "type": "Class",
        "name": "toClass"
       }
      ]
     },
     {
      "type": null,
      "name": "copyValues",
      "params": [
       {
        "type": "T",
        "name": "from"
       },
       {
        "type": "T",
        "name": "mock"
       },
       {
        "type": "Class",
        "name": "classFrom"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "LenientCopyTool.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Object",
      "name": "target"
     },
     {
      "type": "Field",
      "name": "field"
     }
    ],
    "name": "FieldSetter",
    "methods": [
     {
      "type": null,
      "name": "set",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.reflection",
  "filename": "FieldSetter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "JUnitFailureHacker",
    "methods": [
     {
      "type": null,
      "name": "appendWarnings",
      "params": [
       {
        "type": "Failure",
        "name": "failure"
       },
       {
        "type": "String",
        "name": "warnings"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "String",
        "name": "warnings"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.junit",
  "filename": "JUnitFailureHacker.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "HashSet",
      "name": "backingHashSet"
     }
    ],
    "name": "HashCodeAndEqualsSafeSet",
    "methods": [
     {
      "type": "Iterator",
      "name": "iterator",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": []
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "add",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "remove",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": null,
      "name": "clear",
      "params": []
     },
     {
      "type": "Object",
      "name": "clone",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "Object",
      "name": "toArray",
      "params": []
     },
     {
      "type": "T",
      "name": "unwrapTo",
      "params": [
       {
        "type": "T",
        "name": "array"
       }
      ]
     },
     {
      "type": "T",
      "name": "toArray",
      "params": [
       {
        "type": "T",
        "name": "typedArray"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "removeAll",
      "params": [
       {
        "type": "Collection",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsAll",
      "params": [
       {
        "type": "Collection",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "addAll",
      "params": [
       {
        "type": "Collection",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "retainAll",
      "params": [
       {
        "type": "Collection",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "HashSet",
      "name": "asWrappedMocks",
      "params": [
       {
        "type": "Collection",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "HashCodeAndEqualsSafeSet",
      "name": "of",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "HashCodeAndEqualsSafeSet",
      "name": "of",
      "params": [
       {
        "type": "Iterable",
        "name": "objects"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.collections",
  "filename": "HashCodeAndEqualsSafeSet.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Object",
      "name": "mockInstance"
     }
    ],
    "name": "HashCodeAndEqualsMockWrapper",
    "methods": [
     {
      "type": "Object",
      "name": "get",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "HashCodeAndEqualsMockWrapper",
      "name": "of",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "typeInstanceString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.collections",
  "filename": "HashCodeAndEqualsMockWrapper.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ArrayUtils",
    "methods": [
     {
      "type": "boolean",
      "name": "isEmpty",
      "params": [
       {
        "type": "T",
        "name": "array"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.collections",
  "filename": "ArrayUtils.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Sets",
    "methods": [
     {
      "type": "Set",
      "name": "newMockSafeHashSet",
      "params": [
       {
        "type": "Iterable",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "Set",
      "name": "newMockSafeHashSet",
      "params": [
       {
        "type": "Object",
        "name": "mocks"
       }
      ]
     },
     {
      "type": "IdentitySet",
      "name": "newIdentitySet",
      "params": []
     },
     {
      "type": "Set",
      "name": "newSet",
      "params": [
       {
        "type": "T",
        "name": "elements"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.collections",
  "filename": "Sets.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ListUtil",
    "methods": [
     {
      "type": "LinkedList",
      "name": "filter",
      "params": [
       {
        "type": "Collection",
        "name": "collection"
       },
       {
        "type": "Filter",
        "name": "filter"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.collections",
  "filename": "ListUtil.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Iterables",
    "methods": [
     {
      "type": "Iterable",
      "name": "toIterable",
      "params": [
       {
        "type": "Enumeration",
        "name": "in"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.collections",
  "filename": "Iterables.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "LinkedList",
      "name": "list"
     }
    ],
    "name": "IdentitySet",
    "methods": [
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.collections",
  "filename": "IdentitySet.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "IOUtil",
    "methods": [
     {
      "type": null,
      "name": "writeText",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "File",
        "name": "output"
       }
      ]
     },
     {
      "type": "Collection",
      "name": "readLines",
      "params": [
       {
        "type": "InputStream",
        "name": "is"
       }
      ]
     },
     {
      "type": null,
      "name": "closeQuietly",
      "params": [
       {
        "type": "Closeable",
        "name": "closeable"
       }
      ]
     },
     {
      "type": null,
      "name": "close",
      "params": [
       {
        "type": "Closeable",
        "name": "closeable"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.util.io",
  "filename": "IOUtil.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Method",
      "name": "method"
     }
    ],
    "name": "DelegatingMethod",
    "methods": [
     {
      "type": "Class",
      "name": "getExceptionTypes",
      "params": []
     },
     {
      "type": "Method",
      "name": "getJavaMethod",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "Class",
      "name": "getParameterTypes",
      "params": []
     },
     {
      "type": "Class",
      "name": "getReturnType",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isVarArgs",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isAbstract",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation",
  "filename": "DelegatingMethod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "boolean",
      "name": "useConstructor"
     },
     {
      "type": "Object",
      "name": "outerClassInstance"
     }
    ],
    "name": "MockSettingsImpl",
    "methods": [
     {
      "type": "MockSettings",
      "name": "serializable",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "serializable",
      "params": [
       {
        "type": "SerializableMode",
        "name": "mode"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "extraInterfaces",
      "params": [
       {
        "type": "Class",
        "name": "extraInterfaces"
       }
      ]
     },
     {
      "type": "MockName",
      "name": "getMockName",
      "params": []
     },
     {
      "type": "Set",
      "name": "getExtraInterfaces",
      "params": []
     },
     {
      "type": "Object",
      "name": "getSpiedInstance",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "name",
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "spiedInstance",
      "params": [
       {
        "type": "Object",
        "name": "spiedInstance"
       }
      ]
     },
     {
      "type": "MockSettings",
      "name": "defaultAnswer",
      "params": [
       {
        "type": "Answer",
        "name": "defaultAnswer"
       }
      ]
     },
     {
      "type": "Answer",
      "name": "getDefaultAnswer",
      "params": []
     },
     {
      "type": "MockSettingsImpl",
      "name": "stubOnly",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "useConstructor",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "outerInstance",
      "params": [
       {
        "type": "Object",
        "name": "outerClassInstance"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isUsingConstructor",
      "params": []
     },
     {
      "type": "Object",
      "name": "getOuterClassInstance",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isStubOnly",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "verboseLogging",
      "params": []
     },
     {
      "type": "MockSettings",
      "name": "invocationListeners",
      "params": [
       {
        "type": "InvocationListener",
        "name": "listeners"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "invocationListenersContainsType",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "List",
      "name": "getInvocationListeners",
      "params": []
     },
     {
      "type": "boolean",
      "name": "hasInvocationListeners",
      "params": []
     },
     {
      "type": "Class",
      "name": "getTypeToMock",
      "params": []
     },
     {
      "type": "MockCreationSettings",
      "name": "confirm",
      "params": [
       {
        "type": "Class",
        "name": "typeToMock"
       }
      ]
     },
     {
      "type": "CreationSettings",
      "name": "validatedSettings",
      "params": [
       {
        "type": "Class",
        "name": "typeToMock"
       },
       {
        "type": "CreationSettings",
        "name": "source"
       }
      ]
     },
     {
      "type": "Set",
      "name": "prepareExtraInterfaces",
      "params": [
       {
        "type": "CreationSettings",
        "name": "settings"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation",
  "filename": "MockSettingsImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InstantationException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.internal.creation.instance",
  "filename": "InstantationException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Instantiator",
      "name": "INSTANCE"
     }
    ],
    "name": "InstantiatorProvider",
    "methods": [
     {
      "type": "Instantiator",
      "name": "getInstantiator",
      "params": [
       {
        "type": "MockCreationSettings",
        "name": "settings"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.instance",
  "filename": "InstantiatorProvider.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ObjenesisStd",
      "name": "objenesis"
     }
    ],
    "name": "ObjenesisInstantiator",
    "methods": [
     {
      "type": "T",
      "name": "newInstance",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.instance",
  "filename": "ObjenesisInstantiator.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Instantiator",
    "methods": [
     {
      "type": "T",
      "name": "newInstance",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.instance",
  "filename": "Instantiator.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Object",
      "name": "outerClassInstance"
     }
    ],
    "name": "ConstructorInstantiator",
    "methods": [
     {
      "type": "T",
      "name": "newInstance",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     },
     {
      "type": "T",
      "name": "withParams",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Object",
        "name": "params"
       }
      ]
     },
     {
      "type": "InstantationException",
      "name": "paramsException",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Exception",
        "name": "e"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "paramsMatch",
      "params": [
       {
        "type": "Class",
        "name": "types"
       },
       {
        "type": "Object",
        "name": "params"
       }
      ]
     },
     {
      "type": "T",
      "name": "noArgConstructor",
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.instance",
  "filename": "ConstructorInstantiator.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "typeToMock"
     },
     {
      "type": "Set",
      "name": "extraInterfaces"
     },
     {
      "type": "String",
      "name": "name"
     },
     {
      "type": "Object",
      "name": "spiedInstance"
     },
     {
      "type": "Answer",
      "name": "defaultAnswer"
     },
     {
      "type": "MockName",
      "name": "mockName"
     },
     {
      "type": "SerializableMode",
      "name": "serializableMode"
     },
     {
      "type": "List",
      "name": "invocationListeners"
     },
     {
      "type": "boolean",
      "name": "stubOnly"
     },
     {
      "type": "boolean",
      "name": "useConstructor"
     },
     {
      "type": "Object",
      "name": "outerClassInstance"
     }
    ],
    "name": "CreationSettings",
    "methods": [
     {
      "type": "Class",
      "name": "getTypeToMock",
      "params": []
     },
     {
      "type": "CreationSettings",
      "name": "setTypeToMock",
      "params": [
       {
        "type": "Class",
        "name": "typeToMock"
       }
      ]
     },
     {
      "type": "Set",
      "name": "getExtraInterfaces",
      "params": []
     },
     {
      "type": "CreationSettings",
      "name": "setExtraInterfaces",
      "params": [
       {
        "type": "Set",
        "name": "extraInterfaces"
       }
      ]
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "Object",
      "name": "getSpiedInstance",
      "params": []
     },
     {
      "type": "Answer",
      "name": "getDefaultAnswer",
      "params": []
     },
     {
      "type": "MockName",
      "name": "getMockName",
      "params": []
     },
     {
      "type": "CreationSettings",
      "name": "setMockName",
      "params": [
       {
        "type": "MockName",
        "name": "mockName"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSerializable",
      "params": []
     },
     {
      "type": "SerializableMode",
      "name": "getSerializableMode",
      "params": []
     },
     {
      "type": "List",
      "name": "getInvocationListeners",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isUsingConstructor",
      "params": []
     },
     {
      "type": "Object",
      "name": "getOuterClassInstance",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isStubOnly",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.settings",
  "filename": "CreationSettings.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Callback",
      "name": "SERIALIZABLE_INSTANCE"
     }
    ],
    "name": "SerializableNoOp",
    "methods": []
   }
  ],
  "package_name": "org.mockito.internal.creation.cglib",
  "filename": "SerializableNoOp.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "MOCKITO_PROXY_MARKER"
     },
     {
      "type": "boolean",
      "name": "instanceLocalCurrentlySerializingFlag"
     },
     {
      "type": "Lock",
      "name": "mutex"
     }
    ],
    "name": "AcrossJVMSerializationFeature",
    "methods": [
     {
      "type": "boolean",
      "name": "isWriteReplace",
      "params": [
       {
        "type": "Method",
        "name": "method"
       }
      ]
     },
     {
      "type": "Object",
      "name": "writeReplace",
      "params": [
       {
        "type": "Object",
        "name": "mockitoMock"
       }
      ]
     },
     {
      "type": null,
      "name": "mockReplacementCompleted",
      "params": []
     },
     {
      "type": null,
      "name": "mockReplacementStarted",
      "params": []
     },
     {
      "type": "boolean",
      "name": "mockIsCurrentlyBeingReplaced",
      "params": []
     },
     {
      "type": null,
      "name": "enableSerializationAcrossJVM",
      "params": [
       {
        "type": "MockCreationSettings",
        "name": "settings"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.cglib",
  "filename": "AcrossJVMSerializationFeature.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "c1"
     },
     {
      "type": "Class",
      "name": "c2"
     },
     {
      "type": "String",
      "name": "desc"
     },
     {
      "type": "String",
      "name": "name"
     },
     {
      "type": "String",
      "name": "superName"
     },
     {
      "type": "MethodProxy",
      "name": "methodProxy"
     }
    ],
    "name": "SerializableMockitoMethodProxy",
    "methods": [
     {
      "type": "MethodProxy",
      "name": "getMethodProxy",
      "params": []
     },
     {
      "type": "Object",
      "name": "invokeSuper",
      "params": [
       {
        "type": "Object",
        "name": "target"
       },
       {
        "type": "Object",
        "name": "arguments"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.cglib",
  "filename": "SerializableMockitoMethodProxy.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Instantiator",
      "name": "instantiator"
     },
     {
      "type": "NamingPolicy",
      "name": "NAMING_POLICY_THAT_ALLOWS_IMPOSTERISATION_OF_CLASSES_IN_SIGNED_PACKAGES"
     },
     {
      "type": "CallbackFilter",
      "name": "IGNORE_BRIDGE_METHODS"
     }
    ],
    "name": "ClassImposterizer",
    "methods": [
     {
      "type": "T",
      "name": "imposterise",
      "params": [
       {
        "type": "MethodInterceptor",
        "name": "interceptor"
       },
       {
        "type": "Class",
        "name": "mockedType"
       },
       {
        "type": "Collection",
        "name": "ancillaryTypes"
       }
      ]
     },
     {
      "type": "T",
      "name": "imposterise",
      "params": [
       {
        "type": "MethodInterceptor",
        "name": "interceptor"
       },
       {
        "type": "Class",
        "name": "mockedType"
       },
       {
        "type": "Class",
        "name": "ancillaryTypes"
       }
      ]
     },
     {
      "type": "String",
      "name": "describeClass",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "String",
      "name": "describeClass",
      "params": [
       {
        "type": "Object",
        "name": "instance"
       }
      ]
     },
     {
      "type": null,
      "name": "setConstructorsAccessible",
      "params": [
       {
        "type": "Class",
        "name": "mockedType"
       },
       {
        "type": "boolean",
        "name": "accessible"
       }
      ]
     },
     {
      "type": "Class",
      "name": "createProxyClass",
      "params": [
       {
        "type": "Class",
        "name": "mockedType"
       },
       {
        "type": "Class",
        "name": "interfaces"
       }
      ]
     },
     {
      "type": "Object",
      "name": "createProxy",
      "params": [
       {
        "type": "Class",
        "name": "proxyClass"
       },
       {
        "type": "MethodInterceptor",
        "name": "interceptor"
       }
      ]
     },
     {
      "type": "Class",
      "name": "prepend",
      "params": [
       {
        "type": "Class",
        "name": "first"
       },
       {
        "type": "Class",
        "name": "rest"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.cglib",
  "filename": "ClassImposterizer.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "CglibMockMaker",
    "methods": [
     {
      "type": "T",
      "name": "createMock",
      "params": [
       {
        "type": "MockCreationSettings",
        "name": "settings"
       },
       {
        "type": "MockHandler",
        "name": "handler"
       }
      ]
     },
     {
      "type": "InternalMockHandler",
      "name": "cast",
      "params": [
       {
        "type": "MockHandler",
        "name": "handler"
       }
      ]
     },
     {
      "type": null,
      "name": "resetMock",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "MockHandler",
        "name": "newHandler"
       },
       {
        "type": "MockCreationSettings",
        "name": "settings"
       }
      ]
     },
     {
      "type": "MockHandler",
      "name": "getHandler",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.cglib",
  "filename": "CglibMockMaker.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "InternalMockHandler",
      "name": "handler"
     },
     {
      "type": "ObjectMethodsGuru",
      "name": "objectMethodsGuru"
     },
     {
      "type": "MockCreationSettings",
      "name": "mockSettings"
     },
     {
      "type": "AcrossJVMSerializationFeature",
      "name": "acrossJVMSerializationFeature"
     }
    ],
    "name": "MethodInterceptorFilter",
    "methods": [
     {
      "type": "Object",
      "name": "intercept",
      "params": [
       {
        "type": "Object",
        "name": "proxy"
       },
       {
        "type": "Method",
        "name": "method"
       },
       {
        "type": "Object",
        "name": "args"
       },
       {
        "type": "MethodProxy",
        "name": "methodProxy"
       }
      ]
     },
     {
      "type": "MockHandler",
      "name": "getHandler",
      "params": []
     },
     {
      "type": "int",
      "name": "hashCodeForMock",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": "MockitoMethodProxy",
      "name": "createMockitoMethodProxy",
      "params": [
       {
        "type": "MethodProxy",
        "name": "methodProxy"
       }
      ]
     },
     {
      "type": "MockitoMethod",
      "name": "createMockitoMethod",
      "params": [
       {
        "type": "Method",
        "name": "method"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.cglib",
  "filename": "MethodInterceptorFilter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockitoNamingPolicy",
      "name": "INSTANCE"
     }
    ],
    "name": "MockitoNamingPolicy",
    "methods": [
     {
      "type": "String",
      "name": "getTag",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.cglib",
  "filename": "MockitoNamingPolicy.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "CGLIBHacker",
    "methods": [
     {
      "type": null,
      "name": "setMockitoNamingPolicy",
      "params": [
       {
        "type": "MethodProxy",
        "name": "methodProxy"
       }
      ]
     },
     {
      "type": "Field",
      "name": "reflectOnCreateInfo",
      "params": [
       {
        "type": "MethodProxy",
        "name": "methodProxy"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.cglib",
  "filename": "CGLIBHacker.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MethodProxy",
      "name": "methodProxy"
     }
    ],
    "name": "DelegatingMockitoMethodProxy",
    "methods": [
     {
      "type": "Object",
      "name": "invokeSuper",
      "params": [
       {
        "type": "Object",
        "name": "target"
       },
       {
        "type": "Object",
        "name": "arguments"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.cglib",
  "filename": "DelegatingMockitoMethodProxy.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ClassLoader",
      "name": "nextToSearch"
     }
    ],
    "name": "SearchingClassLoader",
    "methods": [
     {
      "type": "ClassLoader",
      "name": "combineLoadersOf",
      "params": [
       {
        "type": "Class",
        "name": "classes"
       }
      ]
     },
     {
      "type": "ClassLoader",
      "name": "combineLoadersOf",
      "params": [
       {
        "type": "Class",
        "name": "first"
       },
       {
        "type": "Class",
        "name": "others"
       }
      ]
     },
     {
      "type": "ClassLoader",
      "name": "combine",
      "params": [
       {
        "type": "List",
        "name": "parentLoaders"
       }
      ]
     },
     {
      "type": null,
      "name": "addIfNewElement",
      "params": [
       {
        "type": "List",
        "name": "loaders"
       },
       {
        "type": "ClassLoader",
        "name": "c"
       }
      ]
     },
     {
      "type": "Class",
      "name": "findClass",
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.util",
  "filename": "SearchingClassLoader.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockitoMethodProxy",
    "methods": [
     {
      "type": "Object",
      "name": "invokeSuper",
      "params": [
       {
        "type": "Object",
        "name": "target"
       },
       {
        "type": "Object",
        "name": "arguments"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.creation.util",
  "filename": "MockitoMethodProxy.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "MatchersBinder",
    "methods": [
     {
      "type": "InvocationMatcher",
      "name": "bindMatchers",
      "params": [
       {
        "type": "ArgumentMatcherStorage",
        "name": "argumentMatcherStorage"
       },
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "validateMatchers",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       },
       {
        "type": "List",
        "name": "lastMatchers"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "MatchersBinder.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ArgumentsComparator",
    "methods": [
     {
      "type": "boolean",
      "name": "argumentsMatch",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "invocationMatcher"
       },
       {
        "type": "Invocation",
        "name": "actual"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "argumentsMatch",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "invocationMatcher"
       },
       {
        "type": "Object",
        "name": "actualArgs"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "varArgsMatch",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "invocationMatcher"
       },
       {
        "type": "Invocation",
        "name": "actual"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "ArgumentsComparator.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ArgumentsProcessor",
    "methods": [
     {
      "type": "Object",
      "name": "expandVarArgs",
      "params": [
       {
        "type": "boolean",
        "name": "isVarArgs"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ]
     },
     {
      "type": "List",
      "name": "argumentsToMatchers",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "ArgumentsProcessor.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DescribedInvocation",
      "name": "stubbedAt"
     }
    ],
    "name": "StubInfoImpl",
    "methods": [
     {
      "type": "Location",
      "name": "stubbedAt",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "StubInfoImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AbstractAwareMethod",
    "methods": [
     {
      "type": "boolean",
      "name": "isAbstract",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "AbstractAwareMethod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Invocation",
      "name": "invocation"
     },
     {
      "type": "List",
      "name": "matchers"
     }
    ],
    "name": "InvocationMatcher",
    "methods": [
     {
      "type": "Method",
      "name": "getMethod",
      "params": []
     },
     {
      "type": "Invocation",
      "name": "getInvocation",
      "params": []
     },
     {
      "type": "List",
      "name": "getMatchers",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "boolean",
      "name": "matches",
      "params": [
       {
        "type": "Invocation",
        "name": "actual"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "safelyArgumentsMatch",
      "params": [
       {
        "type": "Object",
        "name": "actualArgs"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "hasSimilarMethod",
      "params": [
       {
        "type": "Invocation",
        "name": "candidate"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "hasSameMethod",
      "params": [
       {
        "type": "Invocation",
        "name": "candidate"
       }
      ]
     },
     {
      "type": "Location",
      "name": "getLocation",
      "params": []
     },
     {
      "type": null,
      "name": "captureArgumentsFrom",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isVarargMatcher",
      "params": [
       {
        "type": "Matcher",
        "name": "matcher"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isVariableArgument",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       },
       {
        "type": "int",
        "name": "position"
       }
      ]
     },
     {
      "type": "List",
      "name": "createFrom",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "InvocationMatcher.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InvocationMarker",
    "methods": [
     {
      "type": null,
      "name": "markVerified",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "CapturesArgumensFromInvocation",
        "name": "wanted"
       }
      ]
     },
     {
      "type": null,
      "name": "markVerified",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       },
       {
        "type": "CapturesArgumensFromInvocation",
        "name": "wanted"
       }
      ]
     },
     {
      "type": null,
      "name": "markVerifiedInOrder",
      "params": [
       {
        "type": "List",
        "name": "chunk"
       },
       {
        "type": "CapturesArgumensFromInvocation",
        "name": "wanted"
       },
       {
        "type": "InOrderContext",
        "name": "context"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "InvocationMarker.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "UnusedStubsFinder",
    "methods": [
     {
      "type": "List",
      "name": "find",
      "params": [
       {
        "type": "List",
        "name": "mocks"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "UnusedStubsFinder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "declaringClass"
     },
     {
      "type": "String",
      "name": "methodName"
     },
     {
      "type": "Class",
      "name": "parameterTypes"
     },
     {
      "type": "Class",
      "name": "returnType"
     },
     {
      "type": "Class",
      "name": "exceptionTypes"
     },
     {
      "type": "boolean",
      "name": "isVarArgs"
     },
     {
      "type": "boolean",
      "name": "isAbstract"
     }
    ],
    "name": "SerializableMethod",
    "methods": [
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "Class",
      "name": "getReturnType",
      "params": []
     },
     {
      "type": "Class",
      "name": "getParameterTypes",
      "params": []
     },
     {
      "type": "Class",
      "name": "getExceptionTypes",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isVarArgs",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isAbstract",
      "params": []
     },
     {
      "type": "Method",
      "name": "getJavaMethod",
      "params": []
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "SerializableMethod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "sequenceNumber"
     },
     {
      "type": "Object",
      "name": "mock"
     },
     {
      "type": "MockitoMethod",
      "name": "method"
     },
     {
      "type": "Object",
      "name": "arguments"
     },
     {
      "type": "Object",
      "name": "rawArguments"
     },
     {
      "type": "Location",
      "name": "location"
     },
     {
      "type": "boolean",
      "name": "verified"
     },
     {
      "type": "boolean",
      "name": "isIgnoredForVerification"
     },
     {
      "type": "RealMethod",
      "name": "realMethod"
     },
     {
      "type": "StubInfo",
      "name": "stubInfo"
     }
    ],
    "name": "InvocationImpl",
    "methods": [
     {
      "type": "Object",
      "name": "getMock",
      "params": []
     },
     {
      "type": "Method",
      "name": "getMethod",
      "params": []
     },
     {
      "type": "Object",
      "name": "getArguments",
      "params": []
     },
     {
      "type": "T",
      "name": "getArgumentAt",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isVerified",
      "params": []
     },
     {
      "type": "int",
      "name": "getSequenceNumber",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equalArguments",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "Location",
      "name": "getLocation",
      "params": []
     },
     {
      "type": "Object",
      "name": "getRawArguments",
      "params": []
     },
     {
      "type": "Object",
      "name": "callRealMethod",
      "params": []
     },
     {
      "type": null,
      "name": "markVerified",
      "params": []
     },
     {
      "type": "StubInfo",
      "name": "stubInfo",
      "params": []
     },
     {
      "type": null,
      "name": "markStubbed",
      "params": [
       {
        "type": "StubInfo",
        "name": "stubInfo"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isIgnoredForVerification",
      "params": []
     },
     {
      "type": null,
      "name": "ignoreForVerification",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "InvocationImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockitoMethod",
    "methods": [
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "Class",
      "name": "getReturnType",
      "params": []
     },
     {
      "type": "Class",
      "name": "getParameterTypes",
      "params": []
     },
     {
      "type": "Class",
      "name": "getExceptionTypes",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isVarArgs",
      "params": []
     },
     {
      "type": "Method",
      "name": "getJavaMethod",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "MockitoMethod.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "CapturesArgumensFromInvocation",
    "methods": [
     {
      "type": null,
      "name": "captureArgumentsFrom",
      "params": [
       {
        "type": "Invocation",
        "name": "i"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "CapturesArgumensFromInvocation.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InvocationsFinder",
    "methods": [
     {
      "type": "List",
      "name": "findInvocations",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       }
      ]
     },
     {
      "type": "List",
      "name": "findAllMatchingUnverifiedChunks",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "InOrderContext",
        "name": "orderingContext"
       }
      ]
     },
     {
      "type": "List",
      "name": "findMatchingChunk",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "int",
        "name": "wantedCount"
       },
       {
        "type": "InOrderContext",
        "name": "context"
       }
      ]
     },
     {
      "type": "List",
      "name": "getFirstMatchingChunk",
      "params": [
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "List",
        "name": "unverified"
       }
      ]
     },
     {
      "type": "Invocation",
      "name": "findFirstMatchingUnverifiedInvocation",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       },
       {
        "type": "InOrderContext",
        "name": "context"
       }
      ]
     },
     {
      "type": "Invocation",
      "name": "findSimilarInvocation",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InvocationMatcher",
        "name": "wanted"
       }
      ]
     },
     {
      "type": "Invocation",
      "name": "findFirstUnverified",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       }
      ]
     },
     {
      "type": "Invocation",
      "name": "findFirstUnverified",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": "Location",
      "name": "getLastLocation",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       }
      ]
     },
     {
      "type": "Invocation",
      "name": "findPreviousVerifiedInOrder",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InOrderContext",
        "name": "context"
       }
      ]
     },
     {
      "type": "List",
      "name": "removeVerifiedInOrder",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       },
       {
        "type": "InOrderContext",
        "name": "orderingContext"
       }
      ]
     },
     {
      "type": "Invocation",
      "name": "findFirstUnverifiedInOrder",
      "params": [
       {
        "type": "InOrderContext",
        "name": "context"
       },
       {
        "type": "List",
        "name": "orderedInvocations"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation",
  "filename": "InvocationsFinder.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "RealMethod",
    "methods": [
     {
      "type": "Object",
      "name": "invoke",
      "params": [
       {
        "type": "Object",
        "name": "target"
       },
       {
        "type": "Object",
        "name": "arguments"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation.realmethod",
  "filename": "RealMethod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "RealMethod",
      "name": "realMethod"
     }
    ],
    "name": "CleanTraceRealMethod",
    "methods": [
     {
      "type": "Object",
      "name": "invoke",
      "params": [
       {
        "type": "Object",
        "name": "target"
       },
       {
        "type": "Object",
        "name": "arguments"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation.realmethod",
  "filename": "CleanTraceRealMethod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "MockitoMethodProxy",
      "name": "methodProxy"
     }
    ],
    "name": "DefaultRealMethod",
    "methods": [
     {
      "type": "Object",
      "name": "invoke",
      "params": [
       {
        "type": "Object",
        "name": "target"
       },
       {
        "type": "Object",
        "name": "arguments"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation.realmethod",
  "filename": "DefaultRealMethod.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AllInvocationsFinder",
    "methods": [
     {
      "type": "List",
      "name": "find",
      "params": [
       {
        "type": "List",
        "name": "mocks"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation.finder",
  "filename": "AllInvocationsFinder.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VerifiableInvocationsFinder",
    "methods": [
     {
      "type": "List",
      "name": "find",
      "params": [
       {
        "type": "List",
        "name": "mocks"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.invocation.finder",
  "filename": "VerifiableInvocationsFinder.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "VerificationAwareInvocation",
    "methods": [
     {
      "type": "boolean",
      "name": "isVerified",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.exceptions",
  "filename": "VerificationAwareInvocation.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "NON_PUBLIC_PARENT"
     }
    ],
    "name": "MockitoLimitations",
    "methods": []
   }
  ],
  "package_name": "org.mockito.internal.exceptions",
  "filename": "MockitoLimitations.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "ExceptionIncludingMockitoWarnings",
    "methods": []
   }
  ],
  "package_name": "org.mockito.internal.exceptions",
  "filename": "ExceptionIncludingMockitoWarnings.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DefaultStackTraceCleanerProvider",
    "methods": [
     {
      "type": "StackTraceCleaner",
      "name": "getStackTraceCleaner",
      "params": [
       {
        "type": "StackTraceCleaner",
        "name": "defaultCleaner"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.exceptions.stacktrace",
  "filename": "DefaultStackTraceCleanerProvider.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "IMockitoConfiguration",
      "name": "config"
     },
     {
      "type": "StackTraceFilter",
      "name": "filter"
     }
    ],
    "name": "ConditionalStackTraceFilter",
    "methods": [
     {
      "type": null,
      "name": "filter",
      "params": [
       {
        "type": "Throwable",
        "name": "throwable"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.exceptions.stacktrace",
  "filename": "ConditionalStackTraceFilter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "StackTraceCleaner",
      "name": "CLEANER"
     }
    ],
    "name": "StackTraceFilter",
    "methods": [
     {
      "type": "StackTraceElement",
      "name": "filter",
      "params": [
       {
        "type": "StackTraceElement",
        "name": "target"
       },
       {
        "type": "boolean",
        "name": "keepTop"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.exceptions.stacktrace",
  "filename": "StackTraceFilter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DefaultStackTraceCleaner",
    "methods": [
     {
      "type": "boolean",
      "name": "isOut",
      "params": [
       {
        "type": "StackTraceElement",
        "name": "e"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.exceptions.stacktrace",
  "filename": "DefaultStackTraceCleaner.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ScenarioPrinter",
    "methods": [
     {
      "type": "String",
      "name": "print",
      "params": [
       {
        "type": "List",
        "name": "invocations"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.exceptions.util",
  "filename": "ScenarioPrinter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "InvocationContainerImpl",
      "name": "invocationContainerImpl"
     },
     {
      "type": "MatchersBinder",
      "name": "matchersBinder"
     },
     {
      "type": "MockingProgress",
      "name": "mockingProgress"
     },
     {
      "type": "MockCreationSettings",
      "name": "mockSettings"
     }
    ],
    "name": "MockHandlerImpl",
    "methods": [
     {
      "type": "Object",
      "name": "handle",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "VoidMethodStubbable",
      "name": "voidMethodStubbable",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": "MockCreationSettings",
      "name": "getMockSettings",
      "params": []
     },
     {
      "type": null,
      "name": "setAnswersForStubbing",
      "params": [
       {
        "type": "List",
        "name": "answers"
       }
      ]
     },
     {
      "type": "InvocationContainer",
      "name": "getInvocationContainer",
      "params": []
     },
     {
      "type": "VerificationDataImpl",
      "name": "createVerificationData",
      "params": [
       {
        "type": "InvocationContainerImpl",
        "name": "invocationContainerImpl"
       },
       {
        "type": "InvocationMatcher",
        "name": "invocationMatcher"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.handler",
  "filename": "MockHandlerImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "List",
      "name": "invocationListeners"
     },
     {
      "type": "InternalMockHandler",
      "name": "mockHandler"
     }
    ],
    "name": "InvocationNotifierHandler",
    "methods": [
     {
      "type": "Object",
      "name": "handle",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "notifyMethodCall",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       },
       {
        "type": "Object",
        "name": "returnValue"
       }
      ]
     },
     {
      "type": null,
      "name": "notifyMethodCallException",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       },
       {
        "type": "Throwable",
        "name": "exception"
       }
      ]
     },
     {
      "type": "MockCreationSettings",
      "name": "getMockSettings",
      "params": []
     },
     {
      "type": "VoidMethodStubbable",
      "name": "voidMethodStubbable",
      "params": [
       {
        "type": "T",
        "name": "mock"
       }
      ]
     },
     {
      "type": null,
      "name": "setAnswersForStubbing",
      "params": [
       {
        "type": "List",
        "name": "answers"
       }
      ]
     },
     {
      "type": "InvocationContainer",
      "name": "getInvocationContainer",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.handler",
  "filename": "InvocationNotifierHandler.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockHandlerFactory",
    "methods": [
     {
      "type": "InternalMockHandler",
      "name": "create",
      "params": [
       {
        "type": "MockCreationSettings",
        "name": "settings"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.handler",
  "filename": "MockHandlerFactory.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "InternalMockHandler",
      "name": "delegate"
     }
    ],
    "name": "NullResultGuardian",
    "methods": [
     {
      "type": "Object",
      "name": "handle",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     },
     {
      "type": "MockCreationSettings",
      "name": "getMockSettings",
      "params": []
     },
     {
      "type": "VoidMethodStubbable",
      "name": "voidMethodStubbable",
      "params": [
       {
        "type": "Object",
        "name": "mock"
       }
      ]
     },
     {
      "type": null,
      "name": "setAnswersForStubbing",
      "params": [
       {
        "type": "List",
        "name": "answers"
       }
      ]
     },
     {
      "type": "InvocationContainer",
      "name": "getInvocationContainer",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.handler",
  "filename": "NullResultGuardian.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "RunnerProvider",
      "name": "runnerProvider"
     }
    ],
    "name": "RunnerFactory",
    "methods": [
     {
      "type": "RunnerImpl",
      "name": "create",
      "params": [
       {
        "type": "Class",
        "name": "klass"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.runners",
  "filename": "RunnerFactory.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "JUnit4ClassRunner",
      "name": "runner"
     }
    ],
    "name": "JUnit44RunnerImpl",
    "methods": [
     {
      "type": null,
      "name": "run",
      "params": [
       {
        "type": "RunNotifier",
        "name": "notifier"
       }
      ]
     },
     {
      "type": "Description",
      "name": "getDescription",
      "params": []
     },
     {
      "type": null,
      "name": "filter",
      "params": [
       {
        "type": "Filter",
        "name": "filter"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.runners",
  "filename": "JUnit44RunnerImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "RunnerImpl",
    "methods": [
     {
      "type": null,
      "name": "run",
      "params": [
       {
        "type": "RunNotifier",
        "name": "notifier"
       }
      ]
     },
     {
      "type": "Description",
      "name": "getDescription",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.runners",
  "filename": "RunnerImpl.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "BlockJUnit4ClassRunner",
      "name": "runner"
     }
    ],
    "name": "JUnit45AndHigherRunnerImpl",
    "methods": [
     {
      "type": null,
      "name": "run",
      "params": [
       {
        "type": "RunNotifier",
        "name": "notifier"
       }
      ]
     },
     {
      "type": "Description",
      "name": "getDescription",
      "params": []
     },
     {
      "type": null,
      "name": "filter",
      "params": [
       {
        "type": "Filter",
        "name": "filter"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.runners",
  "filename": "JUnit45AndHigherRunnerImpl.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "TestMethodsFinder",
    "methods": [
     {
      "type": "boolean",
      "name": "hasTestMethods",
      "params": [
       {
        "type": "Class",
        "name": "klass"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.runners.util",
  "filename": "TestMethodsFinder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "boolean",
      "name": "hasJUnit45OrHigher"
     }
    ],
    "name": "RunnerProvider",
    "methods": [
     {
      "type": "boolean",
      "name": "isJUnit45OrHigherAvailable",
      "params": []
     },
     {
      "type": "RunnerImpl",
      "name": "newInstance",
      "params": [
       {
        "type": "String",
        "name": "runnerClassName"
       },
       {
        "type": "Class",
        "name": "constructorParam"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.runners.util",
  "filename": "RunnerProvider.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "RunNotifier",
      "name": "notifier"
     }
    ],
    "name": "FrameworkUsageValidator",
    "methods": [
     {
      "type": null,
      "name": "testFinished",
      "params": [
       {
        "type": "Description",
        "name": "description"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.internal.runners.util",
  "filename": "FrameworkUsageValidator.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InvocationOnMock",
    "methods": [
     {
      "type": "Object",
      "name": "getMock",
      "params": []
     },
     {
      "type": "Method",
      "name": "getMethod",
      "params": []
     },
     {
      "type": "Object",
      "name": "getArguments",
      "params": []
     },
     {
      "type": "T",
      "name": "getArgumentAt",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": "Object",
      "name": "callRealMethod",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.invocation",
  "filename": "InvocationOnMock.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockHandler",
    "methods": [
     {
      "type": "Object",
      "name": "handle",
      "params": [
       {
        "type": "Invocation",
        "name": "invocation"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.invocation",
  "filename": "MockHandler.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Invocation",
    "methods": [
     {
      "type": "boolean",
      "name": "isVerified",
      "params": []
     },
     {
      "type": "int",
      "name": "getSequenceNumber",
      "params": []
     },
     {
      "type": "Location",
      "name": "getLocation",
      "params": []
     },
     {
      "type": "Object",
      "name": "getRawArguments",
      "params": []
     },
     {
      "type": null,
      "name": "markVerified",
      "params": []
     },
     {
      "type": "StubInfo",
      "name": "stubInfo",
      "params": []
     },
     {
      "type": null,
      "name": "markStubbed",
      "params": [
       {
        "type": "StubInfo",
        "name": "stubInfo"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isIgnoredForVerification",
      "params": []
     },
     {
      "type": null,
      "name": "ignoreForVerification",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.invocation",
  "filename": "Invocation.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Location",
    "methods": [
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.invocation",
  "filename": "Location.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "StubInfo",
    "methods": [
     {
      "type": "Location",
      "name": "stubbedAt",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.invocation",
  "filename": "StubInfo.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DescribedInvocation",
    "methods": [
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "Location",
      "name": "getLocation",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.invocation",
  "filename": "DescribedInvocation.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "PrintableInvocation",
    "methods": [
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "Location",
      "name": "getLocation",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions",
  "filename": "PrintableInvocation.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Reporter",
    "methods": [
     {
      "type": null,
      "name": "checkedExceptionInvalid",
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ]
     },
     {
      "type": null,
      "name": "cannotStubWithNullThrowable",
      "params": []
     },
     {
      "type": null,
      "name": "unfinishedStubbing",
      "params": [
       {
        "type": "Location",
        "name": "location"
       }
      ]
     },
     {
      "type": null,
      "name": "incorrectUseOfApi",
      "params": []
     },
     {
      "type": null,
      "name": "missingMethodInvocation",
      "params": []
     },
     {
      "type": null,
      "name": "unfinishedVerificationException",
      "params": [
       {
        "type": "Location",
        "name": "location"
       }
      ]
     },
     {
      "type": null,
      "name": "notAMockPassedToVerify",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": null,
      "name": "nullPassedToVerify",
      "params": []
     },
     {
      "type": null,
      "name": "notAMockPassedToWhenMethod",
      "params": []
     },
     {
      "type": null,
      "name": "nullPassedToWhenMethod",
      "params": []
     },
     {
      "type": null,
      "name": "mocksHaveToBePassedToVerifyNoMoreInteractions",
      "params": []
     },
     {
      "type": null,
      "name": "notAMockPassedToVerifyNoMoreInteractions",
      "params": []
     },
     {
      "type": null,
      "name": "nullPassedToVerifyNoMoreInteractions",
      "params": []
     },
     {
      "type": null,
      "name": "notAMockPassedWhenCreatingInOrder",
      "params": []
     },
     {
      "type": null,
      "name": "nullPassedWhenCreatingInOrder",
      "params": []
     },
     {
      "type": null,
      "name": "mocksHaveToBePassedWhenCreatingInOrder",
      "params": []
     },
     {
      "type": null,
      "name": "inOrderRequiresFamiliarMock",
      "params": []
     },
     {
      "type": null,
      "name": "invalidUseOfMatchers",
      "params": [
       {
        "type": "int",
        "name": "expectedMatchersCount"
       },
       {
        "type": "List",
        "name": "recordedMatchers"
       }
      ]
     },
     {
      "type": null,
      "name": "incorrectUseOfAdditionalMatchers",
      "params": [
       {
        "type": "String",
        "name": "additionalMatcherName"
       },
       {
        "type": "int",
        "name": "expectedSubMatchersCount"
       },
       {
        "type": "Collection",
        "name": "matcherStack"
       }
      ]
     },
     {
      "type": null,
      "name": "stubPassedToVerify",
      "params": []
     },
     {
      "type": null,
      "name": "reportNoSubMatchersFound",
      "params": [
       {
        "type": "String",
        "name": "additionalMatcherName"
       }
      ]
     },
     {
      "type": "Object",
      "name": "locationsOf",
      "params": [
       {
        "type": "Collection",
        "name": "matchers"
       }
      ]
     },
     {
      "type": null,
      "name": "argumentsAreDifferent",
      "params": [
       {
        "type": "String",
        "name": "wanted"
       },
       {
        "type": "String",
        "name": "actual"
       },
       {
        "type": "Location",
        "name": "actualLocation"
       }
      ]
     },
     {
      "type": null,
      "name": "wantedButNotInvoked",
      "params": [
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       }
      ]
     },
     {
      "type": null,
      "name": "wantedButNotInvoked",
      "params": [
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       },
       {
        "type": "List",
        "name": "invocations"
       }
      ]
     },
     {
      "type": "String",
      "name": "createWantedButNotInvokedMessage",
      "params": [
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       }
      ]
     },
     {
      "type": null,
      "name": "wantedButNotInvokedInOrder",
      "params": [
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       },
       {
        "type": "DescribedInvocation",
        "name": "previous"
       }
      ]
     },
     {
      "type": null,
      "name": "tooManyActualInvocations",
      "params": [
       {
        "type": "int",
        "name": "wantedCount"
       },
       {
        "type": "int",
        "name": "actualCount"
       },
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       },
       {
        "type": "Location",
        "name": "firstUndesired"
       }
      ]
     },
     {
      "type": "String",
      "name": "createTooManyInvocationsMessage",
      "params": [
       {
        "type": "int",
        "name": "wantedCount"
       },
       {
        "type": "int",
        "name": "actualCount"
       },
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       },
       {
        "type": "Location",
        "name": "firstUndesired"
       }
      ]
     },
     {
      "type": null,
      "name": "neverWantedButInvoked",
      "params": [
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       },
       {
        "type": "Location",
        "name": "firstUndesired"
       }
      ]
     },
     {
      "type": null,
      "name": "tooManyActualInvocationsInOrder",
      "params": [
       {
        "type": "int",
        "name": "wantedCount"
       },
       {
        "type": "int",
        "name": "actualCount"
       },
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       },
       {
        "type": "Location",
        "name": "firstUndesired"
       }
      ]
     },
     {
      "type": "String",
      "name": "createTooLittleInvocationsMessage",
      "params": [
       {
        "type": "org",
        "name": "discrepancy"
       },
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       },
       {
        "type": "Location",
        "name": "lastActualInvocation"
       }
      ]
     },
     {
      "type": null,
      "name": "tooLittleActualInvocations",
      "params": [
       {
        "type": "org",
        "name": "discrepancy"
       },
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       },
       {
        "type": "Location",
        "name": "lastActualLocation"
       }
      ]
     },
     {
      "type": null,
      "name": "tooLittleActualInvocationsInOrder",
      "params": [
       {
        "type": "org",
        "name": "discrepancy"
       },
       {
        "type": "DescribedInvocation",
        "name": "wanted"
       },
       {
        "type": "Location",
        "name": "lastActualLocation"
       }
      ]
     },
     {
      "type": null,
      "name": "noMoreInteractionsWanted",
      "params": [
       {
        "type": "Invocation",
        "name": "undesired"
       },
       {
        "type": "List",
        "name": "invocations"
       }
      ]
     },
     {
      "type": null,
      "name": "noMoreInteractionsWantedInOrder",
      "params": [
       {
        "type": "Invocation",
        "name": "undesired"
       }
      ]
     },
     {
      "type": null,
      "name": "cannotMockFinalClass",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ]
     },
     {
      "type": null,
      "name": "cannotStubVoidMethodWithAReturnValue",
      "params": [
       {
        "type": "String",
        "name": "methodName"
       }
      ]
     },
     {
      "type": null,
      "name": "onlyVoidMethodsCanBeSetToDoNothing",
      "params": []
     },
     {
      "type": null,
      "name": "wrongTypeOfReturnValue",
      "params": [
       {
        "type": "String",
        "name": "expectedType"
       },
       {
        "type": "String",
        "name": "actualType"
       },
       {
        "type": "String",
        "name": "methodName"
       }
      ]
     },
     {
      "type": null,
      "name": "wantedAtMostX",
      "params": [
       {
        "type": "int",
        "name": "maxNumberOfInvocations"
       },
       {
        "type": "int",
        "name": "foundSize"
       }
      ]
     },
     {
      "type": null,
      "name": "misplacedArgumentMatcher",
      "params": [
       {
        "type": "List",
        "name": "lastMatchers"
       }
      ]
     },
     {
      "type": null,
      "name": "smartNullPointerException",
      "params": [
       {
        "type": "String",
        "name": "invocation"
       },
       {
        "type": "Location",
        "name": "location"
       }
      ]
     },
     {
      "type": null,
      "name": "noArgumentValueWasCaptured",
      "params": []
     },
     {
      "type": null,
      "name": "extraInterfacesDoesNotAcceptNullParameters",
      "params": []
     },
     {
      "type": null,
      "name": "extraInterfacesAcceptsOnlyInterfaces",
      "params": [
       {
        "type": "Class",
        "name": "wrongType"
       }
      ]
     },
     {
      "type": null,
      "name": "extraInterfacesCannotContainMockedType",
      "params": [
       {
        "type": "Class",
        "name": "wrongType"
       }
      ]
     },
     {
      "type": null,
      "name": "extraInterfacesRequiresAtLeastOneInterface",
      "params": []
     },
     {
      "type": null,
      "name": "mockedTypeIsInconsistentWithSpiedInstanceType",
      "params": [
       {
        "type": "Class",
        "name": "mockedType"
       },
       {
        "type": "Object",
        "name": "spiedInstance"
       }
      ]
     },
     {
      "type": null,
      "name": "cannotCallAbstractRealMethod",
      "params": []
     },
     {
      "type": null,
      "name": "cannotVerifyToString",
      "params": []
     },
     {
      "type": null,
      "name": "moreThanOneAnnotationNotAllowed",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ]
     },
     {
      "type": null,
      "name": "unsupportedCombinationOfAnnotations",
      "params": [
       {
        "type": "String",
        "name": "undesiredAnnotationOne"
       },
       {
        "type": "String",
        "name": "undesiredAnnotationTwo"
       }
      ]
     },
     {
      "type": null,
      "name": "cannotInitializeForSpyAnnotation",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Exception",
        "name": "details"
       }
      ]
     },
     {
      "type": null,
      "name": "cannotInitializeForInjectMocksAnnotation",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Exception",
        "name": "details"
       }
      ]
     },
     {
      "type": null,
      "name": "atMostAndNeverShouldNotBeUsedWithTimeout",
      "params": []
     },
     {
      "type": null,
      "name": "fieldInitialisationThrewException",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Throwable",
        "name": "details"
       }
      ]
     },
     {
      "type": null,
      "name": "invocationListenerDoesNotAcceptNullParameters",
      "params": []
     },
     {
      "type": null,
      "name": "invocationListenersRequiresAtLeastOneListener",
      "params": []
     },
     {
      "type": null,
      "name": "invocationListenerThrewException",
      "params": [
       {
        "type": "InvocationListener",
        "name": "listener"
       },
       {
        "type": "Throwable",
        "name": "listenerThrowable"
       }
      ]
     },
     {
      "type": null,
      "name": "cannotInjectDependency",
      "params": [
       {
        "type": "Field",
        "name": "field"
       },
       {
        "type": "Object",
        "name": "matchingMock"
       },
       {
        "type": "Exception",
        "name": "details"
       }
      ]
     },
     {
      "type": null,
      "name": "mockedTypeIsInconsistentWithDelegatedInstanceType",
      "params": [
       {
        "type": "Class",
        "name": "mockedType"
       },
       {
        "type": "Object",
        "name": "delegatedInstance"
       }
      ]
     },
     {
      "type": null,
      "name": "spyAndDelegateAreMutuallyExclusive",
      "params": []
     },
     {
      "type": null,
      "name": "invalidArgumentRangeAtIdentityAnswerCreationTime",
      "params": []
     },
     {
      "type": "int",
      "name": "invalidArgumentPositionRangeAtInvocationTime",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       },
       {
        "type": "boolean",
        "name": "willReturnLastParameter"
       },
       {
        "type": "int",
        "name": "argumentIndex"
       }
      ]
     },
     {
      "type": "StringBuilder",
      "name": "possibleArgumentTypesOf",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       }
      ]
     },
     {
      "type": null,
      "name": "wrongTypeOfArgumentToReturn",
      "params": [
       {
        "type": "InvocationOnMock",
        "name": "invocation"
       },
       {
        "type": "String",
        "name": "expectedType"
       },
       {
        "type": "Class",
        "name": "actualType"
       },
       {
        "type": "int",
        "name": "argumentIndex"
       }
      ]
     },
     {
      "type": null,
      "name": "defaultAnswerDoesNotAcceptNullParameter",
      "params": []
     },
     {
      "type": null,
      "name": "serializableWontWorkForObjectsThatDontImplementSerializable",
      "params": [
       {
        "type": "Class",
        "name": "classToMock"
       }
      ]
     },
     {
      "type": null,
      "name": "delegatedMethodHasWrongReturnType",
      "params": [
       {
        "type": "Method",
        "name": "mockMethod"
       },
       {
        "type": "Method",
        "name": "delegateMethod"
       },
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "Object",
        "name": "delegate"
       }
      ]
     },
     {
      "type": null,
      "name": "delegatedMethodDoesNotExistOnDelegate",
      "params": [
       {
        "type": "Method",
        "name": "mockMethod"
       },
       {
        "type": "Object",
        "name": "mock"
       },
       {
        "type": "Object",
        "name": "delegate"
       }
      ]
     },
     {
      "type": null,
      "name": "usingConstructorWithFancySerializable",
      "params": [
       {
        "type": "SerializableMode",
        "name": "mode"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions",
  "filename": "Reporter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Discrepancy",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions",
  "filename": "Discrepancy.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Pluralizer",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions",
  "filename": "Pluralizer.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "TooLittleActualInvocations",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.verification",
  "filename": "TooLittleActualInvocations.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "ArgumentsAreDifferent",
    "methods": [
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions.verification",
  "filename": "ArgumentsAreDifferent.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "VerificationInOrderFailure",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.verification",
  "filename": "VerificationInOrderFailure.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "NoInteractionsWanted",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.verification",
  "filename": "NoInteractionsWanted.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "NeverWantedButInvoked",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.verification",
  "filename": "NeverWantedButInvoked.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "SmartNullPointerException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.verification",
  "filename": "SmartNullPointerException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "TooManyActualInvocations",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.verification",
  "filename": "TooManyActualInvocations.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "WantedButNotInvoked",
    "methods": [
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions.verification",
  "filename": "WantedButNotInvoked.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "message"
     },
     {
      "type": "StackTraceElement",
      "name": "unfilteredStackTrace"
     }
    ],
    "name": "ArgumentsAreDifferent",
    "methods": [
     {
      "type": "String",
      "name": "getMessage",
      "params": []
     },
     {
      "type": "StackTraceElement",
      "name": "getUnfilteredStackTrace",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions.verification.junit",
  "filename": "ArgumentsAreDifferent.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "JUnitTool",
    "methods": [
     {
      "type": "boolean",
      "name": "hasJUnit",
      "params": []
     },
     {
      "type": "AssertionError",
      "name": "createArgumentsAreDifferentException",
      "params": [
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "String",
        "name": "wanted"
       },
       {
        "type": "String",
        "name": "actual"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions.verification.junit",
  "filename": "JUnitTool.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "NullInsteadOfMockException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "NullInsteadOfMockException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "NotAMockException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "NotAMockException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "UnfinishedStubbingException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "UnfinishedStubbingException.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "CannotStubVoidMethodWithReturnValue",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "CannotStubVoidMethodWithReturnValue.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "InvalidUseOfMatchersException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "InvalidUseOfMatchersException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "UnfinishedVerificationException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "UnfinishedVerificationException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "MissingMethodInvocationException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "MissingMethodInvocationException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "WrongTypeOfReturnValue",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "WrongTypeOfReturnValue.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "FriendlyReminderException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "FriendlyReminderException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "MockitoConfigurationException",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "MockitoConfigurationException.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "CannotVerifyStubOnlyMock",
    "methods": []
   }
  ],
  "package_name": "org.mockito.exceptions.misusing",
  "filename": "CannotVerifyStubOnlyMock.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "StackTraceCleaner",
    "methods": [
     {
      "type": "boolean",
      "name": "isOut",
      "params": [
       {
        "type": "StackTraceElement",
        "name": "candidate"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions.stacktrace",
  "filename": "StackTraceCleaner.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "StackTraceElement",
      "name": "unfilteredStackTrace"
     }
    ],
    "name": "MockitoAssertionError",
    "methods": [
     {
      "type": "StackTraceElement",
      "name": "getUnfilteredStackTrace",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions.base",
  "filename": "MockitoAssertionError.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "StackTraceElement",
      "name": "unfilteredStackTrace"
     }
    ],
    "name": "MockitoException",
    "methods": [
     {
      "type": null,
      "name": "filterStackTrace",
      "params": []
     },
     {
      "type": "StackTraceElement",
      "name": "getUnfilteredStackTrace",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions.base",
  "filename": "MockitoException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "StackTraceElement",
      "name": "unfilteredStackTrace"
     }
    ],
    "name": "MockitoSerializationIssue",
    "methods": [
     {
      "type": "StackTraceElement",
      "name": "getStackTrace",
      "params": []
     },
     {
      "type": null,
      "name": "filterStackTrace",
      "params": []
     },
     {
      "type": "StackTraceElement",
      "name": "getUnfilteredStackTrace",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.mockito.exceptions.base",
  "filename": "MockitoSerializationIssue.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "RunnerImpl",
      "name": "runner"
     }
    ],
    "name": "VerboseMockitoJUnitRunner",
    "methods": [
     {
      "type": null,
      "name": "run",
      "params": [
       {
        "type": "RunNotifier",
        "name": "notifier"
       }
      ]
     },
     {
      "type": "Description",
      "name": "getDescription",
      "params": []
     },
     {
      "type": null,
      "name": "filter",
      "params": [
       {
        "type": "Filter",
        "name": "filter"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.runners",
  "filename": "VerboseMockitoJUnitRunner.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "MockitoJUnit44Runner",
    "methods": []
   }
  ],
  "package_name": "org.mockito.runners",
  "filename": "MockitoJUnit44Runner.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "MockitoLogger",
      "name": "logger"
     },
     {
      "type": "RunnerImpl",
      "name": "runner"
     }
    ],
    "name": "ConsoleSpammingMockitoJUnitRunner",
    "methods": [
     {
      "type": null,
      "name": "run",
      "params": [
       {
        "type": "RunNotifier",
        "name": "notifier"
       }
      ]
     },
     {
      "type": "Description",
      "name": "getDescription",
      "params": []
     },
     {
      "type": null,
      "name": "filter",
      "params": [
       {
        "type": "Filter",
        "name": "filter"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.runners",
  "filename": "ConsoleSpammingMockitoJUnitRunner.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "RunnerImpl",
      "name": "runner"
     }
    ],
    "name": "MockitoJUnitRunner",
    "methods": [
     {
      "type": null,
      "name": "run",
      "params": [
       {
        "type": "RunNotifier",
        "name": "notifier"
       }
      ]
     },
     {
      "type": "Description",
      "name": "getDescription",
      "params": []
     },
     {
      "type": null,
      "name": "filter",
      "params": [
       {
        "type": "Filter",
        "name": "filter"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.mockito.runners",
  "filename": "MockitoJUnitRunner.java"
 }
]