[
 {
  "filename": "Token.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "reset",
      "type": null
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "INITIAL_TOKEN_LENGTH",
      "type": "int"
     },
     {
      "name": "type",
      "type": "Token"
     },
     {
      "name": "content",
      "type": "StringBuilder"
     },
     {
      "name": "isReady",
      "type": "boolean"
     }
    ],
    "name": "Token"
   }
  ]
 },
 {
  "filename": "CSVFormat.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "c",
        "type": "char"
       }
      ],
      "name": "isLineBreak",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "c",
        "type": "Character"
       }
      ],
      "name": "isLineBreak",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "delimiter",
        "type": "char"
       }
      ],
      "name": "newFormat",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "format",
        "type": "String"
       }
      ],
      "name": "valueOf",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "values",
        "type": "Object"
       }
      ],
      "name": "format",
      "type": "String"
     },
     {
      "params": [],
      "name": "getAllowMissingColumnNames",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getCommentMarker",
      "type": "Character"
     },
     {
      "params": [],
      "name": "getDelimiter",
      "type": "char"
     },
     {
      "params": [],
      "name": "getEscapeCharacter",
      "type": "Character"
     },
     {
      "params": [],
      "name": "getHeader",
      "type": "String"
     },
     {
      "params": [],
      "name": "getHeaderComments",
      "type": "String"
     },
     {
      "params": [],
      "name": "getIgnoreEmptyLines",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getIgnoreHeaderCase",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getIgnoreSurroundingSpaces",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getNullString",
      "type": "String"
     },
     {
      "params": [],
      "name": "getQuoteCharacter",
      "type": "Character"
     },
     {
      "params": [],
      "name": "getQuoteMode",
      "type": "QuoteMode"
     },
     {
      "params": [],
      "name": "getRecordSeparator",
      "type": "String"
     },
     {
      "params": [],
      "name": "getSkipHeaderRecord",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getTrailingDelimiter",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getTrim",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getAutoFlush",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "isCommentMarkerSet",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isEscapeCharacterSet",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isNullStringSet",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isQuoteCharacterSet",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "in",
        "type": "Reader"
       }
      ],
      "name": "parse",
      "type": "CSVParser"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "Appendable"
       }
      ],
      "name": "print",
      "type": "CSVPrinter"
     },
     {
      "params": [],
      "name": "printer",
      "type": "CSVPrinter"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "File"
       },
       {
        "name": "charset",
        "type": "Charset"
       }
      ],
      "name": "print",
      "type": "CSVPrinter"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "Path"
       },
       {
        "name": "charset",
        "type": "Charset"
       }
      ],
      "name": "print",
      "type": "CSVPrinter"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       },
       {
        "name": "out",
        "type": "Appendable"
       },
       {
        "name": "newRecord",
        "type": "boolean"
       }
      ],
      "name": "print",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "CharSequence"
       },
       {
        "name": "offset",
        "type": "int"
       },
       {
        "name": "len",
        "type": "int"
       },
       {
        "name": "out",
        "type": "Appendable"
       },
       {
        "name": "newRecord",
        "type": "boolean"
       }
      ],
      "name": "print",
      "type": null
     },
     {
      "params": [
       {
        "name": "value",
        "type": "CharSequence"
       },
       {
        "name": "offset",
        "type": "int"
       },
       {
        "name": "len",
        "type": "int"
       },
       {
        "name": "out",
        "type": "Appendable"
       }
      ],
      "name": "printAndEscape",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "CharSequence"
       },
       {
        "name": "offset",
        "type": "int"
       },
       {
        "name": "len",
        "type": "int"
       },
       {
        "name": "out",
        "type": "Appendable"
       },
       {
        "name": "newRecord",
        "type": "boolean"
       }
      ],
      "name": "printAndQuote",
      "type": null
     },
     {
      "params": [
       {
        "name": "out",
        "type": "Appendable"
       }
      ],
      "name": "println",
      "type": null
     },
     {
      "params": [
       {
        "name": "out",
        "type": "Appendable"
       },
       {
        "name": "values",
        "type": "Object"
       }
      ],
      "name": "printRecord",
      "type": null
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "values",
        "type": "Object"
       }
      ],
      "name": "toStringArray",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "charSequence",
        "type": "CharSequence"
       }
      ],
      "name": "trim",
      "type": "CharSequence"
     },
     {
      "params": [],
      "name": "validate",
      "type": null
     },
     {
      "params": [],
      "name": "withAllowMissingColumnNames",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "allowMissingColumnNames",
        "type": "boolean"
       }
      ],
      "name": "withAllowMissingColumnNames",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "commentMarker",
        "type": "char"
       }
      ],
      "name": "withCommentMarker",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "commentMarker",
        "type": "Character"
       }
      ],
      "name": "withCommentMarker",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "delimiter",
        "type": "char"
       }
      ],
      "name": "withDelimiter",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "escape",
        "type": "char"
       }
      ],
      "name": "withEscape",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "escape",
        "type": "Character"
       }
      ],
      "name": "withEscape",
      "type": "CSVFormat"
     },
     {
      "params": [],
      "name": "withFirstRecordAsHeader",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "headerEnum",
        "type": "Class"
       }
      ],
      "name": "withHeader",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "resultSet",
        "type": "ResultSet"
       }
      ],
      "name": "withHeader",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "metaData",
        "type": "ResultSetMetaData"
       }
      ],
      "name": "withHeader",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "header",
        "type": "String"
       }
      ],
      "name": "withHeader",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "headerComments",
        "type": "Object"
       }
      ],
      "name": "withHeaderComments",
      "type": "CSVFormat"
     },
     {
      "params": [],
      "name": "withIgnoreEmptyLines",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "ignoreEmptyLines",
        "type": "boolean"
       }
      ],
      "name": "withIgnoreEmptyLines",
      "type": "CSVFormat"
     },
     {
      "params": [],
      "name": "withIgnoreHeaderCase",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "ignoreHeaderCase",
        "type": "boolean"
       }
      ],
      "name": "withIgnoreHeaderCase",
      "type": "CSVFormat"
     },
     {
      "params": [],
      "name": "withIgnoreSurroundingSpaces",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "ignoreSurroundingSpaces",
        "type": "boolean"
       }
      ],
      "name": "withIgnoreSurroundingSpaces",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "nullString",
        "type": "String"
       }
      ],
      "name": "withNullString",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "quoteChar",
        "type": "char"
       }
      ],
      "name": "withQuote",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "quoteChar",
        "type": "Character"
       }
      ],
      "name": "withQuote",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "quoteModePolicy",
        "type": "QuoteMode"
       }
      ],
      "name": "withQuoteMode",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "recordSeparator",
        "type": "char"
       }
      ],
      "name": "withRecordSeparator",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "recordSeparator",
        "type": "String"
       }
      ],
      "name": "withRecordSeparator",
      "type": "CSVFormat"
     },
     {
      "params": [],
      "name": "withSkipHeaderRecord",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "skipHeaderRecord",
        "type": "boolean"
       }
      ],
      "name": "withSkipHeaderRecord",
      "type": "CSVFormat"
     },
     {
      "params": [],
      "name": "withTrailingDelimiter",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "trailingDelimiter",
        "type": "boolean"
       }
      ],
      "name": "withTrailingDelimiter",
      "type": "CSVFormat"
     },
     {
      "params": [],
      "name": "withTrim",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "trim",
        "type": "boolean"
       }
      ],
      "name": "withTrim",
      "type": "CSVFormat"
     },
     {
      "params": [
       {
        "name": "autoFlush",
        "type": "boolean"
       }
      ],
      "name": "withAutoFlush",
      "type": "CSVFormat"
     }
    ],
    "fields": [
     {
      "name": "DEFAULT",
      "type": "CSVFormat"
     },
     {
      "name": "EXCEL",
      "type": "CSVFormat"
     },
     {
      "name": "INFORMIX_UNLOAD",
      "type": "CSVFormat"
     },
     {
      "name": "INFORMIX_UNLOAD_CSV",
      "type": "CSVFormat"
     },
     {
      "name": "MYSQL",
      "type": "CSVFormat"
     },
     {
      "name": "POSTGRESQL_CSV",
      "type": "CSVFormat"
     },
     {
      "name": "POSTGRESQL_TEXT",
      "type": "CSVFormat"
     },
     {
      "name": "RFC4180",
      "type": "CSVFormat"
     },
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "TDF",
      "type": "CSVFormat"
     },
     {
      "name": "allowMissingColumnNames",
      "type": "boolean"
     },
     {
      "name": "commentMarker",
      "type": "Character"
     },
     {
      "name": "delimiter",
      "type": "char"
     },
     {
      "name": "escapeCharacter",
      "type": "Character"
     },
     {
      "name": "header",
      "type": "String"
     },
     {
      "name": "headerComments",
      "type": "String"
     },
     {
      "name": "ignoreEmptyLines",
      "type": "boolean"
     },
     {
      "name": "ignoreHeaderCase",
      "type": "boolean"
     },
     {
      "name": "ignoreSurroundingSpaces",
      "type": "boolean"
     },
     {
      "name": "nullString",
      "type": "String"
     },
     {
      "name": "quoteCharacter",
      "type": "Character"
     },
     {
      "name": "quoteMode",
      "type": "QuoteMode"
     },
     {
      "name": "recordSeparator",
      "type": "String"
     },
     {
      "name": "skipHeaderRecord",
      "type": "boolean"
     },
     {
      "name": "trailingDelimiter",
      "type": "boolean"
     },
     {
      "name": "trim",
      "type": "boolean"
     },
     {
      "name": "autoFlush",
      "type": "boolean"
     }
    ],
    "name": "CSVFormat"
   }
  ]
 },
 {
  "filename": "CSVParser.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "file",
        "type": "File"
       },
       {
        "name": "charset",
        "type": "Charset"
       },
       {
        "name": "format",
        "type": "CSVFormat"
       }
      ],
      "name": "parse",
      "type": "CSVParser"
     },
     {
      "params": [
       {
        "name": "inputStream",
        "type": "InputStream"
       },
       {
        "name": "charset",
        "type": "Charset"
       },
       {
        "name": "format",
        "type": "CSVFormat"
       }
      ],
      "name": "parse",
      "type": "CSVParser"
     },
     {
      "params": [
       {
        "name": "path",
        "type": "Path"
       },
       {
        "name": "charset",
        "type": "Charset"
       },
       {
        "name": "format",
        "type": "CSVFormat"
       }
      ],
      "name": "parse",
      "type": "CSVParser"
     },
     {
      "params": [
       {
        "name": "reader",
        "type": "Reader"
       },
       {
        "name": "format",
        "type": "CSVFormat"
       }
      ],
      "name": "parse",
      "type": "CSVParser"
     },
     {
      "params": [
       {
        "name": "string",
        "type": "String"
       },
       {
        "name": "format",
        "type": "CSVFormat"
       }
      ],
      "name": "parse",
      "type": "CSVParser"
     },
     {
      "params": [
       {
        "name": "url",
        "type": "URL"
       },
       {
        "name": "charset",
        "type": "Charset"
       },
       {
        "name": "format",
        "type": "CSVFormat"
       }
      ],
      "name": "parse",
      "type": "CSVParser"
     },
     {
      "params": [
       {
        "name": "lastRecord",
        "type": "boolean"
       }
      ],
      "name": "addRecordValue",
      "type": null
     },
     {
      "params": [],
      "name": "close",
      "type": null
     },
     {
      "params": [],
      "name": "getCurrentLineNumber",
      "type": "long"
     },
     {
      "params": [],
      "name": "getFirstEndOfLine",
      "type": "String"
     },
     {
      "params": [],
      "name": "getHeaderMap",
      "type": "Map"
     },
     {
      "params": [],
      "name": "getRecordNumber",
      "type": "long"
     },
     {
      "params": [],
      "name": "getRecords",
      "type": "List"
     },
     {
      "params": [],
      "name": "initializeHeader",
      "type": "Map"
     },
     {
      "params": [],
      "name": "isClosed",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "nextRecord",
      "type": "CSVRecord"
     }
    ],
    "fields": [
     {
      "name": "format",
      "type": "CSVFormat"
     },
     {
      "name": "headerMap",
      "type": "Map"
     },
     {
      "name": "lexer",
      "type": "Lexer"
     },
     {
      "name": "recordList",
      "type": "List"
     },
     {
      "name": "recordNumber",
      "type": "long"
     },
     {
      "name": "characterOffset",
      "type": "long"
     },
     {
      "name": "reusableToken",
      "type": "Token"
     }
    ],
    "name": "CSVParser"
   }
  ]
 },
 {
  "filename": "Lexer.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getFirstEol",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "token",
        "type": "Token"
       }
      ],
      "name": "nextToken",
      "type": "Token"
     },
     {
      "params": [
       {
        "name": "token",
        "type": "Token"
       },
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "parseSimpleToken",
      "type": "Token"
     },
     {
      "params": [
       {
        "name": "token",
        "type": "Token"
       }
      ],
      "name": "parseEncapsulatedToken",
      "type": "Token"
     },
     {
      "params": [
       {
        "name": "c",
        "type": "Character"
       }
      ],
      "name": "mapNullToDisabled",
      "type": "char"
     },
     {
      "params": [],
      "name": "getCurrentLineNumber",
      "type": "long"
     },
     {
      "params": [],
      "name": "getCharacterPosition",
      "type": "long"
     },
     {
      "params": [],
      "name": "readEscape",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "buffer",
        "type": "StringBuilder"
       }
      ],
      "name": "trimTrailingSpaces",
      "type": null
     },
     {
      "params": [
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "readEndOfLine",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isClosed",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "isWhitespace",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "isStartOfLine",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "isEndOfFile",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "isDelimiter",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "isEscape",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "isQuoteChar",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "isCommentStart",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "ch",
        "type": "int"
       }
      ],
      "name": "isMetaChar",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "close",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "CR_STRING",
      "type": "String"
     },
     {
      "name": "LF_STRING",
      "type": "String"
     },
     {
      "name": "DISABLED",
      "type": "char"
     },
     {
      "name": "delimiter",
      "type": "char"
     },
     {
      "name": "escape",
      "type": "char"
     },
     {
      "name": "quoteChar",
      "type": "char"
     },
     {
      "name": "commentStart",
      "type": "char"
     },
     {
      "name": "ignoreSurroundingSpaces",
      "type": "boolean"
     },
     {
      "name": "ignoreEmptyLines",
      "type": "boolean"
     },
     {
      "name": "reader",
      "type": "ExtendedBufferedReader"
     },
     {
      "name": "firstEol",
      "type": "String"
     }
    ],
    "name": "Lexer"
   }
  ]
 },
 {
  "filename": "QuoteMode.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [],
    "fields": [],
    "name": "QuoteMode"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.csv",
  "classes": []
 },
 {
  "filename": "CSVRecord.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "e",
        "type": "Enum"
       }
      ],
      "name": "get",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "i",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "name",
        "type": "String"
       }
      ],
      "name": "get",
      "type": "String"
     },
     {
      "params": [],
      "name": "getCharacterPosition",
      "type": "long"
     },
     {
      "params": [],
      "name": "getComment",
      "type": "String"
     },
     {
      "params": [],
      "name": "getRecordNumber",
      "type": "long"
     },
     {
      "params": [],
      "name": "isConsistent",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hasComment",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "name",
        "type": "String"
       }
      ],
      "name": "isMapped",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "name",
        "type": "String"
       }
      ],
      "name": "isSet",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "M"
       }
      ],
      "name": "putIn",
      "type": "M"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "toList",
      "type": "List"
     },
     {
      "params": [],
      "name": "toMap",
      "type": "Map"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [],
      "name": "values",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "EMPTY_STRING_ARRAY",
      "type": "String"
     },
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "characterPosition",
      "type": "long"
     },
     {
      "name": "comment",
      "type": "String"
     },
     {
      "name": "mapping",
      "type": "Map"
     },
     {
      "name": "recordNumber",
      "type": "long"
     },
     {
      "name": "values",
      "type": "String"
     }
    ],
    "name": "CSVRecord"
   }
  ]
 },
 {
  "filename": "Assertions.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "parameter",
        "type": "Object"
       },
       {
        "name": "parameterName",
        "type": "String"
       }
      ],
      "name": "notNull",
      "type": null
     }
    ],
    "fields": [],
    "name": "Assertions"
   }
  ]
 },
 {
  "filename": "ExtendedBufferedReader.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "read",
      "type": "int"
     },
     {
      "params": [],
      "name": "getLastChar",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "buf",
        "type": "char"
       },
       {
        "name": "offset",
        "type": "int"
       },
       {
        "name": "length",
        "type": "int"
       }
      ],
      "name": "read",
      "type": "int"
     },
     {
      "params": [],
      "name": "readLine",
      "type": "String"
     },
     {
      "params": [],
      "name": "lookAhead",
      "type": "int"
     },
     {
      "params": [],
      "name": "getCurrentLineNumber",
      "type": "long"
     },
     {
      "params": [],
      "name": "getPosition",
      "type": "long"
     },
     {
      "params": [],
      "name": "isClosed",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "close",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "lastChar",
      "type": "int"
     },
     {
      "name": "eolCounter",
      "type": "long"
     },
     {
      "name": "position",
      "type": "long"
     },
     {
      "name": "closed",
      "type": "boolean"
     }
    ],
    "name": "ExtendedBufferedReader"
   }
  ]
 },
 {
  "filename": "CSVPrinter.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "close",
      "type": null
     },
     {
      "params": [
       {
        "name": "flush",
        "type": "boolean"
       }
      ],
      "name": "close",
      "type": null
     },
     {
      "params": [],
      "name": "flush",
      "type": null
     },
     {
      "params": [],
      "name": "getOut",
      "type": "Appendable"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "print",
      "type": null
     },
     {
      "params": [
       {
        "name": "comment",
        "type": "String"
       }
      ],
      "name": "printComment",
      "type": null
     },
     {
      "params": [],
      "name": "println",
      "type": null
     },
     {
      "params": [
       {
        "name": "values",
        "type": "Iterable"
       }
      ],
      "name": "printRecord",
      "type": null
     },
     {
      "params": [
       {
        "name": "values",
        "type": "Object"
       }
      ],
      "name": "printRecord",
      "type": null
     },
     {
      "params": [
       {
        "name": "values",
        "type": "Iterable"
       }
      ],
      "name": "printRecords",
      "type": null
     },
     {
      "params": [
       {
        "name": "values",
        "type": "Object"
       }
      ],
      "name": "printRecords",
      "type": null
     },
     {
      "params": [
       {
        "name": "resultSet",
        "type": "ResultSet"
       }
      ],
      "name": "printRecords",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "out",
      "type": "Appendable"
     },
     {
      "name": "format",
      "type": "CSVFormat"
     },
     {
      "name": "newRecord",
      "type": "boolean"
     }
    ],
    "name": "CSVPrinter"
   }
  ]
 },
 {
  "filename": "Constants.java",
  "package_name": "org.apache.commons.csv",
  "classes": [
   {
    "methods": [],
    "fields": [
     {
      "name": "BACKSLASH",
      "type": "char"
     },
     {
      "name": "BACKSPACE",
      "type": "char"
     },
     {
      "name": "COMMA",
      "type": "char"
     },
     {
      "name": "COMMENT",
      "type": "char"
     },
     {
      "name": "CR",
      "type": "char"
     },
     {
      "name": "CRLF",
      "type": "String"
     },
     {
      "name": "DOUBLE_QUOTE_CHAR",
      "type": "Character"
     },
     {
      "name": "EMPTY",
      "type": "String"
     },
     {
      "name": "END_OF_STREAM",
      "type": "int"
     },
     {
      "name": "FF",
      "type": "char"
     },
     {
      "name": "LF",
      "type": "char"
     },
     {
      "name": "LINE_SEPARATOR",
      "type": "String"
     },
     {
      "name": "NEXT_LINE",
      "type": "String"
     },
     {
      "name": "PARAGRAPH_SEPARATOR",
      "type": "String"
     },
     {
      "name": "PIPE",
      "type": "char"
     },
     {
      "name": "RS",
      "type": "char"
     },
     {
      "name": "SP",
      "type": "char"
     },
     {
      "name": "TAB",
      "type": "char"
     },
     {
      "name": "UNDEFINED",
      "type": "int"
     },
     {
      "name": "US",
      "type": "char"
     }
    ],
    "name": "Constants"
   }
  ]
 }
]