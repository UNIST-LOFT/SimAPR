[
 {
  "filename": "JavaType.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "JavaType",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withContentValueHandler"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "src"
       }
      ],
      "type": "JavaType",
      "name": "withHandlersFrom"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "forcedNarrowBy"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawClass"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "clz"
       }
      ],
      "type": "boolean",
      "name": "hasRawClass"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasContentType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "clz"
       }
      ],
      "type": "boolean",
      "name": "isTypeOrSubTypeOf"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "clz"
       }
      ],
      "type": "boolean",
      "name": "isTypeOrSuperTypeOf"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isAbstract"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isConcrete"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isThrowable"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isArrayType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isEnumType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isInterface"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isPrimitive"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isFinal"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isContainerType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCollectionLikeType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isMapLikeType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isJavaLangObject"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "useStaticType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasGenericTypes"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getKeyType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getReferencedType"
     },
     {
      "params": [],
      "type": "int",
      "name": "containedTypeCount"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JavaType",
      "name": "containedType"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "String",
      "name": "containedTypeName"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getParameterSource"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JavaType",
      "name": "containedTypeOrUnknown"
     },
     {
      "params": [],
      "type": "TypeBindings",
      "name": "getBindings"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "erasedTarget"
       }
      ],
      "type": "JavaType",
      "name": "findSuperType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getSuperClass"
     },
     {
      "params": [],
      "type": "List",
      "name": "getInterfaces"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "expType"
       }
      ],
      "type": "JavaType",
      "name": "findTypeParameters"
     },
     {
      "params": [],
      "type": "T",
      "name": "getValueHandler"
     },
     {
      "params": [],
      "type": "T",
      "name": "getTypeHandler"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getContentValueHandler"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getContentTypeHandler"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasValueHandler"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasHandlers"
     },
     {
      "params": [],
      "type": "String",
      "name": "getGenericSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getGenericSignature"
     },
     {
      "params": [],
      "type": "String",
      "name": "getErasedSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getErasedSignature"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "_class"
     },
     {
      "type": "int",
      "name": "_hash"
     },
     {
      "type": "Object",
      "name": "_valueHandler"
     },
     {
      "type": "Object",
      "name": "_typeHandler"
     },
     {
      "type": "boolean",
      "name": "_asStatic"
     }
    ]
   }
  ]
 },
 {
  "filename": "DeserializationContext.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "DeserializationContext",
    "methods": [
     {
      "params": [],
      "type": "DeserializationConfig",
      "name": "getConfig"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getActiveView"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canOverrideAccessModifiers"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "feature"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonFormat",
      "name": "getDefaultPropertyFormat"
     },
     {
      "params": [],
      "type": "AnnotationIntrospector",
      "name": "getAnnotationIntrospector"
     },
     {
      "params": [],
      "type": "TypeFactory",
      "name": "getTypeFactory"
     },
     {
      "params": [],
      "type": "Locale",
      "name": "getLocale"
     },
     {
      "params": [],
      "type": "TimeZone",
      "name": "getTimeZone"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "Object",
      "name": "getAttribute"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "DeserializationContext",
      "name": "setAttribute"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContextualType"
     },
     {
      "params": [],
      "type": "DeserializerFactory",
      "name": "getFactory"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "feat"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [],
      "type": "int",
      "name": "getDeserializationFeatures"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "featureMask"
       }
      ],
      "type": "boolean",
      "name": "hasDeserializationFeatures"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "featureMask"
       }
      ],
      "type": "boolean",
      "name": "hasSomeOfFeatures"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "getParser"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "valueId"
       },
       {
        "type": "BeanProperty",
        "name": "forProperty"
       },
       {
        "type": "Object",
        "name": "beanInstance"
       }
      ],
      "type": "Object",
      "name": "findInjectableValue"
     },
     {
      "params": [],
      "type": "Base64Variant",
      "name": "getBase64Variant"
     },
     {
      "params": [],
      "type": "JsonNodeFactory",
      "name": "getNodeFactory"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "AtomicReference",
        "name": "cause"
       }
      ],
      "type": "boolean",
      "name": "hasValueDeserializerFor"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findContextualValueDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findNonContextualValueDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findRootValueDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "keyType"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "KeyDeserializer",
      "name": "findKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "id"
       },
       {
        "type": "ObjectIdGenerator",
        "name": "generator"
       },
       {
        "type": "ObjectIdResolver",
        "name": "resolver"
       }
      ],
      "type": "ReadableObjectId",
      "name": "findObjectId"
     },
     {
      "params": [],
      "type": null,
      "name": "checkUnresolvedObjectId"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ],
      "type": "Class",
      "name": "findClass"
     },
     {
      "params": [],
      "type": "ObjectBuffer",
      "name": "leaseObjectBuffer"
     },
     {
      "params": [
       {
        "type": "ObjectBuffer",
        "name": "buf"
       }
      ],
      "type": null,
      "name": "returnObjectBuffer"
     },
     {
      "params": [],
      "type": "ArrayBuilders",
      "name": "getArrayBuilders"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Object",
        "name": "deserDef"
       }
      ],
      "type": "JsonDeserializer",
      "name": "deserializerInstance"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Object",
        "name": "deserDef"
       }
      ],
      "type": "KeyDeserializer",
      "name": "keyDeserializerInstance"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "handlePrimaryContextualization"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "handleSecondaryContextualization"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "dateStr"
       }
      ],
      "type": "Date",
      "name": "parseDate"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "d"
       }
      ],
      "type": "Calendar",
      "name": "constructCalendar"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "T",
      "name": "readPropertyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "T",
      "name": "readPropertyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       },
       {
        "type": "Object",
        "name": "instanceOrClass"
       },
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": "boolean",
      "name": "handleUnknownProperty"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "keyClass"
       },
       {
        "type": "String",
        "name": "keyValue"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "Object",
      "name": "handleWeirdKey"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "targetClass"
       },
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "Object",
      "name": "handleWeirdStringValue"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "targetClass"
       },
       {
        "type": "Number",
        "name": "value"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "Object",
      "name": "handleWeirdNumberValue"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "targetType"
       },
       {
        "type": "Object",
        "name": "badValue"
       },
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "Object",
      "name": "handleWeirdNativeValue"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "ValueInstantiator",
        "name": "valueInst"
       },
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "Object",
      "name": "handleMissingInstantiator"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "Object",
        "name": "argument"
       },
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "Object",
      "name": "handleInstantiationProblem"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "Object",
      "name": "handleUnexpectedToken"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "JsonToken",
        "name": "t"
       },
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "Object",
      "name": "handleUnexpectedToken"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "TypeIdResolver",
        "name": "idResolver"
       },
       {
        "type": "String",
        "name": "extraDesc"
       }
      ],
      "type": "JavaType",
      "name": "handleUnknownTypeId"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "TypeIdResolver",
        "name": "idResolver"
       },
       {
        "type": "String",
        "name": "extraDesc"
       }
      ],
      "type": "JavaType",
      "name": "handleMissingTypeId"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "target"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "_isCompatible"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       },
       {
        "type": "JsonToken",
        "name": "expToken"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": null,
      "name": "reportWrongTokenException"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "targetType"
       },
       {
        "type": "JsonToken",
        "name": "expToken"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": null,
      "name": "reportWrongTokenException"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "targetType"
       },
       {
        "type": "JsonToken",
        "name": "expToken"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": null,
      "name": "reportWrongTokenException"
     },
     {
      "params": [
       {
        "type": "ObjectIdReader",
        "name": "oidReader"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "T",
      "name": "reportUnresolvedObjectId"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "T",
      "name": "reportInputMismatch"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "src"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "T",
      "name": "reportInputMismatch"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "targetType"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "T",
      "name": "reportInputMismatch"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "targetType"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "T",
      "name": "reportInputMismatch"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "targetType"
       },
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JsonToken",
        "name": "trailingToken"
       }
      ],
      "type": "T",
      "name": "reportTrailingTokens"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JsonToken",
        "name": "expToken"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": null,
      "name": "reportWrongTokenException"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instanceOrClass"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": null,
      "name": "reportUnknownProperty"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": null,
      "name": "reportMissingContent"
     },
     {
      "params": [
       {
        "type": "BeanDescription",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "T",
      "name": "reportBadTypeDefinition"
     },
     {
      "params": [
       {
        "type": "BeanDescription",
        "name": "bean"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "prop"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "T",
      "name": "reportBadPropertyDefinition"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "T",
      "name": "reportBadDefinition"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "T",
      "name": "reportBadMerge"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JavaType",
        "name": "targetType"
       },
       {
        "type": "JsonToken",
        "name": "expToken"
       },
       {
        "type": "String",
        "name": "extra"
       }
      ],
      "type": "JsonMappingException",
      "name": "wrongTokenException"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Class",
        "name": "targetType"
       },
       {
        "type": "JsonToken",
        "name": "expToken"
       },
       {
        "type": "String",
        "name": "extra"
       }
      ],
      "type": "JsonMappingException",
      "name": "wrongTokenException"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JsonToken",
        "name": "expToken"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "JsonMappingException",
      "name": "wrongTokenException"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "keyClass"
       },
       {
        "type": "String",
        "name": "keyValue"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "JsonMappingException",
      "name": "weirdKeyException"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "JsonMappingException",
      "name": "weirdStringException"
     },
     {
      "params": [
       {
        "type": "Number",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "JsonMappingException",
      "name": "weirdNumberException"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "instClass"
       }
      ],
      "type": "JsonMappingException",
      "name": "weirdNativeValueException"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "Throwable",
        "name": "cause"
       }
      ],
      "type": "JsonMappingException",
      "name": "instantiationException"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "String",
        "name": "msg0"
       }
      ],
      "type": "JsonMappingException",
      "name": "instantiationException"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "String",
        "name": "typeId"
       },
       {
        "type": "String",
        "name": "extraDesc"
       }
      ],
      "type": "JsonMappingException",
      "name": "invalidTypeIdException"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "String",
        "name": "extraDesc"
       }
      ],
      "type": "JsonMappingException",
      "name": "missingTypeIdException"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "String",
        "name": "extraDesc"
       }
      ],
      "type": "JsonMappingException",
      "name": "unknownTypeException"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "instClass"
       }
      ],
      "type": "JsonMappingException",
      "name": "endOfInputException"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": null,
      "name": "reportMappingException"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "message"
       }
      ],
      "type": "JsonMappingException",
      "name": "mappingException"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "JsonMappingException",
      "name": "mappingException"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "targetClass"
       }
      ],
      "type": "JsonMappingException",
      "name": "mappingException"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "targetClass"
       },
       {
        "type": "JsonToken",
        "name": "token"
       }
      ],
      "type": "JsonMappingException",
      "name": "mappingException"
     },
     {
      "params": [],
      "type": "DateFormat",
      "name": "getDateFormat"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DeserializerCache",
      "name": "_cache"
     },
     {
      "type": "DeserializerFactory",
      "name": "_factory"
     },
     {
      "type": "DeserializationConfig",
      "name": "_config"
     },
     {
      "type": "int",
      "name": "_featureFlags"
     },
     {
      "type": "Class",
      "name": "_view"
     },
     {
      "type": "JsonParser",
      "name": "_parser"
     },
     {
      "type": "InjectableValues",
      "name": "_injectableValues"
     },
     {
      "type": "ArrayBuilders",
      "name": "_arrayBuilders"
     },
     {
      "type": "ObjectBuffer",
      "name": "_objectBuffer"
     },
     {
      "type": "DateFormat",
      "name": "_dateFormat"
     },
     {
      "type": "ContextAttributes",
      "name": "_attributes"
     },
     {
      "type": "LinkedNode",
      "name": "_currentType"
     }
    ]
   }
  ]
 },
 {
  "filename": "KeyDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "KeyDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeKey"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "InjectableValues.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "InjectableValues",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "valueId"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "forProperty"
       },
       {
        "type": "Object",
        "name": "beanInstance"
       }
      ],
      "type": "Object",
      "name": "findInjectableValue"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "DeserializationConfig.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "DeserializationConfig",
    "methods": [
     {
      "params": [],
      "type": "BaseSettings",
      "name": "getBaseSettings"
     },
     {
      "params": [
       {
        "type": "BaseSettings",
        "name": "newBase"
       }
      ],
      "type": "DeserializationConfig",
      "name": "_withBase"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "mapperFeatures"
       }
      ],
      "type": "DeserializationConfig",
      "name": "_withMapperFeatures"
     },
     {
      "params": [
       {
        "type": "SubtypeResolver",
        "name": "str"
       }
      ],
      "type": "DeserializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "rootName"
       }
      ],
      "type": "DeserializationConfig",
      "name": "withRootName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "view"
       }
      ],
      "type": "DeserializationConfig",
      "name": "withView"
     },
     {
      "params": [
       {
        "type": "ContextAttributes",
        "name": "attrs"
       }
      ],
      "type": "DeserializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "feature"
       }
      ],
      "type": "DeserializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "first"
       },
       {
        "type": "DeserializationFeature",
        "name": "features"
       }
      ],
      "type": "DeserializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "features"
       }
      ],
      "type": "DeserializationConfig",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "feature"
       }
      ],
      "type": "DeserializationConfig",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "first"
       },
       {
        "type": "DeserializationFeature",
        "name": "features"
       }
      ],
      "type": "DeserializationConfig",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "features"
       }
      ],
      "type": "DeserializationConfig",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "feature"
       }
      ],
      "type": "DeserializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "features"
       }
      ],
      "type": "DeserializationConfig",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "feature"
       }
      ],
      "type": "DeserializationConfig",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "features"
       }
      ],
      "type": "DeserializationConfig",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "feature"
       }
      ],
      "type": "DeserializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "features"
       }
      ],
      "type": "DeserializationConfig",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "feature"
       }
      ],
      "type": "DeserializationConfig",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "features"
       }
      ],
      "type": "DeserializationConfig",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "JsonNodeFactory",
        "name": "f"
       }
      ],
      "type": "DeserializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DeserializationProblemHandler",
        "name": "h"
       }
      ],
      "type": "DeserializationConfig",
      "name": "withHandler"
     },
     {
      "params": [],
      "type": "DeserializationConfig",
      "name": "withNoProblemHandlers"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": null,
      "name": "initialize"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "useRootWrapping"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "f"
       },
       {
        "type": "JsonFactory",
        "name": "factory"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "featureMask"
       }
      ],
      "type": "boolean",
      "name": "hasDeserializationFeatures"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "featureMask"
       }
      ],
      "type": "boolean",
      "name": "hasSomeOfFeatures"
     },
     {
      "params": [],
      "type": "int",
      "name": "getDeserializationFeatures"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "requiresFullValue"
     },
     {
      "params": [],
      "type": "LinkedNode",
      "name": "getProblemHandlers"
     },
     {
      "params": [],
      "type": "JsonNodeFactory",
      "name": "getNodeFactory"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "T",
      "name": "introspect"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "T",
      "name": "introspectForCreation"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "T",
      "name": "introspectForBuilder"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeDeserializer",
      "name": "findTypeDeserializer"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "LinkedNode",
      "name": "_problemHandlers"
     },
     {
      "type": "JsonNodeFactory",
      "name": "_nodeFactory"
     },
     {
      "type": "int",
      "name": "_deserFeatures"
     },
     {
      "type": "int",
      "name": "_parserFeatures"
     },
     {
      "type": "int",
      "name": "_parserFeaturesToChange"
     },
     {
      "type": "int",
      "name": "_formatReadFeatures"
     },
     {
      "type": "int",
      "name": "_formatReadFeaturesToChange"
     }
    ]
   }
  ]
 },
 {
  "filename": "AbstractTypeResolver.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "AbstractTypeResolver",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "findTypeMapping"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "resolveAbstractType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "typeDesc"
       }
      ],
      "type": "JavaType",
      "name": "resolveAbstractType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonMappingException.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "JsonMappingException",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "JsonMappingException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Throwable",
        "name": "problem"
       }
      ],
      "type": "JsonMappingException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "JsonMappingException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Throwable",
        "name": "problem"
       }
      ],
      "type": "JsonMappingException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "JsonMappingException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "JsonMappingException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "JsonMappingException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Throwable",
        "name": "problem"
       }
      ],
      "type": "JsonMappingException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "IOException",
        "name": "src"
       }
      ],
      "type": "JsonMappingException",
      "name": "fromUnexpectedIOE"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "src"
       },
       {
        "type": "Object",
        "name": "refFrom"
       },
       {
        "type": "String",
        "name": "refFieldName"
       }
      ],
      "type": "JsonMappingException",
      "name": "wrapWithPath"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "src"
       },
       {
        "type": "Object",
        "name": "refFrom"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonMappingException",
      "name": "wrapWithPath"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "src"
       },
       {
        "type": "Reference",
        "name": "ref"
       }
      ],
      "type": "JsonMappingException",
      "name": "wrapWithPath"
     },
     {
      "params": [],
      "type": "List",
      "name": "getPath"
     },
     {
      "params": [],
      "type": "String",
      "name": "getPathReference"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getPathReference"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "referrer"
       },
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": null,
      "name": "prependPath"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "referrer"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": null,
      "name": "prependPath"
     },
     {
      "params": [
       {
        "type": "Reference",
        "name": "r"
       }
      ],
      "type": null,
      "name": "prependPath"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getProcessor"
     },
     {
      "params": [],
      "type": "String",
      "name": "getLocalizedMessage"
     },
     {
      "params": [],
      "type": "String",
      "name": "getMessage"
     },
     {
      "params": [],
      "type": "String",
      "name": "_buildMessage"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": null,
      "name": "_appendPathDesc"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "MAX_REFS_TO_LIST"
     },
     {
      "type": "LinkedList",
      "name": "_path"
     },
     {
      "type": "Closeable",
      "name": "_processor"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonNode.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "JsonNode",
    "methods": [
     {
      "params": [],
      "type": "T",
      "name": "deepCopy"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isValueNode"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isContainerNode"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isMissingNode"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isArray"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isObject"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "path"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "path"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "fieldNames"
     },
     {
      "params": [
       {
        "type": "JsonPointer",
        "name": "ptr"
       }
      ],
      "type": "JsonNode",
      "name": "at"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "jsonPtrExpr"
       }
      ],
      "type": "JsonNode",
      "name": "at"
     },
     {
      "params": [
       {
        "type": "JsonPointer",
        "name": "ptr"
       }
      ],
      "type": "JsonNode",
      "name": "_at"
     },
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isPojo"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isIntegralNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isFloatingPointNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isShort"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isLong"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isFloat"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isDouble"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isBigDecimal"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isBigInteger"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isTextual"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isBoolean"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isNull"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isBinary"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToLong"
     },
     {
      "params": [],
      "type": "String",
      "name": "textValue"
     },
     {
      "params": [],
      "type": "byte",
      "name": "binaryValue"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "booleanValue"
     },
     {
      "params": [],
      "type": "Number",
      "name": "numberValue"
     },
     {
      "params": [],
      "type": "short",
      "name": "shortValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "intValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "longValue"
     },
     {
      "params": [],
      "type": "float",
      "name": "floatValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "doubleValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "decimalValue"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "bigIntegerValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "defaultValue"
       }
      ],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [],
      "type": "int",
      "name": "asInt"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "defaultValue"
       }
      ],
      "type": "int",
      "name": "asInt"
     },
     {
      "params": [],
      "type": "long",
      "name": "asLong"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "defaultValue"
       }
      ],
      "type": "long",
      "name": "asLong"
     },
     {
      "params": [],
      "type": "double",
      "name": "asDouble"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "defaultValue"
       }
      ],
      "type": "double",
      "name": "asDouble"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "defaultValue"
       }
      ],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "boolean",
      "name": "has"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "boolean",
      "name": "has"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "boolean",
      "name": "hasNonNull"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "boolean",
      "name": "hasNonNull"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "iterator"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "elements"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "fields"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "findValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "List",
      "name": "findValues"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "List",
      "name": "findValuesAsText"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "findPath"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "findParent"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "List",
      "name": "findParents"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findValues"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findValuesAsText"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findParents"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "type": "JsonNode",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "type": "JsonNode",
      "name": "withArray"
     },
     {
      "params": [
       {
        "type": "Comparator",
        "name": "comparator"
       },
       {
        "type": "JsonNode",
        "name": "other"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ObjectReader.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "ObjectReader",
    "methods": [
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [
       {
        "type": "ObjectReader",
        "name": "base"
       },
       {
        "type": "JsonFactory",
        "name": "f"
       }
      ],
      "type": "ObjectReader",
      "name": "_new"
     },
     {
      "params": [
       {
        "type": "ObjectReader",
        "name": "base"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "ObjectReader",
      "name": "_new"
     },
     {
      "params": [
       {
        "type": "ObjectReader",
        "name": "base"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "JsonDeserializer",
        "name": "rootDeser"
       },
       {
        "type": "Object",
        "name": "valueToUpdate"
       },
       {
        "type": "FormatSchema",
        "name": "schema"
       },
       {
        "type": "InjectableValues",
        "name": "injectableValues"
       },
       {
        "type": "DataFormatReaders",
        "name": "dataFormatReaders"
       }
      ],
      "type": "ObjectReader",
      "name": "_new"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       },
       {
        "type": "boolean",
        "name": "parserManaged"
       }
      ],
      "type": "MappingIterator",
      "name": "_newIterator"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "JsonToken",
      "name": "_initForReading"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": null,
      "name": "_initForMultiRead"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "first"
       },
       {
        "type": "DeserializationFeature",
        "name": "other"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "features"
       }
      ],
      "type": "ObjectReader",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectReader",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "first"
       },
       {
        "type": "DeserializationFeature",
        "name": "other"
       }
      ],
      "type": "ObjectReader",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "features"
       }
      ],
      "type": "ObjectReader",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "feature"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "features"
       }
      ],
      "type": "ObjectReader",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "feature"
       }
      ],
      "type": "ObjectReader",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "features"
       }
      ],
      "type": "ObjectReader",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "features"
       }
      ],
      "type": "ObjectReader",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectReader",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "features"
       }
      ],
      "type": "ObjectReader",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       }
      ],
      "type": "ObjectReader",
      "name": "at"
     },
     {
      "params": [
       {
        "type": "JsonPointer",
        "name": "pointer"
       }
      ],
      "type": "ObjectReader",
      "name": "at"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "InjectableValues",
        "name": "injectableValues"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JsonNodeFactory",
        "name": "f"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JsonFactory",
        "name": "f"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "rootName"
       }
      ],
      "type": "ObjectReader",
      "name": "withRootName"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "rootName"
       }
      ],
      "type": "ObjectReader",
      "name": "withRootName"
     },
     {
      "params": [],
      "type": "ObjectReader",
      "name": "withoutRootName"
     },
     {
      "params": [
       {
        "type": "FormatSchema",
        "name": "schema"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "ObjectReader",
      "name": "forType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "ObjectReader",
      "name": "forType"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "ObjectReader",
      "name": "forType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "ObjectReader",
      "name": "withType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "ObjectReader",
      "name": "withType"
     },
     {
      "params": [
       {
        "type": "java",
        "name": "valueType"
       }
      ],
      "type": "ObjectReader",
      "name": "withType"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "ObjectReader",
      "name": "withType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "ObjectReader",
      "name": "withValueToUpdate"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "activeView"
       }
      ],
      "type": "ObjectReader",
      "name": "withView"
     },
     {
      "params": [
       {
        "type": "Locale",
        "name": "l"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DeserializationProblemHandler",
        "name": "h"
       }
      ],
      "type": "ObjectReader",
      "name": "withHandler"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "defaultBase64"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "ObjectReader",
        "name": "readers"
       }
      ],
      "type": "ObjectReader",
      "name": "withFormatDetection"
     },
     {
      "params": [
       {
        "type": "DataFormatReaders",
        "name": "readers"
       }
      ],
      "type": "ObjectReader",
      "name": "withFormatDetection"
     },
     {
      "params": [
       {
        "type": "ContextAttributes",
        "name": "attrs"
       }
      ],
      "type": "ObjectReader",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "attrs"
       }
      ],
      "type": "ObjectReader",
      "name": "withAttributes"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "ObjectReader",
      "name": "withAttribute"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "ObjectReader",
      "name": "withoutAttribute"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "newConfig"
       }
      ],
      "type": "ObjectReader",
      "name": "_with"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [],
      "type": "DeserializationConfig",
      "name": "getConfig"
     },
     {
      "params": [],
      "type": "JsonFactory",
      "name": "getFactory"
     },
     {
      "params": [],
      "type": "TypeFactory",
      "name": "getTypeFactory"
     },
     {
      "params": [],
      "type": "ContextAttributes",
      "name": "getAttributes"
     },
     {
      "params": [],
      "type": "InjectableValues",
      "name": "getInjectableValues"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "ResolvedType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "Iterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "Iterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "ResolvedType",
        "name": "valueType"
       }
      ],
      "type": "Iterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "Iterator",
      "name": "readValues"
     },
     {
      "params": [],
      "type": "JsonNode",
      "name": "createArrayNode"
     },
     {
      "params": [],
      "type": "JsonNode",
      "name": "createObjectNode"
     },
     {
      "params": [
       {
        "type": "TreeNode",
        "name": "n"
       }
      ],
      "type": "JsonParser",
      "name": "treeAsTokens"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "T",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "TreeNode",
        "name": "rootNode"
       }
      ],
      "type": null,
      "name": "writeTree"
     },
     {
      "params": [
       {
        "type": "InputStream",
        "name": "src"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "Reader",
        "name": "src"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "src"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "src"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "URL",
        "name": "src"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonNode",
        "name": "src"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "DataInput",
        "name": "src"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "InputStream",
        "name": "in"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "Reader",
        "name": "r"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "json"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "DataInput",
        "name": "src"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "InputStream",
        "name": "src"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "Reader",
        "name": "src"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "json"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "src"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "URL",
        "name": "src"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "DataInput",
        "name": "src"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "TreeNode",
        "name": "n"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "treeToValue"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Object",
        "name": "valueToUpdate"
       }
      ],
      "type": "Object",
      "name": "_bind"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p0"
       }
      ],
      "type": "Object",
      "name": "_bindAndClose"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p0"
       }
      ],
      "type": "JsonNode",
      "name": "_bindAndCloseAsTree"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "JsonNode",
      "name": "_bindAsTree"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "MappingIterator",
      "name": "_bindAndReadValues"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "rootType"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "Object",
      "name": "_unwrapAndDeserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "boolean",
        "name": "multiValue"
       }
      ],
      "type": "JsonParser",
      "name": "_considerFilter"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "bindType"
       }
      ],
      "type": null,
      "name": "_verifyNoTrailingTokens"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ],
      "type": "Object",
      "name": "_detectBindAndClose"
     },
     {
      "params": [
       {
        "type": "DataFormatReaders",
        "name": "match"
       },
       {
        "type": "boolean",
        "name": "forceClosing"
       }
      ],
      "type": "Object",
      "name": "_detectBindAndClose"
     },
     {
      "params": [
       {
        "type": "DataFormatReaders",
        "name": "match"
       },
       {
        "type": "boolean",
        "name": "forceClosing"
       }
      ],
      "type": "MappingIterator",
      "name": "_detectBindAndReadValues"
     },
     {
      "params": [
       {
        "type": "InputStream",
        "name": "in"
       }
      ],
      "type": "JsonNode",
      "name": "_detectBindAndCloseAsTree"
     },
     {
      "params": [
       {
        "type": "DataFormatReaders",
        "name": "detector"
       },
       {
        "type": "DataFormatReaders",
        "name": "match"
       }
      ],
      "type": null,
      "name": "_reportUnkownFormat"
     },
     {
      "params": [
       {
        "type": "FormatSchema",
        "name": "schema"
       }
      ],
      "type": null,
      "name": "_verifySchemaType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "DefaultDeserializationContext",
      "name": "createDeserializationContext"
     },
     {
      "params": [
       {
        "type": "URL",
        "name": "src"
       }
      ],
      "type": "InputStream",
      "name": "_inputStream"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "f"
       }
      ],
      "type": "InputStream",
      "name": "_inputStream"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "src"
       }
      ],
      "type": null,
      "name": "_reportUndetectableSource"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findRootDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findTreeDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_prefetchRootDeserializer"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "JSON_NODE_TYPE"
     },
     {
      "type": "DeserializationConfig",
      "name": "_config"
     },
     {
      "type": "DefaultDeserializationContext",
      "name": "_context"
     },
     {
      "type": "JsonFactory",
      "name": "_parserFactory"
     },
     {
      "type": "boolean",
      "name": "_unwrapRoot"
     },
     {
      "type": "TokenFilter",
      "name": "_filter"
     },
     {
      "type": "JavaType",
      "name": "_valueType"
     },
     {
      "type": "JsonDeserializer",
      "name": "_rootDeserializer"
     },
     {
      "type": "Object",
      "name": "_valueToUpdate"
     },
     {
      "type": "FormatSchema",
      "name": "_schema"
     },
     {
      "type": "InjectableValues",
      "name": "_injectableValues"
     },
     {
      "type": "DataFormatReaders",
      "name": "_dataFormatReaders"
     },
     {
      "type": "ConcurrentHashMap",
      "name": "_rootDeserializers"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyNamingStrategy.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "PropertyNamingStrategy",
    "methods": [
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedField",
        "name": "field"
       },
       {
        "type": "String",
        "name": "defaultName"
       }
      ],
      "type": "String",
      "name": "nameForField"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMethod",
        "name": "method"
       },
       {
        "type": "String",
        "name": "defaultName"
       }
      ],
      "type": "String",
      "name": "nameForGetterMethod"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMethod",
        "name": "method"
       },
       {
        "type": "String",
        "name": "defaultName"
       }
      ],
      "type": "String",
      "name": "nameForSetterMethod"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedParameter",
        "name": "ctorParam"
       },
       {
        "type": "String",
        "name": "defaultName"
       }
      ],
      "type": "String",
      "name": "nameForConstructorParameter"
     }
    ],
    "fields": [
     {
      "type": "PropertyNamingStrategy",
      "name": "SNAKE_CASE"
     },
     {
      "type": "PropertyNamingStrategy",
      "name": "UPPER_CAMEL_CASE"
     },
     {
      "type": "PropertyNamingStrategy",
      "name": "LOWER_CAMEL_CASE"
     },
     {
      "type": "PropertyNamingStrategy",
      "name": "LOWER_CASE"
     },
     {
      "type": "PropertyNamingStrategy",
      "name": "KEBAB_CASE"
     },
     {
      "type": "PropertyNamingStrategy",
      "name": "CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES"
     },
     {
      "type": "PropertyNamingStrategy",
      "name": "PASCAL_CASE_TO_CAMEL_CASE"
     }
    ]
   }
  ]
 },
 {
  "filename": "DatabindContext.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "DatabindContext",
    "methods": [
     {
      "params": [],
      "type": "MapperConfig",
      "name": "getConfig"
     },
     {
      "params": [],
      "type": "AnnotationIntrospector",
      "name": "getAnnotationIntrospector"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "feature"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canOverrideAccessModifiers"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getActiveView"
     },
     {
      "params": [],
      "type": "Locale",
      "name": "getLocale"
     },
     {
      "params": [],
      "type": "TimeZone",
      "name": "getTimeZone"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonFormat",
      "name": "getDefaultPropertyFormat"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "Object",
      "name": "getAttribute"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "DatabindContext",
      "name": "setAttribute"
     },
     {
      "params": [
       {
        "type": "Type",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "constructSpecializedType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "String",
        "name": "subClass"
       }
      ],
      "type": "JavaType",
      "name": "resolveSubType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "String",
        "name": "typeId"
       },
       {
        "type": "String",
        "name": "extraDesc"
       }
      ],
      "type": "JsonMappingException",
      "name": "invalidTypeIdException"
     },
     {
      "params": [],
      "type": "TypeFactory",
      "name": "getTypeFactory"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "ObjectIdInfo",
        "name": "objectIdInfo"
       }
      ],
      "type": "ObjectIdGenerator",
      "name": "objectIdGeneratorInstance"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "ObjectIdInfo",
        "name": "objectIdInfo"
       }
      ],
      "type": "ObjectIdResolver",
      "name": "objectIdResolverInstance"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Object",
        "name": "converterDef"
       }
      ],
      "type": "Converter",
      "name": "converterInstance"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "T",
      "name": "reportBadDefinition"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "T",
      "name": "reportBadDefinition"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "String",
      "name": "_format"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "desc"
       }
      ],
      "type": "String",
      "name": "_truncate"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "desc"
       }
      ],
      "type": "String",
      "name": "_quotedString"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "msgBase"
       },
       {
        "type": "String",
        "name": "extra"
       }
      ],
      "type": "String",
      "name": "_colonConcat"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "desc"
       }
      ],
      "type": "String",
      "name": "_desc"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "MAX_ERROR_STR_LEN"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyName.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "PropertyName",
    "methods": [
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "simpleName"
       }
      ],
      "type": "PropertyName",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "simpleName"
       },
       {
        "type": "String",
        "name": "ns"
       }
      ],
      "type": "PropertyName",
      "name": "construct"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "internSimpleName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "simpleName"
       }
      ],
      "type": "PropertyName",
      "name": "withSimpleName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "ns"
       }
      ],
      "type": "PropertyName",
      "name": "withNamespace"
     },
     {
      "params": [],
      "type": "String",
      "name": "getSimpleName"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       }
      ],
      "type": "SerializableString",
      "name": "simpleAsEncoded"
     },
     {
      "params": [],
      "type": "String",
      "name": "getNamespace"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasSimpleName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ],
      "type": "boolean",
      "name": "hasSimpleName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasNamespace"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "_USE_DEFAULT"
     },
     {
      "type": "String",
      "name": "_NO_NAME"
     },
     {
      "type": "PropertyName",
      "name": "USE_DEFAULT"
     },
     {
      "type": "PropertyName",
      "name": "NO_NAME"
     },
     {
      "type": "String",
      "name": "_simpleName"
     },
     {
      "type": "String",
      "name": "_namespace"
     },
     {
      "type": "SerializableString",
      "name": "_encodedSimple"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanProperty.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "BeanProperty",
    "methods": [
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getFullName"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getWrapperName"
     },
     {
      "params": [],
      "type": "PropertyMetadata",
      "name": "getMetadata"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isRequired"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isVirtual"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getContextAnnotation"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       }
      ],
      "type": "JsonFormat",
      "name": "findFormatOverrides"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonFormat",
      "name": "findPropertyFormat"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonInclude",
      "name": "findPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       }
      ],
      "type": "List",
      "name": "findAliases"
     },
     {
      "params": [
       {
        "type": "JsonObjectFormatVisitor",
        "name": "objectVisitor"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     }
    ],
    "fields": [
     {
      "type": "JsonFormat",
      "name": "EMPTY_FORMAT"
     },
     {
      "type": "JsonInclude",
      "name": "EMPTY_INCLUDE"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonSerializer.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "JsonSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "JsonSerializer",
      "name": "unwrappingSerializer"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "delegatee"
       }
      ],
      "type": "JsonSerializer",
      "name": "replaceDelegatee"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "JsonSerializer",
      "name": "withFilterId"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "handledType"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "usesObjectId"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isUnwrappingSerializer"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getDelegatee"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "properties"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": []
 },
 {
  "filename": "MappingIterator.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "MappingIterator",
    "methods": [
     {
      "params": [],
      "type": "MappingIterator",
      "name": "emptyIterator"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasNext"
     },
     {
      "params": [],
      "type": "T",
      "name": "next"
     },
     {
      "params": [],
      "type": null,
      "name": "remove"
     },
     {
      "params": [],
      "type": null,
      "name": "close"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasNextValue"
     },
     {
      "params": [],
      "type": "T",
      "name": "nextValue"
     },
     {
      "params": [],
      "type": "List",
      "name": "readAll"
     },
     {
      "params": [
       {
        "type": "L",
        "name": "resultList"
       }
      ],
      "type": "L",
      "name": "readAll"
     },
     {
      "params": [
       {
        "type": "C",
        "name": "results"
       }
      ],
      "type": "C",
      "name": "readAll"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "getParser"
     },
     {
      "params": [],
      "type": "FormatSchema",
      "name": "getParserSchema"
     },
     {
      "params": [],
      "type": "JsonLocation",
      "name": "getCurrentLocation"
     },
     {
      "params": [],
      "type": null,
      "name": "_resync"
     },
     {
      "params": [],
      "type": "R",
      "name": "_throwNoSuchElement"
     },
     {
      "params": [
       {
        "type": "JsonMappingException",
        "name": "e"
       }
      ],
      "type": "R",
      "name": "_handleMappingException"
     },
     {
      "params": [
       {
        "type": "IOException",
        "name": "e"
       }
      ],
      "type": "R",
      "name": "_handleIOException"
     }
    ],
    "fields": [
     {
      "type": "MappingIterator",
      "name": "EMPTY_ITERATOR"
     },
     {
      "type": "int",
      "name": "STATE_CLOSED"
     },
     {
      "type": "int",
      "name": "STATE_NEED_RESYNC"
     },
     {
      "type": "int",
      "name": "STATE_MAY_HAVE_VALUE"
     },
     {
      "type": "int",
      "name": "STATE_HAS_VALUE"
     },
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "DeserializationContext",
      "name": "_context"
     },
     {
      "type": "JsonDeserializer",
      "name": "_deserializer"
     },
     {
      "type": "JsonParser",
      "name": "_parser"
     },
     {
      "type": "JsonStreamContext",
      "name": "_seqContext"
     },
     {
      "type": "T",
      "name": "_updatedValue"
     },
     {
      "type": "boolean",
      "name": "_closeParser"
     },
     {
      "type": "int",
      "name": "_state"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectMapper.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "ObjectMapper",
    "methods": [
     {
      "params": [],
      "type": "ClassIntrospector",
      "name": "defaultClassIntrospector"
     },
     {
      "params": [],
      "type": "ObjectMapper",
      "name": "copy"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "exp"
       }
      ],
      "type": null,
      "name": "_checkInvalidCopy"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "ObjectReader",
      "name": "_newReader"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "Object",
        "name": "valueToUpdate"
       },
       {
        "type": "FormatSchema",
        "name": "schema"
       },
       {
        "type": "InjectableValues",
        "name": "injectableValues"
       }
      ],
      "type": "ObjectReader",
      "name": "_newReader"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       }
      ],
      "type": "ObjectWriter",
      "name": "_newWriter"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "FormatSchema",
        "name": "schema"
       }
      ],
      "type": "ObjectWriter",
      "name": "_newWriter"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "rootType"
       },
       {
        "type": "PrettyPrinter",
        "name": "pp"
       }
      ],
      "type": "ObjectWriter",
      "name": "_newWriter"
     },
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [
       {
        "type": "Module",
        "name": "module"
       }
      ],
      "type": "ObjectMapper",
      "name": "registerModule"
     },
     {
      "params": [
       {
        "type": "Module",
        "name": "modules"
       }
      ],
      "type": "ObjectMapper",
      "name": "registerModules"
     },
     {
      "params": [
       {
        "type": "Iterable",
        "name": "modules"
       }
      ],
      "type": "ObjectMapper",
      "name": "registerModules"
     },
     {
      "params": [],
      "type": "Set",
      "name": "getRegisteredModuleIds"
     },
     {
      "params": [],
      "type": "List",
      "name": "findModules"
     },
     {
      "params": [
       {
        "type": "ClassLoader",
        "name": "classLoader"
       }
      ],
      "type": "List",
      "name": "findModules"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "ClassLoader",
        "name": "classLoader"
       }
      ],
      "type": "ServiceLoader",
      "name": "secureGetServiceLoader"
     },
     {
      "params": [],
      "type": "ObjectMapper",
      "name": "findAndRegisterModules"
     },
     {
      "params": [],
      "type": "SerializationConfig",
      "name": "getSerializationConfig"
     },
     {
      "params": [],
      "type": "DeserializationConfig",
      "name": "getDeserializationConfig"
     },
     {
      "params": [],
      "type": "DeserializationContext",
      "name": "getDeserializationContext"
     },
     {
      "params": [
       {
        "type": "SerializerFactory",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "setSerializerFactory"
     },
     {
      "params": [],
      "type": "SerializerFactory",
      "name": "getSerializerFactory"
     },
     {
      "params": [
       {
        "type": "DefaultSerializerProvider",
        "name": "p"
       }
      ],
      "type": "ObjectMapper",
      "name": "setSerializerProvider"
     },
     {
      "params": [],
      "type": "SerializerProvider",
      "name": "getSerializerProvider"
     },
     {
      "params": [],
      "type": "SerializerProvider",
      "name": "getSerializerProviderInstance"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "sourceMixins"
       }
      ],
      "type": "ObjectMapper",
      "name": "setMixIns"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "target"
       },
       {
        "type": "Class",
        "name": "mixinSource"
       }
      ],
      "type": "ObjectMapper",
      "name": "addMixIn"
     },
     {
      "params": [
       {
        "type": "ClassIntrospector",
        "name": "resolver"
       }
      ],
      "type": "ObjectMapper",
      "name": "setMixInResolver"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Class",
      "name": "findMixInClassFor"
     },
     {
      "params": [],
      "type": "int",
      "name": "mixInCount"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "sourceMixins"
       }
      ],
      "type": null,
      "name": "setMixInAnnotations"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "target"
       },
       {
        "type": "Class",
        "name": "mixinSource"
       }
      ],
      "type": null,
      "name": "addMixInAnnotations"
     },
     {
      "params": [],
      "type": "VisibilityChecker",
      "name": "getVisibilityChecker"
     },
     {
      "params": [
       {
        "type": "VisibilityChecker",
        "name": "vc"
       }
      ],
      "type": "ObjectMapper",
      "name": "setVisibility"
     },
     {
      "params": [
       {
        "type": "PropertyAccessor",
        "name": "forMethod"
       },
       {
        "type": "JsonAutoDetect",
        "name": "visibility"
       }
      ],
      "type": "ObjectMapper",
      "name": "setVisibility"
     },
     {
      "params": [],
      "type": "SubtypeResolver",
      "name": "getSubtypeResolver"
     },
     {
      "params": [
       {
        "type": "SubtypeResolver",
        "name": "str"
       }
      ],
      "type": "ObjectMapper",
      "name": "setSubtypeResolver"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "ObjectMapper",
      "name": "setAnnotationIntrospector"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "serializerAI"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "deserializerAI"
       }
      ],
      "type": "ObjectMapper",
      "name": "setAnnotationIntrospectors"
     },
     {
      "params": [
       {
        "type": "PropertyNamingStrategy",
        "name": "s"
       }
      ],
      "type": "ObjectMapper",
      "name": "setPropertyNamingStrategy"
     },
     {
      "params": [],
      "type": "PropertyNamingStrategy",
      "name": "getPropertyNamingStrategy"
     },
     {
      "params": [
       {
        "type": "PrettyPrinter",
        "name": "pp"
       }
      ],
      "type": "ObjectMapper",
      "name": "setDefaultPrettyPrinter"
     },
     {
      "params": [
       {
        "type": "VisibilityChecker",
        "name": "vc"
       }
      ],
      "type": null,
      "name": "setVisibilityChecker"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "incl"
       }
      ],
      "type": "ObjectMapper",
      "name": "setSerializationInclusion"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "incl"
       }
      ],
      "type": "ObjectMapper",
      "name": "setPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "incl"
       }
      ],
      "type": "ObjectMapper",
      "name": "setDefaultPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "incl"
       }
      ],
      "type": "ObjectMapper",
      "name": "setDefaultPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "JsonSetter",
        "name": "v"
       }
      ],
      "type": "ObjectMapper",
      "name": "setDefaultSetterInfo"
     },
     {
      "params": [
       {
        "type": "JsonAutoDetect",
        "name": "vis"
       }
      ],
      "type": "ObjectMapper",
      "name": "setDefaultVisibility"
     },
     {
      "params": [
       {
        "type": "Boolean",
        "name": "b"
       }
      ],
      "type": "ObjectMapper",
      "name": "setDefaultMergeable"
     },
     {
      "params": [],
      "type": "ObjectMapper",
      "name": "enableDefaultTyping"
     },
     {
      "params": [
       {
        "type": "DefaultTyping",
        "name": "dti"
       }
      ],
      "type": "ObjectMapper",
      "name": "enableDefaultTyping"
     },
     {
      "params": [
       {
        "type": "DefaultTyping",
        "name": "applicability"
       },
       {
        "type": "JsonTypeInfo",
        "name": "includeAs"
       }
      ],
      "type": "ObjectMapper",
      "name": "enableDefaultTyping"
     },
     {
      "params": [
       {
        "type": "DefaultTyping",
        "name": "applicability"
       },
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "type": "ObjectMapper",
      "name": "enableDefaultTypingAsProperty"
     },
     {
      "params": [],
      "type": "ObjectMapper",
      "name": "disableDefaultTyping"
     },
     {
      "params": [
       {
        "type": "TypeResolverBuilder",
        "name": "typer"
       }
      ],
      "type": "ObjectMapper",
      "name": "setDefaultTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "classes"
       }
      ],
      "type": null,
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "NamedType",
        "name": "types"
       }
      ],
      "type": null,
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "subtypes"
       }
      ],
      "type": null,
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "configOverride"
     },
     {
      "params": [],
      "type": "TypeFactory",
      "name": "getTypeFactory"
     },
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "setTypeFactory"
     },
     {
      "params": [
       {
        "type": "Type",
        "name": "t"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [],
      "type": "JsonNodeFactory",
      "name": "getNodeFactory"
     },
     {
      "params": [
       {
        "type": "JsonNodeFactory",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "setNodeFactory"
     },
     {
      "params": [
       {
        "type": "DeserializationProblemHandler",
        "name": "h"
       }
      ],
      "type": "ObjectMapper",
      "name": "addHandler"
     },
     {
      "params": [],
      "type": "ObjectMapper",
      "name": "clearProblemHandlers"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "ObjectMapper",
      "name": "setConfig"
     },
     {
      "params": [
       {
        "type": "FilterProvider",
        "name": "filterProvider"
       }
      ],
      "type": null,
      "name": "setFilters"
     },
     {
      "params": [
       {
        "type": "FilterProvider",
        "name": "filterProvider"
       }
      ],
      "type": "ObjectMapper",
      "name": "setFilterProvider"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "v"
       }
      ],
      "type": "ObjectMapper",
      "name": "setBase64Variant"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       }
      ],
      "type": "ObjectMapper",
      "name": "setConfig"
     },
     {
      "params": [],
      "type": "JsonFactory",
      "name": "getFactory"
     },
     {
      "params": [],
      "type": "JsonFactory",
      "name": "getJsonFactory"
     },
     {
      "params": [
       {
        "type": "DateFormat",
        "name": "dateFormat"
       }
      ],
      "type": "ObjectMapper",
      "name": "setDateFormat"
     },
     {
      "params": [],
      "type": "DateFormat",
      "name": "getDateFormat"
     },
     {
      "params": [
       {
        "type": "HandlerInstantiator",
        "name": "hi"
       }
      ],
      "type": "Object",
      "name": "setHandlerInstantiator"
     },
     {
      "params": [
       {
        "type": "InjectableValues",
        "name": "injectableValues"
       }
      ],
      "type": "ObjectMapper",
      "name": "setInjectableValues"
     },
     {
      "params": [],
      "type": "InjectableValues",
      "name": "getInjectableValues"
     },
     {
      "params": [
       {
        "type": "Locale",
        "name": "l"
       }
      ],
      "type": "ObjectMapper",
      "name": "setLocale"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": "ObjectMapper",
      "name": "setTimeZone"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "f"
       },
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "ObjectMapper",
      "name": "configure"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "enable"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "disable"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "f"
       },
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "ObjectMapper",
      "name": "configure"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "enable"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "first"
       },
       {
        "type": "SerializationFeature",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "enable"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "disable"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "first"
       },
       {
        "type": "SerializationFeature",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "disable"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "f"
       },
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "ObjectMapper",
      "name": "configure"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectMapper",
      "name": "enable"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "first"
       },
       {
        "type": "DeserializationFeature",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "enable"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectMapper",
      "name": "disable"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "first"
       },
       {
        "type": "DeserializationFeature",
        "name": "f"
       }
      ],
      "type": "ObjectMapper",
      "name": "disable"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "f"
       },
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "ObjectMapper",
      "name": "configure"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "features"
       }
      ],
      "type": "ObjectMapper",
      "name": "enable"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "features"
       }
      ],
      "type": "ObjectMapper",
      "name": "disable"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "f"
       },
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "ObjectMapper",
      "name": "configure"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "features"
       }
      ],
      "type": "ObjectMapper",
      "name": "enable"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "features"
       }
      ],
      "type": "ObjectMapper",
      "name": "disable"
     },
     {
      "params": [
       {
        "type": "JsonFactory",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "ResolvedType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "T",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "ResolvedType",
        "name": "valueType"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "MappingIterator",
      "name": "readValues"
     },
     {
      "params": [
       {
        "type": "InputStream",
        "name": "in"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "Reader",
        "name": "r"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "content"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "content"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "file"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "URL",
        "name": "source"
       }
      ],
      "type": "JsonNode",
      "name": "readTree"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "TreeNode",
        "name": "rootNode"
       }
      ],
      "type": null,
      "name": "writeTree"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "JsonNode",
        "name": "rootNode"
       }
      ],
      "type": null,
      "name": "writeTree"
     },
     {
      "params": [],
      "type": "ObjectNode",
      "name": "createObjectNode"
     },
     {
      "params": [],
      "type": "ArrayNode",
      "name": "createArrayNode"
     },
     {
      "params": [
       {
        "type": "TreeNode",
        "name": "n"
       }
      ],
      "type": "JsonParser",
      "name": "treeAsTokens"
     },
     {
      "params": [
       {
        "type": "TreeNode",
        "name": "n"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "treeToValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "fromValue"
       }
      ],
      "type": "T",
      "name": "valueToTree"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "canSerialize"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "AtomicReference",
        "name": "cause"
       }
      ],
      "type": "boolean",
      "name": "canSerialize"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "canDeserialize"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "AtomicReference",
        "name": "cause"
       }
      ],
      "type": "boolean",
      "name": "canDeserialize"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "src"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "src"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "src"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "URL",
        "name": "src"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "URL",
        "name": "src"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "URL",
        "name": "src"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "content"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "content"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "content"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "Reader",
        "name": "src"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "Reader",
        "name": "src"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "Reader",
        "name": "src"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "InputStream",
        "name": "src"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "InputStream",
        "name": "src"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "InputStream",
        "name": "src"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       },
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "src"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "DataInput",
        "name": "src"
       },
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "DataInput",
        "name": "src"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "T",
      "name": "readValue"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "resultFile"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "OutputStream",
        "name": "out"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "DataOutput",
        "name": "out"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "Writer",
        "name": "w"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "writeValueAsString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "byte",
      "name": "writeValueAsBytes"
     },
     {
      "params": [],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "first"
       },
       {
        "type": "SerializationFeature",
        "name": "other"
       }
      ],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [
       {
        "type": "DateFormat",
        "name": "df"
       }
      ],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "serializationView"
       }
      ],
      "type": "ObjectWriter",
      "name": "writerWithView"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "writerFor"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "writerFor"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "writerFor"
     },
     {
      "params": [
       {
        "type": "PrettyPrinter",
        "name": "pp"
       }
      ],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [],
      "type": "ObjectWriter",
      "name": "writerWithDefaultPrettyPrinter"
     },
     {
      "params": [
       {
        "type": "FilterProvider",
        "name": "filterProvider"
       }
      ],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [
       {
        "type": "FormatSchema",
        "name": "schema"
       }
      ],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "defaultBase64"
       }
      ],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [
       {
        "type": "CharacterEscapes",
        "name": "escapes"
       }
      ],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [
       {
        "type": "ContextAttributes",
        "name": "attrs"
       }
      ],
      "type": "ObjectWriter",
      "name": "writer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "writerWithType"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "writerWithType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "writerWithType"
     },
     {
      "params": [],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "DeserializationFeature",
        "name": "first"
       },
       {
        "type": "DeserializationFeature",
        "name": "other"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "valueToUpdate"
       }
      ],
      "type": "ObjectReader",
      "name": "readerForUpdating"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "ObjectReader",
      "name": "readerFor"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "ObjectReader",
      "name": "readerFor"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "type"
       }
      ],
      "type": "ObjectReader",
      "name": "readerFor"
     },
     {
      "params": [
       {
        "type": "JsonNodeFactory",
        "name": "f"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "FormatSchema",
        "name": "schema"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "InjectableValues",
        "name": "injectableValues"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "view"
       }
      ],
      "type": "ObjectReader",
      "name": "readerWithView"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "defaultBase64"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "ContextAttributes",
        "name": "attrs"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "type"
       }
      ],
      "type": "ObjectReader",
      "name": "reader"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "fromValue"
       },
       {
        "type": "Class",
        "name": "toValueType"
       }
      ],
      "type": "T",
      "name": "convertValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "fromValue"
       },
       {
        "type": "TypeReference",
        "name": "toValueTypeRef"
       }
      ],
      "type": "T",
      "name": "convertValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "fromValue"
       },
       {
        "type": "JavaType",
        "name": "toValueType"
       }
      ],
      "type": "T",
      "name": "convertValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "fromValue"
       },
       {
        "type": "JavaType",
        "name": "toValueType"
       }
      ],
      "type": "Object",
      "name": "_convert"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "valueToUpdate"
       },
       {
        "type": "Object",
        "name": "overrides"
       }
      ],
      "type": "T",
      "name": "updateValue"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "t"
       }
      ],
      "type": "com",
      "name": "generateJsonSchema"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       }
      ],
      "type": "DefaultSerializerProvider",
      "name": "_serializerProvider"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "_configAndWriteValue"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "SerializationConfig",
        "name": "cfg"
       }
      ],
      "type": null,
      "name": "_configAndWriteCloseable"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "SerializationConfig",
        "name": "cfg"
       }
      ],
      "type": null,
      "name": "_writeCloseableValue"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "cfg"
       },
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "Object",
      "name": "_readValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p0"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "Object",
      "name": "_readMapAndClose"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p0"
       }
      ],
      "type": "JsonNode",
      "name": "_readTreeAndClose"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "rootType"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "Object",
      "name": "_unwrapAndDeserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationConfig",
        "name": "cfg"
       }
      ],
      "type": "DefaultDeserializationContext",
      "name": "createDeserializationContext"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JavaType",
        "name": "targetType"
       }
      ],
      "type": "JsonToken",
      "name": "_initForReading"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "JsonToken",
      "name": "_initForReading"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "bindType"
       }
      ],
      "type": null,
      "name": "_verifyNoTrailingTokens"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findRootDeserializer"
     },
     {
      "params": [
       {
        "type": "FormatSchema",
        "name": "schema"
       }
      ],
      "type": null,
      "name": "_verifySchemaType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "JSON_NODE_TYPE"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "DEFAULT_ANNOTATION_INTROSPECTOR"
     },
     {
      "type": "BaseSettings",
      "name": "DEFAULT_BASE"
     },
     {
      "type": "JsonFactory",
      "name": "_jsonFactory"
     },
     {
      "type": "TypeFactory",
      "name": "_typeFactory"
     },
     {
      "type": "InjectableValues",
      "name": "_injectableValues"
     },
     {
      "type": "SubtypeResolver",
      "name": "_subtypeResolver"
     },
     {
      "type": "ConfigOverrides",
      "name": "_configOverrides"
     },
     {
      "type": "SimpleMixInResolver",
      "name": "_mixIns"
     },
     {
      "type": "SerializationConfig",
      "name": "_serializationConfig"
     },
     {
      "type": "DefaultSerializerProvider",
      "name": "_serializerProvider"
     },
     {
      "type": "SerializerFactory",
      "name": "_serializerFactory"
     },
     {
      "type": "DeserializationConfig",
      "name": "_deserializationConfig"
     },
     {
      "type": "DefaultDeserializationContext",
      "name": "_deserializationContext"
     },
     {
      "type": "Set",
      "name": "_registeredModuleTypes"
     },
     {
      "type": "ConcurrentHashMap",
      "name": "_rootDeserializers"
     }
    ]
   }
  ]
 },
 {
  "filename": "Module.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "Module",
    "methods": [
     {
      "params": [],
      "type": "String",
      "name": "getModuleName"
     },
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getTypeId"
     },
     {
      "params": [
       {
        "type": "SetupContext",
        "name": "context"
       }
      ],
      "type": null,
      "name": "setupModule"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "MappingJsonFactory.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "MappingJsonFactory",
    "methods": [
     {
      "params": [],
      "type": "ObjectMapper",
      "name": "getCodec"
     },
     {
      "params": [],
      "type": "JsonFactory",
      "name": "copy"
     },
     {
      "params": [],
      "type": "String",
      "name": "getFormatName"
     },
     {
      "params": [
       {
        "type": "InputAccessor",
        "name": "acc"
       }
      ],
      "type": "MatchStrength",
      "name": "hasFormat"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotationIntrospector.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "AnnotationIntrospector",
    "methods": [
     {
      "params": [],
      "type": "AnnotationIntrospector",
      "name": "nopInstance"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "a1"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "a2"
       }
      ],
      "type": "AnnotationIntrospector",
      "name": "pair"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "allIntrospectors"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "result"
       }
      ],
      "type": "Collection",
      "name": "allIntrospectors"
     },
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "ann"
       }
      ],
      "type": "boolean",
      "name": "isAnnotationBundle"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "ObjectIdInfo",
      "name": "findObjectIdInfo"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       },
       {
        "type": "ObjectIdInfo",
        "name": "objectIdInfo"
       }
      ],
      "type": "ObjectIdInfo",
      "name": "findObjectReferenceInfo"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "PropertyName",
      "name": "findRootName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ac"
       }
      ],
      "type": "JsonIgnoreProperties",
      "name": "findPropertyIgnorals"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Boolean",
      "name": "isIgnorableType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "Object",
      "name": "findFilterId"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Object",
      "name": "findNamingStrategy"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findClassDescription"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ac"
       },
       {
        "type": "boolean",
        "name": "forSerialization"
       }
      ],
      "type": "String",
      "name": "findPropertiesToIgnore"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findPropertiesToIgnore"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Boolean",
      "name": "findIgnoreUnknownProperties"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "VisibilityChecker",
        "name": "checker"
       }
      ],
      "type": "VisibilityChecker",
      "name": "findAutoDetectVisibility"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "findTypeResolver"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "findPropertyTypeResolver"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "containerType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "findPropertyContentTypeResolver"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "List",
      "name": "findSubtypes"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findTypeName"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "Boolean",
      "name": "isTypeId"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "ReferenceProperty",
      "name": "findReferenceType"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "NameTransformer",
      "name": "findUnwrappingNameTransformer"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "hasIgnoreMarker"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "JacksonInject",
      "name": "findInjectableValue"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "Boolean",
      "name": "hasRequiredMarker"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Class",
      "name": "findViews"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "memberOrClass"
       }
      ],
      "type": "JsonFormat",
      "name": "findFormat"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "PropertyName",
      "name": "findWrapperName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "String",
      "name": "findPropertyDefaultValue"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "String",
      "name": "findPropertyDescription"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "Integer",
      "name": "findPropertyIndex"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "String",
      "name": "findImplicitPropertyName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "List",
      "name": "findPropertyAliases"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "JsonProperty",
      "name": "findPropertyAccess"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMethod",
        "name": "setter1"
       },
       {
        "type": "AnnotatedMethod",
        "name": "setter2"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "resolveSetterConflict"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "Object",
      "name": "findInjectableValueId"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Object",
      "name": "findSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Object",
      "name": "findKeySerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Object",
      "name": "findContentSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Object",
      "name": "findNullSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonSerialize",
      "name": "findSerializationTyping"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findSerializationConverter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findSerializationContentConverter"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonInclude",
      "name": "findPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JsonInclude",
        "name": "defValue"
       }
      ],
      "type": "JsonInclude",
      "name": "findSerializationInclusion"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JsonInclude",
        "name": "defValue"
       }
      ],
      "type": "JsonInclude",
      "name": "findSerializationInclusionForContent"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "JavaType",
      "name": "refineSerializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Class",
      "name": "findSerializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Class",
      "name": "findSerializationKeyType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Class",
      "name": "findSerializationContentType"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findSerializationPropertyOrder"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "Boolean",
      "name": "findSerializationSortAlphabetically"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "List",
        "name": "properties"
       }
      ],
      "type": null,
      "name": "findAndAddVirtualProperties"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "PropertyName",
      "name": "findNameForSerialization"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasAsValue"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasAnyGetter"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumType"
       },
       {
        "type": "Enum",
        "name": "enumValues"
       },
       {
        "type": "String",
        "name": "names"
       }
      ],
      "type": "String",
      "name": "findEnumValues"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumCls"
       }
      ],
      "type": "Enum",
      "name": "findDefaultEnumValue"
     },
     {
      "params": [
       {
        "type": "Enum",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "findEnumValue"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "hasAsValueAnnotation"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "hasAnyGetterAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Object",
      "name": "findDeserializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Object",
      "name": "findKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Object",
      "name": "findContentDeserializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findDeserializationConverter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findDeserializationContentConverter"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "JavaType",
      "name": "refineDeserializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Class",
      "name": "findDeserializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseKeyType"
       }
      ],
      "type": "Class",
      "name": "findDeserializationKeyType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseContentType"
       }
      ],
      "type": "Class",
      "name": "findDeserializationContentType"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Object",
      "name": "findValueInstantiator"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Class",
      "name": "findPOJOBuilder"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "JsonPOJOBuilder",
      "name": "findPOJOBuilderConfig"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "PropertyName",
      "name": "findNameForDeserialization"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasAnySetter"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonSetter",
      "name": "findSetterInfo"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "findMergeInfo"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonCreator",
      "name": "findCreatorAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "boolean",
      "name": "hasCreatorAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonCreator",
      "name": "findCreatorBinding"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "hasAnySetterAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "annoClass"
       }
      ],
      "type": "A",
      "name": "_findAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "annoClass"
       }
      ],
      "type": "boolean",
      "name": "_hasAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "annoClasses"
       }
      ],
      "type": "boolean",
      "name": "_hasOneOf"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "SequenceWriter.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "SequenceWriter",
    "methods": [
     {
      "params": [
       {
        "type": "boolean",
        "name": "wrapInArray"
       }
      ],
      "type": "SequenceWriter",
      "name": "init"
     },
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "SequenceWriter",
      "name": "write"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "SequenceWriter",
      "name": "write"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeAll"
     },
     {
      "params": [
       {
        "type": "C",
        "name": "container"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeAll"
     },
     {
      "params": [
       {
        "type": "Iterable",
        "name": "iterable"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeAll"
     },
     {
      "params": [],
      "type": null,
      "name": "flush"
     },
     {
      "params": [],
      "type": null,
      "name": "close"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "SequenceWriter",
      "name": "_writeCloseableValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "SequenceWriter",
      "name": "_writeCloseableValue"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     }
    ],
    "fields": [
     {
      "type": "DefaultSerializerProvider",
      "name": "_provider"
     },
     {
      "type": "SerializationConfig",
      "name": "_config"
     },
     {
      "type": "JsonGenerator",
      "name": "_generator"
     },
     {
      "type": "JsonSerializer",
      "name": "_rootSerializer"
     },
     {
      "type": "TypeSerializer",
      "name": "_typeSerializer"
     },
     {
      "type": "boolean",
      "name": "_closeGenerator"
     },
     {
      "type": "boolean",
      "name": "_cfgFlush"
     },
     {
      "type": "boolean",
      "name": "_cfgCloseCloseable"
     },
     {
      "type": "PropertySerializerMap",
      "name": "_dynamicSerializers"
     },
     {
      "type": "boolean",
      "name": "_openArray"
     },
     {
      "type": "boolean",
      "name": "_closed"
     }
    ]
   }
  ]
 },
 {
  "filename": "MapperFeature.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "MapperFeature",
    "methods": [
     {
      "params": [],
      "type": "boolean",
      "name": "enabledByDefault"
     },
     {
      "params": [],
      "type": "int",
      "name": "getMask"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "flags"
       }
      ],
      "type": "boolean",
      "name": "enabledIn"
     }
    ],
    "fields": [
     {
      "type": "boolean",
      "name": "_defaultState"
     },
     {
      "type": "int",
      "name": "_mask"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyMetadata.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "PropertyMetadata",
    "methods": [
     {
      "params": [
       {
        "type": "Boolean",
        "name": "req"
       },
       {
        "type": "String",
        "name": "desc"
       },
       {
        "type": "Integer",
        "name": "index"
       },
       {
        "type": "String",
        "name": "defaultValue"
       }
      ],
      "type": "PropertyMetadata",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "req"
       },
       {
        "type": "String",
        "name": "desc"
       },
       {
        "type": "Integer",
        "name": "index"
       },
       {
        "type": "String",
        "name": "defaultValue"
       }
      ],
      "type": "PropertyMetadata",
      "name": "construct"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "desc"
       }
      ],
      "type": "PropertyMetadata",
      "name": "withDescription"
     },
     {
      "params": [
       {
        "type": "MergeInfo",
        "name": "mergeInfo"
       }
      ],
      "type": "PropertyMetadata",
      "name": "withMergeInfo"
     },
     {
      "params": [
       {
        "type": "Nulls",
        "name": "valueNulls"
       },
       {
        "type": "Nulls",
        "name": "contentNulls"
       }
      ],
      "type": "PropertyMetadata",
      "name": "withNulls"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "def"
       }
      ],
      "type": "PropertyMetadata",
      "name": "withDefaultValue"
     },
     {
      "params": [
       {
        "type": "Integer",
        "name": "index"
       }
      ],
      "type": "PropertyMetadata",
      "name": "withIndex"
     },
     {
      "params": [
       {
        "type": "Boolean",
        "name": "b"
       }
      ],
      "type": "PropertyMetadata",
      "name": "withRequired"
     },
     {
      "params": [],
      "type": "String",
      "name": "getDescription"
     },
     {
      "params": [],
      "type": "String",
      "name": "getDefaultValue"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasDefaultValue"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isRequired"
     },
     {
      "params": [],
      "type": "Boolean",
      "name": "getRequired"
     },
     {
      "params": [],
      "type": "Integer",
      "name": "getIndex"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasIndex"
     },
     {
      "params": [],
      "type": "MergeInfo",
      "name": "getMergeInfo"
     },
     {
      "params": [],
      "type": "Nulls",
      "name": "getValueNulls"
     },
     {
      "params": [],
      "type": "Nulls",
      "name": "getContentNulls"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "PropertyMetadata",
      "name": "STD_REQUIRED"
     },
     {
      "type": "PropertyMetadata",
      "name": "STD_OPTIONAL"
     },
     {
      "type": "PropertyMetadata",
      "name": "STD_REQUIRED_OR_OPTIONAL"
     },
     {
      "type": "Boolean",
      "name": "_required"
     },
     {
      "type": "String",
      "name": "_description"
     },
     {
      "type": "Integer",
      "name": "_index"
     },
     {
      "type": "String",
      "name": "_defaultValue"
     },
     {
      "type": "MergeInfo",
      "name": "_mergeInfo"
     },
     {
      "type": "Nulls",
      "name": "_valueNulls"
     },
     {
      "type": "Nulls",
      "name": "_contentNulls"
     }
    ]
   }
  ]
 },
 {
  "filename": "RuntimeJsonMappingException.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "RuntimeJsonMappingException",
    "methods": [],
    "fields": []
   }
  ]
 },
 {
  "filename": "BeanDescription.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "BeanDescription",
    "methods": [
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getBeanClass"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isNonStaticInnerClass"
     },
     {
      "params": [],
      "type": "AnnotatedClass",
      "name": "getClassInfo"
     },
     {
      "params": [],
      "type": "ObjectIdInfo",
      "name": "getObjectIdInfo"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasKnownClassAnnotations"
     },
     {
      "params": [],
      "type": "TypeBindings",
      "name": "bindingsForBeanType"
     },
     {
      "params": [
       {
        "type": "java",
        "name": "jdkType"
       }
      ],
      "type": "JavaType",
      "name": "resolveType"
     },
     {
      "params": [],
      "type": "Annotations",
      "name": "getClassAnnotations"
     },
     {
      "params": [],
      "type": "List",
      "name": "findProperties"
     },
     {
      "params": [],
      "type": "Set",
      "name": "getIgnoredPropertyNames"
     },
     {
      "params": [],
      "type": "List",
      "name": "findBackReferences"
     },
     {
      "params": [],
      "type": "Map",
      "name": "findBackReferenceProperties"
     },
     {
      "params": [],
      "type": "List",
      "name": "getConstructors"
     },
     {
      "params": [],
      "type": "List",
      "name": "getFactoryMethods"
     },
     {
      "params": [],
      "type": "AnnotatedConstructor",
      "name": "findDefaultConstructor"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "argTypes"
       }
      ],
      "type": "Constructor",
      "name": "findSingleArgConstructor"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "expArgTypes"
       }
      ],
      "type": "Method",
      "name": "findFactoryMethod"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "findJsonValueAccessor"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "findAnyGetter"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "findAnySetterAccessor"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Class",
        "name": "paramTypes"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "findMethod"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "findJsonValueMethod"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "findAnySetter"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "findAnySetterField"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "defValue"
       }
      ],
      "type": "JsonInclude",
      "name": "findPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "JsonFormat",
        "name": "defValue"
       }
      ],
      "type": "JsonFormat",
      "name": "findExpectedFormat"
     },
     {
      "params": [],
      "type": "Converter",
      "name": "findSerializationConverter"
     },
     {
      "params": [],
      "type": "Converter",
      "name": "findDeserializationConverter"
     },
     {
      "params": [],
      "type": "String",
      "name": "findClassDescription"
     },
     {
      "params": [],
      "type": "Map",
      "name": "findInjectables"
     },
     {
      "params": [],
      "type": "Class",
      "name": "findPOJOBuilder"
     },
     {
      "params": [],
      "type": "JsonPOJOBuilder",
      "name": "findPOJOBuilderConfig"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "fixAccess"
       }
      ],
      "type": "Object",
      "name": "instantiateBean"
     },
     {
      "params": [],
      "type": "Class",
      "name": "findDefaultViews"
     }
    ],
    "fields": [
     {
      "type": "JavaType",
      "name": "_type"
     }
    ]
   }
  ]
 },
 {
  "filename": "SerializationFeature.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "SerializationFeature",
    "methods": [
     {
      "params": [],
      "type": "boolean",
      "name": "enabledByDefault"
     },
     {
      "params": [],
      "type": "int",
      "name": "getMask"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "flags"
       }
      ],
      "type": "boolean",
      "name": "enabledIn"
     }
    ],
    "fields": [
     {
      "type": "boolean",
      "name": "_defaultState"
     },
     {
      "type": "int",
      "name": "_mask"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectWriter.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "ObjectWriter",
    "methods": [
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [
       {
        "type": "ObjectWriter",
        "name": "base"
       },
       {
        "type": "JsonFactory",
        "name": "f"
       }
      ],
      "type": "ObjectWriter",
      "name": "_new"
     },
     {
      "params": [
       {
        "type": "ObjectWriter",
        "name": "base"
       },
       {
        "type": "SerializationConfig",
        "name": "config"
       }
      ],
      "type": "ObjectWriter",
      "name": "_new"
     },
     {
      "params": [
       {
        "type": "GeneratorSettings",
        "name": "genSettings"
       },
       {
        "type": "Prefetch",
        "name": "prefetch"
       }
      ],
      "type": "ObjectWriter",
      "name": "_new"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "wrapInArray"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "boolean",
        "name": "managedInput"
       }
      ],
      "type": "SequenceWriter",
      "name": "_newSequenceWriter"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "first"
       },
       {
        "type": "SerializationFeature",
        "name": "other"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "features"
       }
      ],
      "type": "ObjectWriter",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectWriter",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "first"
       },
       {
        "type": "SerializationFeature",
        "name": "other"
       }
      ],
      "type": "ObjectWriter",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "features"
       }
      ],
      "type": "ObjectWriter",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "feature"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "features"
       }
      ],
      "type": "ObjectWriter",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "feature"
       }
      ],
      "type": "ObjectWriter",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "features"
       }
      ],
      "type": "ObjectWriter",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "features"
       }
      ],
      "type": "ObjectWriter",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "feature"
       }
      ],
      "type": "ObjectWriter",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "features"
       }
      ],
      "type": "ObjectWriter",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "forType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "forType"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "forType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "withType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "withType"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "rootType"
       }
      ],
      "type": "ObjectWriter",
      "name": "withType"
     },
     {
      "params": [
       {
        "type": "DateFormat",
        "name": "df"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [],
      "type": "ObjectWriter",
      "name": "withDefaultPrettyPrinter"
     },
     {
      "params": [
       {
        "type": "FilterProvider",
        "name": "filterProvider"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "PrettyPrinter",
        "name": "pp"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "rootName"
       }
      ],
      "type": "ObjectWriter",
      "name": "withRootName"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "rootName"
       }
      ],
      "type": "ObjectWriter",
      "name": "withRootName"
     },
     {
      "params": [],
      "type": "ObjectWriter",
      "name": "withoutRootName"
     },
     {
      "params": [
       {
        "type": "FormatSchema",
        "name": "schema"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "FormatSchema",
        "name": "schema"
       }
      ],
      "type": "ObjectWriter",
      "name": "withSchema"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "view"
       }
      ],
      "type": "ObjectWriter",
      "name": "withView"
     },
     {
      "params": [
       {
        "type": "Locale",
        "name": "l"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "b64variant"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "CharacterEscapes",
        "name": "escapes"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JsonFactory",
        "name": "f"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "ContextAttributes",
        "name": "attrs"
       }
      ],
      "type": "ObjectWriter",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "attrs"
       }
      ],
      "type": "ObjectWriter",
      "name": "withAttributes"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "ObjectWriter",
      "name": "withAttribute"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "ObjectWriter",
      "name": "withoutAttribute"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "sep"
       }
      ],
      "type": "ObjectWriter",
      "name": "withRootValueSeparator"
     },
     {
      "params": [
       {
        "type": "SerializableString",
        "name": "sep"
       }
      ],
      "type": "ObjectWriter",
      "name": "withRootValueSeparator"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "out"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValues"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValues"
     },
     {
      "params": [
       {
        "type": "Writer",
        "name": "out"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValues"
     },
     {
      "params": [
       {
        "type": "OutputStream",
        "name": "out"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValues"
     },
     {
      "params": [
       {
        "type": "DataOutput",
        "name": "out"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValues"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "out"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValuesAsArray"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValuesAsArray"
     },
     {
      "params": [
       {
        "type": "Writer",
        "name": "out"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValuesAsArray"
     },
     {
      "params": [
       {
        "type": "OutputStream",
        "name": "out"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValuesAsArray"
     },
     {
      "params": [
       {
        "type": "DataOutput",
        "name": "out"
       }
      ],
      "type": "SequenceWriter",
      "name": "writeValuesAsArray"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [],
      "type": "SerializationConfig",
      "name": "getConfig"
     },
     {
      "params": [],
      "type": "JsonFactory",
      "name": "getFactory"
     },
     {
      "params": [],
      "type": "TypeFactory",
      "name": "getTypeFactory"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasPrefetchedSerializer"
     },
     {
      "params": [],
      "type": "ContextAttributes",
      "name": "getAttributes"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "File",
        "name": "resultFile"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "OutputStream",
        "name": "out"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "Writer",
        "name": "w"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "DataOutput",
        "name": "out"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "writeValueAsString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "byte",
      "name": "writeValueAsBytes"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "canSerialize"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "AtomicReference",
        "name": "cause"
       }
      ],
      "type": "boolean",
      "name": "canSerialize"
     },
     {
      "params": [],
      "type": "DefaultSerializerProvider",
      "name": "_serializerProvider"
     },
     {
      "params": [
       {
        "type": "FormatSchema",
        "name": "schema"
       }
      ],
      "type": null,
      "name": "_verifySchemaType"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "_configAndWriteValue"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "_writeCloseable"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "_configureGenerator"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "PrettyPrinter",
      "name": "NULL_PRETTY_PRINTER"
     },
     {
      "type": "SerializationConfig",
      "name": "_config"
     },
     {
      "type": "DefaultSerializerProvider",
      "name": "_serializerProvider"
     },
     {
      "type": "SerializerFactory",
      "name": "_serializerFactory"
     },
     {
      "type": "JsonFactory",
      "name": "_generatorFactory"
     },
     {
      "type": "GeneratorSettings",
      "name": "_generatorSettings"
     },
     {
      "type": "Prefetch",
      "name": "_prefetch"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonSerializable.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "JsonSerializable",
    "methods": [
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "JsonDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "T",
        "name": "intoValue"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "JsonDeserializer",
      "name": "unwrappingDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "delegatee"
       }
      ],
      "type": "JsonDeserializer",
      "name": "replaceDelegatee"
     },
     {
      "params": [],
      "type": "Class",
      "name": "handledType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getDelegatee"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "getKnownPropertyNames"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "getNullValue"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getNullAccessPattern"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getEmptyAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [],
      "type": "ObjectIdReader",
      "name": "getObjectIdReader"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "refName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findBackReference"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [],
      "type": "T",
      "name": "getNullValue"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getEmptyValue"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "SerializationConfig.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "SerializationConfig",
    "methods": [
     {
      "params": [
       {
        "type": "BaseSettings",
        "name": "newBase"
       }
      ],
      "type": "SerializationConfig",
      "name": "_withBase"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "mapperFeatures"
       }
      ],
      "type": "SerializationConfig",
      "name": "_withMapperFeatures"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "rootName"
       }
      ],
      "type": "SerializationConfig",
      "name": "withRootName"
     },
     {
      "params": [
       {
        "type": "SubtypeResolver",
        "name": "str"
       }
      ],
      "type": "SerializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "view"
       }
      ],
      "type": "SerializationConfig",
      "name": "withView"
     },
     {
      "params": [
       {
        "type": "ContextAttributes",
        "name": "attrs"
       }
      ],
      "type": "SerializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DateFormat",
        "name": "df"
       }
      ],
      "type": "SerializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "feature"
       }
      ],
      "type": "SerializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "first"
       },
       {
        "type": "SerializationFeature",
        "name": "features"
       }
      ],
      "type": "SerializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "features"
       }
      ],
      "type": "SerializationConfig",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "feature"
       }
      ],
      "type": "SerializationConfig",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "first"
       },
       {
        "type": "SerializationFeature",
        "name": "features"
       }
      ],
      "type": "SerializationConfig",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "features"
       }
      ],
      "type": "SerializationConfig",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "feature"
       }
      ],
      "type": "SerializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "features"
       }
      ],
      "type": "SerializationConfig",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "feature"
       }
      ],
      "type": "SerializationConfig",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "features"
       }
      ],
      "type": "SerializationConfig",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "feature"
       }
      ],
      "type": "SerializationConfig",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "features"
       }
      ],
      "type": "SerializationConfig",
      "name": "withFeatures"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "feature"
       }
      ],
      "type": "SerializationConfig",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "FormatFeature",
        "name": "features"
       }
      ],
      "type": "SerializationConfig",
      "name": "withoutFeatures"
     },
     {
      "params": [
       {
        "type": "FilterProvider",
        "name": "filterProvider"
       }
      ],
      "type": "SerializationConfig",
      "name": "withFilters"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "incl"
       }
      ],
      "type": "SerializationConfig",
      "name": "withPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "PrettyPrinter",
        "name": "pp"
       }
      ],
      "type": "SerializationConfig",
      "name": "withDefaultPrettyPrinter"
     },
     {
      "params": [],
      "type": "PrettyPrinter",
      "name": "constructDefaultPrettyPrinter"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "initialize"
     },
     {
      "params": [],
      "type": "JsonInclude",
      "name": "getSerializationInclusion"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "useRootWrapping"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "f"
       },
       {
        "type": "JsonFactory",
        "name": "factory"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "featureMask"
       }
      ],
      "type": "boolean",
      "name": "hasSerializationFeatures"
     },
     {
      "params": [],
      "type": "int",
      "name": "getSerializationFeatures"
     },
     {
      "params": [],
      "type": "FilterProvider",
      "name": "getFilterProvider"
     },
     {
      "params": [],
      "type": "PrettyPrinter",
      "name": "getDefaultPrettyPrinter"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "T",
      "name": "introspect"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "PrettyPrinter",
      "name": "DEFAULT_PRETTY_PRINTER"
     },
     {
      "type": "FilterProvider",
      "name": "_filterProvider"
     },
     {
      "type": "PrettyPrinter",
      "name": "_defaultPrettyPrinter"
     },
     {
      "type": "int",
      "name": "_serFeatures"
     },
     {
      "type": "int",
      "name": "_generatorFeatures"
     },
     {
      "type": "int",
      "name": "_generatorFeaturesToChange"
     },
     {
      "type": "int",
      "name": "_formatWriteFeatures"
     },
     {
      "type": "int",
      "name": "_formatWriteFeaturesToChange"
     }
    ]
   }
  ]
 },
 {
  "filename": "DeserializationFeature.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "DeserializationFeature",
    "methods": [
     {
      "params": [],
      "type": "boolean",
      "name": "enabledByDefault"
     },
     {
      "params": [],
      "type": "int",
      "name": "getMask"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "flags"
       }
      ],
      "type": "boolean",
      "name": "enabledIn"
     }
    ],
    "fields": [
     {
      "type": "boolean",
      "name": "_defaultState"
     },
     {
      "type": "int",
      "name": "_mask"
     }
    ]
   }
  ]
 },
 {
  "filename": "SerializerProvider.java",
  "package_name": "com.fasterxml.jackson.databind",
  "classes": [
   {
    "name": "SerializerProvider",
    "methods": [
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ks"
       }
      ],
      "type": null,
      "name": "setDefaultKeySerializer"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "nvs"
       }
      ],
      "type": null,
      "name": "setNullValueSerializer"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "nks"
       }
      ],
      "type": null,
      "name": "setNullKeySerializer"
     },
     {
      "params": [],
      "type": "SerializationConfig",
      "name": "getConfig"
     },
     {
      "params": [],
      "type": "AnnotationIntrospector",
      "name": "getAnnotationIntrospector"
     },
     {
      "params": [],
      "type": "TypeFactory",
      "name": "getTypeFactory"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getActiveView"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getSerializationView"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canOverrideAccessModifiers"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "feature"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonFormat",
      "name": "getDefaultPropertyFormat"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonInclude",
      "name": "getDefaultPropertyInclusion"
     },
     {
      "params": [],
      "type": "Locale",
      "name": "getLocale"
     },
     {
      "params": [],
      "type": "TimeZone",
      "name": "getTimeZone"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "Object",
      "name": "getAttribute"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "SerializerProvider",
      "name": "setAttribute"
     },
     {
      "params": [
       {
        "type": "SerializationFeature",
        "name": "feature"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "featureMask"
       }
      ],
      "type": "boolean",
      "name": "hasSerializationFeatures"
     },
     {
      "params": [],
      "type": "FilterProvider",
      "name": "getFilterProvider"
     },
     {
      "params": [],
      "type": "JsonGenerator",
      "name": "getGenerator"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "forPojo"
       },
       {
        "type": "ObjectIdGenerator",
        "name": "generatorType"
       }
      ],
      "type": "WritableObjectId",
      "name": "findObjectId"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "valueType"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findValueSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "valueType"
       }
      ],
      "type": "JsonSerializer",
      "name": "findValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "JsonSerializer",
      "name": "findValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findPrimaryPropertySerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "valueType"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findPrimaryPropertySerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "valueType"
       },
       {
        "type": "boolean",
        "name": "cache"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findTypedValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "boolean",
        "name": "cache"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findTypedValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "javaType"
       }
      ],
      "type": "TypeSerializer",
      "name": "findTypeSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "keyType"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findKeySerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawKeyType"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findKeySerializer"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getDefaultNullKeySerializer"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getDefaultNullValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "serializationType"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findNullKeySerializer"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findNullValueSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "unknownType"
       }
      ],
      "type": "JsonSerializer",
      "name": "getUnknownTypeSerializer"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": "boolean",
      "name": "isUnknownTypeSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Object",
        "name": "serDef"
       }
      ],
      "type": "JsonSerializer",
      "name": "serializerInstance"
     },
     {
      "params": [
       {
        "type": "BeanPropertyDefinition",
        "name": "forProperty"
       },
       {
        "type": "Class",
        "name": "filterClass"
       }
      ],
      "type": "Object",
      "name": "includeFilterInstance"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filter"
       }
      ],
      "type": "boolean",
      "name": "includeFilterSuppressNulls"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "handlePrimaryContextualization"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "handleSecondaryContextualization"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "defaultSerializeValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "defaultSerializeField"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "timestamp"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "defaultSerializeDateValue"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "defaultSerializeDateValue"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "timestamp"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "defaultSerializeDateKey"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "defaultSerializeDateKey"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "defaultSerializeNull"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "type": null,
      "name": "reportMappingProblem"
     },
     {
      "params": [
       {
        "type": "BeanDescription",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "T",
      "name": "reportBadTypeDefinition"
     },
     {
      "params": [
       {
        "type": "BeanDescription",
        "name": "bean"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "prop"
       },
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "T",
      "name": "reportBadPropertyDefinition"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "T",
      "name": "reportBadDefinition"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Throwable",
        "name": "cause"
       }
      ],
      "type": "T",
      "name": "reportBadDefinition"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "raw"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Throwable",
        "name": "cause"
       }
      ],
      "type": "T",
      "name": "reportBadDefinition"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": null,
      "name": "reportMappingProblem"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "String",
        "name": "typeId"
       },
       {
        "type": "String",
        "name": "extraDesc"
       }
      ],
      "type": "JsonMappingException",
      "name": "invalidTypeIdException"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "JsonMappingException",
      "name": "mappingException"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "String",
        "name": "message"
       },
       {
        "type": "Object",
        "name": "msgArgs"
       }
      ],
      "type": "JsonMappingException",
      "name": "mappingException"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JavaType",
        "name": "rootType"
       }
      ],
      "type": null,
      "name": "_reportIncompatibleRootType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "runtimeType"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findExplicitUntypedSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "JsonSerializer",
      "name": "_createAndCacheUntypedSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "_createAndCacheUntypedSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "_createUntypedSerializer"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "_handleContextualResolvable"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": "JsonSerializer",
      "name": "_handleResolvable"
     },
     {
      "params": [],
      "type": "DateFormat",
      "name": "_dateFormat"
     }
    ],
    "fields": [
     {
      "type": "boolean",
      "name": "CACHE_UNKNOWN_MAPPINGS"
     },
     {
      "type": "JsonSerializer",
      "name": "DEFAULT_NULL_KEY_SERIALIZER"
     },
     {
      "type": "JsonSerializer",
      "name": "DEFAULT_UNKNOWN_SERIALIZER"
     },
     {
      "type": "SerializationConfig",
      "name": "_config"
     },
     {
      "type": "Class",
      "name": "_serializationView"
     },
     {
      "type": "SerializerFactory",
      "name": "_serializerFactory"
     },
     {
      "type": "SerializerCache",
      "name": "_serializerCache"
     },
     {
      "type": "ContextAttributes",
      "name": "_attributes"
     },
     {
      "type": "JsonSerializer",
      "name": "_unknownTypeSerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_keySerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_nullValueSerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_nullKeySerializer"
     },
     {
      "type": "ReadOnlyClassToSerializerMap",
      "name": "_knownSerializers"
     },
     {
      "type": "DateFormat",
      "name": "_dateFormat"
     },
     {
      "type": "boolean",
      "name": "_stdNullValueSerializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "ResolvableDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "ResolvableDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "resolve"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BasicDeserializerFactory.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "BasicDeserializerFactory",
    "methods": [
     {
      "params": [],
      "type": "DeserializerFactoryConfig",
      "name": "getFactoryConfig"
     },
     {
      "params": [
       {
        "type": "DeserializerFactoryConfig",
        "name": "config"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withConfig"
     },
     {
      "params": [
       {
        "type": "Deserializers",
        "name": "additional"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withAdditionalDeserializers"
     },
     {
      "params": [
       {
        "type": "KeyDeserializers",
        "name": "additional"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withAdditionalKeyDeserializers"
     },
     {
      "params": [
       {
        "type": "BeanDeserializerModifier",
        "name": "modifier"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withDeserializerModifier"
     },
     {
      "params": [
       {
        "type": "AbstractTypeResolver",
        "name": "resolver"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withAbstractTypeResolver"
     },
     {
      "params": [
       {
        "type": "ValueInstantiators",
        "name": "instantiators"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withValueInstantiators"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "mapAbstractType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "_mapAbstractType2"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "ValueInstantiator",
      "name": "findValueInstantiator"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "ValueInstantiator",
      "name": "_findStdValueInstantiator"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "ValueInstantiator",
      "name": "_constructDefaultValueInstantiator"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "Map",
      "name": "_findCreatorsFromProperties"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Object",
        "name": "instDef"
       }
      ],
      "type": "ValueInstantiator",
      "name": "_valueInstantiatorInstance"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "VisibilityChecker",
        "name": "vchecker"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       },
       {
        "type": "CreatorCollector",
        "name": "creators"
       },
       {
        "type": "Map",
        "name": "creatorParams"
       }
      ],
      "type": null,
      "name": "_addDeserializerConstructors"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "CreatorCollector",
        "name": "creators"
       },
       {
        "type": "CreatorCandidate",
        "name": "candidate"
       }
      ],
      "type": null,
      "name": "_addExplicitDelegatingCreator"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "CreatorCollector",
        "name": "creators"
       },
       {
        "type": "CreatorCandidate",
        "name": "candidate"
       }
      ],
      "type": null,
      "name": "_addExplicitPropertyCreator"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "CreatorCollector",
        "name": "creators"
       },
       {
        "type": "CreatorCandidate",
        "name": "candidate"
       }
      ],
      "type": null,
      "name": "_addExplicitAnyCreator"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       },
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDef"
       }
      ],
      "type": "boolean",
      "name": "_checkIfCreatorPropertyBased"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "VisibilityChecker",
        "name": "vchecker"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       },
       {
        "type": "CreatorCollector",
        "name": "creators"
       },
       {
        "type": "List",
        "name": "implicitCtors"
       }
      ],
      "type": null,
      "name": "_checkImplicitlyNamedConstructors"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "VisibilityChecker",
        "name": "vchecker"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       },
       {
        "type": "CreatorCollector",
        "name": "creators"
       },
       {
        "type": "Map",
        "name": "creatorParams"
       }
      ],
      "type": null,
      "name": "_addDeserializerFactoryMethods"
     },
     {
      "params": [
       {
        "type": "CreatorCollector",
        "name": "creators"
       },
       {
        "type": "AnnotatedWithParams",
        "name": "ctor"
       },
       {
        "type": "boolean",
        "name": "isCreator"
       },
       {
        "type": "boolean",
        "name": "isVisible"
       }
      ],
      "type": "boolean",
      "name": "_handleSingleArgumentCreator"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "AnnotatedParameter",
        "name": "param"
       }
      ],
      "type": null,
      "name": "_reportUnwrappedCreatorProperty"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "PropertyName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "AnnotatedParameter",
        "name": "param"
       },
       {
        "type": "JacksonInject",
        "name": "injectable"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "constructCreatorProperty"
     },
     {
      "params": [
       {
        "type": "AnnotatedParameter",
        "name": "param"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       }
      ],
      "type": "PropertyName",
      "name": "_findParamName"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ArrayType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "CollectionType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createCollectionDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "CollectionType",
      "name": "_mapAbstractCollectionType"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "CollectionLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createCollectionLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "MapType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createMapDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "MapLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createMapLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createEnumDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "nodeType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createTreeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ReferenceType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createReferenceDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeDeserializer",
      "name": "findTypeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findOptionalStdDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "KeyDeserializer",
      "name": "createKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "KeyDeserializer",
      "name": "_createEnumKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "AnnotatedMember",
        "name": "annotated"
       }
      ],
      "type": "TypeDeserializer",
      "name": "findPropertyTypeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "containerType"
       },
       {
        "type": "AnnotatedMember",
        "name": "propertyEntity"
       }
      ],
      "type": "TypeDeserializer",
      "name": "findPropertyContentTypeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findDefaultDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "JavaType",
      "name": "_findRemappedType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomTreeNodeDeserializer"
     },
     {
      "params": [
       {
        "type": "ReferenceType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "contentTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "contentDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomReferenceDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomBeanDeserializer"
     },
     {
      "params": [
       {
        "type": "ArrayType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "CollectionType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomCollectionDeserializer"
     },
     {
      "params": [
       {
        "type": "CollectionLikeType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomCollectionLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomEnumDeserializer"
     },
     {
      "params": [
       {
        "type": "MapType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "KeyDeserializer",
        "name": "keyDeserializer"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomMapDeserializer"
     },
     {
      "params": [
       {
        "type": "MapLikeType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "KeyDeserializer",
        "name": "keyDeserializer"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomMapLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findDeserializerFromAnnotation"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "KeyDeserializer",
      "name": "findKeyDeserializerFromAnnotation"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findContentDeserializerFromAnnotation"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "AnnotatedMember",
        "name": "member"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "resolveMemberAndTypeAnnotations"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "jsonValueAccessor"
       }
      ],
      "type": "EnumResolver",
      "name": "constructEnumResolver"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "boolean",
      "name": "_hasCreatorAnnotation"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "modifyTypeByAnnotation"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "JavaType",
      "name": "resolveType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "enumType"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "_findJsonValueFor"
     }
    ],
    "fields": [
     {
      "type": "Class",
      "name": "CLASS_OBJECT"
     },
     {
      "type": "Class",
      "name": "CLASS_STRING"
     },
     {
      "type": "Class",
      "name": "CLASS_CHAR_SEQUENCE"
     },
     {
      "type": "Class",
      "name": "CLASS_ITERABLE"
     },
     {
      "type": "Class",
      "name": "CLASS_MAP_ENTRY"
     },
     {
      "type": "PropertyName",
      "name": "UNWRAPPED_CREATOR_PARAM_NAME"
     },
     {
      "type": "HashMap",
      "name": "_mapFallbacks"
     },
     {
      "type": "HashMap",
      "name": "_collectionFallbacks"
     },
     {
      "type": "DeserializerFactoryConfig",
      "name": "_factoryConfig"
     }
    ]
   }
  ]
 },
 {
  "filename": "NullValueProvider.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "NullValueProvider",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getNullValue"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getNullAccessPattern"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ContextualDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "ContextualDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ContextualKeyDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "ContextualKeyDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "KeyDeserializer",
      "name": "createContextual"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "UnresolvedForwardReference.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "UnresolvedForwardReference",
    "methods": [
     {
      "params": [],
      "type": "ReadableObjectId",
      "name": "getRoid"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getUnresolvedId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "id"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "JsonLocation",
        "name": "where"
       }
      ],
      "type": null,
      "name": "addUnresolvedId"
     },
     {
      "params": [],
      "type": "List",
      "name": "getUnresolvedIds"
     },
     {
      "params": [],
      "type": "String",
      "name": "getMessage"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ReadableObjectId",
      "name": "_roid"
     },
     {
      "type": "List",
      "name": "_unresolvedIds"
     }
    ]
   }
  ]
 },
 {
  "filename": "DeserializationProblemHandler.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "DeserializationProblemHandler",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       },
       {
        "type": "Object",
        "name": "beanOrClass"
       },
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "type": "boolean",
      "name": "handleUnknownProperty"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Class",
        "name": "rawKeyType"
       },
       {
        "type": "String",
        "name": "keyValue"
       },
       {
        "type": "String",
        "name": "failureMsg"
       }
      ],
      "type": "Object",
      "name": "handleWeirdKey"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Class",
        "name": "targetType"
       },
       {
        "type": "String",
        "name": "valueToConvert"
       },
       {
        "type": "String",
        "name": "failureMsg"
       }
      ],
      "type": "Object",
      "name": "handleWeirdStringValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Class",
        "name": "targetType"
       },
       {
        "type": "Number",
        "name": "valueToConvert"
       },
       {
        "type": "String",
        "name": "failureMsg"
       }
      ],
      "type": "Object",
      "name": "handleWeirdNumberValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "targetType"
       },
       {
        "type": "Object",
        "name": "valueToConvert"
       },
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "Object",
      "name": "handleWeirdNativeValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Class",
        "name": "targetType"
       },
       {
        "type": "JsonToken",
        "name": "t"
       },
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "failureMsg"
       }
      ],
      "type": "Object",
      "name": "handleUnexpectedToken"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "Object",
        "name": "argument"
       },
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "Object",
      "name": "handleInstantiationProblem"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "ValueInstantiator",
        "name": "valueInsta"
       },
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "Object",
      "name": "handleMissingInstantiator"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "String",
        "name": "subTypeId"
       },
       {
        "type": "TypeIdResolver",
        "name": "idResolver"
       },
       {
        "type": "String",
        "name": "failureMsg"
       }
      ],
      "type": "JavaType",
      "name": "handleUnknownTypeId"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "TypeIdResolver",
        "name": "idResolver"
       },
       {
        "type": "String",
        "name": "failureMsg"
       }
      ],
      "type": "JavaType",
      "name": "handleMissingTypeId"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Class",
        "name": "instClass"
       },
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "Object",
      "name": "handleMissingInstantiator"
     }
    ],
    "fields": [
     {
      "type": "Object",
      "name": "NOT_HANDLED"
     }
    ]
   }
  ]
 },
 {
  "filename": "ValueInstantiator.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "ValueInstantiator",
    "methods": [
     {
      "params": [],
      "type": "Class",
      "name": "getValueClass"
     },
     {
      "params": [],
      "type": "String",
      "name": "getValueTypeDesc"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canInstantiate"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromString"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromLong"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromDouble"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromBoolean"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateUsingDefault"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateUsingDelegate"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateUsingArrayDelegate"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromObjectWith"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "getFromObjectArguments"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "JavaType",
      "name": "getDelegateType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "JavaType",
      "name": "getArrayDelegateType"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "createUsingDefault"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "type": "Object",
      "name": "createFromObjectWith"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "props"
       },
       {
        "type": "PropertyValueBuffer",
        "name": "buffer"
       }
      ],
      "type": "Object",
      "name": "createFromObjectWith"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "delegate"
       }
      ],
      "type": "Object",
      "name": "createUsingDelegate"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "delegate"
       }
      ],
      "type": "Object",
      "name": "createUsingArrayDelegate"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromString"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "int",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromInt"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "long",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromLong"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "double",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromDouble"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "boolean",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromBoolean"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "getDefaultCreator"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "getDelegateCreator"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "getArrayDelegateCreator"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "getWithArgsCreator"
     },
     {
      "params": [],
      "type": "AnnotatedParameter",
      "name": "getIncompleteParameter"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "_createFromStringFallbacks"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "SettableBeanProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "SettableBeanProperty",
    "methods": [
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withValueDeserializer"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "simpleName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withSimpleName"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "nva"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withNullProvider"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "n"
       }
      ],
      "type": null,
      "name": "setManagedReferenceName"
     },
     {
      "params": [
       {
        "type": "ObjectIdInfo",
        "name": "objectIdInfo"
       }
      ],
      "type": null,
      "name": "setObjectIdInfo"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "views"
       }
      ],
      "type": null,
      "name": "setViews"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": null,
      "name": "assignIndex"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [],
      "type": null,
      "name": "markAsIgnorable"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isIgnorable"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getFullName"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getWrapperName"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getContextAnnotation"
     },
     {
      "params": [
       {
        "type": "JsonObjectFormatVisitor",
        "name": "objectVisitor"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDeclaringClass"
     },
     {
      "params": [],
      "type": "String",
      "name": "getManagedReferenceName"
     },
     {
      "params": [],
      "type": "ObjectIdInfo",
      "name": "getObjectIdInfo"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasValueDeserializer"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasValueTypeDeserializer"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getValueDeserializer"
     },
     {
      "params": [],
      "type": "TypeDeserializer",
      "name": "getValueTypeDeserializer"
     },
     {
      "params": [],
      "type": "NullValueProvider",
      "name": "getNullValueProvider"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "activeView"
       }
      ],
      "type": "boolean",
      "name": "visibleInView"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasViews"
     },
     {
      "params": [],
      "type": "int",
      "name": "getPropertyIndex"
     },
     {
      "params": [],
      "type": "int",
      "name": "getCreatorIndex"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getInjectableValueId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setAndReturn"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "toUpdate"
       }
      ],
      "type": "Object",
      "name": "deserializeWith"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Exception",
        "name": "e"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "_throwAsIOE"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Exception",
        "name": "e"
       }
      ],
      "type": "IOException",
      "name": "_throwAsIOE"
     },
     {
      "params": [
       {
        "type": "Exception",
        "name": "e"
       }
      ],
      "type": "IOException",
      "name": "_throwAsIOE"
     },
     {
      "params": [
       {
        "type": "Exception",
        "name": "e"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "_throwAsIOE"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "JsonDeserializer",
      "name": "MISSING_VALUE_DESERIALIZER"
     },
     {
      "type": "PropertyName",
      "name": "_propName"
     },
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "PropertyName",
      "name": "_wrapperName"
     },
     {
      "type": "Annotations",
      "name": "_contextAnnotations"
     },
     {
      "type": "JsonDeserializer",
      "name": "_valueDeserializer"
     },
     {
      "type": "TypeDeserializer",
      "name": "_valueTypeDeserializer"
     },
     {
      "type": "NullValueProvider",
      "name": "_nullProvider"
     },
     {
      "type": "String",
      "name": "_managedReferenceName"
     },
     {
      "type": "ObjectIdInfo",
      "name": "_objectIdInfo"
     },
     {
      "type": "ViewMatcher",
      "name": "_viewMatcher"
     },
     {
      "type": "int",
      "name": "_propertyIndex"
     }
    ]
   }
  ]
 },
 {
  "filename": "ValueInstantiators.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "ValueInstantiators",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "ValueInstantiator",
        "name": "defaultInstantiator"
       }
      ],
      "type": "ValueInstantiator",
      "name": "findValueInstantiator"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "DefaultDeserializationContext.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "DefaultDeserializationContext",
    "methods": [
     {
      "params": [],
      "type": "DefaultDeserializationContext",
      "name": "copy"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "id"
       },
       {
        "type": "ObjectIdGenerator",
        "name": "gen"
       },
       {
        "type": "ObjectIdResolver",
        "name": "resolverType"
       }
      ],
      "type": "ReadableObjectId",
      "name": "findObjectId"
     },
     {
      "params": [
       {
        "type": "IdKey",
        "name": "key"
       }
      ],
      "type": "ReadableObjectId",
      "name": "createReadableObjectId"
     },
     {
      "params": [],
      "type": null,
      "name": "checkUnresolvedObjectId"
     },
     {
      "params": [
       {
        "type": "ReadableObjectId",
        "name": "roid"
       }
      ],
      "type": "boolean",
      "name": "tryToResolveUnresolvedObjectId"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       },
       {
        "type": "Object",
        "name": "deserDef"
       }
      ],
      "type": "JsonDeserializer",
      "name": "deserializerInstance"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       },
       {
        "type": "Object",
        "name": "deserDef"
       }
      ],
      "type": "KeyDeserializer",
      "name": "keyDeserializerInstance"
     },
     {
      "params": [
       {
        "type": "DeserializerFactory",
        "name": "factory"
       }
      ],
      "type": "DefaultDeserializationContext",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "InjectableValues",
        "name": "values"
       }
      ],
      "type": "DefaultDeserializationContext",
      "name": "createInstance"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "LinkedHashMap",
      "name": "_objectIds"
     },
     {
      "type": "List",
      "name": "_objectIdResolvers"
     }
    ]
   }
  ]
 },
 {
  "filename": "UnresolvedId.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "UnresolvedId",
    "methods": [
     {
      "params": [],
      "type": "Object",
      "name": "getId"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getType"
     },
     {
      "params": [],
      "type": "JsonLocation",
      "name": "getLocation"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "Object",
      "name": "_id"
     },
     {
      "type": "JsonLocation",
      "name": "_location"
     },
     {
      "type": "Class",
      "name": "_type"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanDeserializerFactory.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "BeanDeserializerFactory",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializerFactoryConfig",
        "name": "config"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withConfig"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createBeanDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "Class",
        "name": "builderClass"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createBuilderBasedDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findStdDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JavaType",
      "name": "materializeAbstractType"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "buildBeanDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "builderDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "buildBuilderBasedDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanDeserializerBuilder",
        "name": "builder"
       }
      ],
      "type": null,
      "name": "addObjectIdReader"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "buildThrowableDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "BeanDeserializerBuilder",
      "name": "constructBeanDeserializerBuilder"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanDeserializerBuilder",
        "name": "builder"
       }
      ],
      "type": null,
      "name": "addBeanProps"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "boolean",
      "name": "_isSetterlessType"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanDeserializerBuilder",
        "name": "builder"
       },
       {
        "type": "List",
        "name": "propDefsIn"
       },
       {
        "type": "Set",
        "name": "ignored"
       }
      ],
      "type": "List",
      "name": "filterBeanProps"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanDeserializerBuilder",
        "name": "builder"
       }
      ],
      "type": null,
      "name": "addBackReferenceProperties"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanDeserializerBuilder",
        "name": "builder"
       }
      ],
      "type": null,
      "name": "addReferenceProperties"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanDeserializerBuilder",
        "name": "builder"
       }
      ],
      "type": null,
      "name": "addInjectables"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "AnnotatedMember",
        "name": "mutator"
       }
      ],
      "type": "SettableAnyProperty",
      "name": "constructAnySetter"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDef"
       },
       {
        "type": "JavaType",
        "name": "propType0"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "constructSettableProperty"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDef"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "constructSetterlessProperty"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "isPotentialBeanType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDef"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "Map",
        "name": "ignoredTypes"
       }
      ],
      "type": "boolean",
      "name": "isIgnorableType"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": null,
      "name": "_validateSubType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "INIT_CAUSE_PARAMS"
     },
     {
      "type": "BeanDeserializerFactory",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "BuilderBasedDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "BuilderBasedDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "JsonDeserializer",
      "name": "unwrappingDeserializer"
     },
     {
      "params": [
       {
        "type": "ObjectIdReader",
        "name": "oir"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withObjectIdReader"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "ignorableProps"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withIgnorableProperties"
     },
     {
      "params": [
       {
        "type": "BeanPropertyMap",
        "name": "props"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withBeanProperties"
     },
     {
      "params": [],
      "type": "BeanDeserializerBase",
      "name": "asArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "builder"
       }
      ],
      "type": "Object",
      "name": "finishBuild"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonToken",
        "name": "t"
       }
      ],
      "type": "Object",
      "name": "vanillaDeserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeUsingPropertyBased"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "builder"
       }
      ],
      "type": "Object",
      "name": "_deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Class",
        "name": "activeView"
       }
      ],
      "type": "Object",
      "name": "deserializeWithView"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeWithUnwrapped"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeUsingPropertyBasedWithUnwrapped"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "builder"
       },
       {
        "type": "TokenBuffer",
        "name": "tokens"
       }
      ],
      "type": "Object",
      "name": "deserializeWithUnwrapped"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeWithExternalTypeId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "Object",
      "name": "deserializeWithExternalTypeId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeUsingPropertyBasedWithExternalTypeId"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "AnnotatedMethod",
      "name": "_buildMethod"
     },
     {
      "type": "JavaType",
      "name": "_targetType"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": []
 },
 {
  "filename": "BeanDeserializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "BeanDeserializerBase",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "JsonDeserializer",
      "name": "unwrappingDeserializer"
     },
     {
      "params": [
       {
        "type": "ObjectIdReader",
        "name": "oir"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withObjectIdReader"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "ignorableProps"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withIgnorableProperties"
     },
     {
      "params": [
       {
        "type": "BeanPropertyMap",
        "name": "props"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withBeanProperties"
     },
     {
      "params": [],
      "type": "BeanDeserializerBase",
      "name": "asArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "BeanPropertyMap",
        "name": "props"
       },
       {
        "type": "SettableBeanProperty",
        "name": "creatorProps"
       },
       {
        "type": "SettableBeanProperty",
        "name": "origProp"
       },
       {
        "type": "SettableBeanProperty",
        "name": "newProp"
       }
      ],
      "type": null,
      "name": "_replaceProperty"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "delegateType"
       },
       {
        "type": "AnnotatedWithParams",
        "name": "delegateCreator"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findDelegateDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findConvertingDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "_resolveManagedReferenceProperty"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "_resolvedObjectIdProperty"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "NameTransformer",
      "name": "_findPropertyUnwrapper"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "_resolveInnerClassValuedProperty"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       },
       {
        "type": "PropertyMetadata",
        "name": "propMetadata"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "_resolveMergeAndNullSettings"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getNullAccessPattern"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getEmptyAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [],
      "type": "Class",
      "name": "handledType"
     },
     {
      "params": [],
      "type": "ObjectIdReader",
      "name": "getObjectIdReader"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "type": "boolean",
      "name": "hasProperty"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasViews"
     },
     {
      "params": [],
      "type": "int",
      "name": "getPropertyCount"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "getKnownPropertyNames"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getBeanClass"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getValueType"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "properties"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "creatorProperties"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "propertyName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findProperty"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findProperty"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "propertyIndex"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findProperty"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "logicalName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findBackReference"
     },
     {
      "params": [],
      "type": "ValueInstantiator",
      "name": "getValueInstantiator"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "original"
       },
       {
        "type": "SettableBeanProperty",
        "name": "replacement"
       }
      ],
      "type": null,
      "name": "replaceProperty"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "Object",
        "name": "rawId"
       }
      ],
      "type": "Object",
      "name": "_handleTypedObjectId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "rawId"
       },
       {
        "type": "JsonDeserializer",
        "name": "idDeser"
       }
      ],
      "type": "Object",
      "name": "_convertObjectId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeWithObjectId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromObjectId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromObjectUsingNonDefault"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeUsingPropertyBased"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromNumber"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromString"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromDouble"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromBoolean"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromEmbedded"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "_delegateDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": null,
      "name": "injectValues"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "TokenBuffer",
        "name": "unknownTokens"
       }
      ],
      "type": "Object",
      "name": "handleUnknownProperties"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": null,
      "name": "handleUnknownVanilla"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "beanOrClass"
       },
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": null,
      "name": "handleUnknownProperty"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "beanOrClass"
       },
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": null,
      "name": "handleIgnoredProperty"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "TokenBuffer",
        "name": "unknownTokens"
       }
      ],
      "type": "Object",
      "name": "handlePolymorphic"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "TokenBuffer",
        "name": "unknownTokens"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findSubclassDeserializer"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "wrapAndThrow"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Throwable",
      "name": "throwOrReturnThrowable"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "wrapInstantiationProblem"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "PropertyName",
      "name": "TEMP_PROPERTY_NAME"
     },
     {
      "type": "JavaType",
      "name": "_beanType"
     },
     {
      "type": "JsonFormat",
      "name": "_serializationShape"
     },
     {
      "type": "ValueInstantiator",
      "name": "_valueInstantiator"
     },
     {
      "type": "JsonDeserializer",
      "name": "_delegateDeserializer"
     },
     {
      "type": "JsonDeserializer",
      "name": "_arrayDelegateDeserializer"
     },
     {
      "type": "PropertyBasedCreator",
      "name": "_propertyBasedCreator"
     },
     {
      "type": "boolean",
      "name": "_nonStandardCreation"
     },
     {
      "type": "boolean",
      "name": "_vanillaProcessing"
     },
     {
      "type": "BeanPropertyMap",
      "name": "_beanProperties"
     },
     {
      "type": "ValueInjector",
      "name": "_injectables"
     },
     {
      "type": "SettableAnyProperty",
      "name": "_anySetter"
     },
     {
      "type": "Set",
      "name": "_ignorableProps"
     },
     {
      "type": "boolean",
      "name": "_ignoreAllUnknown"
     },
     {
      "type": "boolean",
      "name": "_needViewProcesing"
     },
     {
      "type": "Map",
      "name": "_backRefs"
     },
     {
      "type": "HashMap",
      "name": "_subDeserializers"
     },
     {
      "type": "UnwrappedPropertyHandler",
      "name": "_unwrappedPropertyHandler"
     },
     {
      "type": "ExternalTypeHandler",
      "name": "_externalTypeIdHandler"
     },
     {
      "type": "ObjectIdReader",
      "name": "_objectIdReader"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "BeanDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "transformer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "unwrappingDeserializer"
     },
     {
      "params": [
       {
        "type": "ObjectIdReader",
        "name": "oir"
       }
      ],
      "type": "BeanDeserializer",
      "name": "withObjectIdReader"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "ignorableProps"
       }
      ],
      "type": "BeanDeserializer",
      "name": "withIgnorableProperties"
     },
     {
      "params": [
       {
        "type": "BeanPropertyMap",
        "name": "props"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withBeanProperties"
     },
     {
      "params": [],
      "type": "BeanDeserializerBase",
      "name": "asArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonToken",
        "name": "t"
       }
      ],
      "type": "Object",
      "name": "_deserializeOther"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_missingToken"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonToken",
        "name": "t"
       }
      ],
      "type": "Object",
      "name": "vanillaDeserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeUsingPropertyBased"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       },
       {
        "type": "PropertyValueBuffer",
        "name": "buffer"
       },
       {
        "type": "UnresolvedForwardReference",
        "name": "reference"
       }
      ],
      "type": "BeanReferring",
      "name": "handleUnresolvedReference"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "Object",
      "name": "_deserializeWithErrorWrapping"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromNull"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Class",
        "name": "activeView"
       }
      ],
      "type": "Object",
      "name": "deserializeWithView"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeWithUnwrapped"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "Object",
      "name": "deserializeWithUnwrapped"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeUsingPropertyBasedWithUnwrapped"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeWithExternalTypeId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "Object",
      "name": "deserializeWithExternalTypeId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeUsingPropertyBasedWithExternalTypeId"
     },
     {
      "params": [],
      "type": "Exception",
      "name": "_creatorReturnedNullException"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Exception",
      "name": "_nullFromCreator"
     },
     {
      "type": "NameTransformer",
      "name": "_currentlyTransforming"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanDeserializerBuilder.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "BeanDeserializerBuilder",
    "methods": [
     {
      "params": [
       {
        "type": "HashMap",
        "name": "src"
       }
      ],
      "type": "HashMap",
      "name": "_copy"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "src"
       }
      ],
      "type": "List",
      "name": "_copy"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       },
       {
        "type": "boolean",
        "name": "allowOverride"
       }
      ],
      "type": null,
      "name": "addOrReplaceProperty"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": null,
      "name": "addProperty"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "referenceName"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": null,
      "name": "addBackReferenceProperty"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "propName"
       },
       {
        "type": "JavaType",
        "name": "propType"
       },
       {
        "type": "Annotations",
        "name": "contextAnnotations"
       },
       {
        "type": "AnnotatedMember",
        "name": "member"
       },
       {
        "type": "Object",
        "name": "valueId"
       }
      ],
      "type": null,
      "name": "addInjectable"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": null,
      "name": "addIgnorable"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": null,
      "name": "addCreatorProperty"
     },
     {
      "params": [
       {
        "type": "SettableAnyProperty",
        "name": "s"
       }
      ],
      "type": null,
      "name": "setAnySetter"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "ignore"
       }
      ],
      "type": null,
      "name": "setIgnoreUnknownProperties"
     },
     {
      "params": [
       {
        "type": "ValueInstantiator",
        "name": "inst"
       }
      ],
      "type": null,
      "name": "setValueInstantiator"
     },
     {
      "params": [
       {
        "type": "ObjectIdReader",
        "name": "r"
       }
      ],
      "type": null,
      "name": "setObjectIdReader"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "buildMethod"
       },
       {
        "type": "JsonPOJOBuilder",
        "name": "config"
       }
      ],
      "type": null,
      "name": "setPOJOBuilder"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "getProperties"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "propertyName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findProperty"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "propertyName"
       }
      ],
      "type": "boolean",
      "name": "hasProperty"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "name"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "removeProperty"
     },
     {
      "params": [],
      "type": "SettableAnyProperty",
      "name": "getAnySetter"
     },
     {
      "params": [],
      "type": "ValueInstantiator",
      "name": "getValueInstantiator"
     },
     {
      "params": [],
      "type": "List",
      "name": "getInjectables"
     },
     {
      "params": [],
      "type": "ObjectIdReader",
      "name": "getObjectIdReader"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "getBuildMethod"
     },
     {
      "params": [],
      "type": "JsonPOJOBuilder",
      "name": "getBuilderConfig"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": "boolean",
      "name": "hasIgnorable"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "build"
     },
     {
      "params": [],
      "type": "AbstractDeserializer",
      "name": "buildAbstract"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "String",
        "name": "expBuildMethodName"
       }
      ],
      "type": "JsonDeserializer",
      "name": "buildBuilderBased"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "mainProps"
       }
      ],
      "type": null,
      "name": "_fixAccess"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "props"
       }
      ],
      "type": "Map",
      "name": "_collectAliases"
     }
    ],
    "fields": [
     {
      "type": "DeserializationConfig",
      "name": "_config"
     },
     {
      "type": "DeserializationContext",
      "name": "_context"
     },
     {
      "type": "BeanDescription",
      "name": "_beanDesc"
     },
     {
      "type": "Map",
      "name": "_properties"
     },
     {
      "type": "List",
      "name": "_injectables"
     },
     {
      "type": "HashMap",
      "name": "_backRefProperties"
     },
     {
      "type": "HashSet",
      "name": "_ignorableProps"
     },
     {
      "type": "ValueInstantiator",
      "name": "_valueInstantiator"
     },
     {
      "type": "ObjectIdReader",
      "name": "_objectIdReader"
     },
     {
      "type": "SettableAnyProperty",
      "name": "_anySetter"
     },
     {
      "type": "boolean",
      "name": "_ignoreAllUnknown"
     },
     {
      "type": "AnnotatedMethod",
      "name": "_buildMethod"
     },
     {
      "type": "JsonPOJOBuilder",
      "name": "_builderConfig"
     }
    ]
   }
  ]
 },
 {
  "filename": "SettableAnyProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "SettableAnyProperty",
    "methods": [
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "SettableAnyProperty",
      "name": "withValueDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     },
     {
      "params": [],
      "type": "BeanProperty",
      "name": "getProperty"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasValueDeserializer"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "propName"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Exception",
        "name": "e"
       },
       {
        "type": "Object",
        "name": "propName"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "_throwAsIOE"
     },
     {
      "params": [],
      "type": "String",
      "name": "getClassName"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "AnnotatedMember",
      "name": "_setter"
     },
     {
      "type": "boolean",
      "name": "_setterIsField"
     },
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "JsonDeserializer",
      "name": "_valueDeserializer"
     },
     {
      "type": "TypeDeserializer",
      "name": "_valueTypeDeserializer"
     },
     {
      "type": "KeyDeserializer",
      "name": "_keyDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "DeserializerFactory.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "DeserializerFactory",
    "methods": [
     {
      "params": [
       {
        "type": "Deserializers",
        "name": "additional"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withAdditionalDeserializers"
     },
     {
      "params": [
       {
        "type": "KeyDeserializers",
        "name": "additional"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withAdditionalKeyDeserializers"
     },
     {
      "params": [
       {
        "type": "BeanDeserializerModifier",
        "name": "modifier"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withDeserializerModifier"
     },
     {
      "params": [
       {
        "type": "AbstractTypeResolver",
        "name": "resolver"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withAbstractTypeResolver"
     },
     {
      "params": [
       {
        "type": "ValueInstantiators",
        "name": "instantiators"
       }
      ],
      "type": "DeserializerFactory",
      "name": "withValueInstantiators"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "mapAbstractType"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "ValueInstantiator",
      "name": "findValueInstantiator"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createBeanDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "Class",
        "name": "builderClass"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createBuilderBasedDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createEnumDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ReferenceType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createReferenceDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createTreeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ArrayType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "CollectionType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createCollectionDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "CollectionLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createCollectionLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "MapType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createMapDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "MapLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createMapLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "KeyDeserializer",
      "name": "createKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeDeserializer",
      "name": "findTypeDeserializer"
     }
    ],
    "fields": [
     {
      "type": "Deserializers",
      "name": "NO_DESERIALIZERS"
     }
    ]
   }
  ]
 },
 {
  "filename": "AbstractDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "AbstractDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "AbstractDeserializer",
      "name": "constructForNonPOJO"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "Class",
      "name": "handledType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [],
      "type": "ObjectIdReader",
      "name": "getObjectIdReader"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "logicalName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findBackReference"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeIfNatural"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeFromObjectId"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_baseType"
     },
     {
      "type": "ObjectIdReader",
      "name": "_objectIdReader"
     },
     {
      "type": "Map",
      "name": "_backRefProperties"
     },
     {
      "type": "Map",
      "name": "_properties"
     },
     {
      "type": "boolean",
      "name": "_acceptString"
     },
     {
      "type": "boolean",
      "name": "_acceptBoolean"
     },
     {
      "type": "boolean",
      "name": "_acceptInt"
     },
     {
      "type": "boolean",
      "name": "_acceptDouble"
     }
    ]
   }
  ]
 },
 {
  "filename": "DeserializerCache.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "DeserializerCache",
    "methods": [
     {
      "params": [],
      "type": "Object",
      "name": "writeReplace"
     },
     {
      "params": [],
      "type": "int",
      "name": "cachedDeserializersCount"
     },
     {
      "params": [],
      "type": null,
      "name": "flushCachedDeserializers"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "DeserializerFactory",
        "name": "factory"
       },
       {
        "type": "JavaType",
        "name": "propertyType"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findValueDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "DeserializerFactory",
        "name": "factory"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "KeyDeserializer",
      "name": "findKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "DeserializerFactory",
        "name": "factory"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "hasValueDeserializerFor"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCachedDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "DeserializerFactory",
        "name": "factory"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_createAndCacheValueDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "DeserializerFactory",
        "name": "factory"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_createAndCache2"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "DeserializerFactory",
        "name": "factory"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_createDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "DeserializerFactory",
        "name": "factory"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_createDeserializer2"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findDeserializerFromAnnotation"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findConvertingDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Converter",
      "name": "findConverter"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "modifyTypeByAnnotation"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "t"
       }
      ],
      "type": "boolean",
      "name": "_hasCustomHandlers"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "src"
       },
       {
        "type": "String",
        "name": "methodName"
       },
       {
        "type": "Class",
        "name": "noneClass"
       }
      ],
      "type": "Class",
      "name": "_verifyAsClass"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_handleUnknownValueDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "KeyDeserializer",
      "name": "_handleUnknownKeyDeserializer"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ConcurrentHashMap",
      "name": "_cachedDeserializers"
     },
     {
      "type": "HashMap",
      "name": "_incompleteDeserializers"
     }
    ]
   }
  ]
 },
 {
  "filename": "DataFormatReaders.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "DataFormatReaders",
    "methods": [
     {
      "params": [
       {
        "type": "MatchStrength",
        "name": "optMatch"
       }
      ],
      "type": "DataFormatReaders",
      "name": "withOptimalMatch"
     },
     {
      "params": [
       {
        "type": "MatchStrength",
        "name": "minMatch"
       }
      ],
      "type": "DataFormatReaders",
      "name": "withMinimalMatch"
     },
     {
      "params": [
       {
        "type": "ObjectReader",
        "name": "readers"
       }
      ],
      "type": "DataFormatReaders",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "lookaheadBytes"
       }
      ],
      "type": "DataFormatReaders",
      "name": "withMaxInputLookahead"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "DataFormatReaders",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "DataFormatReaders",
      "name": "withType"
     },
     {
      "params": [
       {
        "type": "InputStream",
        "name": "in"
       }
      ],
      "type": "Match",
      "name": "findFormat"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "fullInputData"
       }
      ],
      "type": "Match",
      "name": "findFormat"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "fullInputData"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": "Match",
      "name": "findFormat"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "AccessorForReader",
        "name": "acc"
       }
      ],
      "type": "Match",
      "name": "_findFormat"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "DEFAULT_MAX_INPUT_LOOKAHEAD"
     },
     {
      "type": "ObjectReader",
      "name": "_readers"
     },
     {
      "type": "MatchStrength",
      "name": "_optimalMatch"
     },
     {
      "type": "MatchStrength",
      "name": "_minimalMatch"
     },
     {
      "type": "int",
      "name": "_maxInputLookahead"
     }
    ]
   }
  ]
 },
 {
  "filename": "KeyDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "KeyDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "KeyDeserializer",
      "name": "findKeyDeserializer"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BeanDeserializerModifier.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "BeanDeserializerModifier",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "List",
        "name": "propDefs"
       }
      ],
      "type": "List",
      "name": "updateProperties"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanDeserializerBuilder",
        "name": "builder"
       }
      ],
      "type": "BeanDeserializerBuilder",
      "name": "updateBuilder"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "modifyDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "modifyEnumDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "ReferenceType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "modifyReferenceDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "ArrayType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "modifyArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "CollectionType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "modifyCollectionDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "CollectionLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "modifyCollectionLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "MapType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "modifyMapDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "MapLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "modifyMapLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "KeyDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "KeyDeserializer",
      "name": "modifyKeyDeserializer"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "Deserializers.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "Deserializers",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findEnumDeserializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "nodeType"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findTreeNodeDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findBeanDeserializer"
     },
     {
      "params": [
       {
        "type": "ReferenceType",
        "name": "refType"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "contentTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "contentDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findReferenceDeserializer"
     },
     {
      "params": [
       {
        "type": "ArrayType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "CollectionType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findCollectionDeserializer"
     },
     {
      "params": [
       {
        "type": "CollectionLikeType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findCollectionLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "MapType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "KeyDeserializer",
        "name": "keyDeserializer"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findMapDeserializer"
     },
     {
      "params": [
       {
        "type": "MapLikeType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "KeyDeserializer",
        "name": "keyDeserializer"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findMapLikeDeserializer"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "CreatorProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser",
  "classes": [
   {
    "name": "CreatorProperty",
    "methods": [
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withValueDeserializer"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "nva"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withNullProvider"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "fallbackSetter"
       }
      ],
      "type": null,
      "name": "setFallbackSetter"
     },
     {
      "params": [],
      "type": null,
      "name": "markAsIgnorable"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isIgnorable"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "beanInstance"
       }
      ],
      "type": "Object",
      "name": "findInjectableValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "beanInstance"
       }
      ],
      "type": null,
      "name": "inject"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     },
     {
      "params": [],
      "type": "int",
      "name": "getCreatorIndex"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setAndReturn"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getInjectableValueId"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": null,
      "name": "_verifySetter"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "_reportMissingSetter"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "AnnotatedParameter",
      "name": "_annotated"
     },
     {
      "type": "Object",
      "name": "_injectableValueId"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_fallbackSetter"
     },
     {
      "type": "int",
      "name": "_creatorIndex"
     },
     {
      "type": "boolean",
      "name": "_ignorable"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectArrayDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "ObjectArrayDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "TypeDeserializer",
        "name": "elemTypeDeser"
       },
       {
        "type": "JsonDeserializer",
        "name": "elemDeser"
       }
      ],
      "type": "ObjectArrayDeserializer",
      "name": "withDeserializer"
     },
     {
      "params": [
       {
        "type": "TypeDeserializer",
        "name": "elemTypeDeser"
       },
       {
        "type": "JsonDeserializer",
        "name": "elemDeser"
       },
       {
        "type": "NullValueProvider",
        "name": "nuller"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "ObjectArrayDeserializer",
      "name": "withResolved"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getContentDeserializer"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getEmptyAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "intoValue"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Byte",
      "name": "deserializeFromBase64"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "handleNonArray"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "NO_OBJECTS"
     },
     {
      "type": "boolean",
      "name": "_untyped"
     },
     {
      "type": "Class",
      "name": "_elementClass"
     },
     {
      "type": "JsonDeserializer",
      "name": "_elementDeserializer"
     },
     {
      "type": "TypeDeserializer",
      "name": "_elementTypeDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "ReferenceTypeDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "ReferenceTypeDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getNullAccessPattern"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getEmptyAccessPattern"
     },
     {
      "params": [
       {
        "type": "TypeDeserializer",
        "name": "typeDeser"
       },
       {
        "type": "JsonDeserializer",
        "name": "valueDeser"
       }
      ],
      "type": "ReferenceTypeDeserializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "getNullValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "contents"
       }
      ],
      "type": "T",
      "name": "referenceValue"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "reference"
       },
       {
        "type": "Object",
        "name": "contents"
       }
      ],
      "type": "T",
      "name": "updateReference"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "reference"
       }
      ],
      "type": "Object",
      "name": "getReferenced"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getValueType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "T",
        "name": "reference"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_fullType"
     },
     {
      "type": "ValueInstantiator",
      "name": "_valueInstantiator"
     },
     {
      "type": "TypeDeserializer",
      "name": "_valueTypeDeserializer"
     },
     {
      "type": "JsonDeserializer",
      "name": "_valueDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "MapDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "MapDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "KeyDeserializer",
        "name": "keyDeser"
       },
       {
        "type": "TypeDeserializer",
        "name": "valueTypeDeser"
       },
       {
        "type": "JsonDeserializer",
        "name": "valueDeser"
       },
       {
        "type": "NullValueProvider",
        "name": "nuller"
       },
       {
        "type": "Set",
        "name": "ignorable"
       }
      ],
      "type": "MapDeserializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "mapType"
       },
       {
        "type": "KeyDeserializer",
        "name": "keyDeser"
       }
      ],
      "type": "boolean",
      "name": "_isStdKeyDeser"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "ignorable"
       }
      ],
      "type": null,
      "name": "setIgnorableProperties"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "ignorable"
       }
      ],
      "type": null,
      "name": "setIgnorableProperties"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getContentDeserializer"
     },
     {
      "params": [],
      "type": "ValueInstantiator",
      "name": "getValueInstantiator"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Map",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Map",
        "name": "result"
       }
      ],
      "type": "Map",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getMapClass"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getValueType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Map",
        "name": "result"
       }
      ],
      "type": null,
      "name": "_readAndBind"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Map",
        "name": "result"
       }
      ],
      "type": null,
      "name": "_readAndBindStringKeyMap"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Map",
      "name": "_deserializeUsingCreator"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Map",
        "name": "result"
       }
      ],
      "type": null,
      "name": "_readAndUpdate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Map",
        "name": "result"
       }
      ],
      "type": null,
      "name": "_readAndUpdateStringKeyMap"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "MapReferringAccumulator",
        "name": "accumulator"
       },
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "UnresolvedForwardReference",
        "name": "reference"
       }
      ],
      "type": null,
      "name": "handleUnresolvedReference"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "KeyDeserializer",
      "name": "_keyDeserializer"
     },
     {
      "type": "boolean",
      "name": "_standardStringKey"
     },
     {
      "type": "JsonDeserializer",
      "name": "_valueDeserializer"
     },
     {
      "type": "TypeDeserializer",
      "name": "_valueTypeDeserializer"
     },
     {
      "type": "ValueInstantiator",
      "name": "_valueInstantiator"
     },
     {
      "type": "JsonDeserializer",
      "name": "_delegateDeserializer"
     },
     {
      "type": "PropertyBasedCreator",
      "name": "_propertyBasedCreator"
     },
     {
      "type": "boolean",
      "name": "_hasDefaultCreator"
     },
     {
      "type": "Set",
      "name": "_ignorableProperties"
     }
    ]
   }
  ]
 },
 {
  "filename": "StringDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StringDeserializer",
    "methods": [
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "String",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "String",
      "name": "deserializeWithType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "StringDeserializer",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "FactoryBasedEnumDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "FactoryBasedEnumDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "PropertyBasedCreator",
        "name": "creator"
       }
      ],
      "type": "Object",
      "name": "deserializeEnumUsingPropertyBased"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "Object",
      "name": "_deserializeWithErrorWrapping"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "wrapAndThrow"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Throwable",
      "name": "throwOrReturnThrowable"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_inputType"
     },
     {
      "type": "boolean",
      "name": "_hasArgs"
     },
     {
      "type": "AnnotatedMethod",
      "name": "_factory"
     },
     {
      "type": "JsonDeserializer",
      "name": "_deser"
     },
     {
      "type": "ValueInstantiator",
      "name": "_valueInstantiator"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_creatorProps"
     },
     {
      "type": "PropertyBasedCreator",
      "name": "_propCreator"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonLocationInstantiator.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "JsonLocationInstantiator",
    "methods": [
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromObjectWith"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "getFromObjectArguments"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "CreatorProperty",
      "name": "creatorProp"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "type": "Object",
      "name": "createFromObjectWith"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "long",
      "name": "_long"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "int",
      "name": "_int"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonNodeDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "JsonNodeDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "nodeClass"
       }
      ],
      "type": "JsonDeserializer",
      "name": "getDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "JsonNode",
      "name": "getNullValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "JsonNode",
      "name": "deserialize"
     }
    ],
    "fields": [
     {
      "type": "JsonNodeDeserializer",
      "name": "instance"
     }
    ]
   },
   {
    "name": "BaseNodeDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonNodeFactory",
        "name": "nodeFactory"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "ObjectNode",
        "name": "objectNode"
       },
       {
        "type": "JsonNode",
        "name": "oldValue"
       },
       {
        "type": "JsonNode",
        "name": "newValue"
       }
      ],
      "type": null,
      "name": "_handleDuplicateField"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonNodeFactory",
        "name": "nodeFactory"
       }
      ],
      "type": "ObjectNode",
      "name": "deserializeObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonNodeFactory",
        "name": "nodeFactory"
       }
      ],
      "type": "ObjectNode",
      "name": "deserializeObjectAtName"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ObjectNode",
        "name": "node"
       }
      ],
      "type": "JsonNode",
      "name": "updateObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonNodeFactory",
        "name": "nodeFactory"
       }
      ],
      "type": "ArrayNode",
      "name": "deserializeArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ArrayNode",
        "name": "node"
       }
      ],
      "type": "JsonNode",
      "name": "updateArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonNodeFactory",
        "name": "nodeFactory"
       }
      ],
      "type": "JsonNode",
      "name": "deserializeAny"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonNodeFactory",
        "name": "nodeFactory"
       }
      ],
      "type": "JsonNode",
      "name": "_fromInt"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonNodeFactory",
        "name": "nodeFactory"
       }
      ],
      "type": "JsonNode",
      "name": "_fromFloat"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonNodeFactory",
        "name": "nodeFactory"
       }
      ],
      "type": "JsonNode",
      "name": "_fromEmbedded"
     }
    ],
    "fields": [
     {
      "type": "Boolean",
      "name": "_supportsUpdates"
     }
    ]
   }
  ]
 },
 {
  "filename": "PrimitiveArrayDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "PrimitiveArrayDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "JsonDeserializer",
      "name": "forType"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "oldValue"
       },
       {
        "type": "T",
        "name": "newValue"
       }
      ],
      "type": "T",
      "name": "_concat"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "handleSingleElementUnwrapped"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "nuller"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "PrimitiveArrayDeserializers",
      "name": "withResolved"
     },
     {
      "params": [],
      "type": "T",
      "name": "_constructEmpty"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getEmptyAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "T",
        "name": "existing"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "handleNonArray"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "_failOnNull"
     }
    ],
    "fields": [
     {
      "type": "Boolean",
      "name": "_unwrapSingle"
     },
     {
      "type": "Object",
      "name": "_emptyValue"
     },
     {
      "type": "NullValueProvider",
      "name": "_nuller"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdScalarDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StdScalarDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "T",
        "name": "intoValue"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getNullAccessPattern"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getEmptyAccessPattern"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "NullifyingDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "NullifyingDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NullifyingDeserializer",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "EnumDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "EnumDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "AnnotatedMethod",
        "name": "factory"
       }
      ],
      "type": "JsonDeserializer",
      "name": "deserializerForCreator"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "AnnotatedMethod",
        "name": "factory"
       },
       {
        "type": "ValueInstantiator",
        "name": "valueInstantiator"
       },
       {
        "type": "SettableBeanProperty",
        "name": "creatorProps"
       }
      ],
      "type": "JsonDeserializer",
      "name": "deserializerForCreator"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "AnnotatedMethod",
        "name": "factory"
       }
      ],
      "type": "JsonDeserializer",
      "name": "deserializerForNoArgsCreator"
     },
     {
      "params": [
       {
        "type": "Boolean",
        "name": "caseInsensitive"
       }
      ],
      "type": "EnumDeserializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "CompactStringObjectMap",
        "name": "lookup"
       },
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": "Object",
      "name": "_deserializeAltString"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeOther"
     },
     {
      "params": [],
      "type": "Class",
      "name": "_enumClass"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "CompactStringObjectMap",
      "name": "_getToStringLookup"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "_enumsByIndex"
     },
     {
      "type": "Enum",
      "name": "_enumDefaultValue"
     },
     {
      "type": "CompactStringObjectMap",
      "name": "_lookupByName"
     },
     {
      "type": "CompactStringObjectMap",
      "name": "_lookupByToString"
     },
     {
      "type": "Boolean",
      "name": "_caseInsensitive"
     }
    ]
   }
  ]
 },
 {
  "filename": "NumberDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "NumberDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "String",
        "name": "clsName"
       }
      ],
      "type": "JsonDeserializer",
      "name": "find"
     }
    ],
    "fields": [
     {
      "type": "HashSet",
      "name": "_classNames"
     }
    ]
   }
  ]
 },
 {
  "filename": "ArrayBlockingQueueDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "ArrayBlockingQueueDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "dd"
       },
       {
        "type": "JsonDeserializer",
        "name": "vd"
       },
       {
        "type": "TypeDeserializer",
        "name": "vtd"
       },
       {
        "type": "NullValueProvider",
        "name": "nuller"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "ArrayBlockingQueueDeserializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Collection",
      "name": "createDefaultInstance"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Collection",
        "name": "result0"
       }
      ],
      "type": "Collection",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "UntypedObjectDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "UntypedObjectDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findCustomDeser"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_clearIfStdImpl"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "intoValue"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "mapArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Collection",
        "name": "result"
       }
      ],
      "type": "Object",
      "name": "mapArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "mapObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "mapArrayToArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Map",
        "name": "m"
       }
      ],
      "type": "Object",
      "name": "mapObject"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "NO_OBJECTS"
     },
     {
      "type": "JsonDeserializer",
      "name": "_mapDeserializer"
     },
     {
      "type": "JsonDeserializer",
      "name": "_listDeserializer"
     },
     {
      "type": "JsonDeserializer",
      "name": "_stringDeserializer"
     },
     {
      "type": "JsonDeserializer",
      "name": "_numberDeserializer"
     },
     {
      "type": "JavaType",
      "name": "_listType"
     },
     {
      "type": "JavaType",
      "name": "_mapType"
     },
     {
      "type": "boolean",
      "name": "_nonMerging"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdNodeBasedDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StdNodeBasedDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "JsonNode",
        "name": "root"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "convert"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "td"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JsonDeserializer",
      "name": "_treeDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "MapEntryDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "MapEntryDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "KeyDeserializer",
        "name": "keyDeser"
       },
       {
        "type": "TypeDeserializer",
        "name": "valueTypeDeser"
       },
       {
        "type": "JsonDeserializer",
        "name": "valueDeser"
       }
      ],
      "type": "MapEntryDeserializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getContentDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Map",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Map",
        "name": "result"
       }
      ],
      "type": "Map",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "KeyDeserializer",
      "name": "_keyDeserializer"
     },
     {
      "type": "JsonDeserializer",
      "name": "_valueDeserializer"
     },
     {
      "type": "TypeDeserializer",
      "name": "_valueTypeDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdDelegatingDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StdDelegatingDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "Converter",
        "name": "converter"
       },
       {
        "type": "JavaType",
        "name": "delegateType"
       },
       {
        "type": "JsonDeserializer",
        "name": "delegateDeserializer"
       }
      ],
      "type": "StdDelegatingDeserializer",
      "name": "withDelegate"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getDelegatee"
     },
     {
      "params": [],
      "type": "Class",
      "name": "handledType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "intoValue"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "intoValue"
       }
      ],
      "type": "Object",
      "name": "_handleIncompatibleUpdateValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "delegateValue"
       }
      ],
      "type": "T",
      "name": "convertValue"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Converter",
      "name": "_converter"
     },
     {
      "type": "JavaType",
      "name": "_delegateType"
     },
     {
      "type": "JsonDeserializer",
      "name": "_delegateDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "EnumSetDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "EnumSetDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "EnumSetDeserializer",
      "name": "withDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "EnumSetDeserializer",
      "name": "withResolved"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "EnumSet",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "EnumSet",
        "name": "result"
       }
      ],
      "type": "EnumSet",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "EnumSet",
        "name": "result"
       }
      ],
      "type": "EnumSet",
      "name": "_deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [],
      "type": "EnumSet",
      "name": "constructSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "EnumSet",
        "name": "result"
       }
      ],
      "type": "EnumSet",
      "name": "handleNonArray"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_enumType"
     },
     {
      "type": "Class",
      "name": "_enumClass"
     },
     {
      "type": "JsonDeserializer",
      "name": "_enumDeserializer"
     },
     {
      "type": "Boolean",
      "name": "_unwrapSingle"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": []
 },
 {
  "filename": "AtomicBooleanDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "AtomicBooleanDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "AtomicBoolean",
      "name": "deserialize"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "EnumMapDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "EnumMapDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "KeyDeserializer",
        "name": "keyDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "valueDeserializer"
       },
       {
        "type": "TypeDeserializer",
        "name": "valueTypeDeser"
       },
       {
        "type": "NullValueProvider",
        "name": "nuller"
       }
      ],
      "type": "EnumMapDeserializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getContentDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "EnumMap",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "EnumMap",
        "name": "result"
       }
      ],
      "type": "EnumMap",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "EnumMap",
      "name": "constructMap"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "EnumMap",
      "name": "_deserializeUsingProperties"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "_enumClass"
     },
     {
      "type": "KeyDeserializer",
      "name": "_keyDeserializer"
     },
     {
      "type": "JsonDeserializer",
      "name": "_valueDeserializer"
     },
     {
      "type": "TypeDeserializer",
      "name": "_valueTypeDeserializer"
     },
     {
      "type": "ValueInstantiator",
      "name": "_valueInstantiator"
     },
     {
      "type": "JsonDeserializer",
      "name": "_delegateDeserializer"
     },
     {
      "type": "PropertyBasedCreator",
      "name": "_propertyBasedCreator"
     }
    ]
   }
  ]
 },
 {
  "filename": "FromStringDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "FromStringDeserializer",
    "methods": [
     {
      "params": [],
      "type": "Class",
      "name": "types"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "Std",
      "name": "findDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "_deserialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "ob"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "_deserializeEmbedded"
     },
     {
      "params": [],
      "type": "T",
      "name": "_deserializeFromEmptyString"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ByteBufferDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "ByteBufferDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "parser"
       },
       {
        "type": "DeserializationContext",
        "name": "cx"
       }
      ],
      "type": "ByteBuffer",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ByteBuffer",
        "name": "intoValue"
       }
      ],
      "type": "ByteBuffer",
      "name": "deserialize"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "TokenBufferDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "TokenBufferDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "TokenBuffer",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "TokenBuffer",
      "name": "createBufferInstance"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "AtomicReferenceDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "AtomicReferenceDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "TypeDeserializer",
        "name": "typeDeser"
       },
       {
        "type": "JsonDeserializer",
        "name": "valueDeser"
       }
      ],
      "type": "AtomicReferenceDeserializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "AtomicReference",
      "name": "getNullValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "contents"
       }
      ],
      "type": "AtomicReference",
      "name": "referenceValue"
     },
     {
      "params": [
       {
        "type": "AtomicReference",
        "name": "reference"
       }
      ],
      "type": "Object",
      "name": "getReferenced"
     },
     {
      "params": [
       {
        "type": "AtomicReference",
        "name": "reference"
       },
       {
        "type": "Object",
        "name": "contents"
       }
      ],
      "type": "AtomicReference",
      "name": "updateReference"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "DelegatingDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "DelegatingDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "newDelegatee"
       }
      ],
      "type": "JsonDeserializer",
      "name": "newDelegatingInstance"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "delegatee"
       }
      ],
      "type": "JsonDeserializer",
      "name": "replaceDelegatee"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "intoValue"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getDelegatee"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "logicalName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findBackReference"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getNullAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getNullValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "getKnownPropertyNames"
     },
     {
      "params": [],
      "type": "ObjectIdReader",
      "name": "getObjectIdReader"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JsonDeserializer",
      "name": "_delegatee"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StdDeserializer",
    "methods": [
     {
      "params": [],
      "type": "Class",
      "name": "handledType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getValueClass"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getValueType"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deserializer"
       }
      ],
      "type": "boolean",
      "name": "isDefaultDeserializer"
     },
     {
      "params": [
       {
        "type": "KeyDeserializer",
        "name": "keyDeser"
       }
      ],
      "type": "boolean",
      "name": "isDefaultKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "boolean",
      "name": "_parseBooleanPrimitive"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "boolean",
      "name": "_parseBooleanFromInt"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "byte",
      "name": "_parseBytePrimitive"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "short",
      "name": "_parseShortPrimitive"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "int",
      "name": "_parseIntPrimitive"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "int",
      "name": "_parseIntPrimitive"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "long",
      "name": "_parseLongPrimitive"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "long",
      "name": "_parseLongPrimitive"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "float",
      "name": "_parseFloatPrimitive"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "float",
      "name": "_parseFloatPrimitive"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "double",
      "name": "_parseDoublePrimitive"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "double",
      "name": "_parseDoublePrimitive"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "java",
      "name": "_parseDate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "java",
      "name": "_parseDateFromArray"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "java",
      "name": "_parseDate"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "numStr"
       }
      ],
      "type": "double",
      "name": "parseDouble"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "String",
      "name": "_parseString"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "_deserializeFromEmpty"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "_hasTextualNull"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "_isEmptyOrTextualNull"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "boolean",
      "name": "_isNegInf"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "boolean",
      "name": "_isPosInf"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "boolean",
      "name": "_isNaN"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "_deserializeFromArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "_deserializeWrappedValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "type"
       }
      ],
      "type": null,
      "name": "_failDoubleToIntCoercion"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_coerceIntegral"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "boolean",
        "name": "isPrimitive"
       }
      ],
      "type": "Object",
      "name": "_coerceNullToken"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "boolean",
        "name": "isPrimitive"
       }
      ],
      "type": "Object",
      "name": "_coerceTextualNull"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "boolean",
        "name": "isPrimitive"
       }
      ],
      "type": "Object",
      "name": "_coerceEmptyString"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "_verifyNullForPrimitive"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "str"
       }
      ],
      "type": null,
      "name": "_verifyNullForPrimitiveCoercion"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "str"
       }
      ],
      "type": null,
      "name": "_verifyNullForScalarCoercion"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "str"
       }
      ],
      "type": null,
      "name": "_verifyStringForScalarCoercion"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": null,
      "name": "_verifyNumberForScalarCoercion"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "boolean",
        "name": "state"
       },
       {
        "type": "Enum",
        "name": "feature"
       },
       {
        "type": "String",
        "name": "inputDesc"
       }
      ],
      "type": null,
      "name": "_reportFailedNullCoerce"
     },
     {
      "params": [],
      "type": "String",
      "name": "_coercedTypeDesc"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findDeserializer"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "boolean",
      "name": "_isIntNumber"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "JsonDeserializer",
        "name": "existingDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findConvertingContentDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Class",
        "name": "typeForDefaults"
       }
      ],
      "type": "JsonFormat",
      "name": "findFormatOverrides"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Class",
        "name": "typeForDefaults"
       },
       {
        "type": "JsonFormat",
        "name": "feat"
       }
      ],
      "type": "Boolean",
      "name": "findFormatFeature"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       },
       {
        "type": "PropertyMetadata",
        "name": "propMetadata"
       }
      ],
      "type": "NullValueProvider",
      "name": "findValueNullProvider"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "JsonDeserializer",
        "name": "valueDeser"
       }
      ],
      "type": "NullValueProvider",
      "name": "findContentNullProvider"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "Nulls",
      "name": "findContentNullStyle"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Nulls",
        "name": "nulls"
       },
       {
        "type": "JsonDeserializer",
        "name": "valueDeser"
       }
      ],
      "type": "NullValueProvider",
      "name": "_findNullProvider"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instanceOrClass"
       },
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": null,
      "name": "handleUnknownProperty"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "handleMissingEndArrayForSingle"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "_verifyEndArrayForSingle"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "a"
       },
       {
        "type": "Object",
        "name": "b"
       }
      ],
      "type": "boolean",
      "name": "_neitherNull"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "_byteOverflow"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "_shortOverflow"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "_intOverflow"
     },
     {
      "params": [
       {
        "type": "Number",
        "name": "n"
       }
      ],
      "type": "Number",
      "name": "_nonNullNumber"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "F_MASK_INT_COERCIONS"
     },
     {
      "type": "int",
      "name": "F_MASK_ACCEPT_ARRAYS"
     },
     {
      "type": "Class",
      "name": "_valueClass"
     }
    ]
   }
  ]
 },
 {
  "filename": "StringCollectionDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StringCollectionDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "delegateDeser"
       },
       {
        "type": "JsonDeserializer",
        "name": "valueDeser"
       },
       {
        "type": "NullValueProvider",
        "name": "nuller"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "StringCollectionDeserializer",
      "name": "withResolved"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getContentDeserializer"
     },
     {
      "params": [],
      "type": "ValueInstantiator",
      "name": "getValueInstantiator"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Collection",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Collection",
        "name": "result"
       }
      ],
      "type": "Collection",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Collection",
        "name": "result"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "Collection",
      "name": "deserializeUsingCustom"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Collection",
        "name": "result"
       }
      ],
      "type": "Collection",
      "name": "handleNonArray"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JsonDeserializer",
      "name": "_valueDeserializer"
     },
     {
      "type": "ValueInstantiator",
      "name": "_valueInstantiator"
     },
     {
      "type": "JsonDeserializer",
      "name": "_delegateDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "UUIDDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "UUIDDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "UUID",
      "name": "_deserialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "ob"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "UUID",
      "name": "_deserializeEmbedded"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "uuidStr"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "UUID",
      "name": "_badFormat"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "int",
      "name": "intFromChars"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "int",
      "name": "shortFromChars"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "int",
      "name": "byteFromChars"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "uuidStr"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "char",
        "name": "c"
       }
      ],
      "type": "int",
      "name": "_badChar"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "bytes"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "UUID",
      "name": "_fromBytes"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "b"
       },
       {
        "type": "int",
        "name": "offset"
       }
      ],
      "type": "long",
      "name": "_long"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "b"
       },
       {
        "type": "int",
        "name": "offset"
       }
      ],
      "type": "int",
      "name": "_int"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "HEX_DIGITS"
     }
    ]
   }
  ]
 },
 {
  "filename": "ContainerDeserializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "ContainerDeserializerBase",
    "methods": [
     {
      "params": [],
      "type": "JavaType",
      "name": "getValueType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "refName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findBackReference"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getContentDeserializer"
     },
     {
      "params": [],
      "type": "ValueInstantiator",
      "name": "getValueInstantiator"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getEmptyAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "Object",
        "name": "ref"
       },
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "BOGUS",
      "name": "wrapAndThrow"
     }
    ],
    "fields": [
     {
      "type": "JavaType",
      "name": "_containerType"
     },
     {
      "type": "NullValueProvider",
      "name": "_nullProvider"
     },
     {
      "type": "Boolean",
      "name": "_unwrapSingle"
     },
     {
      "type": "boolean",
      "name": "_skipNullValues"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdValueInstantiator.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StdValueInstantiator",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "defaultCreator"
       },
       {
        "type": "AnnotatedWithParams",
        "name": "delegateCreator"
       },
       {
        "type": "JavaType",
        "name": "delegateType"
       },
       {
        "type": "SettableBeanProperty",
        "name": "delegateArgs"
       },
       {
        "type": "AnnotatedWithParams",
        "name": "withArgsCreator"
       },
       {
        "type": "SettableBeanProperty",
        "name": "constructorArgs"
       }
      ],
      "type": null,
      "name": "configureFromObjectSettings"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "arrayDelegateCreator"
       },
       {
        "type": "JavaType",
        "name": "arrayDelegateType"
       },
       {
        "type": "SettableBeanProperty",
        "name": "arrayDelegateArgs"
       }
      ],
      "type": null,
      "name": "configureFromArraySettings"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       }
      ],
      "type": null,
      "name": "configureFromStringCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       }
      ],
      "type": null,
      "name": "configureFromIntCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       }
      ],
      "type": null,
      "name": "configureFromLongCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       }
      ],
      "type": null,
      "name": "configureFromDoubleCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       }
      ],
      "type": null,
      "name": "configureFromBooleanCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedParameter",
        "name": "parameter"
       }
      ],
      "type": null,
      "name": "configureIncompleteParameter"
     },
     {
      "params": [],
      "type": "String",
      "name": "getValueTypeDesc"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getValueClass"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromString"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromLong"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromDouble"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromBoolean"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateUsingDefault"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateUsingDelegate"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateUsingArrayDelegate"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateFromObjectWith"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canInstantiate"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "JavaType",
      "name": "getDelegateType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "JavaType",
      "name": "getArrayDelegateType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "getFromObjectArguments"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "createUsingDefault"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "type": "Object",
      "name": "createFromObjectWith"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "delegate"
       }
      ],
      "type": "Object",
      "name": "createUsingDelegate"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "delegate"
       }
      ],
      "type": "Object",
      "name": "createUsingArrayDelegate"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromString"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "int",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromInt"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "long",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromLong"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "double",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromDouble"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "boolean",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "createFromBoolean"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "getDelegateCreator"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "getArrayDelegateCreator"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "getDefaultCreator"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "getWithArgsCreator"
     },
     {
      "params": [],
      "type": "AnnotatedParameter",
      "name": "getIncompleteParameter"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "JsonMappingException",
      "name": "wrapException"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "JsonMappingException",
      "name": "unwrapAndWrapException"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "JsonMappingException",
      "name": "wrapAsJsonMappingException"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "JsonMappingException",
      "name": "rewrapCtorProblem"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "delegateCreator"
       },
       {
        "type": "SettableBeanProperty",
        "name": "delegateArguments"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "delegate"
       }
      ],
      "type": "Object",
      "name": "_createUsingDelegate"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "_valueTypeDesc"
     },
     {
      "type": "Class",
      "name": "_valueClass"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_defaultCreator"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_withArgsCreator"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_constructorArguments"
     },
     {
      "type": "JavaType",
      "name": "_delegateType"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_delegateCreator"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_delegateArguments"
     },
     {
      "type": "JavaType",
      "name": "_arrayDelegateType"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_arrayDelegateCreator"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_arrayDelegateArguments"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_fromStringCreator"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_fromIntCreator"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_fromLongCreator"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_fromDoubleCreator"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_fromBooleanCreator"
     },
     {
      "type": "AnnotatedParameter",
      "name": "_incompleteParameter"
     }
    ]
   }
  ]
 },
 {
  "filename": "StringArrayDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StringArrayDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getEmptyAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonDeserializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "String",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "old"
       }
      ],
      "type": "String",
      "name": "_deserializeCustom"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "intoValue"
       }
      ],
      "type": "String",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "String",
      "name": "handleNonArray"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "NO_STRINGS"
     },
     {
      "type": "StringArrayDeserializer",
      "name": "instance"
     },
     {
      "type": "JsonDeserializer",
      "name": "_elementDeserializer"
     },
     {
      "type": "NullValueProvider",
      "name": "_nullProvider"
     },
     {
      "type": "Boolean",
      "name": "_unwrapSingle"
     },
     {
      "type": "boolean",
      "name": "_skipNullValues"
     }
    ]
   }
  ]
 },
 {
  "filename": "JdkDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "JdkDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "String",
        "name": "clsName"
       }
      ],
      "type": "JsonDeserializer",
      "name": "find"
     }
    ],
    "fields": [
     {
      "type": "HashSet",
      "name": "_classNames"
     }
    ]
   }
  ]
 },
 {
  "filename": "ThrowableDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "ThrowableDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "JsonDeserializer",
      "name": "unwrappingDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromObject"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "PROP_NAME_MESSAGE"
     }
    ]
   }
  ]
 },
 {
  "filename": "CollectionDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "CollectionDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "dd"
       },
       {
        "type": "JsonDeserializer",
        "name": "vd"
       },
       {
        "type": "TypeDeserializer",
        "name": "vtd"
       },
       {
        "type": "NullValueProvider",
        "name": "nuller"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "CollectionDeserializer",
      "name": "withResolved"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCachable"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "CollectionDeserializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getContentDeserializer"
     },
     {
      "params": [],
      "type": "ValueInstantiator",
      "name": "getValueInstantiator"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Collection",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Collection",
      "name": "createDefaultInstance"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Collection",
        "name": "result"
       }
      ],
      "type": "Collection",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Collection",
        "name": "result"
       }
      ],
      "type": "Collection",
      "name": "handleNonArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Collection",
        "name": "result"
       }
      ],
      "type": "Collection",
      "name": "_deserializeWithObjectId"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JsonDeserializer",
      "name": "_valueDeserializer"
     },
     {
      "type": "TypeDeserializer",
      "name": "_valueTypeDeserializer"
     },
     {
      "type": "ValueInstantiator",
      "name": "_valueInstantiator"
     },
     {
      "type": "JsonDeserializer",
      "name": "_delegateDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdKeyDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StdKeyDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "EnumResolver",
        "name": "enumResolver"
       }
      ],
      "type": "KeyDeserializer",
      "name": "constructEnumKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "EnumResolver",
        "name": "enumResolver"
       },
       {
        "type": "AnnotatedMethod",
        "name": "factory"
       }
      ],
      "type": "KeyDeserializer",
      "name": "constructEnumKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "KeyDeserializer",
      "name": "constructDelegatingKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "KeyDeserializer",
      "name": "findStringBasedKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "KeyDeserializer",
      "name": "findKeyDeserializer"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdKeyDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StdKeyDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "raw"
       }
      ],
      "type": "StdKeyDeserializer",
      "name": "forType"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeKey"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getKeyClass"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_parse"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "int",
      "name": "_parseInt"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "long",
      "name": "_parseLong"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "double",
      "name": "_parseDouble"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "Exception",
        "name": "e"
       }
      ],
      "type": "Object",
      "name": "_weirdKey"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "TYPE_BOOLEAN"
     },
     {
      "type": "int",
      "name": "TYPE_BYTE"
     },
     {
      "type": "int",
      "name": "TYPE_SHORT"
     },
     {
      "type": "int",
      "name": "TYPE_CHAR"
     },
     {
      "type": "int",
      "name": "TYPE_INT"
     },
     {
      "type": "int",
      "name": "TYPE_LONG"
     },
     {
      "type": "int",
      "name": "TYPE_FLOAT"
     },
     {
      "type": "int",
      "name": "TYPE_DOUBLE"
     },
     {
      "type": "int",
      "name": "TYPE_LOCALE"
     },
     {
      "type": "int",
      "name": "TYPE_DATE"
     },
     {
      "type": "int",
      "name": "TYPE_CALENDAR"
     },
     {
      "type": "int",
      "name": "TYPE_UUID"
     },
     {
      "type": "int",
      "name": "TYPE_URI"
     },
     {
      "type": "int",
      "name": "TYPE_URL"
     },
     {
      "type": "int",
      "name": "TYPE_CLASS"
     },
     {
      "type": "int",
      "name": "TYPE_CURRENCY"
     },
     {
      "type": "int",
      "name": "TYPE_BYTE_ARRAY"
     },
     {
      "type": "int",
      "name": "_kind"
     },
     {
      "type": "Class",
      "name": "_keyClass"
     },
     {
      "type": "FromStringDeserializer",
      "name": "_deser"
     }
    ]
   }
  ]
 },
 {
  "filename": "StackTraceElementDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "StackTraceElementDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "StackTraceElement",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "className"
       },
       {
        "type": "String",
        "name": "methodName"
       },
       {
        "type": "String",
        "name": "fileName"
       },
       {
        "type": "int",
        "name": "lineNumber"
       },
       {
        "type": "String",
        "name": "moduleName"
       },
       {
        "type": "String",
        "name": "moduleVersion"
       }
      ],
      "type": "StackTraceElement",
      "name": "constructValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "className"
       },
       {
        "type": "String",
        "name": "methodName"
       },
       {
        "type": "String",
        "name": "fileName"
       },
       {
        "type": "int",
        "name": "lineNumber"
       },
       {
        "type": "String",
        "name": "moduleName"
       },
       {
        "type": "String",
        "name": "moduleVersion"
       },
       {
        "type": "String",
        "name": "classLoaderName"
       }
      ],
      "type": "StackTraceElement",
      "name": "constructValue"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "DateDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.deser.std",
  "classes": [
   {
    "name": "DateDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "String",
        "name": "clsName"
       }
      ],
      "type": "JsonDeserializer",
      "name": "find"
     }
    ],
    "fields": [
     {
      "type": "HashSet",
      "name": "_classNames"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyBasedCreator.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "PropertyBasedCreator",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ValueInstantiator",
        "name": "valueInstantiator"
       },
       {
        "type": "SettableBeanProperty",
        "name": "srcCreatorProps"
       },
       {
        "type": "BeanPropertyMap",
        "name": "allProperties"
       }
      ],
      "type": "PropertyBasedCreator",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ValueInstantiator",
        "name": "valueInstantiator"
       },
       {
        "type": "SettableBeanProperty",
        "name": "srcCreatorProps"
       },
       {
        "type": "boolean",
        "name": "caseInsensitive"
       }
      ],
      "type": "PropertyBasedCreator",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ValueInstantiator",
        "name": "valueInstantiator"
       },
       {
        "type": "SettableBeanProperty",
        "name": "srcCreatorProps"
       }
      ],
      "type": "PropertyBasedCreator",
      "name": "construct"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "properties"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findCreatorProperty"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "propertyIndex"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "findCreatorProperty"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "ObjectIdReader",
        "name": "oir"
       }
      ],
      "type": "PropertyValueBuffer",
      "name": "startBuilding"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "PropertyValueBuffer",
        "name": "buffer"
       }
      ],
      "type": "Object",
      "name": "build"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "_propertyCount"
     },
     {
      "type": "ValueInstantiator",
      "name": "_valueInstantiator"
     },
     {
      "type": "HashMap",
      "name": "_propertyLookup"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_allProperties"
     }
    ]
   }
  ]
 },
 {
  "filename": "InnerClassProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "InnerClassProperty",
    "methods": [
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "d"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withDelegate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     },
     {
      "params": [],
      "type": "Object",
      "name": "writeReplace"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Constructor",
      "name": "_creator"
     },
     {
      "type": "AnnotatedConstructor",
      "name": "_annotated"
     }
    ]
   }
  ]
 },
 {
  "filename": "ExternalTypeHandler.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "ExternalTypeHandler",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "beanType"
       }
      ],
      "type": "Builder",
      "name": "builder"
     },
     {
      "params": [],
      "type": "ExternalTypeHandler",
      "name": "start"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "propName"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "boolean",
      "name": "handleTypePropertyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "propName"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "typeId"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "boolean",
      "name": "_handleTypePropertyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "propName"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "boolean",
      "name": "handlePropertyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "Object",
      "name": "complete"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "PropertyValueBuffer",
        "name": "buffer"
       },
       {
        "type": "PropertyBasedCreator",
        "name": "creator"
       }
      ],
      "type": "Object",
      "name": "complete"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": "Object",
      "name": "_deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "_deserializeAndSet"
     }
    ],
    "fields": [
     {
      "type": "JavaType",
      "name": "_beanType"
     },
     {
      "type": "ExtTypedProperty",
      "name": "_properties"
     },
     {
      "type": "Map",
      "name": "_nameToPropertyIndex"
     },
     {
      "type": "String",
      "name": "_typeIds"
     },
     {
      "type": "TokenBuffer",
      "name": "_tokens"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanAsArrayDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "BeanAsArrayDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "JsonDeserializer",
      "name": "unwrappingDeserializer"
     },
     {
      "params": [
       {
        "type": "ObjectIdReader",
        "name": "oir"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withObjectIdReader"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "ignorableProps"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withIgnorableProperties"
     },
     {
      "params": [
       {
        "type": "BeanPropertyMap",
        "name": "props"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withBeanProperties"
     },
     {
      "params": [],
      "type": "BeanDeserializerBase",
      "name": "asArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeNonVanilla"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeUsingPropertyBased"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeFromNonArray"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BeanDeserializerBase",
      "name": "_delegate"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_orderedProperties"
     }
    ]
   }
  ]
 },
 {
  "filename": "ErrorThrowingDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "ErrorThrowingDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     }
    ],
    "fields": [
     {
      "type": "Error",
      "name": "_cause"
     }
    ]
   }
  ]
 },
 {
  "filename": "FailingDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "FailingDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "_message"
     }
    ]
   }
  ]
 },
 {
  "filename": "NullsAsEmptyProvider.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "NullsAsEmptyProvider",
    "methods": [
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getNullAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getNullValue"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JsonDeserializer",
      "name": "_deserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "NullsConstantProvider.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "NullsConstantProvider",
    "methods": [
     {
      "params": [],
      "type": "NullsConstantProvider",
      "name": "skipper"
     },
     {
      "params": [],
      "type": "NullsConstantProvider",
      "name": "nuller"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "nvl"
       }
      ],
      "type": "NullsConstantProvider",
      "name": "forValue"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "p"
       }
      ],
      "type": "boolean",
      "name": "isSkipper"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "p"
       }
      ],
      "type": "boolean",
      "name": "isNuller"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getNullAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getNullValue"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NullsConstantProvider",
      "name": "SKIPPER"
     },
     {
      "type": "NullsConstantProvider",
      "name": "NULLER"
     },
     {
      "type": "Object",
      "name": "_nullValue"
     },
     {
      "type": "AccessPattern",
      "name": "_access"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanAsArrayBuilderDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "BeanAsArrayBuilderDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "JsonDeserializer",
      "name": "unwrappingDeserializer"
     },
     {
      "params": [
       {
        "type": "ObjectIdReader",
        "name": "oir"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withObjectIdReader"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "ignorableProps"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withIgnorableProperties"
     },
     {
      "params": [
       {
        "type": "BeanPropertyMap",
        "name": "props"
       }
      ],
      "type": "BeanDeserializerBase",
      "name": "withBeanProperties"
     },
     {
      "params": [],
      "type": "BeanDeserializerBase",
      "name": "asArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "builder"
       }
      ],
      "type": "Object",
      "name": "finishBuild"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeFromObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeNonVanilla"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeUsingPropertyBased"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeFromNonArray"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BeanDeserializerBase",
      "name": "_delegate"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_orderedProperties"
     },
     {
      "type": "AnnotatedMethod",
      "name": "_buildMethod"
     },
     {
      "type": "JavaType",
      "name": "_targetType"
     }
    ]
   }
  ]
 },
 {
  "filename": "CreatorCollector.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "CreatorCollector",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "ValueInstantiator",
      "name": "constructValueInstantiator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       }
      ],
      "type": null,
      "name": "setDefaultCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "boolean",
        "name": "explicit"
       }
      ],
      "type": null,
      "name": "addStringCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "boolean",
        "name": "explicit"
       }
      ],
      "type": null,
      "name": "addIntCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "boolean",
        "name": "explicit"
       }
      ],
      "type": null,
      "name": "addLongCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "boolean",
        "name": "explicit"
       }
      ],
      "type": null,
      "name": "addDoubleCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "boolean",
        "name": "explicit"
       }
      ],
      "type": null,
      "name": "addBooleanCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "boolean",
        "name": "explicit"
       },
       {
        "type": "SettableBeanProperty",
        "name": "injectables"
       },
       {
        "type": "int",
        "name": "delegateeIndex"
       }
      ],
      "type": null,
      "name": "addDelegatingCreator"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "boolean",
        "name": "explicit"
       },
       {
        "type": "SettableBeanProperty",
        "name": "properties"
       }
      ],
      "type": null,
      "name": "addPropertyCreator"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasDefaultCreator"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasDelegatingCreator"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasPropertyBasedCreator"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "SettableBeanProperty",
        "name": "delegateArgs"
       }
      ],
      "type": "JavaType",
      "name": "_computeDelegateType"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "member"
       }
      ],
      "type": "T",
      "name": "_fixAccess"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "newOne"
       },
       {
        "type": "int",
        "name": "typeIndex"
       },
       {
        "type": "boolean",
        "name": "explicit"
       }
      ],
      "type": "boolean",
      "name": "verifyNonDup"
     },
     {
      "params": [
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       }
      ],
      "type": "boolean",
      "name": "_isEnumValueOf"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "C_DEFAULT"
     },
     {
      "type": "int",
      "name": "C_STRING"
     },
     {
      "type": "int",
      "name": "C_INT"
     },
     {
      "type": "int",
      "name": "C_LONG"
     },
     {
      "type": "int",
      "name": "C_DOUBLE"
     },
     {
      "type": "int",
      "name": "C_BOOLEAN"
     },
     {
      "type": "int",
      "name": "C_DELEGATE"
     },
     {
      "type": "int",
      "name": "C_PROPS"
     },
     {
      "type": "int",
      "name": "C_ARRAY_DELEGATE"
     },
     {
      "type": "String",
      "name": "TYPE_DESCS"
     },
     {
      "type": "BeanDescription",
      "name": "_beanDesc"
     },
     {
      "type": "boolean",
      "name": "_canFixAccess"
     },
     {
      "type": "boolean",
      "name": "_forceAccess"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_creators"
     },
     {
      "type": "int",
      "name": "_explicitCreators"
     },
     {
      "type": "boolean",
      "name": "_hasNonDefaultCreator"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_delegateArgs"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_arrayDelegateArgs"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_propertyBasedArgs"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectIdReferenceProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "ObjectIdReferenceProperty",
    "methods": [
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withValueDeserializer"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "nva"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withNullProvider"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     },
     {
      "params": [],
      "type": "int",
      "name": "getCreatorIndex"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setAndReturn"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_forward"
     }
    ]
   }
  ]
 },
 {
  "filename": "CreatorCandidate.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "CreatorCandidate",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       },
       {
        "type": "AnnotatedWithParams",
        "name": "creator"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDefs"
       }
      ],
      "type": "CreatorCandidate",
      "name": "construct"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "creator"
     },
     {
      "params": [],
      "type": "int",
      "name": "paramCount"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "i"
       }
      ],
      "type": "JacksonInject",
      "name": "injection"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "i"
       }
      ],
      "type": "AnnotatedParameter",
      "name": "parameter"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "i"
       }
      ],
      "type": "BeanPropertyDefinition",
      "name": "propertyDef"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "i"
       }
      ],
      "type": "PropertyName",
      "name": "paramName"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "i"
       }
      ],
      "type": "PropertyName",
      "name": "explicitParamName"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "i"
       }
      ],
      "type": "PropertyName",
      "name": "findImplicitParamName"
     },
     {
      "params": [],
      "type": "int",
      "name": "findOnlyParamWithoutInjection"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "AnnotationIntrospector",
      "name": "_intr"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_creator"
     },
     {
      "type": "int",
      "name": "_paramCount"
     },
     {
      "type": "Param",
      "name": "_params"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyValueBuffer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "PropertyValueBuffer",
    "methods": [
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "boolean",
      "name": "hasParameter"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "Object",
      "name": "getParameter"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "props"
       }
      ],
      "type": "Object",
      "name": "getParameters"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "Object",
      "name": "_findMissing"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": "boolean",
      "name": "readIdProperty"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "Object",
      "name": "handleIdValue"
     },
     {
      "params": [],
      "type": "PropertyValue",
      "name": "buffered"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isComplete"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "assignParameter"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "bufferProperty"
     },
     {
      "params": [
       {
        "type": "SettableAnyProperty",
        "name": "prop"
       },
       {
        "type": "String",
        "name": "propName"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "bufferAnyProperty"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "bufferMapProperty"
     }
    ],
    "fields": [
     {
      "type": "JsonParser",
      "name": "_parser"
     },
     {
      "type": "DeserializationContext",
      "name": "_context"
     },
     {
      "type": "ObjectIdReader",
      "name": "_objectIdReader"
     },
     {
      "type": "Object",
      "name": "_creatorParameters"
     },
     {
      "type": "int",
      "name": "_paramsNeeded"
     },
     {
      "type": "int",
      "name": "_paramsSeen"
     },
     {
      "type": "BitSet",
      "name": "_paramsSeenBig"
     },
     {
      "type": "PropertyValue",
      "name": "_buffered"
     },
     {
      "type": "Object",
      "name": "_idValue"
     }
    ]
   }
  ]
 },
 {
  "filename": "ReadableObjectId.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "ReadableObjectId",
    "methods": [
     {
      "params": [
       {
        "type": "ObjectIdResolver",
        "name": "resolver"
       }
      ],
      "type": null,
      "name": "setResolver"
     },
     {
      "params": [],
      "type": "ObjectIdGenerator",
      "name": "getKey"
     },
     {
      "params": [
       {
        "type": "Referring",
        "name": "currentReferring"
       }
      ],
      "type": null,
      "name": "appendReferring"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "ob"
       }
      ],
      "type": null,
      "name": "bindItem"
     },
     {
      "params": [],
      "type": "Object",
      "name": "resolve"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasReferringProperties"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "referringProperties"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "boolean",
      "name": "tryToResolveUnresolved"
     },
     {
      "params": [],
      "type": "ObjectIdResolver",
      "name": "getResolver"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "Object",
      "name": "_item"
     },
     {
      "type": "ObjectIdGenerator",
      "name": "_key"
     },
     {
      "type": "LinkedList",
      "name": "_referringProperties"
     },
     {
      "type": "ObjectIdResolver",
      "name": "_resolver"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyBasedObjectIdGenerator.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "PropertyBasedObjectIdGenerator",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "forPojo"
       }
      ],
      "type": "Object",
      "name": "generateId"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "scope"
       }
      ],
      "type": "ObjectIdGenerator",
      "name": "forScope"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "context"
       }
      ],
      "type": "ObjectIdGenerator",
      "name": "newForSerialization"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "com",
      "name": "key"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "SetterlessProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "SetterlessProperty",
    "methods": [
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withValueDeserializer"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "nva"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withNullProvider"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setAndReturn"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "AnnotatedMethod",
      "name": "_annotated"
     },
     {
      "type": "Method",
      "name": "_getter"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": []
 },
 {
  "filename": "ObjectIdReader.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "ObjectIdReader",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "idType"
       },
       {
        "type": "PropertyName",
        "name": "propName"
       },
       {
        "type": "ObjectIdGenerator",
        "name": "generator"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       },
       {
        "type": "SettableBeanProperty",
        "name": "idProp"
       },
       {
        "type": "ObjectIdResolver",
        "name": "resolver"
       }
      ],
      "type": "ObjectIdReader",
      "name": "construct"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getDeserializer"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getIdType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "maySerializeAsObject"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "JsonParser",
        "name": "parser"
       }
      ],
      "type": "boolean",
      "name": "isValidReferencePropertyName"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "readObjectReference"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_idType"
     },
     {
      "type": "PropertyName",
      "name": "propertyName"
     },
     {
      "type": "ObjectIdGenerator",
      "name": "generator"
     },
     {
      "type": "ObjectIdResolver",
      "name": "resolver"
     },
     {
      "type": "JsonDeserializer",
      "name": "_deserializer"
     },
     {
      "type": "SettableBeanProperty",
      "name": "idProperty"
     }
    ]
   }
  ]
 },
 {
  "filename": "UnwrappedPropertyHandler.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "UnwrappedPropertyHandler",
    "methods": [
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "property"
       }
      ],
      "type": null,
      "name": "addProperty"
     },
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "transformer"
       }
      ],
      "type": "UnwrappedPropertyHandler",
      "name": "renameAll"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "originalParser"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "TokenBuffer",
        "name": "buffered"
       }
      ],
      "type": "Object",
      "name": "processUnwrapped"
     }
    ],
    "fields": [
     {
      "type": "List",
      "name": "_properties"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyValue.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "PropertyValue",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": null,
      "name": "assign"
     }
    ],
    "fields": [
     {
      "type": "PropertyValue",
      "name": "next"
     },
     {
      "type": "Object",
      "name": "value"
     }
    ]
   }
  ]
 },
 {
  "filename": "MergingSettableBeanProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "MergingSettableBeanProperty",
    "methods": [
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "delegate"
       },
       {
        "type": "AnnotatedMember",
        "name": "accessor"
       }
      ],
      "type": "MergingSettableBeanProperty",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "d"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withDelegate"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setAndReturn"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "AnnotatedMember",
      "name": "_accessor"
     }
    ]
   }
  ]
 },
 {
  "filename": "NullsFailProvider.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "NullsFailProvider",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "NullsFailProvider",
      "name": "constructForProperty"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "t"
       }
      ],
      "type": "NullsFailProvider",
      "name": "constructForRootValue"
     },
     {
      "params": [],
      "type": "AccessPattern",
      "name": "getNullAccessPattern"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getNullValue"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "PropertyName",
      "name": "_name"
     },
     {
      "type": "JavaType",
      "name": "_type"
     }
    ]
   }
  ]
 },
 {
  "filename": "JavaUtilCollectionsDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "JavaUtilCollectionsDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findForCollection"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findForMap"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "kind"
       },
       {
        "type": "JavaType",
        "name": "concreteType"
       },
       {
        "type": "Class",
        "name": "rawSuper"
       }
      ],
      "type": "JavaUtilCollectionsConverter",
      "name": "converter"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "TYPE_SINGLETON_SET"
     },
     {
      "type": "int",
      "name": "TYPE_SINGLETON_LIST"
     },
     {
      "type": "int",
      "name": "TYPE_SINGLETON_MAP"
     },
     {
      "type": "int",
      "name": "TYPE_UNMODIFIABLE_SET"
     },
     {
      "type": "int",
      "name": "TYPE_UNMODIFIABLE_LIST"
     },
     {
      "type": "int",
      "name": "TYPE_UNMODIFIABLE_MAP"
     },
     {
      "type": "int",
      "name": "TYPE_AS_LIST"
     },
     {
      "type": "Class",
      "name": "CLASS_AS_ARRAYS_LIST"
     },
     {
      "type": "Class",
      "name": "CLASS_SINGLETON_SET"
     },
     {
      "type": "Class",
      "name": "CLASS_SINGLETON_LIST"
     },
     {
      "type": "Class",
      "name": "CLASS_SINGLETON_MAP"
     },
     {
      "type": "Class",
      "name": "CLASS_UNMODIFIABLE_SET"
     },
     {
      "type": "Class",
      "name": "CLASS_UNMODIFIABLE_LIST"
     },
     {
      "type": "Class",
      "name": "CLASS_UNMODIFIABLE_MAP"
     }
    ]
   }
  ]
 },
 {
  "filename": "FieldProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "FieldProperty",
    "methods": [
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withValueDeserializer"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "nva"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withNullProvider"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setAndReturn"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "AnnotatedField",
      "name": "_annotated"
     },
     {
      "type": "Field",
      "name": "_field"
     },
     {
      "type": "boolean",
      "name": "_skipNulls"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeWrappedDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "TypeWrappedDeserializer",
    "methods": [
     {
      "params": [],
      "type": "Class",
      "name": "handledType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": "Boolean",
      "name": "supportsUpdate"
     },
     {
      "params": [],
      "type": "JsonDeserializer",
      "name": "getDelegatee"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "getKnownPropertyNames"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getNullValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "getEmptyValue"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TypeDeserializer",
        "name": "typeDeserializer"
       }
      ],
      "type": "Object",
      "name": "deserializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "intoValue"
       }
      ],
      "type": "Object",
      "name": "deserialize"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "TypeDeserializer",
      "name": "_typeDeserializer"
     },
     {
      "type": "JsonDeserializer",
      "name": "_deserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanPropertyMap.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "BeanPropertyMap",
    "methods": [
     {
      "params": [
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "BeanPropertyMap",
      "name": "withCaseInsensitivity"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "props"
       }
      ],
      "type": null,
      "name": "init"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "size"
       }
      ],
      "type": "int",
      "name": "findSize"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "props"
       },
       {
        "type": "boolean",
        "name": "caseInsensitive"
       },
       {
        "type": "Map",
        "name": "aliasMapping"
       }
      ],
      "type": "BeanPropertyMap",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "props"
       },
       {
        "type": "boolean",
        "name": "caseInsensitive"
       }
      ],
      "type": "BeanPropertyMap",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "newProp"
       }
      ],
      "type": "BeanPropertyMap",
      "name": "withProperty"
     },
     {
      "params": [],
      "type": "BeanPropertyMap",
      "name": "assignIndexes"
     },
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "transformer"
       }
      ],
      "type": "BeanPropertyMap",
      "name": "renameAll"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "toExclude"
       }
      ],
      "type": "BeanPropertyMap",
      "name": "withoutProperties"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "newProp"
       }
      ],
      "type": null,
      "name": "replace"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "origProp"
       },
       {
        "type": "SettableBeanProperty",
        "name": "newProp"
       }
      ],
      "type": null,
      "name": "replace"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "propToRm"
       }
      ],
      "type": null,
      "name": "remove"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCaseInsensitive"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasAliases"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "iterator"
     },
     {
      "params": [],
      "type": "List",
      "name": "_properties"
     },
     {
      "params": [],
      "type": "SettableBeanProperty",
      "name": "getPropertiesInInsertionOrder"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "String",
      "name": "getPropertyName"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "find"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "find"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "int",
        "name": "slot"
       },
       {
        "type": "Object",
        "name": "match"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "_find2"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "keyFromAlias"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "_findWithAlias"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "int",
        "name": "slot"
       },
       {
        "type": "Object",
        "name": "match"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "_find2ViaAlias"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "boolean",
      "name": "findDeserializeAndSet"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       },
       {
        "type": "NameTransformer",
        "name": "xf"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "_rename"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": null,
      "name": "wrapAndThrow"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "int",
      "name": "_findIndexInHash"
     },
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "prop"
       }
      ],
      "type": "int",
      "name": "_findFromOrdered"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "int",
      "name": "_hashCode"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "defs"
       }
      ],
      "type": "Map",
      "name": "_buildAliasMapping"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "boolean",
      "name": "_caseInsensitive"
     },
     {
      "type": "int",
      "name": "_hashMask"
     },
     {
      "type": "int",
      "name": "_size"
     },
     {
      "type": "int",
      "name": "_spillCount"
     },
     {
      "type": "Object",
      "name": "_hashArea"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_propsInOrder"
     },
     {
      "type": "Map",
      "name": "_aliasDefs"
     },
     {
      "type": "Map",
      "name": "_aliasMapping"
     }
    ]
   }
  ]
 },
 {
  "filename": "MethodProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "MethodProperty",
    "methods": [
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withValueDeserializer"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "nva"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withNullProvider"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setAndReturn"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "AnnotatedMethod",
      "name": "_annotated"
     },
     {
      "type": "Method",
      "name": "_setter"
     },
     {
      "type": "boolean",
      "name": "_skipNulls"
     }
    ]
   }
  ]
 },
 {
  "filename": "ManagedReferenceProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "ManagedReferenceProperty",
    "methods": [
     {
      "params": [
       {
        "type": "SettableBeanProperty",
        "name": "d"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withDelegate"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setAndReturn"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "_referenceName"
     },
     {
      "type": "boolean",
      "name": "_isContainer"
     },
     {
      "type": "SettableBeanProperty",
      "name": "_backProperty"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectIdValueProperty.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "ObjectIdValueProperty",
    "methods": [
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withValueDeserializer"
     },
     {
      "params": [
       {
        "type": "NullValueProvider",
        "name": "nva"
       }
      ],
      "type": "SettableBeanProperty",
      "name": "withNullProvider"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": null,
      "name": "deserializeAndSet"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "instance"
       }
      ],
      "type": "Object",
      "name": "deserializeSetAndReturn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setAndReturn"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ObjectIdReader",
      "name": "_objectIdReader"
     }
    ]
   }
  ]
 },
 {
  "filename": "ValueInjector.java",
  "package_name": "com.fasterxml.jackson.databind.deser.impl",
  "classes": [
   {
    "name": "ValueInjector",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "beanInstance"
       }
      ],
      "type": "Object",
      "name": "findValue"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "beanInstance"
       }
      ],
      "type": null,
      "name": "inject"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "_valueId"
     }
    ]
   }
  ]
 },
 {
  "filename": "NamedType.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype",
  "classes": [
   {
    "name": "NamedType",
    "methods": [
     {
      "params": [],
      "type": "Class",
      "name": "getType"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": null,
      "name": "setName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasName"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "_class"
     },
     {
      "type": "int",
      "name": "_hashCode"
     },
     {
      "type": "String",
      "name": "_name"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeResolverBuilder.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype",
  "classes": [
   {
    "name": "TypeResolverBuilder",
    "methods": [
     {
      "params": [],
      "type": "Class",
      "name": "getDefaultImpl"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Collection",
        "name": "subtypes"
       }
      ],
      "type": "TypeSerializer",
      "name": "buildTypeSerializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Collection",
        "name": "subtypes"
       }
      ],
      "type": "TypeDeserializer",
      "name": "buildTypeDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonTypeInfo",
        "name": "idType"
       },
       {
        "type": "TypeIdResolver",
        "name": "res"
       }
      ],
      "type": "T",
      "name": "init"
     },
     {
      "params": [
       {
        "type": "As",
        "name": "includeAs"
       }
      ],
      "type": "T",
      "name": "inclusion"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": "T",
      "name": "typeProperty"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "defaultImpl"
       }
      ],
      "type": "T",
      "name": "defaultImpl"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "isVisible"
       }
      ],
      "type": "T",
      "name": "typeIdVisibility"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "TypeSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype",
  "classes": [
   {
    "name": "TypeSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "TypeSerializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "JsonTypeInfo",
      "name": "getTypeInclusion"
     },
     {
      "params": [],
      "type": "String",
      "name": "getPropertyName"
     },
     {
      "params": [],
      "type": "TypeIdResolver",
      "name": "getTypeIdResolver"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonToken",
        "name": "valueShape"
       }
      ],
      "type": "WritableTypeId",
      "name": "typeId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonToken",
        "name": "valueShape"
       },
       {
        "type": "Object",
        "name": "id"
       }
      ],
      "type": "WritableTypeId",
      "name": "typeId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "typeForId"
       },
       {
        "type": "JsonToken",
        "name": "valueShape"
       }
      ],
      "type": "WritableTypeId",
      "name": "typeId"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "WritableTypeId",
        "name": "typeId"
       }
      ],
      "type": "WritableTypeId",
      "name": "writeTypePrefix"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "WritableTypeId",
        "name": "typeId"
       }
      ],
      "type": "WritableTypeId",
      "name": "writeTypeSuffix"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "writeTypePrefixForScalar"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "writeTypePrefixForObject"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "writeTypePrefixForArray"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "writeTypeSuffixForScalar"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "writeTypeSuffixForObject"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "writeTypeSuffixForArray"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": null,
      "name": "writeTypePrefixForScalar"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": null,
      "name": "writeTypePrefixForObject"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": null,
      "name": "writeTypePrefixForArray"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "writeCustomTypePrefixForScalar"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "writeCustomTypePrefixForObject"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "writeCustomTypePrefixForArray"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "writeCustomTypeSuffixForScalar"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "writeCustomTypeSuffixForObject"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "writeCustomTypeSuffixForArray"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "WritableTypeId",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "_writeLegacySuffix"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype",
  "classes": []
 },
 {
  "filename": "TypeDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype",
  "classes": [
   {
    "name": "TypeDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "TypeDeserializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     },
     {
      "params": [],
      "type": "String",
      "name": "getPropertyName"
     },
     {
      "params": [],
      "type": "TypeIdResolver",
      "name": "getTypeIdResolver"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDefaultImpl"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromScalar"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromAny"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Object",
      "name": "deserializeIfNatural"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Class",
        "name": "base"
       }
      ],
      "type": "Object",
      "name": "deserializeIfNatural"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "SubtypeResolver.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype",
  "classes": [
   {
    "name": "SubtypeResolver",
    "methods": [
     {
      "params": [
       {
        "type": "NamedType",
        "name": "types"
       }
      ],
      "type": null,
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "classes"
       }
      ],
      "type": null,
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "subtypes"
       }
      ],
      "type": null,
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "property"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypesByClass"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "baseType"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypesByClass"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "property"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypesByTypeId"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "baseType"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypesByTypeId"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "property"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypes"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "baseType"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypes"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "TypeIdResolver.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype",
  "classes": [
   {
    "name": "TypeIdResolver",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": null,
      "name": "init"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "idFromValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "suggestedType"
       }
      ],
      "type": "String",
      "name": "idFromValueAndType"
     },
     {
      "params": [],
      "type": "String",
      "name": "idFromBaseType"
     },
     {
      "params": [
       {
        "type": "DatabindContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "id"
       }
      ],
      "type": "JavaType",
      "name": "typeFromId"
     },
     {
      "params": [],
      "type": "String",
      "name": "getDescForKnownTypeIds"
     },
     {
      "params": [],
      "type": "JsonTypeInfo",
      "name": "getMechanism"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "AsExternalTypeDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "AsExternalTypeDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "TypeDeserializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "_usesExternalId"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "MinimalClassNameIdResolver.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "MinimalClassNameIdResolver",
    "methods": [
     {
      "params": [],
      "type": "JsonTypeInfo",
      "name": "getMechanism"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "idFromValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "DatabindContext",
        "name": "ctxt"
       }
      ],
      "type": "JavaType",
      "name": "_typeFromId"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "_basePackageName"
     },
     {
      "type": "String",
      "name": "_basePackagePrefix"
     }
    ]
   }
  ]
 },
 {
  "filename": "AsWrapperTypeSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "AsWrapperTypeSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "AsWrapperTypeSerializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": "String",
      "name": "_validTypeId"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "_writeTypeId"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "StdTypeResolverBuilder.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "StdTypeResolverBuilder",
    "methods": [
     {
      "params": [],
      "type": "StdTypeResolverBuilder",
      "name": "noTypeInfoBuilder"
     },
     {
      "params": [
       {
        "type": "JsonTypeInfo",
        "name": "idType"
       },
       {
        "type": "TypeIdResolver",
        "name": "idRes"
       }
      ],
      "type": "StdTypeResolverBuilder",
      "name": "init"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Collection",
        "name": "subtypes"
       }
      ],
      "type": "TypeSerializer",
      "name": "buildTypeSerializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Collection",
        "name": "subtypes"
       }
      ],
      "type": "TypeDeserializer",
      "name": "buildTypeDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "JavaType",
      "name": "defineDefaultImpl"
     },
     {
      "params": [
       {
        "type": "JsonTypeInfo",
        "name": "includeAs"
       }
      ],
      "type": "StdTypeResolverBuilder",
      "name": "inclusion"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "typeIdPropName"
       }
      ],
      "type": "StdTypeResolverBuilder",
      "name": "typeProperty"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "defaultImpl"
       }
      ],
      "type": "StdTypeResolverBuilder",
      "name": "defaultImpl"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "isVisible"
       }
      ],
      "type": "StdTypeResolverBuilder",
      "name": "typeIdVisibility"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDefaultImpl"
     },
     {
      "params": [],
      "type": "String",
      "name": "getTypeProperty"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isTypeIdVisible"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Collection",
        "name": "subtypes"
       },
       {
        "type": "boolean",
        "name": "forSer"
       },
       {
        "type": "boolean",
        "name": "forDeser"
       }
      ],
      "type": "TypeIdResolver",
      "name": "idResolver"
     }
    ],
    "fields": [
     {
      "type": "JsonTypeInfo",
      "name": "_idType"
     },
     {
      "type": "JsonTypeInfo",
      "name": "_includeAs"
     },
     {
      "type": "String",
      "name": "_typeProperty"
     },
     {
      "type": "boolean",
      "name": "_typeIdVisible"
     },
     {
      "type": "Class",
      "name": "_defaultImpl"
     },
     {
      "type": "TypeIdResolver",
      "name": "_customIdResolver"
     }
    ]
   }
  ]
 },
 {
  "filename": "AsExternalTypeSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "AsExternalTypeSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "AsExternalTypeSerializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "String",
      "name": "getPropertyName"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "_writeScalarPrefix"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "_writeObjectPrefix"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       }
      ],
      "type": null,
      "name": "_writeArrayPrefix"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "_writeScalarSuffix"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "_writeObjectSuffix"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": null,
      "name": "_writeArraySuffix"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "_typePropertyName"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeIdResolverBase.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "TypeIdResolverBase",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "bt"
       }
      ],
      "type": null,
      "name": "init"
     },
     {
      "params": [],
      "type": "String",
      "name": "idFromBaseType"
     },
     {
      "params": [
       {
        "type": "DatabindContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "id"
       }
      ],
      "type": "JavaType",
      "name": "typeFromId"
     },
     {
      "params": [],
      "type": "String",
      "name": "getDescForKnownTypeIds"
     }
    ],
    "fields": [
     {
      "type": "TypeFactory",
      "name": "_typeFactory"
     },
     {
      "type": "JavaType",
      "name": "_baseType"
     }
    ]
   }
  ]
 },
 {
  "filename": "AsExistingPropertyTypeSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "AsExistingPropertyTypeSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "AsExistingPropertyTypeSerializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "SubTypeValidator.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "SubTypeValidator",
    "methods": [
     {
      "params": [],
      "type": "SubTypeValidator",
      "name": "instance"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": null,
      "name": "validateSubType"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "PREFIX_SPRING"
     },
     {
      "type": "String",
      "name": "PREFIX_C3P0"
     },
     {
      "type": "Set",
      "name": "DEFAULT_NO_DESER_CLASS_NAMES"
     },
     {
      "type": "Set",
      "name": "_cfgIllegalClassNames"
     },
     {
      "type": "SubTypeValidator",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "AsPropertyTypeDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "AsPropertyTypeDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "TypeDeserializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TokenBuffer",
        "name": "tb"
       }
      ],
      "type": "Object",
      "name": "_deserializeTypedForId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "TokenBuffer",
        "name": "tb"
       }
      ],
      "type": "Object",
      "name": "_deserializeTypedUsingDefaultImpl"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromAny"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "As",
      "name": "_inclusion"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": []
 },
 {
  "filename": "TypeDeserializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "TypeDeserializerBase",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "TypeDeserializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "JsonTypeInfo",
      "name": "getTypeInclusion"
     },
     {
      "params": [],
      "type": "String",
      "name": "baseTypeName"
     },
     {
      "params": [],
      "type": "String",
      "name": "getPropertyName"
     },
     {
      "params": [],
      "type": "TypeIdResolver",
      "name": "getTypeIdResolver"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDefaultImpl"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "baseType"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findDeserializer"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_findDefaultImplDeserializer"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserializeWithNativeTypeId"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "Object",
        "name": "typeId"
       }
      ],
      "type": "Object",
      "name": "_deserializeWithNativeTypeId"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": "JavaType",
      "name": "_handleUnknownTypeId"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "String",
        "name": "extraDesc"
       }
      ],
      "type": "JavaType",
      "name": "_handleMissingTypeId"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "TypeIdResolver",
      "name": "_idResolver"
     },
     {
      "type": "JavaType",
      "name": "_baseType"
     },
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "JavaType",
      "name": "_defaultImpl"
     },
     {
      "type": "String",
      "name": "_typePropertyName"
     },
     {
      "type": "boolean",
      "name": "_typeIdVisible"
     },
     {
      "type": "Map",
      "name": "_deserializers"
     },
     {
      "type": "JsonDeserializer",
      "name": "_defaultImplDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeSerializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "TypeSerializerBase",
    "methods": [
     {
      "params": [],
      "type": "JsonTypeInfo",
      "name": "getTypeInclusion"
     },
     {
      "params": [],
      "type": "String",
      "name": "getPropertyName"
     },
     {
      "params": [],
      "type": "TypeIdResolver",
      "name": "getTypeIdResolver"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "WritableTypeId",
        "name": "idMetadata"
       }
      ],
      "type": "WritableTypeId",
      "name": "writeTypePrefix"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "WritableTypeId",
        "name": "idMetadata"
       }
      ],
      "type": "WritableTypeId",
      "name": "writeTypeSuffix"
     },
     {
      "params": [
       {
        "type": "WritableTypeId",
        "name": "idMetadata"
       }
      ],
      "type": null,
      "name": "_generateTypeId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "idFromValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "String",
      "name": "idFromValueAndType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "handleMissingId"
     }
    ],
    "fields": [
     {
      "type": "TypeIdResolver",
      "name": "_idResolver"
     },
     {
      "type": "BeanProperty",
      "name": "_property"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeNameIdResolver.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "TypeNameIdResolver",
    "methods": [
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Collection",
        "name": "subtypes"
       },
       {
        "type": "boolean",
        "name": "forSer"
       },
       {
        "type": "boolean",
        "name": "forDeser"
       }
      ],
      "type": "TypeNameIdResolver",
      "name": "construct"
     },
     {
      "params": [],
      "type": "JsonTypeInfo",
      "name": "getMechanism"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "idFromValue"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ],
      "type": "String",
      "name": "idFromClass"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "String",
      "name": "idFromValueAndType"
     },
     {
      "params": [
       {
        "type": "DatabindContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "id"
       }
      ],
      "type": "JavaType",
      "name": "typeFromId"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "id"
       }
      ],
      "type": "JavaType",
      "name": "_typeFromId"
     },
     {
      "params": [],
      "type": "String",
      "name": "getDescForKnownTypeIds"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "String",
      "name": "_defaultTypeId"
     }
    ],
    "fields": [
     {
      "type": "MapperConfig",
      "name": "_config"
     },
     {
      "type": "Map",
      "name": "_typeToId"
     },
     {
      "type": "Map",
      "name": "_idToType"
     }
    ]
   }
  ]
 },
 {
  "filename": "AsPropertyTypeSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "AsPropertyTypeSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "AsPropertyTypeSerializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "String",
      "name": "getPropertyName"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "_typePropertyName"
     }
    ]
   }
  ]
 },
 {
  "filename": "ClassNameIdResolver.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "ClassNameIdResolver",
    "methods": [
     {
      "params": [],
      "type": "JsonTypeInfo",
      "name": "getMechanism"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": null,
      "name": "registerSubtype"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "idFromValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "String",
      "name": "idFromValueAndType"
     },
     {
      "params": [
       {
        "type": "DatabindContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "id"
       }
      ],
      "type": "JavaType",
      "name": "typeFromId"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "DatabindContext",
        "name": "ctxt"
       }
      ],
      "type": "JavaType",
      "name": "_typeFromId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "TypeFactory",
        "name": "typeFactory"
       }
      ],
      "type": "String",
      "name": "_idFrom"
     },
     {
      "params": [],
      "type": "String",
      "name": "getDescForKnownTypeIds"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "JAVA_UTIL_PKG"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdSubtypeResolver.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "StdSubtypeResolver",
    "methods": [
     {
      "params": [
       {
        "type": "NamedType",
        "name": "types"
       }
      ],
      "type": null,
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "classes"
       }
      ],
      "type": null,
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "subtypes"
       }
      ],
      "type": null,
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "property"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypesByClass"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "type"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypesByClass"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "property"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypesByTypeId"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "baseType"
       }
      ],
      "type": "Collection",
      "name": "collectAndResolveSubtypesByTypeId"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "annotatedType"
       },
       {
        "type": "NamedType",
        "name": "namedType"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       },
       {
        "type": "HashMap",
        "name": "collectedSubtypes"
       }
      ],
      "type": null,
      "name": "_collectAndResolve"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "annotatedType"
       },
       {
        "type": "NamedType",
        "name": "namedType"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Set",
        "name": "typesHandled"
       },
       {
        "type": "Map",
        "name": "byName"
       }
      ],
      "type": null,
      "name": "_collectAndResolveByTypeId"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawBase"
       },
       {
        "type": "Set",
        "name": "typesHandled"
       },
       {
        "type": "Map",
        "name": "byName"
       }
      ],
      "type": "Collection",
      "name": "_combineNamedAndUnnamed"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "LinkedHashSet",
      "name": "_registeredSubtypes"
     }
    ]
   }
  ]
 },
 {
  "filename": "AsWrapperTypeDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "AsWrapperTypeDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "TypeDeserializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromScalar"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromAny"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserialize"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "AsArrayTypeSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "AsArrayTypeSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "AsArrayTypeSerializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "AsArrayTypeDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.jsontype.impl",
  "classes": [
   {
    "name": "AsArrayTypeDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "TypeDeserializer",
      "name": "forProperty"
     },
     {
      "params": [],
      "type": "As",
      "name": "getTypeInclusion"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromArray"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromScalar"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "deserializeTypedFromAny"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "_deserialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "String",
      "name": "_locateTypeId"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "_usesExternalId"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "ClassStack.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "ClassStack",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "ClassStack",
      "name": "child"
     },
     {
      "params": [
       {
        "type": "ResolvedRecursiveType",
        "name": "ref"
       }
      ],
      "type": null,
      "name": "addSelfReference"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "resolved"
       }
      ],
      "type": null,
      "name": "resolveSelfReferences"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "ClassStack",
      "name": "find"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "ClassStack",
      "name": "_parent"
     },
     {
      "type": "Class",
      "name": "_current"
     },
     {
      "type": "ArrayList",
      "name": "_selfRefs"
     }
    ]
   }
  ]
 },
 {
  "filename": "ArrayType.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "ArrayType",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "componentType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       }
      ],
      "type": "ArrayType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "componentType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "Object",
        "name": "valueHandler"
       },
       {
        "type": "Object",
        "name": "typeHandler"
       }
      ],
      "type": "ArrayType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "ArrayType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "ArrayType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "ArrayType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "ArrayType",
      "name": "withContentValueHandler"
     },
     {
      "params": [],
      "type": "ArrayType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "contentClass"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "_reportUnsupported"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isArrayType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isAbstract"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isConcrete"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasGenericTypes"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isContainerType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getContentValueHandler"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getContentTypeHandler"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasHandlers"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getGenericSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getErasedSignature"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_componentType"
     },
     {
      "type": "Object",
      "name": "_emptyArray"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeBase.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "TypeBase",
    "methods": [
     {
      "params": [],
      "type": "String",
      "name": "toCanonical"
     },
     {
      "params": [],
      "type": "String",
      "name": "buildCanonicalName"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getGenericSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getErasedSignature"
     },
     {
      "params": [],
      "type": "TypeBindings",
      "name": "getBindings"
     },
     {
      "params": [],
      "type": "int",
      "name": "containedTypeCount"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JavaType",
      "name": "containedType"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "String",
      "name": "containedTypeName"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getSuperClass"
     },
     {
      "params": [],
      "type": "List",
      "name": "getInterfaces"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawTarget"
       }
      ],
      "type": "JavaType",
      "name": "findSuperType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "expType"
       }
      ],
      "type": "JavaType",
      "name": "findTypeParameters"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "StringBuilder",
        "name": "sb"
       },
       {
        "type": "boolean",
        "name": "trailingSemicolon"
       }
      ],
      "type": "StringBuilder",
      "name": "_classSignature"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "JavaType",
      "name": "_bogusSuperClass"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "TypeBindings",
      "name": "NO_BINDINGS"
     },
     {
      "type": "JavaType",
      "name": "NO_TYPES"
     },
     {
      "type": "JavaType",
      "name": "_superClass"
     },
     {
      "type": "JavaType",
      "name": "_superInterfaces"
     },
     {
      "type": "TypeBindings",
      "name": "_bindings"
     },
     {
      "type": "String",
      "name": "_canonicalName"
     }
    ]
   }
  ]
 },
 {
  "filename": "MapType.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "MapType",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInts"
       },
       {
        "type": "JavaType",
        "name": "keyT"
       },
       {
        "type": "JavaType",
        "name": "valueT"
       }
      ],
      "type": "MapType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JavaType",
        "name": "keyT"
       },
       {
        "type": "JavaType",
        "name": "valueT"
       }
      ],
      "type": "MapType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapType",
      "name": "withContentValueHandler"
     },
     {
      "params": [],
      "type": "MapType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "keyType"
       }
      ],
      "type": "MapType",
      "name": "withKeyType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapType",
      "name": "withKeyTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapType",
      "name": "withKeyValueHandler"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeBindings.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "TypeBindings",
    "methods": [
     {
      "params": [],
      "type": "TypeBindings",
      "name": "emptyBindings"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "erasedType"
       },
       {
        "type": "List",
        "name": "typeList"
       }
      ],
      "type": "TypeBindings",
      "name": "create"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "erasedType"
       },
       {
        "type": "JavaType",
        "name": "types"
       }
      ],
      "type": "TypeBindings",
      "name": "create"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "erasedType"
       },
       {
        "type": "JavaType",
        "name": "typeArg1"
       }
      ],
      "type": "TypeBindings",
      "name": "create"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "erasedType"
       },
       {
        "type": "JavaType",
        "name": "typeArg1"
       },
       {
        "type": "JavaType",
        "name": "typeArg2"
       }
      ],
      "type": "TypeBindings",
      "name": "create"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "erasedType"
       },
       {
        "type": "JavaType",
        "name": "typeArg1"
       }
      ],
      "type": "TypeBindings",
      "name": "createIfNeeded"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "erasedType"
       },
       {
        "type": "JavaType",
        "name": "types"
       }
      ],
      "type": "TypeBindings",
      "name": "createIfNeeded"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": "TypeBindings",
      "name": "withUnboundVariable"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": "JavaType",
      "name": "findBoundType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "String",
      "name": "getBoundName"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JavaType",
      "name": "getBoundType"
     },
     {
      "params": [],
      "type": "List",
      "name": "getTypeParameters"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": "boolean",
      "name": "hasUnbound"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawBase"
       }
      ],
      "type": "Object",
      "name": "asKey"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "typeParameterArray"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "NO_STRINGS"
     },
     {
      "type": "JavaType",
      "name": "NO_TYPES"
     },
     {
      "type": "TypeBindings",
      "name": "EMPTY"
     },
     {
      "type": "String",
      "name": "_names"
     },
     {
      "type": "JavaType",
      "name": "_types"
     },
     {
      "type": "String",
      "name": "_unboundVariables"
     },
     {
      "type": "int",
      "name": "_hashCode"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeModifier.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "TypeModifier",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "Type",
        "name": "jdkType"
       },
       {
        "type": "TypeBindings",
        "name": "context"
       },
       {
        "type": "TypeFactory",
        "name": "typeFactory"
       }
      ],
      "type": "JavaType",
      "name": "modifyType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "MapLikeType.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "MapLikeType",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "JavaType",
        "name": "keyT"
       },
       {
        "type": "JavaType",
        "name": "valueT"
       }
      ],
      "type": "MapLikeType",
      "name": "upgradeFrom"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JavaType",
        "name": "keyT"
       },
       {
        "type": "JavaType",
        "name": "valueT"
       }
      ],
      "type": "MapLikeType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "keyType"
       }
      ],
      "type": "MapLikeType",
      "name": "withKeyType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapLikeType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapLikeType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapLikeType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapLikeType",
      "name": "withContentValueHandler"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "src"
       }
      ],
      "type": "JavaType",
      "name": "withHandlersFrom"
     },
     {
      "params": [],
      "type": "MapLikeType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [],
      "type": "String",
      "name": "buildCanonicalName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isContainerType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isMapLikeType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getKeyType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getContentValueHandler"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getContentTypeHandler"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasHandlers"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getErasedSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getGenericSignature"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapLikeType",
      "name": "withKeyTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "MapLikeType",
      "name": "withKeyValueHandler"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isTrueMapType"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_keyType"
     },
     {
      "type": "JavaType",
      "name": "_valueType"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": []
 },
 {
  "filename": "SimpleType.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "SimpleType",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "raw"
       }
      ],
      "type": "SimpleType",
      "name": "constructUnsafe"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "SimpleType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "SimpleType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "SimpleType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "SimpleType",
      "name": "withContentValueHandler"
     },
     {
      "params": [],
      "type": "SimpleType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [],
      "type": "String",
      "name": "buildCanonicalName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isContainerType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasContentType"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getErasedSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getGenericSignature"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "superClass"
       },
       {
        "type": "TypeBindings",
        "name": "b"
       }
      ],
      "type": "JavaType",
      "name": "_buildSuperClass"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "ClassKey.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "ClassKey",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "clz"
       }
      ],
      "type": null,
      "name": "reset"
     },
     {
      "params": [
       {
        "type": "ClassKey",
        "name": "other"
       }
      ],
      "type": "int",
      "name": "compareTo"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "_className"
     },
     {
      "type": "Class",
      "name": "_class"
     },
     {
      "type": "int",
      "name": "_hashCode"
     }
    ]
   }
  ]
 },
 {
  "filename": "ResolvedRecursiveType.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "ResolvedRecursiveType",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "ref"
       }
      ],
      "type": null,
      "name": "setReference"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getSuperClass"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getSelfReferencedType"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getGenericSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getErasedSignature"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withContentValueHandler"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isContainerType"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_referencedType"
     }
    ]
   }
  ]
 },
 {
  "filename": "CollectionType.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "CollectionType",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInts"
       },
       {
        "type": "JavaType",
        "name": "elemT"
       }
      ],
      "type": "CollectionType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JavaType",
        "name": "elemT"
       }
      ],
      "type": "CollectionType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "CollectionType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "CollectionType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "CollectionType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "CollectionType",
      "name": "withContentValueHandler"
     },
     {
      "params": [],
      "type": "CollectionType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "CollectionLikeType.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "CollectionLikeType",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInts"
       },
       {
        "type": "JavaType",
        "name": "elemT"
       }
      ],
      "type": "CollectionLikeType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JavaType",
        "name": "elemT"
       }
      ],
      "type": "CollectionLikeType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "JavaType",
        "name": "elementType"
       }
      ],
      "type": "CollectionLikeType",
      "name": "upgradeFrom"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "CollectionLikeType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "CollectionLikeType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "CollectionLikeType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "CollectionLikeType",
      "name": "withContentValueHandler"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "src"
       }
      ],
      "type": "JavaType",
      "name": "withHandlersFrom"
     },
     {
      "params": [],
      "type": "CollectionLikeType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isContainerType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isCollectionLikeType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getContentValueHandler"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getContentTypeHandler"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasHandlers"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getErasedSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getGenericSignature"
     },
     {
      "params": [],
      "type": "String",
      "name": "buildCanonicalName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isTrueCollectionType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_elementType"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeParser.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "TypeParser",
    "methods": [
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "f"
       }
      ],
      "type": "TypeParser",
      "name": "withFactory"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "canonical"
       }
      ],
      "type": "JavaType",
      "name": "parse"
     },
     {
      "params": [
       {
        "type": "MyTokenizer",
        "name": "tokens"
       }
      ],
      "type": "JavaType",
      "name": "parseType"
     },
     {
      "params": [
       {
        "type": "MyTokenizer",
        "name": "tokens"
       }
      ],
      "type": "List",
      "name": "parseTypes"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "className"
       },
       {
        "type": "MyTokenizer",
        "name": "tokens"
       }
      ],
      "type": "Class",
      "name": "findClass"
     },
     {
      "params": [
       {
        "type": "MyTokenizer",
        "name": "tokens"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "IllegalArgumentException",
      "name": "_problem"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "TypeFactory",
      "name": "_factory"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeFactory.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "TypeFactory",
    "methods": [
     {
      "params": [
       {
        "type": "TypeModifier",
        "name": "mod"
       }
      ],
      "type": "TypeFactory",
      "name": "withModifier"
     },
     {
      "params": [
       {
        "type": "ClassLoader",
        "name": "classLoader"
       }
      ],
      "type": "TypeFactory",
      "name": "withClassLoader"
     },
     {
      "params": [
       {
        "type": "LRUMap",
        "name": "cache"
       }
      ],
      "type": "TypeFactory",
      "name": "withCache"
     },
     {
      "params": [],
      "type": "TypeFactory",
      "name": "defaultInstance"
     },
     {
      "params": [],
      "type": null,
      "name": "clearCache"
     },
     {
      "params": [],
      "type": "ClassLoader",
      "name": "getClassLoader"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "unknownType"
     },
     {
      "params": [
       {
        "type": "Type",
        "name": "t"
       }
      ],
      "type": "Class",
      "name": "rawClass"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ],
      "type": "Class",
      "name": "findClass"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "boolean",
        "name": "initialize"
       },
       {
        "type": "ClassLoader",
        "name": "loader"
       }
      ],
      "type": "Class",
      "name": "classForName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": "Class",
      "name": "classForName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ],
      "type": "Class",
      "name": "_findPrimitive"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "constructSpecializedType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "int",
        "name": "typeParamCount"
       },
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "TypeBindings",
      "name": "_bindingsForSubtype"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "sourceType"
       },
       {
        "type": "JavaType",
        "name": "actualType"
       }
      ],
      "type": "String",
      "name": "_resolveTypePlaceholders"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "exp"
       },
       {
        "type": "JavaType",
        "name": "act"
       }
      ],
      "type": "boolean",
      "name": "_verifyAndResolvePlaceholders"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Class",
        "name": "superClass"
       }
      ],
      "type": "JavaType",
      "name": "constructGeneralizedType"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "canonical"
       }
      ],
      "type": "JavaType",
      "name": "constructFromCanonical"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "Class",
        "name": "expType"
       }
      ],
      "type": "JavaType",
      "name": "findTypeParameters"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "clz"
       },
       {
        "type": "Class",
        "name": "expType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       }
      ],
      "type": "JavaType",
      "name": "findTypeParameters"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "clz"
       },
       {
        "type": "Class",
        "name": "expType"
       }
      ],
      "type": "JavaType",
      "name": "findTypeParameters"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type1"
       },
       {
        "type": "JavaType",
        "name": "type2"
       }
      ],
      "type": "JavaType",
      "name": "moreSpecificType"
     },
     {
      "params": [
       {
        "type": "Type",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [
       {
        "type": "Type",
        "name": "type"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "typeRef"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [
       {
        "type": "Type",
        "name": "type"
       },
       {
        "type": "Class",
        "name": "contextClass"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [
       {
        "type": "Type",
        "name": "type"
       },
       {
        "type": "JavaType",
        "name": "contextType"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "elementType"
       }
      ],
      "type": "ArrayType",
      "name": "constructArrayType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "elementType"
       }
      ],
      "type": "ArrayType",
      "name": "constructArrayType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "collectionClass"
       },
       {
        "type": "Class",
        "name": "elementClass"
       }
      ],
      "type": "CollectionType",
      "name": "constructCollectionType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "collectionClass"
       },
       {
        "type": "JavaType",
        "name": "elementType"
       }
      ],
      "type": "CollectionType",
      "name": "constructCollectionType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "collectionClass"
       },
       {
        "type": "Class",
        "name": "elementClass"
       }
      ],
      "type": "CollectionLikeType",
      "name": "constructCollectionLikeType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "collectionClass"
       },
       {
        "type": "JavaType",
        "name": "elementType"
       }
      ],
      "type": "CollectionLikeType",
      "name": "constructCollectionLikeType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "mapClass"
       },
       {
        "type": "Class",
        "name": "keyClass"
       },
       {
        "type": "Class",
        "name": "valueClass"
       }
      ],
      "type": "MapType",
      "name": "constructMapType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "mapClass"
       },
       {
        "type": "JavaType",
        "name": "keyType"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "MapType",
      "name": "constructMapType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "mapClass"
       },
       {
        "type": "Class",
        "name": "keyClass"
       },
       {
        "type": "Class",
        "name": "valueClass"
       }
      ],
      "type": "MapLikeType",
      "name": "constructMapLikeType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "mapClass"
       },
       {
        "type": "JavaType",
        "name": "keyType"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "MapLikeType",
      "name": "constructMapLikeType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JavaType",
        "name": "parameterTypes"
       }
      ],
      "type": "JavaType",
      "name": "constructSimpleType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "Class",
        "name": "parameterTarget"
       },
       {
        "type": "JavaType",
        "name": "parameterTypes"
       }
      ],
      "type": "JavaType",
      "name": "constructSimpleType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JavaType",
        "name": "referredType"
       }
      ],
      "type": "JavaType",
      "name": "constructReferenceType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "JavaType",
      "name": "uncheckedSimpleType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "parametrized"
       },
       {
        "type": "Class",
        "name": "parameterClasses"
       }
      ],
      "type": "JavaType",
      "name": "constructParametricType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JavaType",
        "name": "parameterTypes"
       }
      ],
      "type": "JavaType",
      "name": "constructParametricType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "parametrized"
       },
       {
        "type": "Class",
        "name": "parametersFor"
       },
       {
        "type": "JavaType",
        "name": "parameterTypes"
       }
      ],
      "type": "JavaType",
      "name": "constructParametrizedType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "parametrized"
       },
       {
        "type": "Class",
        "name": "parametersFor"
       },
       {
        "type": "Class",
        "name": "parameterClasses"
       }
      ],
      "type": "JavaType",
      "name": "constructParametrizedType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "collectionClass"
       }
      ],
      "type": "CollectionType",
      "name": "constructRawCollectionType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "collectionClass"
       }
      ],
      "type": "CollectionLikeType",
      "name": "constructRawCollectionLikeType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "mapClass"
       }
      ],
      "type": "MapType",
      "name": "constructRawMapType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "mapClass"
       }
      ],
      "type": "MapLikeType",
      "name": "constructRawMapLikeType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawClass"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "_mapType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawClass"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "_collectionType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawClass"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "_referenceType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "raw"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "_constructSimple"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "raw"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "_newSimpleType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "_unknownType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "clz"
       }
      ],
      "type": "JavaType",
      "name": "_findWellKnownSimple"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "Type",
        "name": "type"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       }
      ],
      "type": "JavaType",
      "name": "_fromAny"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       }
      ],
      "type": "JavaType",
      "name": "_fromClass"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "parentBindings"
       }
      ],
      "type": "JavaType",
      "name": "_resolveSuperClass"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "parentBindings"
       }
      ],
      "type": "JavaType",
      "name": "_resolveSuperInterfaces"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "_fromWellKnownClass"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "_fromWellKnownInterface"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "ParameterizedType",
        "name": "ptype"
       },
       {
        "type": "TypeBindings",
        "name": "parentBindings"
       }
      ],
      "type": "JavaType",
      "name": "_fromParamType"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "GenericArrayType",
        "name": "type"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       }
      ],
      "type": "JavaType",
      "name": "_fromArrayType"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "TypeVariable",
        "name": "var"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       }
      ],
      "type": "JavaType",
      "name": "_fromVariable"
     },
     {
      "params": [
       {
        "type": "ClassStack",
        "name": "context"
       },
       {
        "type": "WildcardType",
        "name": "type"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       }
      ],
      "type": "JavaType",
      "name": "_fromWildcard"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "NO_TYPES"
     },
     {
      "type": "TypeFactory",
      "name": "instance"
     },
     {
      "type": "TypeBindings",
      "name": "EMPTY_BINDINGS"
     },
     {
      "type": "Class",
      "name": "CLS_STRING"
     },
     {
      "type": "Class",
      "name": "CLS_OBJECT"
     },
     {
      "type": "Class",
      "name": "CLS_COMPARABLE"
     },
     {
      "type": "Class",
      "name": "CLS_CLASS"
     },
     {
      "type": "Class",
      "name": "CLS_ENUM"
     },
     {
      "type": "Class",
      "name": "CLS_BOOL"
     },
     {
      "type": "Class",
      "name": "CLS_INT"
     },
     {
      "type": "Class",
      "name": "CLS_LONG"
     },
     {
      "type": "SimpleType",
      "name": "CORE_TYPE_BOOL"
     },
     {
      "type": "SimpleType",
      "name": "CORE_TYPE_INT"
     },
     {
      "type": "SimpleType",
      "name": "CORE_TYPE_LONG"
     },
     {
      "type": "SimpleType",
      "name": "CORE_TYPE_STRING"
     },
     {
      "type": "SimpleType",
      "name": "CORE_TYPE_OBJECT"
     },
     {
      "type": "SimpleType",
      "name": "CORE_TYPE_COMPARABLE"
     },
     {
      "type": "SimpleType",
      "name": "CORE_TYPE_ENUM"
     },
     {
      "type": "SimpleType",
      "name": "CORE_TYPE_CLASS"
     },
     {
      "type": "LRUMap",
      "name": "_typeCache"
     },
     {
      "type": "TypeModifier",
      "name": "_modifiers"
     },
     {
      "type": "TypeParser",
      "name": "_parser"
     },
     {
      "type": "ClassLoader",
      "name": "_classLoader"
     }
    ]
   }
  ]
 },
 {
  "filename": "PlaceholderForType.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "PlaceholderForType",
    "methods": [
     {
      "params": [],
      "type": "JavaType",
      "name": "actualType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "t"
       }
      ],
      "type": null,
      "name": "actualType"
     },
     {
      "params": [],
      "type": "String",
      "name": "buildCanonicalName"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getGenericSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getErasedSignature"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "JavaType",
      "name": "withContentValueHandler"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isContainerType"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "T",
      "name": "_unsupported"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "_ordinal"
     },
     {
      "type": "JavaType",
      "name": "_actualType"
     }
    ]
   }
  ]
 },
 {
  "filename": "ReferenceType.java",
  "package_name": "com.fasterxml.jackson.databind.type",
  "classes": [
   {
    "name": "ReferenceType",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "JavaType",
        "name": "refdType"
       }
      ],
      "type": "ReferenceType",
      "name": "upgradeFrom"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInts"
       },
       {
        "type": "JavaType",
        "name": "refType"
       }
      ],
      "type": "ReferenceType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "JavaType",
        "name": "refType"
       }
      ],
      "type": "ReferenceType",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "contentType"
       }
      ],
      "type": "JavaType",
      "name": "withContentType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "ReferenceType",
      "name": "withTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "ReferenceType",
      "name": "withContentTypeHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "ReferenceType",
      "name": "withValueHandler"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "h"
       }
      ],
      "type": "ReferenceType",
      "name": "withContentValueHandler"
     },
     {
      "params": [],
      "type": "ReferenceType",
      "name": "withStaticTyping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "TypeBindings",
        "name": "bindings"
       },
       {
        "type": "JavaType",
        "name": "superClass"
       },
       {
        "type": "JavaType",
        "name": "superInterfaces"
       }
      ],
      "type": "JavaType",
      "name": "refine"
     },
     {
      "params": [],
      "type": "String",
      "name": "buildCanonicalName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "_narrow"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getReferencedType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasContentType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isReferenceType"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getErasedSignature"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": "StringBuilder",
      "name": "getGenericSignature"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getAnchorType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isAnchorType"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_referencedType"
     },
     {
      "type": "JavaType",
      "name": "_anchorType"
     }
    ]
   }
  ]
 },
 {
  "filename": "PackageVersion.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "PackageVersion",
    "methods": [
     {
      "params": [],
      "type": "Version",
      "name": "version"
     }
    ],
    "fields": [
     {
      "type": "Version",
      "name": "VERSION"
     }
    ]
   }
  ]
 },
 {
  "filename": "MapperConfig.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "MapperConfig",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       }
      ],
      "type": "int",
      "name": "collectFeatureDefaults"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "features"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "features"
       }
      ],
      "type": "T",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "feature"
       },
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "featureMask"
       }
      ],
      "type": "boolean",
      "name": "hasMapperFeatures"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isAnnotationProcessingEnabled"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canOverrideAccessModifiers"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "shouldSortPropertiesAlphabetically"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "useRootWrapping"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "src"
       }
      ],
      "type": "SerializableString",
      "name": "compileString"
     },
     {
      "params": [],
      "type": "ClassIntrospector",
      "name": "getClassIntrospector"
     },
     {
      "params": [],
      "type": "AnnotationIntrospector",
      "name": "getAnnotationIntrospector"
     },
     {
      "params": [],
      "type": "PropertyNamingStrategy",
      "name": "getPropertyNamingStrategy"
     },
     {
      "params": [],
      "type": "HandlerInstantiator",
      "name": "getHandlerInstantiator"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "getDefaultTyper"
     },
     {
      "params": [],
      "type": "SubtypeResolver",
      "name": "getSubtypeResolver"
     },
     {
      "params": [],
      "type": "TypeFactory",
      "name": "getTypeFactory"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [
       {
        "type": "TypeReference",
        "name": "valueTypeRef"
       }
      ],
      "type": "JavaType",
      "name": "constructType"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Class",
        "name": "subclass"
       }
      ],
      "type": "JavaType",
      "name": "constructSpecializedType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "BeanDescription",
      "name": "introspectClassAnnotations"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "BeanDescription",
      "name": "introspectClassAnnotations"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "BeanDescription",
      "name": "introspectDirectClassAnnotations"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "BeanDescription",
      "name": "introspectDirectClassAnnotations"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "ConfigOverride",
      "name": "findConfigOverride"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "ConfigOverride",
      "name": "getConfigOverride"
     },
     {
      "params": [],
      "type": "JsonInclude",
      "name": "getDefaultPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonInclude",
      "name": "getDefaultPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       },
       {
        "type": "JsonInclude",
        "name": "defaultIncl"
       }
      ],
      "type": "JsonInclude",
      "name": "getDefaultPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       },
       {
        "type": "Class",
        "name": "propertyType"
       }
      ],
      "type": "JsonInclude",
      "name": "getDefaultInclusion"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       },
       {
        "type": "Class",
        "name": "propertyType"
       },
       {
        "type": "JsonInclude",
        "name": "defaultIncl"
       }
      ],
      "type": "JsonInclude",
      "name": "getDefaultInclusion"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonFormat",
      "name": "getDefaultPropertyFormat"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonIgnoreProperties",
      "name": "getDefaultPropertyIgnorals"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       },
       {
        "type": "AnnotatedClass",
        "name": "actualClass"
       }
      ],
      "type": "JsonIgnoreProperties",
      "name": "getDefaultPropertyIgnorals"
     },
     {
      "params": [],
      "type": "VisibilityChecker",
      "name": "getDefaultVisibilityChecker"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       },
       {
        "type": "AnnotatedClass",
        "name": "actualClass"
       }
      ],
      "type": "VisibilityChecker",
      "name": "getDefaultVisibilityChecker"
     },
     {
      "params": [],
      "type": "JsonSetter",
      "name": "getDefaultSetterInfo"
     },
     {
      "params": [],
      "type": "Boolean",
      "name": "getDefaultMergeable"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "Boolean",
      "name": "getDefaultMergeable"
     },
     {
      "params": [],
      "type": "DateFormat",
      "name": "getDateFormat"
     },
     {
      "params": [],
      "type": "Locale",
      "name": "getLocale"
     },
     {
      "params": [],
      "type": "TimeZone",
      "name": "getTimeZone"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getActiveView"
     },
     {
      "params": [],
      "type": "Base64Variant",
      "name": "getBase64Variant"
     },
     {
      "params": [],
      "type": "ContextAttributes",
      "name": "getAttributes"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "rootType"
       }
      ],
      "type": "PropertyName",
      "name": "findRootName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawRootType"
       }
      ],
      "type": "PropertyName",
      "name": "findRootName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "builderClass"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "typeResolverBuilderInstance"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "resolverClass"
       }
      ],
      "type": "TypeIdResolver",
      "name": "typeIdResolverInstance"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JsonInclude",
      "name": "EMPTY_INCLUDE"
     },
     {
      "type": "JsonFormat",
      "name": "EMPTY_FORMAT"
     },
     {
      "type": "int",
      "name": "_mapperFeatures"
     },
     {
      "type": "BaseSettings",
      "name": "_base"
     }
    ]
   }
  ]
 },
 {
  "filename": "ContextAttributes.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "ContextAttributes",
    "methods": [
     {
      "params": [],
      "type": "ContextAttributes",
      "name": "getEmpty"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "ContextAttributes",
      "name": "withSharedAttribute"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "attributes"
       }
      ],
      "type": "ContextAttributes",
      "name": "withSharedAttributes"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "ContextAttributes",
      "name": "withoutSharedAttribute"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "Object",
      "name": "getAttribute"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "ContextAttributes",
      "name": "withPerCallAttribute"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "HandlerInstantiator.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "HandlerInstantiator",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "deserClass"
       }
      ],
      "type": "JsonDeserializer",
      "name": "deserializerInstance"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "keyDeserClass"
       }
      ],
      "type": "KeyDeserializer",
      "name": "keyDeserializerInstance"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "serClass"
       }
      ],
      "type": "JsonSerializer",
      "name": "serializerInstance"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "builderClass"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "typeResolverBuilderInstance"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "resolverClass"
       }
      ],
      "type": "TypeIdResolver",
      "name": "typeIdResolverInstance"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "resolverClass"
       }
      ],
      "type": "ValueInstantiator",
      "name": "valueInstantiatorInstance"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "implClass"
       }
      ],
      "type": "ObjectIdGenerator",
      "name": "objectIdGeneratorInstance"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "implClass"
       }
      ],
      "type": "ObjectIdResolver",
      "name": "resolverIdGeneratorInstance"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "implClass"
       }
      ],
      "type": "PropertyNamingStrategy",
      "name": "namingStrategyInstance"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Class",
        "name": "implClass"
       }
      ],
      "type": "Converter",
      "name": "converterInstance"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "implClass"
       }
      ],
      "type": "VirtualBeanPropertyWriter",
      "name": "virtualPropertyWriterInstance"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "forProperty"
       },
       {
        "type": "Class",
        "name": "filterClass"
       }
      ],
      "type": "Object",
      "name": "includeFilterInstance"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "MapperConfigBase.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "MapperConfigBase",
    "methods": [
     {
      "params": [
       {
        "type": "BaseSettings",
        "name": "newBase"
       }
      ],
      "type": "T",
      "name": "_withBase"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "mapperFeatures"
       }
      ],
      "type": "T",
      "name": "_withMapperFeatures"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "features"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "features"
       }
      ],
      "type": "T",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "MapperFeature",
        "name": "feature"
       },
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "T",
      "name": "withAppendedAnnotationIntrospector"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "T",
      "name": "withInsertedAnnotationIntrospector"
     },
     {
      "params": [
       {
        "type": "ClassIntrospector",
        "name": "ci"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "ContextAttributes",
        "name": "attrs"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "attributes"
       }
      ],
      "type": "T",
      "name": "withAttributes"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "T",
      "name": "withAttribute"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "T",
      "name": "withoutAttribute"
     },
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "tf"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "TypeResolverBuilder",
        "name": "trb"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "PropertyNamingStrategy",
        "name": "pns"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "HandlerInstantiator",
        "name": "hi"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "base64"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "DateFormat",
        "name": "df"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "Locale",
        "name": "l"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "rootName"
       }
      ],
      "type": "T",
      "name": "withRootName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "rootName"
       }
      ],
      "type": "T",
      "name": "withRootName"
     },
     {
      "params": [
       {
        "type": "SubtypeResolver",
        "name": "str"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "view"
       }
      ],
      "type": "T",
      "name": "withView"
     },
     {
      "params": [],
      "type": "SubtypeResolver",
      "name": "getSubtypeResolver"
     },
     {
      "params": [],
      "type": "String",
      "name": "getRootName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getFullRootName"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getActiveView"
     },
     {
      "params": [],
      "type": "ContextAttributes",
      "name": "getAttributes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "ConfigOverride",
      "name": "getConfigOverride"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "ConfigOverride",
      "name": "findConfigOverride"
     },
     {
      "params": [],
      "type": "JsonInclude",
      "name": "getDefaultPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonInclude",
      "name": "getDefaultPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       },
       {
        "type": "Class",
        "name": "propertyType"
       }
      ],
      "type": "JsonInclude",
      "name": "getDefaultInclusion"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "JsonFormat",
      "name": "getDefaultPropertyFormat"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "JsonIgnoreProperties",
      "name": "getDefaultPropertyIgnorals"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       },
       {
        "type": "AnnotatedClass",
        "name": "actualClass"
       }
      ],
      "type": "JsonIgnoreProperties",
      "name": "getDefaultPropertyIgnorals"
     },
     {
      "params": [],
      "type": "VisibilityChecker",
      "name": "getDefaultVisibilityChecker"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       },
       {
        "type": "AnnotatedClass",
        "name": "actualClass"
       }
      ],
      "type": "VisibilityChecker",
      "name": "getDefaultVisibilityChecker"
     },
     {
      "params": [],
      "type": "JsonSetter",
      "name": "getDefaultSetterInfo"
     },
     {
      "params": [],
      "type": "Boolean",
      "name": "getDefaultMergeable"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "Boolean",
      "name": "getDefaultMergeable"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "rootType"
       }
      ],
      "type": "PropertyName",
      "name": "findRootName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawRootType"
       }
      ],
      "type": "PropertyName",
      "name": "findRootName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Class",
      "name": "findMixInClassFor"
     },
     {
      "params": [],
      "type": "MixInResolver",
      "name": "copy"
     },
     {
      "params": [],
      "type": "int",
      "name": "mixInCount"
     }
    ],
    "fields": [
     {
      "type": "ConfigOverride",
      "name": "EMPTY_OVERRIDE"
     },
     {
      "type": "int",
      "name": "DEFAULT_MAPPER_FEATURES"
     },
     {
      "type": "int",
      "name": "AUTO_DETECT_MASK"
     },
     {
      "type": "SimpleMixInResolver",
      "name": "_mixIns"
     },
     {
      "type": "SubtypeResolver",
      "name": "_subtypeResolver"
     },
     {
      "type": "PropertyName",
      "name": "_rootName"
     },
     {
      "type": "Class",
      "name": "_view"
     },
     {
      "type": "ContextAttributes",
      "name": "_attributes"
     },
     {
      "type": "RootNameLookup",
      "name": "_rootNames"
     },
     {
      "type": "ConfigOverrides",
      "name": "_configOverrides"
     }
    ]
   }
  ]
 },
 {
  "filename": "MutableConfigOverride.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "MutableConfigOverride",
    "methods": [
     {
      "params": [],
      "type": "MutableConfigOverride",
      "name": "copy"
     },
     {
      "params": [
       {
        "type": "JsonFormat",
        "name": "v"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "setFormat"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "v"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "setInclude"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "v"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "setIncludeAsProperty"
     },
     {
      "params": [
       {
        "type": "JsonIgnoreProperties",
        "name": "v"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "setIgnorals"
     },
     {
      "params": [
       {
        "type": "Boolean",
        "name": "v"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "setIsIgnoredType"
     },
     {
      "params": [
       {
        "type": "JsonSetter",
        "name": "v"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "setSetterInfo"
     },
     {
      "params": [
       {
        "type": "JsonAutoDetect",
        "name": "v"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "setVisibility"
     },
     {
      "params": [
       {
        "type": "Boolean",
        "name": "v"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "setMergeable"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": []
 },
 {
  "filename": "BaseSettings.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "BaseSettings",
    "methods": [
     {
      "params": [],
      "type": "BaseSettings",
      "name": "copy"
     },
     {
      "params": [
       {
        "type": "ClassIntrospector",
        "name": "ci"
       }
      ],
      "type": "BaseSettings",
      "name": "withClassIntrospector"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "BaseSettings",
      "name": "withAnnotationIntrospector"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "BaseSettings",
      "name": "withInsertedAnnotationIntrospector"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "BaseSettings",
      "name": "withAppendedAnnotationIntrospector"
     },
     {
      "params": [
       {
        "type": "PropertyNamingStrategy",
        "name": "pns"
       }
      ],
      "type": "BaseSettings",
      "name": "withPropertyNamingStrategy"
     },
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "tf"
       }
      ],
      "type": "BaseSettings",
      "name": "withTypeFactory"
     },
     {
      "params": [
       {
        "type": "TypeResolverBuilder",
        "name": "typer"
       }
      ],
      "type": "BaseSettings",
      "name": "withTypeResolverBuilder"
     },
     {
      "params": [
       {
        "type": "DateFormat",
        "name": "df"
       }
      ],
      "type": "BaseSettings",
      "name": "withDateFormat"
     },
     {
      "params": [
       {
        "type": "HandlerInstantiator",
        "name": "hi"
       }
      ],
      "type": "BaseSettings",
      "name": "withHandlerInstantiator"
     },
     {
      "params": [
       {
        "type": "Locale",
        "name": "l"
       }
      ],
      "type": "BaseSettings",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": "BaseSettings",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "base64"
       }
      ],
      "type": "BaseSettings",
      "name": "with"
     },
     {
      "params": [],
      "type": "ClassIntrospector",
      "name": "getClassIntrospector"
     },
     {
      "params": [],
      "type": "AnnotationIntrospector",
      "name": "getAnnotationIntrospector"
     },
     {
      "params": [],
      "type": "PropertyNamingStrategy",
      "name": "getPropertyNamingStrategy"
     },
     {
      "params": [],
      "type": "TypeFactory",
      "name": "getTypeFactory"
     },
     {
      "params": [],
      "type": "TypeResolverBuilder",
      "name": "getTypeResolverBuilder"
     },
     {
      "params": [],
      "type": "DateFormat",
      "name": "getDateFormat"
     },
     {
      "params": [],
      "type": "HandlerInstantiator",
      "name": "getHandlerInstantiator"
     },
     {
      "params": [],
      "type": "Locale",
      "name": "getLocale"
     },
     {
      "params": [],
      "type": "TimeZone",
      "name": "getTimeZone"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasExplicitTimeZone"
     },
     {
      "params": [],
      "type": "Base64Variant",
      "name": "getBase64Variant"
     },
     {
      "params": [
       {
        "type": "DateFormat",
        "name": "df"
       },
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": "DateFormat",
      "name": "_force"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "TimeZone",
      "name": "DEFAULT_TIMEZONE"
     },
     {
      "type": "ClassIntrospector",
      "name": "_classIntrospector"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_annotationIntrospector"
     },
     {
      "type": "PropertyNamingStrategy",
      "name": "_propertyNamingStrategy"
     },
     {
      "type": "TypeFactory",
      "name": "_typeFactory"
     },
     {
      "type": "TypeResolverBuilder",
      "name": "_typeResolverBuilder"
     },
     {
      "type": "DateFormat",
      "name": "_dateFormat"
     },
     {
      "type": "HandlerInstantiator",
      "name": "_handlerInstantiator"
     },
     {
      "type": "Locale",
      "name": "_locale"
     },
     {
      "type": "TimeZone",
      "name": "_timeZone"
     },
     {
      "type": "Base64Variant",
      "name": "_defaultBase64"
     }
    ]
   }
  ]
 },
 {
  "filename": "ConfigOverride.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "ConfigOverride",
    "methods": [
     {
      "params": [],
      "type": "ConfigOverride",
      "name": "empty"
     },
     {
      "params": [],
      "type": "JsonFormat",
      "name": "getFormat"
     },
     {
      "params": [],
      "type": "JsonInclude",
      "name": "getInclude"
     },
     {
      "params": [],
      "type": "JsonInclude",
      "name": "getIncludeAsProperty"
     },
     {
      "params": [],
      "type": "JsonIgnoreProperties",
      "name": "getIgnorals"
     },
     {
      "params": [],
      "type": "Boolean",
      "name": "getIsIgnoredType"
     },
     {
      "params": [],
      "type": "JsonSetter",
      "name": "getSetterInfo"
     },
     {
      "params": [],
      "type": "JsonAutoDetect",
      "name": "getVisibility"
     },
     {
      "params": [],
      "type": "Boolean",
      "name": "getMergeable"
     }
    ],
    "fields": [
     {
      "type": "JsonFormat",
      "name": "_format"
     },
     {
      "type": "JsonInclude",
      "name": "_include"
     },
     {
      "type": "JsonInclude",
      "name": "_includeAsProperty"
     },
     {
      "type": "JsonIgnoreProperties",
      "name": "_ignorals"
     },
     {
      "type": "JsonSetter",
      "name": "_setterInfo"
     },
     {
      "type": "JsonAutoDetect",
      "name": "_visibility"
     },
     {
      "type": "Boolean",
      "name": "_isIgnoredType"
     },
     {
      "type": "Boolean",
      "name": "_mergeable"
     }
    ]
   }
  ]
 },
 {
  "filename": "ConfigFeature.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "ConfigFeature",
    "methods": [
     {
      "params": [],
      "type": "boolean",
      "name": "enabledByDefault"
     },
     {
      "params": [],
      "type": "int",
      "name": "getMask"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "flags"
       }
      ],
      "type": "boolean",
      "name": "enabledIn"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ConfigOverrides.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "ConfigOverrides",
    "methods": [
     {
      "params": [],
      "type": "ConfigOverrides",
      "name": "copy"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "ConfigOverride",
      "name": "findOverride"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "MutableConfigOverride",
      "name": "findOrCreateOverride"
     },
     {
      "params": [],
      "type": "JsonInclude",
      "name": "getDefaultInclusion"
     },
     {
      "params": [],
      "type": "JsonSetter",
      "name": "getDefaultSetterInfo"
     },
     {
      "params": [],
      "type": "Boolean",
      "name": "getDefaultMergeable"
     },
     {
      "params": [],
      "type": "VisibilityChecker",
      "name": "getDefaultVisibility"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "v"
       }
      ],
      "type": null,
      "name": "setDefaultInclusion"
     },
     {
      "params": [
       {
        "type": "JsonSetter",
        "name": "v"
       }
      ],
      "type": null,
      "name": "setDefaultSetterInfo"
     },
     {
      "params": [
       {
        "type": "Boolean",
        "name": "v"
       }
      ],
      "type": null,
      "name": "setDefaultMergeable"
     },
     {
      "params": [
       {
        "type": "VisibilityChecker",
        "name": "v"
       }
      ],
      "type": null,
      "name": "setDefaultVisibility"
     },
     {
      "params": [],
      "type": "Map",
      "name": "_newMap"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Map",
      "name": "_overrides"
     },
     {
      "type": "JsonInclude",
      "name": "_defaultInclusion"
     },
     {
      "type": "JsonSetter",
      "name": "_defaultSetterInfo"
     },
     {
      "type": "VisibilityChecker",
      "name": "_visibilityChecker"
     },
     {
      "type": "Boolean",
      "name": "_defaultMergeable"
     }
    ]
   }
  ]
 },
 {
  "filename": "SerializerFactoryConfig.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "SerializerFactoryConfig",
    "methods": [
     {
      "params": [
       {
        "type": "Serializers",
        "name": "additional"
       }
      ],
      "type": "SerializerFactoryConfig",
      "name": "withAdditionalSerializers"
     },
     {
      "params": [
       {
        "type": "Serializers",
        "name": "additional"
       }
      ],
      "type": "SerializerFactoryConfig",
      "name": "withAdditionalKeySerializers"
     },
     {
      "params": [
       {
        "type": "BeanSerializerModifier",
        "name": "modifier"
       }
      ],
      "type": "SerializerFactoryConfig",
      "name": "withSerializerModifier"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasSerializers"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasKeySerializers"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasSerializerModifiers"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "serializers"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "keySerializers"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "serializerModifiers"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Serializers",
      "name": "NO_SERIALIZERS"
     },
     {
      "type": "BeanSerializerModifier",
      "name": "NO_MODIFIERS"
     },
     {
      "type": "Serializers",
      "name": "_additionalSerializers"
     },
     {
      "type": "Serializers",
      "name": "_additionalKeySerializers"
     },
     {
      "type": "BeanSerializerModifier",
      "name": "_modifiers"
     }
    ]
   }
  ]
 },
 {
  "filename": "DeserializerFactoryConfig.java",
  "package_name": "com.fasterxml.jackson.databind.cfg",
  "classes": [
   {
    "name": "DeserializerFactoryConfig",
    "methods": [
     {
      "params": [
       {
        "type": "Deserializers",
        "name": "additional"
       }
      ],
      "type": "DeserializerFactoryConfig",
      "name": "withAdditionalDeserializers"
     },
     {
      "params": [
       {
        "type": "KeyDeserializers",
        "name": "additional"
       }
      ],
      "type": "DeserializerFactoryConfig",
      "name": "withAdditionalKeyDeserializers"
     },
     {
      "params": [
       {
        "type": "BeanDeserializerModifier",
        "name": "modifier"
       }
      ],
      "type": "DeserializerFactoryConfig",
      "name": "withDeserializerModifier"
     },
     {
      "params": [
       {
        "type": "AbstractTypeResolver",
        "name": "resolver"
       }
      ],
      "type": "DeserializerFactoryConfig",
      "name": "withAbstractTypeResolver"
     },
     {
      "params": [
       {
        "type": "ValueInstantiators",
        "name": "instantiators"
       }
      ],
      "type": "DeserializerFactoryConfig",
      "name": "withValueInstantiators"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasDeserializers"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasKeyDeserializers"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasDeserializerModifiers"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasAbstractTypeResolvers"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasValueInstantiators"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "deserializers"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "keyDeserializers"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "deserializerModifiers"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "abstractTypeResolvers"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "valueInstantiators"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Deserializers",
      "name": "NO_DESERIALIZERS"
     },
     {
      "type": "BeanDeserializerModifier",
      "name": "NO_MODIFIERS"
     },
     {
      "type": "AbstractTypeResolver",
      "name": "NO_ABSTRACT_TYPE_RESOLVERS"
     },
     {
      "type": "ValueInstantiators",
      "name": "NO_VALUE_INSTANTIATORS"
     },
     {
      "type": "KeyDeserializers",
      "name": "DEFAULT_KEY_DESERIALIZERS"
     },
     {
      "type": "Deserializers",
      "name": "_additionalDeserializers"
     },
     {
      "type": "KeyDeserializers",
      "name": "_additionalKeyDeserializers"
     },
     {
      "type": "BeanDeserializerModifier",
      "name": "_modifiers"
     },
     {
      "type": "AbstractTypeResolver",
      "name": "_abstractTypeResolvers"
     },
     {
      "type": "ValueInstantiators",
      "name": "_valueInstantiators"
     }
    ]
   }
  ]
 },
 {
  "filename": "SimpleDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.module",
  "classes": [
   {
    "name": "SimpleDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "forClass"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": null,
      "name": "addDeserializer"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "desers"
       }
      ],
      "type": null,
      "name": "addDeserializers"
     },
     {
      "params": [
       {
        "type": "ArrayType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findArrayDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findBeanDeserializer"
     },
     {
      "params": [
       {
        "type": "CollectionType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findCollectionDeserializer"
     },
     {
      "params": [
       {
        "type": "CollectionLikeType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findCollectionLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findEnumDeserializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "nodeType"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findTreeNodeDeserializer"
     },
     {
      "params": [
       {
        "type": "ReferenceType",
        "name": "refType"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeDeserializer",
        "name": "contentTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "contentDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findReferenceDeserializer"
     },
     {
      "params": [
       {
        "type": "MapType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "KeyDeserializer",
        "name": "keyDeserializer"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findMapDeserializer"
     },
     {
      "params": [
       {
        "type": "MapLikeType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "KeyDeserializer",
        "name": "keyDeserializer"
       },
       {
        "type": "TypeDeserializer",
        "name": "elementTypeDeserializer"
       },
       {
        "type": "JsonDeserializer",
        "name": "elementDeserializer"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findMapLikeDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonDeserializer",
      "name": "_find"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "HashMap",
      "name": "_classMappings"
     },
     {
      "type": "boolean",
      "name": "_hasEnumDeserializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "SimpleSerializers.java",
  "package_name": "com.fasterxml.jackson.databind.module",
  "classes": [
   {
    "name": "SimpleSerializers",
    "methods": [
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "addSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "addSerializer"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "sers"
       }
      ],
      "type": null,
      "name": "addSerializers"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonSerializer",
      "name": "findSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "ArrayType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findArraySerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "CollectionType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findCollectionSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "CollectionLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findCollectionLikeSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "MapType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "keySerializer"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findMapSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "MapLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "keySerializer"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findMapLikeSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "ClassKey",
        "name": "key"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findInterfaceMapping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "_addSerializer"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "HashMap",
      "name": "_classMappings"
     },
     {
      "type": "HashMap",
      "name": "_interfaceMappings"
     },
     {
      "type": "boolean",
      "name": "_hasEnumSerializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.module",
  "classes": []
 },
 {
  "filename": "SimpleAbstractTypeResolver.java",
  "package_name": "com.fasterxml.jackson.databind.module",
  "classes": [
   {
    "name": "SimpleAbstractTypeResolver",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "superType"
       },
       {
        "type": "Class",
        "name": "subType"
       }
      ],
      "type": "SimpleAbstractTypeResolver",
      "name": "addMapping"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "findTypeMapping"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "resolveAbstractType"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "typeDesc"
       }
      ],
      "type": "JavaType",
      "name": "resolveAbstractType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "HashMap",
      "name": "_mappings"
     }
    ]
   }
  ]
 },
 {
  "filename": "SimpleKeyDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.module",
  "classes": [
   {
    "name": "SimpleKeyDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "forClass"
       },
       {
        "type": "KeyDeserializer",
        "name": "deser"
       }
      ],
      "type": "SimpleKeyDeserializers",
      "name": "addDeserializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "KeyDeserializer",
      "name": "findKeyDeserializer"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "HashMap",
      "name": "_classMappings"
     }
    ]
   }
  ]
 },
 {
  "filename": "SimpleModule.java",
  "package_name": "com.fasterxml.jackson.databind.module",
  "classes": [
   {
    "name": "SimpleModule",
    "methods": [
     {
      "params": [],
      "type": "Object",
      "name": "getTypeId"
     },
     {
      "params": [
       {
        "type": "SimpleSerializers",
        "name": "s"
       }
      ],
      "type": null,
      "name": "setSerializers"
     },
     {
      "params": [
       {
        "type": "SimpleDeserializers",
        "name": "d"
       }
      ],
      "type": null,
      "name": "setDeserializers"
     },
     {
      "params": [
       {
        "type": "SimpleSerializers",
        "name": "ks"
       }
      ],
      "type": null,
      "name": "setKeySerializers"
     },
     {
      "params": [
       {
        "type": "SimpleKeyDeserializers",
        "name": "kd"
       }
      ],
      "type": null,
      "name": "setKeyDeserializers"
     },
     {
      "params": [
       {
        "type": "SimpleAbstractTypeResolver",
        "name": "atr"
       }
      ],
      "type": null,
      "name": "setAbstractTypes"
     },
     {
      "params": [
       {
        "type": "SimpleValueInstantiators",
        "name": "svi"
       }
      ],
      "type": null,
      "name": "setValueInstantiators"
     },
     {
      "params": [
       {
        "type": "BeanDeserializerModifier",
        "name": "mod"
       }
      ],
      "type": "SimpleModule",
      "name": "setDeserializerModifier"
     },
     {
      "params": [
       {
        "type": "BeanSerializerModifier",
        "name": "mod"
       }
      ],
      "type": "SimpleModule",
      "name": "setSerializerModifier"
     },
     {
      "params": [
       {
        "type": "PropertyNamingStrategy",
        "name": "naming"
       }
      ],
      "type": "SimpleModule",
      "name": "setNamingStrategy"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": "SimpleModule",
      "name": "addSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": "SimpleModule",
      "name": "addSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": "SimpleModule",
      "name": "addKeySerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "JsonDeserializer",
        "name": "deser"
       }
      ],
      "type": "SimpleModule",
      "name": "addDeserializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "KeyDeserializer",
        "name": "deser"
       }
      ],
      "type": "SimpleModule",
      "name": "addKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "superType"
       },
       {
        "type": "Class",
        "name": "subType"
       }
      ],
      "type": "SimpleModule",
      "name": "addAbstractTypeMapping"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "subtypes"
       }
      ],
      "type": "SimpleModule",
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "NamedType",
        "name": "subtypes"
       }
      ],
      "type": "SimpleModule",
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "subtypes"
       }
      ],
      "type": "SimpleModule",
      "name": "registerSubtypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "beanType"
       },
       {
        "type": "ValueInstantiator",
        "name": "inst"
       }
      ],
      "type": "SimpleModule",
      "name": "addValueInstantiator"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "targetType"
       },
       {
        "type": "Class",
        "name": "mixinClass"
       }
      ],
      "type": "SimpleModule",
      "name": "setMixInAnnotation"
     },
     {
      "params": [],
      "type": "String",
      "name": "getModuleName"
     },
     {
      "params": [
       {
        "type": "SetupContext",
        "name": "context"
       }
      ],
      "type": null,
      "name": "setupModule"
     },
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "thingy"
       },
       {
        "type": "String",
        "name": "type"
       }
      ],
      "type": null,
      "name": "_checkNotNull"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "_name"
     },
     {
      "type": "Version",
      "name": "_version"
     },
     {
      "type": "SimpleSerializers",
      "name": "_serializers"
     },
     {
      "type": "SimpleDeserializers",
      "name": "_deserializers"
     },
     {
      "type": "SimpleSerializers",
      "name": "_keySerializers"
     },
     {
      "type": "SimpleKeyDeserializers",
      "name": "_keyDeserializers"
     },
     {
      "type": "SimpleAbstractTypeResolver",
      "name": "_abstractTypes"
     },
     {
      "type": "SimpleValueInstantiators",
      "name": "_valueInstantiators"
     },
     {
      "type": "BeanDeserializerModifier",
      "name": "_deserializerModifier"
     },
     {
      "type": "BeanSerializerModifier",
      "name": "_serializerModifier"
     },
     {
      "type": "HashMap",
      "name": "_mixins"
     },
     {
      "type": "LinkedHashSet",
      "name": "_subtypes"
     },
     {
      "type": "PropertyNamingStrategy",
      "name": "_namingStrategy"
     }
    ]
   }
  ]
 },
 {
  "filename": "SimpleValueInstantiators.java",
  "package_name": "com.fasterxml.jackson.databind.module",
  "classes": [
   {
    "name": "SimpleValueInstantiators",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "forType"
       },
       {
        "type": "ValueInstantiator",
        "name": "inst"
       }
      ],
      "type": "SimpleValueInstantiators",
      "name": "addValueInstantiator"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "ValueInstantiator",
        "name": "defaultInstantiator"
       }
      ],
      "type": "ValueInstantiator",
      "name": "findValueInstantiator"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "HashMap",
      "name": "_classMappings"
     }
    ]
   }
  ]
 },
 {
  "filename": "InvalidFormatException.java",
  "package_name": "com.fasterxml.jackson.databind.exc",
  "classes": [
   {
    "name": "InvalidFormatException",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "targetType"
       }
      ],
      "type": "InvalidFormatException",
      "name": "from"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getValue"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "MismatchedInputException.java",
  "package_name": "com.fasterxml.jackson.databind.exc",
  "classes": [
   {
    "name": "MismatchedInputException",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "MismatchedInputException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "JavaType",
        "name": "targetType"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "MismatchedInputException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Class",
        "name": "targetType"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": "MismatchedInputException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "t"
       }
      ],
      "type": "MismatchedInputException",
      "name": "setTargetType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getTargetType"
     }
    ],
    "fields": [
     {
      "type": "Class",
      "name": "_targetType"
     }
    ]
   }
  ]
 },
 {
  "filename": "InvalidDefinitionException.java",
  "package_name": "com.fasterxml.jackson.databind.exc",
  "classes": [
   {
    "name": "InvalidDefinitionException",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "BeanDescription",
        "name": "bean"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "prop"
       }
      ],
      "type": "InvalidDefinitionException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "InvalidDefinitionException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "BeanDescription",
        "name": "bean"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "prop"
       }
      ],
      "type": "InvalidDefinitionException",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "InvalidDefinitionException",
      "name": "from"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "BeanDescription",
      "name": "getBeanDescription"
     },
     {
      "params": [],
      "type": "BeanPropertyDefinition",
      "name": "getProperty"
     }
    ],
    "fields": [
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "BeanDescription",
      "name": "_beanDesc"
     },
     {
      "type": "BeanPropertyDefinition",
      "name": "_property"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyBindingException.java",
  "package_name": "com.fasterxml.jackson.databind.exc",
  "classes": [
   {
    "name": "PropertyBindingException",
    "methods": [
     {
      "params": [],
      "type": "String",
      "name": "getMessageSuffix"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getReferringClass"
     },
     {
      "params": [],
      "type": "String",
      "name": "getPropertyName"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "getKnownPropertyIds"
     }
    ],
    "fields": [
     {
      "type": "Class",
      "name": "_referringClass"
     },
     {
      "type": "String",
      "name": "_propertyName"
     },
     {
      "type": "Collection",
      "name": "_propertyIds"
     },
     {
      "type": "String",
      "name": "_propertiesAsString"
     },
     {
      "type": "int",
      "name": "MAX_DESC_LENGTH"
     }
    ]
   }
  ]
 },
 {
  "filename": "InvalidTypeIdException.java",
  "package_name": "com.fasterxml.jackson.databind.exc",
  "classes": [
   {
    "name": "InvalidTypeIdException",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "String",
        "name": "typeId"
       }
      ],
      "type": "InvalidTypeIdException",
      "name": "from"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getBaseType"
     },
     {
      "params": [],
      "type": "String",
      "name": "getTypeId"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "_baseType"
     },
     {
      "type": "String",
      "name": "_typeId"
     }
    ]
   }
  ]
 },
 {
  "filename": "IgnoredPropertyException.java",
  "package_name": "com.fasterxml.jackson.databind.exc",
  "classes": [
   {
    "name": "IgnoredPropertyException",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Object",
        "name": "fromObjectOrClass"
       },
       {
        "type": "String",
        "name": "propertyName"
       },
       {
        "type": "Collection",
        "name": "propertyIds"
       }
      ],
      "type": "IgnoredPropertyException",
      "name": "from"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "UnrecognizedPropertyException.java",
  "package_name": "com.fasterxml.jackson.databind.exc",
  "classes": [
   {
    "name": "UnrecognizedPropertyException",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "Object",
        "name": "fromObjectOrClass"
       },
       {
        "type": "String",
        "name": "propertyName"
       },
       {
        "type": "Collection",
        "name": "propertyIds"
       }
      ],
      "type": "UnrecognizedPropertyException",
      "name": "from"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "InvalidNullException.java",
  "package_name": "com.fasterxml.jackson.databind.exc",
  "classes": [
   {
    "name": "InvalidNullException",
    "methods": [
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "PropertyName",
        "name": "name"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "InvalidNullException",
      "name": "from"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getPropertyName"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "PropertyName",
      "name": "_propertyName"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonSchema.java",
  "package_name": "com.fasterxml.jackson.databind.jsonschema",
  "classes": [
   {
    "name": "JsonSchema",
    "methods": [
     {
      "params": [],
      "type": "ObjectNode",
      "name": "getSchemaNode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "JsonNode",
      "name": "getDefaultSchemaNode"
     }
    ],
    "fields": [
     {
      "type": "ObjectNode",
      "name": "schema"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonSerializableSchema.java",
  "package_name": "com.fasterxml.jackson.databind.jsonschema",
  "classes": []
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.jsonschema",
  "classes": []
 },
 {
  "filename": "SchemaAware.java",
  "package_name": "com.fasterxml.jackson.databind.jsonschema",
  "classes": [
   {
    "name": "SchemaAware",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       },
       {
        "type": "boolean",
        "name": "isOptional"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonFormatTypes.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonFormatTypes",
    "methods": [
     {
      "params": [],
      "type": "String",
      "name": "value"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "s"
       }
      ],
      "type": "JsonFormatTypes",
      "name": "forValue"
     }
    ],
    "fields": [
     {
      "type": "Map",
      "name": "_byLCName"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonArrayFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonArrayFormatVisitor",
    "methods": [
     {
      "params": [
       {
        "type": "JsonFormatVisitable",
        "name": "handler"
       },
       {
        "type": "JavaType",
        "name": "elementType"
       }
      ],
      "type": null,
      "name": "itemsFormat"
     },
     {
      "params": [
       {
        "type": "JsonFormatTypes",
        "name": "format"
       }
      ],
      "type": null,
      "name": "itemsFormat"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonValueFormat.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonValueFormat",
    "methods": [
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "_desc"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonMapFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonMapFormatVisitor",
    "methods": [
     {
      "params": [
       {
        "type": "JsonFormatVisitable",
        "name": "handler"
       },
       {
        "type": "JavaType",
        "name": "keyType"
       }
      ],
      "type": null,
      "name": "keyFormat"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitable",
        "name": "handler"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": null,
      "name": "valueFormat"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonAnyFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonAnyFormatVisitor",
    "methods": [],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonNullFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonNullFormatVisitor",
    "methods": [],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonValueFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonValueFormatVisitor",
    "methods": [
     {
      "params": [
       {
        "type": "JsonValueFormat",
        "name": "format"
       }
      ],
      "type": null,
      "name": "format"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "enums"
       }
      ],
      "type": null,
      "name": "enumTypes"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonFormatVisitable.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonFormatVisitable",
    "methods": [
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonFormatVisitorWrapper.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonFormatVisitorWrapper",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonObjectFormatVisitor",
      "name": "expectObjectFormat"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonArrayFormatVisitor",
      "name": "expectArrayFormat"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonStringFormatVisitor",
      "name": "expectStringFormat"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonNumberFormatVisitor",
      "name": "expectNumberFormat"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonIntegerFormatVisitor",
      "name": "expectIntegerFormat"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonBooleanFormatVisitor",
      "name": "expectBooleanFormat"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonNullFormatVisitor",
      "name": "expectNullFormat"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonAnyFormatVisitor",
      "name": "expectAnyFormat"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonMapFormatVisitor",
      "name": "expectMapFormat"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": []
 },
 {
  "filename": "JsonBooleanFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonBooleanFormatVisitor",
    "methods": [],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonObjectFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonObjectFormatVisitor",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "writer"
       }
      ],
      "type": null,
      "name": "property"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "JsonFormatVisitable",
        "name": "handler"
       },
       {
        "type": "JavaType",
        "name": "propertyTypeHint"
       }
      ],
      "type": null,
      "name": "property"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "writer"
       }
      ],
      "type": null,
      "name": "optionalProperty"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "JsonFormatVisitable",
        "name": "handler"
       },
       {
        "type": "JavaType",
        "name": "propertyTypeHint"
       }
      ],
      "type": null,
      "name": "optionalProperty"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonNumberFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonNumberFormatVisitor",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "type"
       }
      ],
      "type": null,
      "name": "numberType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonStringFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonStringFormatVisitor",
    "methods": [],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonIntegerFormatVisitor.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonIntegerFormatVisitor",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "type"
       }
      ],
      "type": null,
      "name": "numberType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonFormatVisitorWithSerializerProvider.java",
  "package_name": "com.fasterxml.jackson.databind.jsonFormatVisitors",
  "classes": [
   {
    "name": "JsonFormatVisitorWithSerializerProvider",
    "methods": [
     {
      "params": [],
      "type": "SerializerProvider",
      "name": "getProvider"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "setProvider"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonSerialize.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "JacksonStdImpl.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "JsonDeserialize.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "JsonTypeIdResolver.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "JsonPOJOBuilder.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "JsonTypeResolver.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "JsonValueInstantiator.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "JsonAppend.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "NoClass.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": [
   {
    "name": "NoClass",
    "methods": [],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonNaming.java",
  "package_name": "com.fasterxml.jackson.databind.annotation",
  "classes": []
 },
 {
  "filename": "JSONWrappedObject.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "JSONWrappedObject",
    "methods": [
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [],
      "type": "String",
      "name": "getPrefix"
     },
     {
      "params": [],
      "type": "String",
      "name": "getSuffix"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getValue"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getSerializationType"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "_prefix"
     },
     {
      "type": "String",
      "name": "_suffix"
     },
     {
      "type": "Object",
      "name": "_value"
     },
     {
      "type": "JavaType",
      "name": "_serializationType"
     }
    ]
   }
  ]
 },
 {
  "filename": "Named.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "Named",
    "methods": [
     {
      "params": [],
      "type": "String",
      "name": "getName"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "RootNameLookup.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "RootNameLookup",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "rootType"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       }
      ],
      "type": "PropertyName",
      "name": "findRootName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rootType"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       }
      ],
      "type": "PropertyName",
      "name": "findRootName"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "LRUMap",
      "name": "_rootNames"
     }
    ]
   }
  ]
 },
 {
  "filename": "ConstantValueInstantiator.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ConstantValueInstantiator",
    "methods": [
     {
      "params": [],
      "type": "Class",
      "name": "getValueClass"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canInstantiate"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canCreateUsingDefault"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Object",
      "name": "createUsingDefault"
     }
    ],
    "fields": [
     {
      "type": "Object",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "PrimitiveArrayBuilder.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "PrimitiveArrayBuilder",
    "methods": [
     {
      "params": [],
      "type": "int",
      "name": "bufferedSize"
     },
     {
      "params": [],
      "type": "T",
      "name": "resetAndStart"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "fullChunk"
       },
       {
        "type": "int",
        "name": "fullChunkLength"
       }
      ],
      "type": "T",
      "name": "appendCompletedChunk"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "lastChunk"
       },
       {
        "type": "int",
        "name": "lastChunkEntries"
       }
      ],
      "type": "T",
      "name": "completeAndClearBuffer"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": "T",
      "name": "_constructArray"
     },
     {
      "params": [],
      "type": null,
      "name": "_reset"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "INITIAL_CHUNK_SIZE"
     },
     {
      "type": "int",
      "name": "SMALL_CHUNK_SIZE"
     },
     {
      "type": "int",
      "name": "MAX_CHUNK_SIZE"
     },
     {
      "type": "T",
      "name": "_freeBuffer"
     },
     {
      "type": "Node",
      "name": "_bufferHead"
     },
     {
      "type": "Node",
      "name": "_bufferTail"
     },
     {
      "type": "int",
      "name": "_bufferedEntryCount"
     }
    ]
   }
  ]
 },
 {
  "filename": "ClassUtil.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ClassUtil",
    "methods": [
     {
      "params": [],
      "type": "Iterator",
      "name": "emptyIterator"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "Class",
        "name": "endBefore"
       },
       {
        "type": "boolean",
        "name": "addClassItself"
       }
      ],
      "type": "List",
      "name": "findSuperTypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Class",
        "name": "endBefore"
       },
       {
        "type": "boolean",
        "name": "addClassItself"
       }
      ],
      "type": "List",
      "name": "findRawSuperTypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Class",
        "name": "endBefore"
       },
       {
        "type": "boolean",
        "name": "addClassItself"
       }
      ],
      "type": "List",
      "name": "findSuperClasses"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Class",
        "name": "endBefore"
       }
      ],
      "type": "List",
      "name": "findSuperTypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Class",
        "name": "endBefore"
       },
       {
        "type": "List",
        "name": "result"
       }
      ],
      "type": "List",
      "name": "findSuperTypes"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "Class",
        "name": "endBefore"
       },
       {
        "type": "Collection",
        "name": "result"
       },
       {
        "type": "boolean",
        "name": "addClassItself"
       }
      ],
      "type": null,
      "name": "_addSuperTypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Class",
        "name": "endBefore"
       },
       {
        "type": "Collection",
        "name": "result"
       },
       {
        "type": "boolean",
        "name": "addClassItself"
       }
      ],
      "type": null,
      "name": "_addRawSuperTypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "String",
      "name": "canBeABeanType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "boolean",
        "name": "allowNonStatic"
       }
      ],
      "type": "String",
      "name": "isLocalType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "Class",
      "name": "getOuterClass"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "isProxyType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "isConcrete"
     },
     {
      "params": [
       {
        "type": "Member",
        "name": "member"
       }
      ],
      "type": "boolean",
      "name": "isConcrete"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "isCollectionMapOrArray"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "boolean",
      "name": "isBogusClass"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "boolean",
      "name": "isNonStaticInnerClass"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "boolean",
      "name": "isObjectOrPrimitive"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "inst"
       },
       {
        "type": "Class",
        "name": "raw"
       }
      ],
      "type": "boolean",
      "name": "hasClass"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "expType"
       },
       {
        "type": "Object",
        "name": "instance"
       },
       {
        "type": "String",
        "name": "method"
       }
      ],
      "type": null,
      "name": "verifyMustOverride"
     },
     {
      "params": [
       {
        "type": "Method",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "hasGetterSignature"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "Throwable",
      "name": "throwIfError"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "Throwable",
      "name": "throwIfRTE"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "Throwable",
      "name": "throwIfIOE"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "Throwable",
      "name": "getRootCause"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": "Throwable",
      "name": "throwRootCauseIfIOE"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": null,
      "name": "throwAsIAE"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": null,
      "name": "throwAsIAE"
     },
     {
      "params": [
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       },
       {
        "type": "IOException",
        "name": "e0"
       }
      ],
      "type": "T",
      "name": "throwAsMappingException"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       }
      ],
      "type": null,
      "name": "unwrapAndThrowAsIAE"
     },
     {
      "params": [
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "String",
        "name": "msg"
       }
      ],
      "type": null,
      "name": "unwrapAndThrowAsIAE"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Exception",
        "name": "fail"
       }
      ],
      "type": null,
      "name": "closeOnFailAndThrowAsIOE"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Closeable",
        "name": "toClose"
       },
       {
        "type": "Exception",
        "name": "fail"
       }
      ],
      "type": null,
      "name": "closeOnFailAndThrowAsIOE"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "boolean",
        "name": "canFixAccess"
       }
      ],
      "type": "T",
      "name": "createInstance"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "boolean",
        "name": "forceAccess"
       }
      ],
      "type": "Constructor",
      "name": "findConstructor"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "inst"
       }
      ],
      "type": "Class",
      "name": "classOf"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "t"
       }
      ],
      "type": "Class",
      "name": "rawClass"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "valueOrNull"
       },
       {
        "type": "T",
        "name": "defaultValue"
       }
      ],
      "type": "T",
      "name": "nonNull"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "nullOrToString"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ],
      "type": "String",
      "name": "nonNullString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "str"
       },
       {
        "type": "String",
        "name": "forNull"
       }
      ],
      "type": "String",
      "name": "quotedOr"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "classOrInstance"
       }
      ],
      "type": "String",
      "name": "getClassDescription"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "inst"
       }
      ],
      "type": "String",
      "name": "classNameOf"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "String",
      "name": "nameOf"
     },
     {
      "params": [
       {
        "type": "Named",
        "name": "named"
       }
      ],
      "type": "String",
      "name": "nameOf"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "String",
      "name": "backticked"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Object",
      "name": "defaultValue"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "primitiveType"
       }
      ],
      "type": "Class",
      "name": "wrapperType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "Class",
      "name": "primitiveType"
     },
     {
      "params": [
       {
        "type": "Member",
        "name": "member"
       }
      ],
      "type": null,
      "name": "checkAndFixAccess"
     },
     {
      "params": [
       {
        "type": "Member",
        "name": "member"
       },
       {
        "type": "boolean",
        "name": "force"
       }
      ],
      "type": null,
      "name": "checkAndFixAccess"
     },
     {
      "params": [
       {
        "type": "EnumSet",
        "name": "s"
       }
      ],
      "type": "Class",
      "name": "findEnumType"
     },
     {
      "params": [
       {
        "type": "EnumMap",
        "name": "m"
       }
      ],
      "type": "Class",
      "name": "findEnumType"
     },
     {
      "params": [
       {
        "type": "Enum",
        "name": "en"
       }
      ],
      "type": "Class",
      "name": "findEnumType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Class",
      "name": "findEnumType"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "Class",
        "name": "annotationClass"
       }
      ],
      "type": "Enum",
      "name": "findFirstAnnotatedEnumValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "impl"
       }
      ],
      "type": "boolean",
      "name": "isJacksonStdImpl"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "implClass"
       }
      ],
      "type": "boolean",
      "name": "isJacksonStdImpl"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "String",
      "name": "getPackageName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "boolean",
      "name": "hasEnclosingMethod"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Field",
      "name": "getDeclaredFields"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Method",
      "name": "getDeclaredMethods"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Annotation",
      "name": "findClassAnnotations"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Method",
      "name": "getClassMethods"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Ctor",
      "name": "getConstructors"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Class",
      "name": "getDeclaringClass"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Type",
      "name": "getGenericSuperclass"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Type",
      "name": "getGenericInterfaces"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Class",
      "name": "getEnclosingClass"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Class",
      "name": "_interfaces"
     }
    ],
    "fields": [
     {
      "type": "Class",
      "name": "CLS_OBJECT"
     },
     {
      "type": "Annotation",
      "name": "NO_ANNOTATIONS"
     },
     {
      "type": "Ctor",
      "name": "NO_CTORS"
     },
     {
      "type": "Iterator",
      "name": "EMPTY_ITERATOR"
     }
    ]
   }
  ]
 },
 {
  "filename": "ArrayIterator.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ArrayIterator",
    "methods": [
     {
      "params": [],
      "type": "boolean",
      "name": "hasNext"
     },
     {
      "params": [],
      "type": "T",
      "name": "next"
     },
     {
      "params": [],
      "type": null,
      "name": "remove"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "iterator"
     }
    ],
    "fields": [
     {
      "type": "T",
      "name": "_a"
     },
     {
      "type": "int",
      "name": "_index"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdConverter.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "StdConverter",
    "methods": [
     {
      "params": [
       {
        "type": "IN",
        "name": "value"
       }
      ],
      "type": "OUT",
      "name": "convert"
     },
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "typeFactory"
       }
      ],
      "type": "JavaType",
      "name": "getInputType"
     },
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "typeFactory"
       }
      ],
      "type": "JavaType",
      "name": "getOutputType"
     },
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "tf"
       }
      ],
      "type": "JavaType",
      "name": "_findConverterType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "TokenBuffer.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "TokenBuffer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": "TokenBuffer",
      "name": "asCopyOfValue"
     },
     {
      "params": [
       {
        "type": "JsonStreamContext",
        "name": "ctxt"
       }
      ],
      "type": "TokenBuffer",
      "name": "overrideParentContext"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "b"
       }
      ],
      "type": "TokenBuffer",
      "name": "forceUseOfBigDecimal"
     },
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "asParser"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "asParserOnFirstToken"
     },
     {
      "params": [
       {
        "type": "ObjectCodec",
        "name": "codec"
       }
      ],
      "type": "JsonParser",
      "name": "asParser"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "src"
       }
      ],
      "type": "JsonParser",
      "name": "asParser"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "firstToken"
     },
     {
      "params": [
       {
        "type": "TokenBuffer",
        "name": "other"
       }
      ],
      "type": "TokenBuffer",
      "name": "append"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "TokenBuffer",
      "name": "deserialize"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       }
      ],
      "type": null,
      "name": "_appendNativeIds"
     },
     {
      "params": [
       {
        "type": "Feature",
        "name": "f"
       }
      ],
      "type": "JsonGenerator",
      "name": "enable"
     },
     {
      "params": [
       {
        "type": "Feature",
        "name": "f"
       }
      ],
      "type": "JsonGenerator",
      "name": "disable"
     },
     {
      "params": [
       {
        "type": "Feature",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isEnabled"
     },
     {
      "params": [],
      "type": "int",
      "name": "getFeatureMask"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "mask"
       }
      ],
      "type": "JsonGenerator",
      "name": "setFeatureMask"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "mask"
       }
      ],
      "type": "JsonGenerator",
      "name": "overrideStdFeatures"
     },
     {
      "params": [],
      "type": "JsonGenerator",
      "name": "useDefaultPrettyPrinter"
     },
     {
      "params": [
       {
        "type": "ObjectCodec",
        "name": "oc"
       }
      ],
      "type": "JsonGenerator",
      "name": "setCodec"
     },
     {
      "params": [],
      "type": "ObjectCodec",
      "name": "getCodec"
     },
     {
      "params": [],
      "type": "JsonWriteContext",
      "name": "getOutputContext"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canWriteBinaryNatively"
     },
     {
      "params": [],
      "type": null,
      "name": "flush"
     },
     {
      "params": [],
      "type": null,
      "name": "close"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isClosed"
     },
     {
      "params": [],
      "type": null,
      "name": "writeStartArray"
     },
     {
      "params": [],
      "type": null,
      "name": "writeEndArray"
     },
     {
      "params": [],
      "type": null,
      "name": "writeStartObject"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "forValue"
       }
      ],
      "type": null,
      "name": "writeStartObject"
     },
     {
      "params": [],
      "type": null,
      "name": "writeEndObject"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": null,
      "name": "writeFieldName"
     },
     {
      "params": [
       {
        "type": "SerializableString",
        "name": "name"
       }
      ],
      "type": null,
      "name": "writeFieldName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": null,
      "name": "writeString"
     },
     {
      "params": [
       {
        "type": "char",
        "name": "text"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": null,
      "name": "writeString"
     },
     {
      "params": [
       {
        "type": "SerializableString",
        "name": "text"
       }
      ],
      "type": null,
      "name": "writeString"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "text"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ],
      "type": null,
      "name": "writeRawUTF8String"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "text"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ],
      "type": null,
      "name": "writeUTF8String"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": null,
      "name": "writeRaw"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": null,
      "name": "writeRaw"
     },
     {
      "params": [
       {
        "type": "SerializableString",
        "name": "text"
       }
      ],
      "type": null,
      "name": "writeRaw"
     },
     {
      "params": [
       {
        "type": "char",
        "name": "text"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": null,
      "name": "writeRaw"
     },
     {
      "params": [
       {
        "type": "char",
        "name": "c"
       }
      ],
      "type": null,
      "name": "writeRaw"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": null,
      "name": "writeRawValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": null,
      "name": "writeRawValue"
     },
     {
      "params": [
       {
        "type": "char",
        "name": "text"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": null,
      "name": "writeRawValue"
     },
     {
      "params": [
       {
        "type": "short",
        "name": "i"
       }
      ],
      "type": null,
      "name": "writeNumber"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "i"
       }
      ],
      "type": null,
      "name": "writeNumber"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "l"
       }
      ],
      "type": null,
      "name": "writeNumber"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "d"
       }
      ],
      "type": null,
      "name": "writeNumber"
     },
     {
      "params": [
       {
        "type": "float",
        "name": "f"
       }
      ],
      "type": null,
      "name": "writeNumber"
     },
     {
      "params": [
       {
        "type": "BigDecimal",
        "name": "dec"
       }
      ],
      "type": null,
      "name": "writeNumber"
     },
     {
      "params": [
       {
        "type": "BigInteger",
        "name": "v"
       }
      ],
      "type": null,
      "name": "writeNumber"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "encodedValue"
       }
      ],
      "type": null,
      "name": "writeNumber"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": null,
      "name": "writeBoolean"
     },
     {
      "params": [],
      "type": null,
      "name": "writeNull"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "writeObject"
     },
     {
      "params": [
       {
        "type": "TreeNode",
        "name": "node"
       }
      ],
      "type": null,
      "name": "writeTree"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "b64variant"
       },
       {
        "type": "byte",
        "name": "data"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": null,
      "name": "writeBinary"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "b64variant"
       },
       {
        "type": "InputStream",
        "name": "data"
       },
       {
        "type": "int",
        "name": "dataLength"
       }
      ],
      "type": "int",
      "name": "writeBinary"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canWriteTypeId"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canWriteObjectId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "id"
       }
      ],
      "type": null,
      "name": "writeTypeId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "id"
       }
      ],
      "type": null,
      "name": "writeObjectId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "type": null,
      "name": "writeEmbeddedObject"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": null,
      "name": "copyCurrentEvent"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       }
      ],
      "type": null,
      "name": "copyCurrentStructure"
     },
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "jp"
       }
      ],
      "type": null,
      "name": "_checkNativeIds"
     },
     {
      "params": [
       {
        "type": "JsonToken",
        "name": "type"
       }
      ],
      "type": null,
      "name": "_append"
     },
     {
      "params": [
       {
        "type": "JsonToken",
        "name": "type"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "_append"
     },
     {
      "params": [
       {
        "type": "JsonToken",
        "name": "type"
       }
      ],
      "type": null,
      "name": "_appendValue"
     },
     {
      "params": [
       {
        "type": "JsonToken",
        "name": "type"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "_appendValue"
     },
     {
      "params": [],
      "type": null,
      "name": "_reportUnsupportedOperation"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "DEFAULT_GENERATOR_FEATURES"
     },
     {
      "type": "ObjectCodec",
      "name": "_objectCodec"
     },
     {
      "type": "JsonStreamContext",
      "name": "_parentContext"
     },
     {
      "type": "int",
      "name": "_generatorFeatures"
     },
     {
      "type": "boolean",
      "name": "_closed"
     },
     {
      "type": "boolean",
      "name": "_hasNativeTypeIds"
     },
     {
      "type": "boolean",
      "name": "_hasNativeObjectIds"
     },
     {
      "type": "boolean",
      "name": "_mayHaveNativeIds"
     },
     {
      "type": "boolean",
      "name": "_forceBigDecimal"
     },
     {
      "type": "Segment",
      "name": "_first"
     },
     {
      "type": "Segment",
      "name": "_last"
     },
     {
      "type": "int",
      "name": "_appendAt"
     },
     {
      "type": "Object",
      "name": "_typeId"
     },
     {
      "type": "Object",
      "name": "_objectId"
     },
     {
      "type": "boolean",
      "name": "_hasNativeId"
     },
     {
      "type": "JsonWriteContext",
      "name": "_writeContext"
     }
    ]
   }
  ]
 },
 {
  "filename": "ViewMatcher.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ViewMatcher",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "activeView"
       }
      ],
      "type": "boolean",
      "name": "isVisibleForView"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "views"
       }
      ],
      "type": "ViewMatcher",
      "name": "construct"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ViewMatcher",
      "name": "EMPTY"
     }
    ]
   }
  ]
 },
 {
  "filename": "ISO8601DateFormat.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ISO8601DateFormat",
    "methods": [
     {
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "StringBuffer",
        "name": "toAppendTo"
       },
       {
        "type": "FieldPosition",
        "name": "fieldPosition"
       }
      ],
      "type": "StringBuffer",
      "name": "format"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "source"
       },
       {
        "type": "ParsePosition",
        "name": "pos"
       }
      ],
      "type": "Date",
      "name": "parse"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "source"
       }
      ],
      "type": "Date",
      "name": "parse"
     },
     {
      "params": [],
      "type": "Object",
      "name": "clone"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "Converter.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "Converter",
    "methods": [
     {
      "params": [
       {
        "type": "IN",
        "name": "value"
       }
      ],
      "type": "OUT",
      "name": "convert"
     },
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "typeFactory"
       }
      ],
      "type": "JavaType",
      "name": "getInputType"
     },
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "typeFactory"
       }
      ],
      "type": "JavaType",
      "name": "getOutputType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "EnumResolver.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "EnumResolver",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "enumCls"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "EnumResolver",
      "name": "constructFor"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumCls"
       }
      ],
      "type": "EnumResolver",
      "name": "constructUsingToString"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumCls"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "EnumResolver",
      "name": "constructUsingToString"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumCls"
       },
       {
        "type": "AnnotatedMember",
        "name": "accessor"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "EnumResolver",
      "name": "constructUsingMethod"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawEnumCls"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "EnumResolver",
      "name": "constructUnsafe"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawEnumCls"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "EnumResolver",
      "name": "constructUnsafeUsingToString"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawEnumCls"
       },
       {
        "type": "AnnotatedMember",
        "name": "accessor"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": "EnumResolver",
      "name": "constructUnsafeUsingMethod"
     },
     {
      "params": [],
      "type": "CompactStringObjectMap",
      "name": "constructLookup"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "Enum",
      "name": "findEnum"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "Enum",
      "name": "getEnum"
     },
     {
      "params": [],
      "type": "Enum",
      "name": "getDefaultValue"
     },
     {
      "params": [],
      "type": "Enum",
      "name": "getRawEnums"
     },
     {
      "params": [],
      "type": "List",
      "name": "getEnums"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "getEnumIds"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getEnumClass"
     },
     {
      "params": [],
      "type": "int",
      "name": "lastValidIndex"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "_enumClass"
     },
     {
      "type": "Enum",
      "name": "_enums"
     },
     {
      "type": "HashMap",
      "name": "_enumsById"
     },
     {
      "type": "Enum",
      "name": "_defaultValue"
     }
    ]
   }
  ]
 },
 {
  "filename": "CompactStringObjectMap.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "CompactStringObjectMap",
    "methods": [
     {
      "params": [
       {
        "type": "Map",
        "name": "all"
       }
      ],
      "type": "CompactStringObjectMap",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "size"
       }
      ],
      "type": "int",
      "name": "findSize"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "Object",
      "name": "find"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "int",
        "name": "slot"
       },
       {
        "type": "Object",
        "name": "match"
       }
      ],
      "type": "Object",
      "name": "_find2"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "key"
       }
      ],
      "type": "Object",
      "name": "findCaseInsensitive"
     },
     {
      "params": [],
      "type": "List",
      "name": "keys"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "CompactStringObjectMap",
      "name": "EMPTY"
     },
     {
      "type": "int",
      "name": "_hashMask"
     },
     {
      "type": "int",
      "name": "_spillCount"
     },
     {
      "type": "Object",
      "name": "_hashArea"
     }
    ]
   }
  ]
 },
 {
  "filename": "ISO8601Utils.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ISO8601Utils",
    "methods": [
     {
      "params": [
       {
        "type": "Date",
        "name": "date"
       }
      ],
      "type": "String",
      "name": "format"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "boolean",
        "name": "millis"
       }
      ],
      "type": "String",
      "name": "format"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "boolean",
        "name": "millis"
       },
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": "String",
      "name": "format"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "boolean",
        "name": "millis"
       },
       {
        "type": "TimeZone",
        "name": "tz"
       },
       {
        "type": "Locale",
        "name": "loc"
       }
      ],
      "type": "String",
      "name": "format"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "date"
       },
       {
        "type": "ParsePosition",
        "name": "pos"
       }
      ],
      "type": "Date",
      "name": "parse"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "char",
        "name": "expected"
       }
      ],
      "type": "boolean",
      "name": "checkOffset"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "int",
        "name": "beginIndex"
       },
       {
        "type": "int",
        "name": "endIndex"
       }
      ],
      "type": "int",
      "name": "parseInt"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "string"
       },
       {
        "type": "int",
        "name": "offset"
       }
      ],
      "type": "int",
      "name": "indexOfNonDigit"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "DEF_8601_LEN"
     },
     {
      "type": "TimeZone",
      "name": "TIMEZONE_Z"
     }
    ]
   }
  ]
 },
 {
  "filename": "SimpleBeanPropertyDefinition.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "SimpleBeanPropertyDefinition",
    "methods": [
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "SimpleBeanPropertyDefinition",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "member"
       },
       {
        "type": "PropertyName",
        "name": "name"
       }
      ],
      "type": "SimpleBeanPropertyDefinition",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "member"
       },
       {
        "type": "PropertyName",
        "name": "name"
       },
       {
        "type": "PropertyMetadata",
        "name": "metadata"
       },
       {
        "type": "JsonInclude",
        "name": "inclusion"
       }
      ],
      "type": "SimpleBeanPropertyDefinition",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "member"
       },
       {
        "type": "PropertyName",
        "name": "name"
       },
       {
        "type": "PropertyMetadata",
        "name": "metadata"
       },
       {
        "type": "JsonInclude",
        "name": "inclusion"
       }
      ],
      "type": "SimpleBeanPropertyDefinition",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "newName"
       }
      ],
      "type": "BeanPropertyDefinition",
      "name": "withSimpleName"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "BeanPropertyDefinition",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "PropertyMetadata",
        "name": "metadata"
       }
      ],
      "type": "BeanPropertyDefinition",
      "name": "withMetadata"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "inclusion"
       }
      ],
      "type": "BeanPropertyDefinition",
      "name": "withInclusion"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getFullName"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "name"
       }
      ],
      "type": "boolean",
      "name": "hasName"
     },
     {
      "params": [],
      "type": "String",
      "name": "getInternalName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getWrapperName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isExplicitlyIncluded"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isExplicitlyNamed"
     },
     {
      "params": [],
      "type": "PropertyMetadata",
      "name": "getMetadata"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getPrimaryType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawPrimaryType"
     },
     {
      "params": [],
      "type": "JsonInclude",
      "name": "findInclusion"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasGetter"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasSetter"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasField"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasConstructorParameter"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "getGetter"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "getSetter"
     },
     {
      "params": [],
      "type": "AnnotatedField",
      "name": "getField"
     },
     {
      "params": [],
      "type": "AnnotatedParameter",
      "name": "getConstructorParameter"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "getConstructorParameters"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getPrimaryMember"
     }
    ],
    "fields": [
     {
      "type": "AnnotationIntrospector",
      "name": "_annotationIntrospector"
     },
     {
      "type": "AnnotatedMember",
      "name": "_member"
     },
     {
      "type": "PropertyMetadata",
      "name": "_metadata"
     },
     {
      "type": "PropertyName",
      "name": "_fullName"
     },
     {
      "type": "JsonInclude",
      "name": "_inclusion"
     }
    ]
   }
  ]
 },
 {
  "filename": "AccessPattern.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "AccessPattern",
    "methods": [],
    "fields": []
   }
  ]
 },
 {
  "filename": "StdDateFormat.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "StdDateFormat",
    "methods": [
     {
      "params": [],
      "type": "TimeZone",
      "name": "getDefaultTimeZone"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": "StdDateFormat",
      "name": "withTimeZone"
     },
     {
      "params": [
       {
        "type": "Locale",
        "name": "loc"
       }
      ],
      "type": "StdDateFormat",
      "name": "withLocale"
     },
     {
      "params": [
       {
        "type": "Boolean",
        "name": "b"
       }
      ],
      "type": "StdDateFormat",
      "name": "withLenient"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "b"
       }
      ],
      "type": "StdDateFormat",
      "name": "withColonInTimeZone"
     },
     {
      "params": [],
      "type": "StdDateFormat",
      "name": "clone"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       },
       {
        "type": "Locale",
        "name": "loc"
       }
      ],
      "type": "DateFormat",
      "name": "getISO8601Format"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       },
       {
        "type": "Locale",
        "name": "loc"
       }
      ],
      "type": "DateFormat",
      "name": "getRFC1123Format"
     },
     {
      "params": [],
      "type": "TimeZone",
      "name": "getTimeZone"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": null,
      "name": "setTimeZone"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "enabled"
       }
      ],
      "type": null,
      "name": "setLenient"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isLenient"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isColonIncludedInTimeZone"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "dateStr"
       }
      ],
      "type": "Date",
      "name": "parse"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "dateStr"
       },
       {
        "type": "ParsePosition",
        "name": "pos"
       }
      ],
      "type": "Date",
      "name": "parse"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "dateStr"
       },
       {
        "type": "ParsePosition",
        "name": "pos"
       }
      ],
      "type": "Date",
      "name": "_parseDate"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "StringBuffer",
        "name": "toAppendTo"
       },
       {
        "type": "FieldPosition",
        "name": "fieldPosition"
       }
      ],
      "type": "StringBuffer",
      "name": "format"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       },
       {
        "type": "Locale",
        "name": "loc"
       },
       {
        "type": "Date",
        "name": "date"
       },
       {
        "type": "StringBuffer",
        "name": "buffer"
       }
      ],
      "type": null,
      "name": "_format"
     },
     {
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "int",
        "name": "value"
       }
      ],
      "type": null,
      "name": "pad2"
     },
     {
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "int",
        "name": "value"
       }
      ],
      "type": null,
      "name": "pad3"
     },
     {
      "params": [
       {
        "type": "StringBuffer",
        "name": "buffer"
       },
       {
        "type": "int",
        "name": "value"
       }
      ],
      "type": null,
      "name": "pad4"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": "String",
      "name": "toPattern"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "dateStr"
       }
      ],
      "type": "boolean",
      "name": "looksLikeISO8601"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "longStr"
       },
       {
        "type": "ParsePosition",
        "name": "pos"
       }
      ],
      "type": "Date",
      "name": "_parseDateFromLong"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "dateStr"
       },
       {
        "type": "ParsePosition",
        "name": "pos"
       }
      ],
      "type": "Date",
      "name": "parseAsISO8601"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "dateStr"
       },
       {
        "type": "ParsePosition",
        "name": "bogus"
       }
      ],
      "type": "Date",
      "name": "_parseAsISO8601"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "int",
      "name": "_parse4D"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "int",
      "name": "_parse2D"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "dateStr"
       },
       {
        "type": "ParsePosition",
        "name": "pos"
       }
      ],
      "type": "Date",
      "name": "parseAsRFC1123"
     },
     {
      "params": [
       {
        "type": "DateFormat",
        "name": "df"
       },
       {
        "type": "String",
        "name": "format"
       },
       {
        "type": "TimeZone",
        "name": "tz"
       },
       {
        "type": "Locale",
        "name": "loc"
       },
       {
        "type": "Boolean",
        "name": "lenient"
       }
      ],
      "type": "DateFormat",
      "name": "_cloneFormat"
     },
     {
      "params": [],
      "type": null,
      "name": "_clearFormats"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "tz"
       }
      ],
      "type": "Calendar",
      "name": "_getCalendar"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value1"
       },
       {
        "type": "T",
        "name": "value2"
       }
      ],
      "type": "boolean",
      "name": "_equals"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "PATTERN_PLAIN_STR"
     },
     {
      "type": "Pattern",
      "name": "PATTERN_PLAIN"
     },
     {
      "type": "Pattern",
      "name": "PATTERN_ISO8601"
     },
     {
      "type": "String",
      "name": "DATE_FORMAT_STR_ISO8601"
     },
     {
      "type": "String",
      "name": "DATE_FORMAT_STR_PLAIN"
     },
     {
      "type": "String",
      "name": "DATE_FORMAT_STR_RFC1123"
     },
     {
      "type": "String",
      "name": "ALL_FORMATS"
     },
     {
      "type": "TimeZone",
      "name": "DEFAULT_TIMEZONE"
     },
     {
      "type": "Locale",
      "name": "DEFAULT_LOCALE"
     },
     {
      "type": "DateFormat",
      "name": "DATE_FORMAT_RFC1123"
     },
     {
      "type": "DateFormat",
      "name": "DATE_FORMAT_ISO8601"
     },
     {
      "type": "StdDateFormat",
      "name": "instance"
     },
     {
      "type": "Calendar",
      "name": "CALENDAR"
     },
     {
      "type": "TimeZone",
      "name": "_timezone"
     },
     {
      "type": "Locale",
      "name": "_locale"
     },
     {
      "type": "Boolean",
      "name": "_lenient"
     },
     {
      "type": "Calendar",
      "name": "_calendar"
     },
     {
      "type": "DateFormat",
      "name": "_formatRFC1123"
     },
     {
      "type": "boolean",
      "name": "_tzSerializedWithColon"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": []
 },
 {
  "filename": "NameTransformer.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "NameTransformer",
    "methods": [
     {
      "params": [
       {
        "type": "String",
        "name": "prefix"
       },
       {
        "type": "String",
        "name": "suffix"
       }
      ],
      "type": "NameTransformer",
      "name": "simpleTransformer"
     },
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "t1"
       },
       {
        "type": "NameTransformer",
        "name": "t2"
       }
      ],
      "type": "NameTransformer",
      "name": "chainedTransformer"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": "String",
      "name": "transform"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "transformed"
       }
      ],
      "type": "String",
      "name": "reverse"
     }
    ],
    "fields": [
     {
      "type": "NameTransformer",
      "name": "NOP"
     }
    ]
   }
  ]
 },
 {
  "filename": "LinkedNode.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "LinkedNode",
    "methods": [
     {
      "params": [
       {
        "type": "LinkedNode",
        "name": "n"
       }
      ],
      "type": null,
      "name": "linkNext"
     },
     {
      "params": [],
      "type": "LinkedNode",
      "name": "next"
     },
     {
      "params": [],
      "type": "T",
      "name": "value"
     },
     {
      "params": [
       {
        "type": "LinkedNode",
        "name": "node"
       },
       {
        "type": "ST",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "contains"
     }
    ],
    "fields": [
     {
      "type": "T",
      "name": "value"
     },
     {
      "type": "LinkedNode",
      "name": "next"
     }
    ]
   }
  ]
 },
 {
  "filename": "ByteBufferBackedInputStream.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ByteBufferBackedInputStream",
    "methods": [
     {
      "params": [],
      "type": "int",
      "name": "available"
     },
     {
      "params": [],
      "type": "int",
      "name": "read"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "bytes"
       },
       {
        "type": "int",
        "name": "off"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": "int",
      "name": "read"
     }
    ],
    "fields": [
     {
      "type": "ByteBuffer",
      "name": "_b"
     }
    ]
   }
  ]
 },
 {
  "filename": "JSONPObject.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "JSONPObject",
    "methods": [
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [],
      "type": "String",
      "name": "getFunction"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getValue"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getSerializationType"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "_function"
     },
     {
      "type": "Object",
      "name": "_value"
     },
     {
      "type": "JavaType",
      "name": "_serializationType"
     }
    ]
   }
  ]
 },
 {
  "filename": "TokenBufferReadContext.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "TokenBufferReadContext",
    "methods": [
     {
      "params": [],
      "type": "Object",
      "name": "getCurrentValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "v"
       }
      ],
      "type": null,
      "name": "setCurrentValue"
     },
     {
      "params": [
       {
        "type": "JsonStreamContext",
        "name": "origContext"
       }
      ],
      "type": "TokenBufferReadContext",
      "name": "createRootContext"
     },
     {
      "params": [],
      "type": "TokenBufferReadContext",
      "name": "createChildArrayContext"
     },
     {
      "params": [],
      "type": "TokenBufferReadContext",
      "name": "createChildObjectContext"
     },
     {
      "params": [],
      "type": "TokenBufferReadContext",
      "name": "parentOrCopy"
     },
     {
      "params": [],
      "type": "String",
      "name": "getCurrentName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasCurrentName"
     },
     {
      "params": [],
      "type": "JsonStreamContext",
      "name": "getParent"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": null,
      "name": "setCurrentName"
     }
    ],
    "fields": [
     {
      "type": "JsonStreamContext",
      "name": "_parent"
     },
     {
      "type": "JsonLocation",
      "name": "_startLocation"
     },
     {
      "type": "String",
      "name": "_currentName"
     },
     {
      "type": "Object",
      "name": "_currentValue"
     }
    ]
   }
  ]
 },
 {
  "filename": "LRUMap.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "LRUMap",
    "methods": [
     {
      "params": [
       {
        "type": "K",
        "name": "key"
       },
       {
        "type": "V",
        "name": "value"
       }
      ],
      "type": "V",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "K",
        "name": "key"
       },
       {
        "type": "V",
        "name": "value"
       }
      ],
      "type": "V",
      "name": "putIfAbsent"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "V",
      "name": "get"
     },
     {
      "params": [],
      "type": null,
      "name": "clear"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [
       {
        "type": "ObjectInputStream",
        "name": "in"
       }
      ],
      "type": null,
      "name": "readObject"
     },
     {
      "params": [
       {
        "type": "ObjectOutputStream",
        "name": "out"
       }
      ],
      "type": null,
      "name": "writeObject"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "_maxEntries"
     },
     {
      "type": "ConcurrentHashMap",
      "name": "_map"
     },
     {
      "type": "int",
      "name": "_jdkSerializeMaxEntries"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectBuffer.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ObjectBuffer",
    "methods": [
     {
      "params": [],
      "type": "Object",
      "name": "resetAndStart"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "base"
       },
       {
        "type": "int",
        "name": "count"
       }
      ],
      "type": "Object",
      "name": "resetAndStart"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "fullChunk"
       }
      ],
      "type": "Object",
      "name": "appendCompletedChunk"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "lastChunk"
       },
       {
        "type": "int",
        "name": "lastChunkEntries"
       }
      ],
      "type": "Object",
      "name": "completeAndClearBuffer"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "lastChunk"
       },
       {
        "type": "int",
        "name": "lastChunkEntries"
       },
       {
        "type": "Class",
        "name": "componentType"
       }
      ],
      "type": "T",
      "name": "completeAndClearBuffer"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "lastChunk"
       },
       {
        "type": "int",
        "name": "lastChunkEntries"
       },
       {
        "type": "List",
        "name": "resultList"
       }
      ],
      "type": null,
      "name": "completeAndClearBuffer"
     },
     {
      "params": [],
      "type": "int",
      "name": "initialCapacity"
     },
     {
      "params": [],
      "type": "int",
      "name": "bufferedSize"
     },
     {
      "params": [],
      "type": null,
      "name": "_reset"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "resultArray"
       },
       {
        "type": "int",
        "name": "totalSize"
       },
       {
        "type": "Object",
        "name": "lastChunk"
       },
       {
        "type": "int",
        "name": "lastChunkEntries"
       }
      ],
      "type": null,
      "name": "_copyTo"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "SMALL_CHUNK"
     },
     {
      "type": "int",
      "name": "MAX_CHUNK"
     },
     {
      "type": "LinkedNode",
      "name": "_head"
     },
     {
      "type": "LinkedNode",
      "name": "_tail"
     },
     {
      "type": "int",
      "name": "_size"
     },
     {
      "type": "Object",
      "name": "_freeBuffer"
     }
    ]
   }
  ]
 },
 {
  "filename": "Annotations.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "Annotations",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "A",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "boolean",
      "name": "has"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "annoClasses"
       }
      ],
      "type": "boolean",
      "name": "hasOneOf"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BeanUtil.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "BeanUtil",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       },
       {
        "type": "boolean",
        "name": "stdNaming"
       }
      ],
      "type": "String",
      "name": "okNameForGetter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "boolean",
        "name": "stdNaming"
       }
      ],
      "type": "String",
      "name": "okNameForRegularGetter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "boolean",
        "name": "stdNaming"
       }
      ],
      "type": "String",
      "name": "okNameForIsGetter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       },
       {
        "type": "boolean",
        "name": "stdNaming"
       }
      ],
      "type": "String",
      "name": "okNameForSetter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       },
       {
        "type": "String",
        "name": "prefix"
       },
       {
        "type": "boolean",
        "name": "stdNaming"
       }
      ],
      "type": "String",
      "name": "okNameForMutator"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "Object",
      "name": "getDefaultValue"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "isCglibGetCallbacks"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "isGroovyMetaClassSetter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "isGroovyMetaClassGetter"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "basename"
       },
       {
        "type": "int",
        "name": "offset"
       }
      ],
      "type": "String",
      "name": "legacyManglePropertyName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "basename"
       },
       {
        "type": "int",
        "name": "offset"
       }
      ],
      "type": "String",
      "name": "stdManglePropertyName"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "RawValue.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "RawValue",
    "methods": [
     {
      "params": [],
      "type": "Object",
      "name": "rawValue"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "_serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "Object",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "EnumValues.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "EnumValues",
    "methods": [
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "enumClass"
       }
      ],
      "type": "EnumValues",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "enumClass"
       }
      ],
      "type": "EnumValues",
      "name": "constructFromName"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "enumClass"
       }
      ],
      "type": "EnumValues",
      "name": "constructFromToString"
     },
     {
      "params": [
       {
        "type": "Enum",
        "name": "key"
       }
      ],
      "type": "SerializableString",
      "name": "serializedValueFor"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "values"
     },
     {
      "params": [],
      "type": "List",
      "name": "enums"
     },
     {
      "params": [],
      "type": "EnumMap",
      "name": "internalMap"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getEnumClass"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "_enumClass"
     },
     {
      "type": "Enum",
      "name": "_values"
     },
     {
      "type": "SerializableString",
      "name": "_textual"
     },
     {
      "type": "EnumMap",
      "name": "_asMap"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeKey.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "TypeKey",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "int",
      "name": "untypedHash"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "int",
      "name": "typedHash"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "int",
      "name": "untypedHash"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "int",
      "name": "typedHash"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": null,
      "name": "resetTyped"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": null,
      "name": "resetUntyped"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": null,
      "name": "resetTyped"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": null,
      "name": "resetUntyped"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isTyped"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "_hashCode"
     },
     {
      "type": "Class",
      "name": "_class"
     },
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "boolean",
      "name": "_isTyped"
     }
    ]
   }
  ]
 },
 {
  "filename": "ByteBufferBackedOutputStream.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ByteBufferBackedOutputStream",
    "methods": [
     {
      "params": [
       {
        "type": "int",
        "name": "b"
       }
      ],
      "type": null,
      "name": "write"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "bytes"
       },
       {
        "type": "int",
        "name": "off"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": null,
      "name": "write"
     }
    ],
    "fields": [
     {
      "type": "ByteBuffer",
      "name": "_b"
     }
    ]
   }
  ]
 },
 {
  "filename": "ArrayBuilders.java",
  "package_name": "com.fasterxml.jackson.databind.util",
  "classes": [
   {
    "name": "ArrayBuilders",
    "methods": [
     {
      "params": [],
      "type": "BooleanBuilder",
      "name": "getBooleanBuilder"
     },
     {
      "params": [],
      "type": "ByteBuilder",
      "name": "getByteBuilder"
     },
     {
      "params": [],
      "type": "ShortBuilder",
      "name": "getShortBuilder"
     },
     {
      "params": [],
      "type": "IntBuilder",
      "name": "getIntBuilder"
     },
     {
      "params": [],
      "type": "LongBuilder",
      "name": "getLongBuilder"
     },
     {
      "params": [],
      "type": "FloatBuilder",
      "name": "getFloatBuilder"
     },
     {
      "params": [],
      "type": "DoubleBuilder",
      "name": "getDoubleBuilder"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "defaultValue"
       }
      ],
      "type": "Object",
      "name": "getArrayComparator"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "elements"
       }
      ],
      "type": "HashSet",
      "name": "arrayToSet"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "array"
       },
       {
        "type": "T",
        "name": "element"
       }
      ],
      "type": "T",
      "name": "insertInListNoDup"
     }
    ],
    "fields": [
     {
      "type": "BooleanBuilder",
      "name": "_booleanBuilder"
     },
     {
      "type": "ByteBuilder",
      "name": "_byteBuilder"
     },
     {
      "type": "ShortBuilder",
      "name": "_shortBuilder"
     },
     {
      "type": "IntBuilder",
      "name": "_intBuilder"
     },
     {
      "type": "LongBuilder",
      "name": "_longBuilder"
     },
     {
      "type": "FloatBuilder",
      "name": "_floatBuilder"
     },
     {
      "type": "DoubleBuilder",
      "name": "_doubleBuilder"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyFilter.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "PropertyFilter",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "PropertyWriter",
        "name": "writer"
       }
      ],
      "type": null,
      "name": "serializeAsField"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "elementValue"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "PropertyWriter",
        "name": "writer"
       }
      ],
      "type": null,
      "name": "serializeAsElement"
     },
     {
      "params": [
       {
        "type": "PropertyWriter",
        "name": "writer"
       },
       {
        "type": "ObjectNode",
        "name": "propertiesNode"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "PropertyWriter",
        "name": "writer"
       },
       {
        "type": "JsonObjectFormatVisitor",
        "name": "objectVisitor"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "PropertyBuilder.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "PropertyBuilder",
    "methods": [
     {
      "params": [],
      "type": "Annotations",
      "name": "getClassAnnotations"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDef"
       },
       {
        "type": "JavaType",
        "name": "declaredType"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       },
       {
        "type": "TypeSerializer",
        "name": "contentTypeSer"
       },
       {
        "type": "AnnotatedMember",
        "name": "am"
       },
       {
        "type": "boolean",
        "name": "defaultUseStaticTyping"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "buildWriter"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "boolean",
        "name": "useStaticTyping"
       },
       {
        "type": "JavaType",
        "name": "declaredType"
       }
      ],
      "type": "JavaType",
      "name": "findSerializationType"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getDefaultBean"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "AnnotatedMember",
        "name": "member"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "Object",
      "name": "getPropertyDefaultValue"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "Object",
      "name": "getDefaultValue"
     },
     {
      "params": [
       {
        "type": "Exception",
        "name": "e"
       },
       {
        "type": "String",
        "name": "propName"
       },
       {
        "type": "Object",
        "name": "defaultBean"
       }
      ],
      "type": "Object",
      "name": "_throwWrapped"
     }
    ],
    "fields": [
     {
      "type": "Object",
      "name": "NO_DEFAULT_MARKER"
     },
     {
      "type": "SerializationConfig",
      "name": "_config"
     },
     {
      "type": "BeanDescription",
      "name": "_beanDesc"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_annotationIntrospector"
     },
     {
      "type": "Object",
      "name": "_defaultBean"
     },
     {
      "type": "JsonInclude",
      "name": "_defaultInclusion"
     },
     {
      "type": "boolean",
      "name": "_useRealPropertyDefaults"
     }
    ]
   }
  ]
 },
 {
  "filename": "ResolvableSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "ResolvableSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "resolve"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BeanPropertyWriter.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "BeanPropertyWriter",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "transformer"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "rename"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "_new"
     },
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "assignTypeSerializer"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "assignSerializer"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "nullSer"
       }
      ],
      "type": null,
      "name": "assignNullSerializer"
     },
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "unwrappingWriter"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "t"
       }
      ],
      "type": null,
      "name": "setNonTrivialBaseType"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getFullName"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getWrapperName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getContextAnnotation"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "ObjectNode",
        "name": "propertiesNode"
       },
       {
        "type": "JsonNode",
        "name": "schemaNode"
       }
      ],
      "type": null,
      "name": "_depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "Object",
      "name": "getInternalSetting"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "setInternalSetting"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "Object",
      "name": "removeInternalSetting"
     },
     {
      "params": [],
      "type": "SerializableString",
      "name": "getSerializedName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasSerializer"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasNullSerializer"
     },
     {
      "params": [],
      "type": "TypeSerializer",
      "name": "getTypeSerializer"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isUnwrapping"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "willSuppressNulls"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "name"
       }
      ],
      "type": "boolean",
      "name": "wouldConflictWithName"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getSerializer"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getSerializationType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawSerializationType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getPropertyType"
     },
     {
      "params": [],
      "type": "Type",
      "name": "getGenericPropertyType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getViews"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": null,
      "name": "serializeAsField"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": null,
      "name": "serializeAsOmittedField"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": null,
      "name": "serializeAsElement"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": null,
      "name": "serializeAsPlaceholder"
     },
     {
      "params": [
       {
        "type": "JsonObjectFormatVisitor",
        "name": "v"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "ObjectNode",
        "name": "propertiesNode"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "Object",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": "boolean",
      "name": "_handleSelfReference"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "MARKER_FOR_EMPTY"
     },
     {
      "type": "SerializedString",
      "name": "_name"
     },
     {
      "type": "PropertyName",
      "name": "_wrapperName"
     },
     {
      "type": "JavaType",
      "name": "_declaredType"
     },
     {
      "type": "JavaType",
      "name": "_cfgSerializationType"
     },
     {
      "type": "JavaType",
      "name": "_nonTrivialBaseType"
     },
     {
      "type": "Annotations",
      "name": "_contextAnnotations"
     },
     {
      "type": "AnnotatedMember",
      "name": "_member"
     },
     {
      "type": "Method",
      "name": "_accessorMethod"
     },
     {
      "type": "Field",
      "name": "_field"
     },
     {
      "type": "JsonSerializer",
      "name": "_serializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_nullSerializer"
     },
     {
      "type": "TypeSerializer",
      "name": "_typeSerializer"
     },
     {
      "type": "PropertySerializerMap",
      "name": "_dynamicSerializers"
     },
     {
      "type": "boolean",
      "name": "_suppressNulls"
     },
     {
      "type": "Object",
      "name": "_suppressableValue"
     },
     {
      "type": "Class",
      "name": "_includeInViews"
     },
     {
      "type": "HashMap",
      "name": "_internalSettings"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "BeanSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "forType"
       }
      ],
      "type": "BeanSerializer",
      "name": "createDummy"
     },
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "JsonSerializer",
      "name": "unwrappingSerializer"
     },
     {
      "params": [
       {
        "type": "ObjectIdWriter",
        "name": "objectIdWriter"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withObjectIdWriter"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withFilterId"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "toIgnore"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withIgnorals"
     },
     {
      "params": [],
      "type": "BeanSerializerBase",
      "name": "asArraySerializer"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanSerializerModifier.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "BeanSerializerModifier",
    "methods": [
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "List",
        "name": "beanProperties"
       }
      ],
      "type": "List",
      "name": "changeProperties"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "List",
        "name": "beanProperties"
       }
      ],
      "type": "List",
      "name": "orderProperties"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanSerializerBuilder",
        "name": "builder"
       }
      ],
      "type": "BeanSerializerBuilder",
      "name": "updateBuilder"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "modifySerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "ArrayType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "modifyArraySerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "CollectionType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "modifyCollectionSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "CollectionLikeType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "modifyCollectionLikeSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "MapType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "modifyMapSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "MapLikeType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "modifyMapLikeSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "modifyEnumSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "modifyKeySerializer"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BeanSerializerBuilder.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "BeanSerializerBuilder",
    "methods": [
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "setConfig"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "properties"
       }
      ],
      "type": null,
      "name": "setProperties"
     },
     {
      "params": [
       {
        "type": "BeanPropertyWriter",
        "name": "properties"
       }
      ],
      "type": null,
      "name": "setFilteredProperties"
     },
     {
      "params": [
       {
        "type": "AnyGetterWriter",
        "name": "anyGetter"
       }
      ],
      "type": null,
      "name": "setAnyGetter"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": null,
      "name": "setFilterId"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "idProp"
       }
      ],
      "type": null,
      "name": "setTypeId"
     },
     {
      "params": [
       {
        "type": "ObjectIdWriter",
        "name": "w"
       }
      ],
      "type": null,
      "name": "setObjectIdWriter"
     },
     {
      "params": [],
      "type": "AnnotatedClass",
      "name": "getClassInfo"
     },
     {
      "params": [],
      "type": "BeanDescription",
      "name": "getBeanDescription"
     },
     {
      "params": [],
      "type": "List",
      "name": "getProperties"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasProperties"
     },
     {
      "params": [],
      "type": "BeanPropertyWriter",
      "name": "getFilteredProperties"
     },
     {
      "params": [],
      "type": "AnyGetterWriter",
      "name": "getAnyGetter"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getFilterId"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getTypeId"
     },
     {
      "params": [],
      "type": "ObjectIdWriter",
      "name": "getObjectIdWriter"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "build"
     },
     {
      "params": [],
      "type": "BeanSerializer",
      "name": "createDummy"
     }
    ],
    "fields": [
     {
      "type": "BeanPropertyWriter",
      "name": "NO_PROPERTIES"
     },
     {
      "type": "BeanDescription",
      "name": "_beanDesc"
     },
     {
      "type": "SerializationConfig",
      "name": "_config"
     },
     {
      "type": "List",
      "name": "_properties"
     },
     {
      "type": "BeanPropertyWriter",
      "name": "_filteredProperties"
     },
     {
      "type": "AnyGetterWriter",
      "name": "_anyGetter"
     },
     {
      "type": "Object",
      "name": "_filterId"
     },
     {
      "type": "AnnotatedMember",
      "name": "_typeId"
     },
     {
      "type": "ObjectIdWriter",
      "name": "_objectIdWriter"
     }
    ]
   }
  ]
 },
 {
  "filename": "DefaultSerializerProvider.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "DefaultSerializerProvider",
    "methods": [
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "SerializerFactory",
        "name": "jsf"
       }
      ],
      "type": "DefaultSerializerProvider",
      "name": "createInstance"
     },
     {
      "params": [],
      "type": "DefaultSerializerProvider",
      "name": "copy"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "annotated"
       },
       {
        "type": "Object",
        "name": "serDef"
       }
      ],
      "type": "JsonSerializer",
      "name": "serializerInstance"
     },
     {
      "params": [
       {
        "type": "BeanPropertyDefinition",
        "name": "forProperty"
       },
       {
        "type": "Class",
        "name": "filterClass"
       }
      ],
      "type": "Object",
      "name": "includeFilterInstance"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filter"
       }
      ],
      "type": "boolean",
      "name": "includeFilterSuppressNulls"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "forPojo"
       },
       {
        "type": "ObjectIdGenerator",
        "name": "generatorType"
       }
      ],
      "type": "WritableObjectId",
      "name": "findObjectId"
     },
     {
      "params": [],
      "type": "Map",
      "name": "_createObjectIdMap"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "AtomicReference",
        "name": "cause"
       }
      ],
      "type": "boolean",
      "name": "hasSerializerFor"
     },
     {
      "params": [],
      "type": "JsonGenerator",
      "name": "getGenerator"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "serializeValue"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JavaType",
        "name": "rootType"
       }
      ],
      "type": null,
      "name": "serializeValue"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JavaType",
        "name": "rootType"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "serializeValue"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JavaType",
        "name": "rootType"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSer"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializePolymorphic"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "PropertyName",
        "name": "rootName"
       }
      ],
      "type": null,
      "name": "_serialize"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "_serialize"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       }
      ],
      "type": null,
      "name": "_serializeNull"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "Exception",
        "name": "e"
       }
      ],
      "type": "IOException",
      "name": "_wrapAsIOE"
     },
     {
      "params": [],
      "type": "int",
      "name": "cachedSerializersCount"
     },
     {
      "params": [],
      "type": null,
      "name": "flushCachedSerializers"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "javaType"
       },
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "com",
      "name": "generateJsonSchema"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Map",
      "name": "_seenObjectIds"
     },
     {
      "type": "ArrayList",
      "name": "_objectIdGenerators"
     },
     {
      "type": "JsonGenerator",
      "name": "_generator"
     }
    ]
   }
  ]
 },
 {
  "filename": "SerializerCache.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "SerializerCache",
    "methods": [
     {
      "params": [],
      "type": "ReadOnlyClassToSerializerMap",
      "name": "getReadOnlyLookupMap"
     },
     {
      "params": [],
      "type": "ReadOnlyClassToSerializerMap",
      "name": "_makeReadOnlyLookupMap"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "untypedValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "untypedValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "typedValueSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "JsonSerializer",
      "name": "typedValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "addTypedSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "addTypedSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "addAndResolveNonTypedSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "addAndResolveNonTypedSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JavaType",
        "name": "fullType"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "addAndResolveNonTypedSerializer"
     },
     {
      "params": [],
      "type": null,
      "name": "flush"
     }
    ],
    "fields": [
     {
      "type": "HashMap",
      "name": "_sharedMap"
     },
     {
      "type": "AtomicReference",
      "name": "_readOnlyMap"
     }
    ]
   }
  ]
 },
 {
  "filename": "FilterProvider.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "FilterProvider",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "BeanPropertyFilter",
      "name": "findFilter"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       },
       {
        "type": "Object",
        "name": "valueToFilter"
       }
      ],
      "type": "PropertyFilter",
      "name": "findPropertyFilter"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ContainerSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "ContainerSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "ContainerSerializer",
      "name": "withValueTypeSerializer"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getContentSerializer"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "ContainerSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "boolean",
      "name": "hasContentTypeAnnotation"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": []
 },
 {
  "filename": "BasicSerializerFactory.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "BasicSerializerFactory",
    "methods": [
     {
      "params": [],
      "type": "SerializerFactoryConfig",
      "name": "getFactoryConfig"
     },
     {
      "params": [
       {
        "type": "SerializerFactoryConfig",
        "name": "config"
       }
      ],
      "type": "SerializerFactory",
      "name": "withConfig"
     },
     {
      "params": [
       {
        "type": "Serializers",
        "name": "additional"
       }
      ],
      "type": "SerializerFactory",
      "name": "withAdditionalSerializers"
     },
     {
      "params": [
       {
        "type": "Serializers",
        "name": "additional"
       }
      ],
      "type": "SerializerFactory",
      "name": "withAdditionalKeySerializers"
     },
     {
      "params": [
       {
        "type": "BeanSerializerModifier",
        "name": "modifier"
       }
      ],
      "type": "SerializerFactory",
      "name": "withSerializerModifier"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "createSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "keyType"
       },
       {
        "type": "JsonSerializer",
        "name": "defaultImpl"
       }
      ],
      "type": "JsonSerializer",
      "name": "createKeySerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeSerializer",
      "name": "createTypeSerializer"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "customSerializers"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       }
      ],
      "type": "JsonSerializer",
      "name": "findSerializerByLookup"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonSerializer",
      "name": "findSerializerByAnnotations"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       }
      ],
      "type": "JsonSerializer",
      "name": "findSerializerByPrimaryType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       }
      ],
      "type": "JsonSerializer",
      "name": "findOptionalStdSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "javaType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       }
      ],
      "type": "JsonSerializer",
      "name": "findSerializerByAddonType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonSerializer",
      "name": "findSerializerFromAnnotation"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": "JsonSerializer",
      "name": "findConvertingSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Converter",
      "name": "findConverter"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildContainerSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "CollectionType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildCollectionSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "boolean",
      "name": "isIndexedList"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "elemType"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSerializer"
       }
      ],
      "type": "ContainerSerializer",
      "name": "buildIndexedListSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "elemType"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSerializer"
       }
      ],
      "type": "ContainerSerializer",
      "name": "buildCollectionSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "enumType"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildEnumSetSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "MapType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "JsonSerializer",
        "name": "keySerializer"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildMapSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "MapSerializer",
        "name": "mapSer"
       }
      ],
      "type": "MapSerializer",
      "name": "_checkMapContentInclusion"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "JavaType",
        "name": "keyType"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildMapEntrySerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JavaType",
        "name": "contentType"
       },
       {
        "type": "Class",
        "name": "configType"
       }
      ],
      "type": "JsonInclude",
      "name": "_findInclusionWithContent"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "ArrayType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildArraySerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "ReferenceType",
        "name": "refType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       }
      ],
      "type": "JsonSerializer",
      "name": "findReferenceSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "ReferenceType",
        "name": "refType"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "TypeSerializer",
        "name": "contentTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "contentSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildAtomicReferenceSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildIteratorSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "JavaType",
        "name": "valueType"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildIterableSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonSerializer",
      "name": "buildEnumSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findKeySerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findContentSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "Object",
      "name": "findFilterId"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": "boolean",
      "name": "usesStaticTyping"
     }
    ],
    "fields": [
     {
      "type": "HashMap",
      "name": "_concrete"
     },
     {
      "type": "HashMap",
      "name": "_concreteLazy"
     },
     {
      "type": "SerializerFactoryConfig",
      "name": "_factoryConfig"
     }
    ]
   }
  ]
 },
 {
  "filename": "SerializerFactory.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "SerializerFactory",
    "methods": [
     {
      "params": [
       {
        "type": "Serializers",
        "name": "additional"
       }
      ],
      "type": "SerializerFactory",
      "name": "withAdditionalSerializers"
     },
     {
      "params": [
       {
        "type": "Serializers",
        "name": "additional"
       }
      ],
      "type": "SerializerFactory",
      "name": "withAdditionalKeySerializers"
     },
     {
      "params": [
       {
        "type": "BeanSerializerModifier",
        "name": "modifier"
       }
      ],
      "type": "SerializerFactory",
      "name": "withSerializerModifier"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "JsonSerializer",
      "name": "createSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeSerializer",
      "name": "createTypeSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "defaultImpl"
       }
      ],
      "type": "JsonSerializer",
      "name": "createKeySerializer"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "VirtualBeanPropertyWriter.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "VirtualBeanPropertyWriter",
    "methods": [
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "inclusion"
       }
      ],
      "type": "boolean",
      "name": "_suppressNulls"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "inclusion"
       }
      ],
      "type": "Object",
      "name": "_suppressableValue"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isVirtual"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": "Object",
      "name": "value"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "declaringClass"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDef"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "VirtualBeanPropertyWriter",
      "name": "withConfig"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": null,
      "name": "serializeAsField"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": null,
      "name": "serializeAsElement"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "Serializers.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "Serializers",
    "methods": [
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonSerializer",
      "name": "findSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "ReferenceType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeSerializer",
        "name": "contentTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "contentValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findReferenceSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "ArrayType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findArraySerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "CollectionType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findCollectionSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "CollectionLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findCollectionLikeSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "MapType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "keySerializer"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findMapSerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "MapLikeType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonSerializer",
        "name": "keySerializer"
       },
       {
        "type": "TypeSerializer",
        "name": "elementTypeSerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "elementValueSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findMapLikeSerializer"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "PropertyWriter.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "PropertyWriter",
    "methods": [
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getFullName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "findAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getContextAnnotation"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeAsField"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeAsOmittedField"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeAsElement"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeAsPlaceholder"
     },
     {
      "params": [
       {
        "type": "JsonObjectFormatVisitor",
        "name": "objectVisitor"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "ObjectNode",
        "name": "propertiesNode"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanPropertyFilter.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "BeanPropertyFilter",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanPropertyWriter",
        "name": "writer"
       }
      ],
      "type": null,
      "name": "serializeAsField"
     },
     {
      "params": [
       {
        "type": "BeanPropertyWriter",
        "name": "writer"
       },
       {
        "type": "ObjectNode",
        "name": "propertiesNode"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "BeanPropertyWriter",
        "name": "writer"
       },
       {
        "type": "JsonObjectFormatVisitor",
        "name": "objectVisitor"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "AnyGetterWriter.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "AnyGetterWriter",
    "methods": [
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "getAndSerialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "PropertyFilter",
        "name": "filter"
       }
      ],
      "type": null,
      "name": "getAndFilter"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "resolve"
     }
    ],
    "fields": [
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "AnnotatedMember",
      "name": "_accessor"
     },
     {
      "type": "JsonSerializer",
      "name": "_serializer"
     },
     {
      "type": "MapSerializer",
      "name": "_mapSerializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "ContextualSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "ContextualSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BeanSerializerFactory.java",
  "package_name": "com.fasterxml.jackson.databind.ser",
  "classes": [
   {
    "name": "BeanSerializerFactory",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerFactoryConfig",
        "name": "config"
       }
      ],
      "type": "SerializerFactory",
      "name": "withConfig"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "customSerializers"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "origType"
       }
      ],
      "type": "JsonSerializer",
      "name": "createSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       }
      ],
      "type": "JsonSerializer",
      "name": "_createSerializer2"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonSerializer",
      "name": "findBeanSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "accessor"
       }
      ],
      "type": "TypeSerializer",
      "name": "findPropertyTypeSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "containerType"
       },
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "accessor"
       }
      ],
      "type": "TypeSerializer",
      "name": "findPropertyContentTypeSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonSerializer",
      "name": "constructBeanSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "List",
        "name": "props"
       }
      ],
      "type": "ObjectIdWriter",
      "name": "constructObjectIdHandler"
     },
     {
      "params": [
       {
        "type": "BeanPropertyWriter",
        "name": "writer"
       },
       {
        "type": "Class",
        "name": "inViews"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "constructFilteredBeanWriter"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "PropertyBuilder",
      "name": "constructPropertyBuilder"
     },
     {
      "params": [
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "BeanSerializerBuilder",
      "name": "constructBeanSerializerBuilder"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "isPotentialBeanType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanSerializerBuilder",
        "name": "builder"
       }
      ],
      "type": "List",
      "name": "findBeanProperties"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "List",
        "name": "props"
       }
      ],
      "type": "List",
      "name": "filterBeanProperties"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanSerializerBuilder",
        "name": "builder"
       }
      ],
      "type": null,
      "name": "processViews"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "List",
        "name": "properties"
       }
      ],
      "type": null,
      "name": "removeIgnorableTypes"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "List",
        "name": "properties"
       }
      ],
      "type": null,
      "name": "removeSetterlessGetters"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "BeanSerializerBuilder",
        "name": "builder"
       },
       {
        "type": "List",
        "name": "props"
       }
      ],
      "type": "List",
      "name": "removeOverlappingTypeIds"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDef"
       },
       {
        "type": "PropertyBuilder",
        "name": "pb"
       },
       {
        "type": "boolean",
        "name": "staticTyping"
       },
       {
        "type": "AnnotatedMember",
        "name": "accessor"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "_constructWriter"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BeanSerializerFactory",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "SerializableSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "SerializableSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "JsonSerializable",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "JsonSerializable",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonSerializable",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "SerializableSerializer",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdKeySerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "StdKeySerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "StaticListSerializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "StaticListSerializerBase",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "JsonSerializer",
      "name": "_withResolved"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [],
      "type": "JsonNode",
      "name": "contentSchema"
     },
     {
      "params": [
       {
        "type": "JsonArrayFormatVisitor",
        "name": "visitor"
       }
      ],
      "type": null,
      "name": "acceptContentVisitor"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     }
    ],
    "fields": [
     {
      "type": "Boolean",
      "name": "_unwrapSingle"
     }
    ]
   }
  ]
 },
 {
  "filename": "FileSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "FileSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "File",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BeanSerializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "BeanSerializerBase",
    "methods": [
     {
      "params": [
       {
        "type": "ObjectIdWriter",
        "name": "objectIdWriter"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withObjectIdWriter"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "toIgnore"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withIgnorals"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "toIgnore"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withIgnorals"
     },
     {
      "params": [],
      "type": "BeanSerializerBase",
      "name": "asArraySerializer"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withFilterId"
     },
     {
      "params": [
       {
        "type": "BeanPropertyWriter",
        "name": "props"
       },
       {
        "type": "NameTransformer",
        "name": "transformer"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "rename"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanPropertyWriter",
        "name": "prop"
       }
      ],
      "type": "JsonSerializer",
      "name": "findConvertingSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "properties"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "usesObjectId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "boolean",
        "name": "startEndObject"
       }
      ],
      "type": null,
      "name": "_serializeWithObjectId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "_serializeWithObjectId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       },
       {
        "type": "WritableObjectId",
        "name": "objectId"
       }
      ],
      "type": null,
      "name": "_serializeObjectId"
     },
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonToken",
        "name": "valueShape"
       }
      ],
      "type": "WritableTypeId",
      "name": "_typeIdDef"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "type": "String",
      "name": "_customTypeId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeFields"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeFieldsFiltered"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "PropertyName",
      "name": "NAME_FOR_OBJECT_REF"
     },
     {
      "type": "BeanPropertyWriter",
      "name": "NO_PROPS"
     },
     {
      "type": "JavaType",
      "name": "_beanType"
     },
     {
      "type": "BeanPropertyWriter",
      "name": "_props"
     },
     {
      "type": "BeanPropertyWriter",
      "name": "_filteredProps"
     },
     {
      "type": "AnyGetterWriter",
      "name": "_anyGetterWriter"
     },
     {
      "type": "Object",
      "name": "_propertyFilterId"
     },
     {
      "type": "AnnotatedMember",
      "name": "_typeId"
     },
     {
      "type": "ObjectIdWriter",
      "name": "_objectIdWriter"
     },
     {
      "type": "JsonFormat",
      "name": "_serializationShape"
     }
    ]
   }
  ]
 },
 {
  "filename": "SqlTimeSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "SqlTimeSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "java",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "DateSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "DateSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Boolean",
        "name": "timestamp"
       },
       {
        "type": "DateFormat",
        "name": "customFormat"
       }
      ],
      "type": "DateSerializer",
      "name": "withFormat"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "value"
       }
      ],
      "type": "long",
      "name": "_timestamp"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     }
    ],
    "fields": [
     {
      "type": "DateSerializer",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "EnumSetSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "EnumSetSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "EnumSetSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "elementSerializer"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "EnumSetSerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "EnumSet",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "EnumSet",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "EnumSet",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "EnumSet",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "CalendarSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "CalendarSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Boolean",
        "name": "timestamp"
       },
       {
        "type": "DateFormat",
        "name": "customFormat"
       }
      ],
      "type": "CalendarSerializer",
      "name": "withFormat"
     },
     {
      "params": [
       {
        "type": "Calendar",
        "name": "value"
       }
      ],
      "type": "long",
      "name": "_timestamp"
     },
     {
      "params": [
       {
        "type": "Calendar",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     }
    ],
    "fields": [
     {
      "type": "CalendarSerializer",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "NumberSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "NumberSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "Number",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "NumberSerializer",
      "name": "instance"
     },
     {
      "type": "boolean",
      "name": "_isInt"
     }
    ]
   }
  ]
 },
 {
  "filename": "AsArraySerializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "AsArraySerializerBase",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "elementSerializer"
       }
      ],
      "type": "AsArraySerializerBase",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "elementSerializer"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "AsArraySerializerBase",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getContentSerializer"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     }
    ],
    "fields": [
     {
      "type": "JavaType",
      "name": "_elementType"
     },
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "boolean",
      "name": "_staticTyping"
     },
     {
      "type": "Boolean",
      "name": "_unwrapSingle"
     },
     {
      "type": "TypeSerializer",
      "name": "_valueTypeSerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_elementSerializer"
     },
     {
      "type": "PropertySerializerMap",
      "name": "_dynamicSerializers"
     }
    ]
   }
  ]
 },
 {
  "filename": "RawSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "RawSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ClassSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "ClassSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "StringSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "StringSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "ByteArraySerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "ByteArraySerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "byte",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "NumberSerializers.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "NumberSerializers",
    "methods": [
     {
      "params": [
       {
        "type": "Map",
        "name": "allDeserializers"
       }
      ],
      "type": null,
      "name": "addAll"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "NullSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "NullSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "NullSerializer",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdScalarSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "StdScalarSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ToStringSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "ToStringSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "ToStringSerializer",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectArraySerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "ObjectArraySerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "JsonSerializer",
      "name": "_withResolved"
     },
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "ContainerSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "ObjectArraySerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getContentSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "serializeContentsUsing"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeTypedContents"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     }
    ],
    "fields": [
     {
      "type": "boolean",
      "name": "_staticTyping"
     },
     {
      "type": "JavaType",
      "name": "_elementType"
     },
     {
      "type": "TypeSerializer",
      "name": "_valueTypeSerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_elementSerializer"
     },
     {
      "type": "PropertySerializerMap",
      "name": "_dynamicSerializers"
     }
    ]
   }
  ]
 },
 {
  "filename": "MapProperty.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "MapProperty",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonSerializer",
        "name": "keySer"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSer"
       }
      ],
      "type": null,
      "name": "reset"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       },
       {
        "type": "JsonSerializer",
        "name": "keySer"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSer"
       }
      ],
      "type": null,
      "name": "reset"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "v"
       }
      ],
      "type": null,
      "name": "setValue"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getFullName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getContextAnnotation"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "map"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeAsField"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "map"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeAsOmittedField"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "map"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeAsElement"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeAsPlaceholder"
     },
     {
      "params": [
       {
        "type": "JsonObjectFormatVisitor",
        "name": "objectVisitor"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "ObjectNode",
        "name": "propertiesNode"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getWrapperName"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMember"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BeanProperty",
      "name": "BOGUS_PROP"
     },
     {
      "type": "TypeSerializer",
      "name": "_typeSerializer"
     },
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "Object",
      "name": "_key"
     },
     {
      "type": "Object",
      "name": "_value"
     },
     {
      "type": "JsonSerializer",
      "name": "_keySerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_valueSerializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "UUIDSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "UUIDSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "UUID",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "UUID",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "bits"
       },
       {
        "type": "char",
        "name": "ch"
       },
       {
        "type": "int",
        "name": "offset"
       }
      ],
      "type": null,
      "name": "_appendInt"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "bits"
       },
       {
        "type": "char",
        "name": "ch"
       },
       {
        "type": "int",
        "name": "offset"
       }
      ],
      "type": null,
      "name": "_appendShort"
     },
     {
      "params": [
       {
        "type": "UUID",
        "name": "uuid"
       }
      ],
      "type": "byte",
      "name": "_asBytes"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "byte",
        "name": "buffer"
       },
       {
        "type": "int",
        "name": "offset"
       }
      ],
      "type": null,
      "name": "_appendInt"
     }
    ],
    "fields": [
     {
      "type": "char",
      "name": "HEX_CHARS"
     }
    ]
   }
  ]
 },
 {
  "filename": "NonTypedScalarSerializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "NonTypedScalarSerializerBase",
    "methods": [
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ByteBufferSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "ByteBufferSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "ByteBuffer",
        "name": "bbuf"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "StdArraySerializers.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "StdArraySerializers",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "JsonSerializer",
      "name": "findStandardImpl"
     }
    ],
    "fields": [
     {
      "type": "HashMap",
      "name": "_arraySerializers"
     }
    ]
   }
  ]
 },
 {
  "filename": "EnumSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "EnumSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       },
       {
        "type": "JsonFormat",
        "name": "format"
       }
      ],
      "type": "EnumSerializer",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "EnumValues",
      "name": "getEnumValues"
     },
     {
      "params": [
       {
        "type": "Enum",
        "name": "en"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": "boolean",
      "name": "_serializeAsIndex"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumClass"
       },
       {
        "type": "JsonFormat",
        "name": "format"
       },
       {
        "type": "boolean",
        "name": "fromClass"
       },
       {
        "type": "Boolean",
        "name": "defaultValue"
       }
      ],
      "type": "Boolean",
      "name": "_isShapeWrittenUsingIndex"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "EnumValues",
      "name": "_values"
     },
     {
      "type": "Boolean",
      "name": "_serializeAsIndex"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "StdSerializer",
    "methods": [
     {
      "params": [],
      "type": "Class",
      "name": "handledType"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       },
       {
        "type": "boolean",
        "name": "isOptional"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "type"
       }
      ],
      "type": "ObjectNode",
      "name": "createSchemaNode"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "type"
       },
       {
        "type": "boolean",
        "name": "isOptional"
       }
      ],
      "type": "ObjectNode",
      "name": "createSchemaNode"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "visitStringFormat"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       },
       {
        "type": "JsonValueFormat",
        "name": "format"
       }
      ],
      "type": null,
      "name": "visitStringFormat"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       },
       {
        "type": "NumberType",
        "name": "numberType"
       }
      ],
      "type": null,
      "name": "visitIntFormat"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       },
       {
        "type": "NumberType",
        "name": "numberType"
       },
       {
        "type": "JsonValueFormat",
        "name": "format"
       }
      ],
      "type": null,
      "name": "visitIntFormat"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       },
       {
        "type": "NumberType",
        "name": "numberType"
       }
      ],
      "type": null,
      "name": "visitFloatFormat"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       },
       {
        "type": "JsonSerializer",
        "name": "itemSerializer"
       },
       {
        "type": "JavaType",
        "name": "itemType"
       }
      ],
      "type": null,
      "name": "visitArrayFormat"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       },
       {
        "type": "JsonFormatTypes",
        "name": "itemType"
       }
      ],
      "type": null,
      "name": "visitArrayFormat"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": null,
      "name": "wrapAndThrow"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Throwable",
        "name": "t"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": null,
      "name": "wrapAndThrow"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "JsonSerializer",
        "name": "existingSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findContextualConvertingSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "JsonSerializer",
        "name": "existingSerializer"
       }
      ],
      "type": "JsonSerializer",
      "name": "findConvertingContentSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Object",
        "name": "filterId"
       },
       {
        "type": "Object",
        "name": "valueToFilter"
       }
      ],
      "type": "PropertyFilter",
      "name": "findPropertyFilter"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Class",
        "name": "typeForDefaults"
       }
      ],
      "type": "JsonFormat",
      "name": "findFormatOverrides"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Class",
        "name": "typeForDefaults"
       },
       {
        "type": "JsonFormat",
        "name": "feat"
       }
      ],
      "type": "Boolean",
      "name": "findFormatFeature"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Class",
        "name": "typeForDefaults"
       }
      ],
      "type": "JsonInclude",
      "name": "findIncludeOverrides"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "findAnnotatedContentSerializer"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "boolean",
      "name": "isDefaultSerializer"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "a"
       },
       {
        "type": "Object",
        "name": "b"
       }
      ],
      "type": "boolean",
      "name": "_neitherNull"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "c"
       }
      ],
      "type": "boolean",
      "name": "_nonEmpty"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "KEY_CONTENT_CONVERTER_LOCK"
     },
     {
      "type": "Class",
      "name": "_handledType"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdJdkSerializers.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "StdJdkSerializers",
    "methods": [
     {
      "params": [],
      "type": "Collection",
      "name": "all"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "InetSocketAddressSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "InetSocketAddressSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "InetSocketAddress",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "InetSocketAddress",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "JsonValueSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "JsonValueSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Class",
      "name": "_notNullClass"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       },
       {
        "type": "boolean",
        "name": "forceTypeInfo"
       }
      ],
      "type": "JsonValueSerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer0"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       },
       {
        "type": "Class",
        "name": "enumType"
       }
      ],
      "type": "boolean",
      "name": "_acceptJsonFormatVisitorForEnum"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": "boolean",
      "name": "isNaturalTypeWithStdHandling"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "AnnotatedMember",
      "name": "_accessor"
     },
     {
      "type": "JsonSerializer",
      "name": "_valueSerializer"
     },
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "boolean",
      "name": "_forceTypeInformation"
     }
    ]
   }
  ]
 },
 {
  "filename": "TimeZoneSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "TimeZoneSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "TimeZone",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "DateTimeSerializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "DateTimeSerializerBase",
    "methods": [
     {
      "params": [
       {
        "type": "Boolean",
        "name": "timestamp"
       },
       {
        "type": "DateFormat",
        "name": "customFormat"
       }
      ],
      "type": "DateTimeSerializerBase",
      "name": "withFormat"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "long",
      "name": "_timestamp"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": "boolean",
      "name": "_asTimestamp"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       },
       {
        "type": "boolean",
        "name": "asNumber"
       }
      ],
      "type": null,
      "name": "_acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "Date",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "_serializeAsString"
     }
    ],
    "fields": [
     {
      "type": "Boolean",
      "name": "_useTimestamp"
     },
     {
      "type": "DateFormat",
      "name": "_customFormat"
     },
     {
      "type": "AtomicReference",
      "name": "_reusedCustomFormat"
     }
    ]
   }
  ]
 },
 {
  "filename": "TokenBufferSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "TokenBufferSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "TokenBuffer",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "TokenBuffer",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "IterableSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "IterableSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "ContainerSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "elementSerializer"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "IterableSerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Iterable",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "Iterable",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "Iterable",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Iterable",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "InetAddressSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "InetAddressSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "InetAddress",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "InetAddress",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     }
    ],
    "fields": [
     {
      "type": "boolean",
      "name": "_asNumeric"
     }
    ]
   }
  ]
 },
 {
  "filename": "StdDelegatingSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "StdDelegatingSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Converter",
        "name": "converter"
       },
       {
        "type": "JavaType",
        "name": "delegateType"
       },
       {
        "type": "JsonSerializer",
        "name": "delegateSerializer"
       }
      ],
      "type": "StdDelegatingSerializer",
      "name": "withDelegate"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "Converter",
      "name": "getConverter"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getDelegatee"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       },
       {
        "type": "boolean",
        "name": "isOptional"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "convertValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findSerializer"
     }
    ],
    "fields": [
     {
      "type": "Converter",
      "name": "_converter"
     },
     {
      "type": "JavaType",
      "name": "_delegateType"
     },
     {
      "type": "JsonSerializer",
      "name": "_delegateSerializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "CollectionSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "CollectionSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "ContainerSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "elementSerializer"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "CollectionSerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Collection",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "serializeContentsUsing"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "BooleanSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "BooleanSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "boolean",
      "name": "_forPrimitive"
     }
    ]
   }
  ]
 },
 {
  "filename": "MapSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "MapSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "MapSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "JsonSerializer",
        "name": "keySerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSerializer"
       },
       {
        "type": "Set",
        "name": "ignored"
       },
       {
        "type": "boolean",
        "name": "sortKeys"
       }
      ],
      "type": "MapSerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "MapSerializer",
      "name": "withFilterId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "suppressableValue"
       },
       {
        "type": "boolean",
        "name": "suppressNulls"
       }
      ],
      "type": "MapSerializer",
      "name": "withContentInclusion"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "ignoredEntries"
       },
       {
        "type": "JavaType",
        "name": "mapType"
       },
       {
        "type": "boolean",
        "name": "staticValueType"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "keySerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSerializer"
       },
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "MapSerializer",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "method"
       }
      ],
      "type": null,
      "name": "_ensureOverride"
     },
     {
      "params": [],
      "type": null,
      "name": "_ensureOverride"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "suppressableValue"
       }
      ],
      "type": "MapSerializer",
      "name": "withContentInclusion"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "ignoredList"
       },
       {
        "type": "JavaType",
        "name": "mapType"
       },
       {
        "type": "boolean",
        "name": "staticValueType"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "keySerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSerializer"
       },
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "MapSerializer",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getContentSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Map",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getKeySerializer"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeFields"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Object",
        "name": "suppressableValue"
       }
      ],
      "type": null,
      "name": "serializeOptionalFields"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "serializeFieldsUsing"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "PropertyFilter",
        "name": "filter"
       },
       {
        "type": "Object",
        "name": "suppressableValue"
       }
      ],
      "type": null,
      "name": "serializeFilteredFields"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Object",
        "name": "suppressableValue"
       }
      ],
      "type": null,
      "name": "serializeTypedFields"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "PropertyFilter",
        "name": "filter"
       },
       {
        "type": "Object",
        "name": "suppressableValue"
       }
      ],
      "type": null,
      "name": "serializeFilteredAnyProperties"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "input"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "Map",
      "name": "_orderEntries"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "input"
       }
      ],
      "type": "boolean",
      "name": "_hasNullKey"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "_writeNullKeyedEntry"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findSerializer"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "JavaType",
      "name": "UNSPECIFIED_TYPE"
     },
     {
      "type": "Object",
      "name": "MARKER_FOR_EMPTY"
     },
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "boolean",
      "name": "_valueTypeIsStatic"
     },
     {
      "type": "JavaType",
      "name": "_keyType"
     },
     {
      "type": "JavaType",
      "name": "_valueType"
     },
     {
      "type": "JsonSerializer",
      "name": "_keySerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_valueSerializer"
     },
     {
      "type": "TypeSerializer",
      "name": "_valueTypeSerializer"
     },
     {
      "type": "PropertySerializerMap",
      "name": "_dynamicValueSerializers"
     },
     {
      "type": "Set",
      "name": "_ignoredEntries"
     },
     {
      "type": "Object",
      "name": "_filterId"
     },
     {
      "type": "Object",
      "name": "_suppressableValue"
     },
     {
      "type": "boolean",
      "name": "_suppressNulls"
     },
     {
      "type": "boolean",
      "name": "_sortKeys"
     }
    ]
   }
  ]
 },
 {
  "filename": "AtomicReferenceSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "AtomicReferenceSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSer"
       },
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "ReferenceTypeSerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "suppressableValue"
       },
       {
        "type": "boolean",
        "name": "suppressNulls"
       }
      ],
      "type": "ReferenceTypeSerializer",
      "name": "withContentInclusion"
     },
     {
      "params": [
       {
        "type": "AtomicReference",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "_isValuePresent"
     },
     {
      "params": [
       {
        "type": "AtomicReference",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "_getReferenced"
     },
     {
      "params": [
       {
        "type": "AtomicReference",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "_getReferencedIfPresent"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "ArraySerializerBase.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "ArraySerializerBase",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "JsonSerializer",
      "name": "_withResolved"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "boolean",
      "name": "_shouldUnwrapSingle"
     }
    ],
    "fields": [
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "Boolean",
      "name": "_unwrapSingle"
     }
    ]
   }
  ]
 },
 {
  "filename": "ReferenceTypeSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "ReferenceTypeSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "transformer"
       }
      ],
      "type": "JsonSerializer",
      "name": "unwrappingSerializer"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSer"
       },
       {
        "type": "NameTransformer",
        "name": "unwrapper"
       }
      ],
      "type": "ReferenceTypeSerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "suppressableValue"
       },
       {
        "type": "boolean",
        "name": "suppressNulls"
       }
      ],
      "type": "ReferenceTypeSerializer",
      "name": "withContentInclusion"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "_isValuePresent"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "_getReferenced"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "Object",
      "name": "_getReferencedIfPresent"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "JavaType",
        "name": "referredType"
       }
      ],
      "type": "boolean",
      "name": "_useStatic"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "T",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isUnwrappingSerializer"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getReferredType"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "ref"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "T",
        "name": "ref"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findCachedSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanProperty",
        "name": "prop"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findSerializer"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "MARKER_FOR_EMPTY"
     },
     {
      "type": "JavaType",
      "name": "_referredType"
     },
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "TypeSerializer",
      "name": "_valueTypeSerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_valueSerializer"
     },
     {
      "type": "NameTransformer",
      "name": "_unwrapper"
     },
     {
      "type": "PropertySerializerMap",
      "name": "_dynamicSerializers"
     },
     {
      "type": "Object",
      "name": "_suppressableValue"
     },
     {
      "type": "boolean",
      "name": "_suppressNulls"
     }
    ]
   }
  ]
 },
 {
  "filename": "SqlDateSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "SqlDateSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Boolean",
        "name": "timestamp"
       },
       {
        "type": "DateFormat",
        "name": "customFormat"
       }
      ],
      "type": "SqlDateSerializer",
      "name": "withFormat"
     },
     {
      "params": [
       {
        "type": "java",
        "name": "value"
       }
      ],
      "type": "long",
      "name": "_timestamp"
     },
     {
      "params": [
       {
        "type": "java",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "StdKeySerializers.java",
  "package_name": "com.fasterxml.jackson.databind.ser.std",
  "classes": [
   {
    "name": "StdKeySerializers",
    "methods": [
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "rawKeyType"
       },
       {
        "type": "boolean",
        "name": "useDefault"
       }
      ],
      "type": "JsonSerializer",
      "name": "getStdKeySerializer"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "rawKeyType"
       }
      ],
      "type": "JsonSerializer",
      "name": "getFallbackKeySerializer"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getDefault"
     }
    ],
    "fields": [
     {
      "type": "JsonSerializer",
      "name": "DEFAULT_KEY_SERIALIZER"
     },
     {
      "type": "JsonSerializer",
      "name": "DEFAULT_STRING_SERIALIZER"
     }
    ]
   }
  ]
 },
 {
  "filename": "MapEntrySerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "MapEntrySerializer",
    "methods": [
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "ContainerSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "JsonSerializer",
        "name": "keySerializer"
       },
       {
        "type": "JsonSerializer",
        "name": "valueSerializer"
       },
       {
        "type": "Object",
        "name": "suppressableValue"
       },
       {
        "type": "boolean",
        "name": "suppressNulls"
       }
      ],
      "type": "MapEntrySerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "suppressableValue"
       },
       {
        "type": "boolean",
        "name": "suppressNulls"
       }
      ],
      "type": "MapEntrySerializer",
      "name": "withContentInclusion"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getContentSerializer"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Entry",
        "name": "entry"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeDynamic"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     }
    ],
    "fields": [
     {
      "type": "Object",
      "name": "MARKER_FOR_EMPTY"
     },
     {
      "type": "BeanProperty",
      "name": "_property"
     },
     {
      "type": "boolean",
      "name": "_valueTypeIsStatic"
     },
     {
      "type": "JavaType",
      "name": "_entryType"
     },
     {
      "type": "JavaType",
      "name": "_keyType"
     },
     {
      "type": "JavaType",
      "name": "_valueType"
     },
     {
      "type": "JsonSerializer",
      "name": "_keySerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_valueSerializer"
     },
     {
      "type": "TypeSerializer",
      "name": "_valueTypeSerializer"
     },
     {
      "type": "PropertySerializerMap",
      "name": "_dynamicValueSerializers"
     },
     {
      "type": "Object",
      "name": "_suppressableValue"
     },
     {
      "type": "boolean",
      "name": "_suppressNulls"
     }
    ]
   }
  ]
 },
 {
  "filename": "UnwrappingBeanPropertyWriter.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "UnwrappingBeanPropertyWriter",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "transformer"
       }
      ],
      "type": "UnwrappingBeanPropertyWriter",
      "name": "rename"
     },
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "transformer"
       },
       {
        "type": "SerializedString",
        "name": "newName"
       }
      ],
      "type": "UnwrappingBeanPropertyWriter",
      "name": "_new"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isUnwrapping"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": null,
      "name": "serializeAsField"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "assignSerializer"
     },
     {
      "params": [
       {
        "type": "JsonObjectFormatVisitor",
        "name": "visitor"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "ObjectNode",
        "name": "propertiesNode"
       },
       {
        "type": "JsonNode",
        "name": "schemaNode"
       }
      ],
      "type": null,
      "name": "_depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "PropertySerializerMap",
        "name": "map"
       },
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "JsonSerializer",
      "name": "_findAndAddDynamic"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NameTransformer",
      "name": "_nameTransformer"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertySerializerMap.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "PropertySerializerMap",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "serializerFor"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "SerializerAndMapResult",
      "name": "findAndAddPrimarySerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "SerializerAndMapResult",
      "name": "findAndAddPrimarySerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "SerializerAndMapResult",
      "name": "findAndAddSecondarySerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "SerializerAndMapResult",
      "name": "findAndAddSecondarySerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "SerializerAndMapResult",
      "name": "findAndAddRootValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "SerializerAndMapResult",
      "name": "findAndAddRootValueSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "SerializerAndMapResult",
      "name": "findAndAddKeySerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "SerializerAndMapResult",
      "name": "addSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "SerializerAndMapResult",
      "name": "addSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "JsonSerializer",
        "name": "serializer"
       }
      ],
      "type": "PropertySerializerMap",
      "name": "newWith"
     },
     {
      "params": [],
      "type": "PropertySerializerMap",
      "name": "emptyMap"
     },
     {
      "params": [],
      "type": "PropertySerializerMap",
      "name": "emptyForProperties"
     },
     {
      "params": [],
      "type": "PropertySerializerMap",
      "name": "emptyForRootValues"
     }
    ],
    "fields": [
     {
      "type": "boolean",
      "name": "_resetWhenFull"
     }
    ]
   }
  ]
 },
 {
  "filename": "WritableObjectId.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "WritableObjectId",
    "methods": [
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "ObjectIdWriter",
        "name": "w"
       }
      ],
      "type": "boolean",
      "name": "writeAsId"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "forPojo"
       }
      ],
      "type": "Object",
      "name": "generateId"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "ObjectIdWriter",
        "name": "w"
       }
      ],
      "type": null,
      "name": "writeAsField"
     }
    ],
    "fields": [
     {
      "type": "ObjectIdGenerator",
      "name": "generator"
     },
     {
      "type": "Object",
      "name": "id"
     },
     {
      "type": "boolean",
      "name": "idWritten"
     }
    ]
   }
  ]
 },
 {
  "filename": "IndexedListSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "IndexedListSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "elementSerializer"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "IndexedListSerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "List",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "ContainerSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "serializeContentsUsing"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeTypedContents"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "StringArraySerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "StringArraySerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "JsonSerializer",
      "name": "_withResolved"
     },
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "ContainerSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getContentType"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "getContentSerializer"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "String",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": null,
      "name": "serializeContentsSlow"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "JavaType",
      "name": "VALUE_TYPE"
     },
     {
      "type": "StringArraySerializer",
      "name": "instance"
     },
     {
      "type": "JsonSerializer",
      "name": "_elementSerializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "IteratorSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "IteratorSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Iterator",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "Iterator",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "TypeSerializer",
        "name": "vts"
       }
      ],
      "type": "ContainerSerializer",
      "name": "_withValueTypeSerializer"
     },
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "property"
       },
       {
        "type": "TypeSerializer",
        "name": "vts"
       },
       {
        "type": "JsonSerializer",
        "name": "elementSerializer"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "IteratorSerializer",
      "name": "withResolved"
     },
     {
      "params": [
       {
        "type": "Iterator",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Iterator",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     },
     {
      "params": [
       {
        "type": "Iterator",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "_serializeDynamicContents"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "FilteredBeanPropertyWriter.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "FilteredBeanPropertyWriter",
    "methods": [
     {
      "params": [
       {
        "type": "BeanPropertyWriter",
        "name": "base"
       },
       {
        "type": "Class",
        "name": "viewsToIncludeIn"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "constructViewBased"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BeanAsArraySerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "BeanAsArraySerializer",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "transformer"
       }
      ],
      "type": "JsonSerializer",
      "name": "unwrappingSerializer"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isUnwrappingSerializer"
     },
     {
      "params": [
       {
        "type": "ObjectIdWriter",
        "name": "objectIdWriter"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withObjectIdWriter"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withFilterId"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "toIgnore"
       }
      ],
      "type": "BeanAsArraySerializer",
      "name": "withIgnorals"
     },
     {
      "params": [],
      "type": "BeanSerializerBase",
      "name": "asArraySerializer"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": "boolean",
      "name": "hasSingleElement"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeAsArray"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BeanSerializerBase",
      "name": "_defaultSerializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "PropertyBasedObjectIdGenerator.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "PropertyBasedObjectIdGenerator",
    "methods": [
     {
      "params": [
       {
        "type": "ObjectIdGenerator",
        "name": "gen"
       }
      ],
      "type": "boolean",
      "name": "canUseFor"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "forPojo"
       }
      ],
      "type": "Object",
      "name": "generateId"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "scope"
       }
      ],
      "type": "ObjectIdGenerator",
      "name": "forScope"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "context"
       }
      ],
      "type": "ObjectIdGenerator",
      "name": "newForSerialization"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "key"
       }
      ],
      "type": "com",
      "name": "key"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BeanPropertyWriter",
      "name": "_property"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": []
 },
 {
  "filename": "ReadOnlyClassToSerializerMap.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "ReadOnlyClassToSerializerMap",
    "methods": [
     {
      "params": [
       {
        "type": "int",
        "name": "size"
       }
      ],
      "type": "int",
      "name": "findSize"
     },
     {
      "params": [
       {
        "type": "HashMap",
        "name": "src"
       }
      ],
      "type": "ReadOnlyClassToSerializerMap",
      "name": "from"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "typedValueSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "typedValueSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "untypedValueSerializer"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "JsonSerializer",
      "name": "untypedValueSerializer"
     }
    ],
    "fields": [
     {
      "type": "Bucket",
      "name": "_buckets"
     },
     {
      "type": "int",
      "name": "_size"
     },
     {
      "type": "int",
      "name": "_mask"
     }
    ]
   }
  ]
 },
 {
  "filename": "SimpleBeanPropertyFilter.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "SimpleBeanPropertyFilter",
    "methods": [
     {
      "params": [],
      "type": "SimpleBeanPropertyFilter",
      "name": "serializeAll"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "properties"
       }
      ],
      "type": "SimpleBeanPropertyFilter",
      "name": "serializeAll"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "properties"
       }
      ],
      "type": "SimpleBeanPropertyFilter",
      "name": "filterOutAllExcept"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propertyArray"
       }
      ],
      "type": "SimpleBeanPropertyFilter",
      "name": "filterOutAllExcept"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "properties"
       }
      ],
      "type": "SimpleBeanPropertyFilter",
      "name": "serializeAllExcept"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propertyArray"
       }
      ],
      "type": "SimpleBeanPropertyFilter",
      "name": "serializeAllExcept"
     },
     {
      "params": [
       {
        "type": "BeanPropertyFilter",
        "name": "src"
       }
      ],
      "type": "PropertyFilter",
      "name": "from"
     },
     {
      "params": [
       {
        "type": "BeanPropertyWriter",
        "name": "writer"
       }
      ],
      "type": "boolean",
      "name": "include"
     },
     {
      "params": [
       {
        "type": "PropertyWriter",
        "name": "writer"
       }
      ],
      "type": "boolean",
      "name": "include"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "elementValue"
       }
      ],
      "type": "boolean",
      "name": "includeElement"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanPropertyWriter",
        "name": "writer"
       }
      ],
      "type": null,
      "name": "serializeAsField"
     },
     {
      "params": [
       {
        "type": "BeanPropertyWriter",
        "name": "writer"
       },
       {
        "type": "ObjectNode",
        "name": "propertiesNode"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "BeanPropertyWriter",
        "name": "writer"
       },
       {
        "type": "JsonObjectFormatVisitor",
        "name": "objectVisitor"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "PropertyWriter",
        "name": "writer"
       }
      ],
      "type": null,
      "name": "serializeAsField"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "elementValue"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "PropertyWriter",
        "name": "writer"
       }
      ],
      "type": null,
      "name": "serializeAsElement"
     },
     {
      "params": [
       {
        "type": "PropertyWriter",
        "name": "writer"
       },
       {
        "type": "ObjectNode",
        "name": "propertiesNode"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     },
     {
      "params": [
       {
        "type": "PropertyWriter",
        "name": "writer"
       },
       {
        "type": "JsonObjectFormatVisitor",
        "name": "objectVisitor"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "depositSchemaProperty"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "FailingSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "FailingSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "String",
      "name": "_msg"
     }
    ]
   }
  ]
 },
 {
  "filename": "StringCollectionSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "StringCollectionSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "JsonSerializer",
      "name": "_withResolved"
     },
     {
      "params": [],
      "type": "JsonNode",
      "name": "contentSchema"
     },
     {
      "params": [
       {
        "type": "JsonArrayFormatVisitor",
        "name": "visitor"
       }
      ],
      "type": null,
      "name": "acceptContentVisitor"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serializeContents"
     }
    ],
    "fields": [
     {
      "type": "StringCollectionSerializer",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "IndexedStringListSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "IndexedStringListSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "BeanProperty",
        "name": "prop"
       },
       {
        "type": "Boolean",
        "name": "unwrapSingle"
       }
      ],
      "type": "JsonSerializer",
      "name": "_withResolved"
     },
     {
      "params": [],
      "type": "JsonNode",
      "name": "contentSchema"
     },
     {
      "params": [
       {
        "type": "JsonArrayFormatVisitor",
        "name": "visitor"
       }
      ],
      "type": null,
      "name": "acceptContentVisitor"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "int",
        "name": "len"
       }
      ],
      "type": null,
      "name": "serializeContents"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "IndexedStringListSerializer",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "SimpleFilterProvider.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "SimpleFilterProvider",
    "methods": [
     {
      "params": [
       {
        "type": "Map",
        "name": "filters"
       }
      ],
      "type": "Map",
      "name": "_convert"
     },
     {
      "params": [
       {
        "type": "BeanPropertyFilter",
        "name": "f"
       }
      ],
      "type": "PropertyFilter",
      "name": "_convert"
     },
     {
      "params": [
       {
        "type": "BeanPropertyFilter",
        "name": "f"
       }
      ],
      "type": "SimpleFilterProvider",
      "name": "setDefaultFilter"
     },
     {
      "params": [
       {
        "type": "PropertyFilter",
        "name": "f"
       }
      ],
      "type": "SimpleFilterProvider",
      "name": "setDefaultFilter"
     },
     {
      "params": [
       {
        "type": "SimpleBeanPropertyFilter",
        "name": "f"
       }
      ],
      "type": "SimpleFilterProvider",
      "name": "setDefaultFilter"
     },
     {
      "params": [],
      "type": "PropertyFilter",
      "name": "getDefaultFilter"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "SimpleFilterProvider",
      "name": "setFailOnUnknownId"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "willFailOnUnknownId"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "BeanPropertyFilter",
        "name": "filter"
       }
      ],
      "type": "SimpleFilterProvider",
      "name": "addFilter"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "PropertyFilter",
        "name": "filter"
       }
      ],
      "type": "SimpleFilterProvider",
      "name": "addFilter"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "SimpleBeanPropertyFilter",
        "name": "filter"
       }
      ],
      "type": "SimpleFilterProvider",
      "name": "addFilter"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "id"
       }
      ],
      "type": "PropertyFilter",
      "name": "removeFilter"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "BeanPropertyFilter",
      "name": "findFilter"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       },
       {
        "type": "Object",
        "name": "valueToFilter"
       }
      ],
      "type": "PropertyFilter",
      "name": "findPropertyFilter"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Map",
      "name": "_filtersById"
     },
     {
      "type": "PropertyFilter",
      "name": "_defaultFilter"
     },
     {
      "type": "boolean",
      "name": "_cfgFailOnUnknownId"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectIdWriter.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "ObjectIdWriter",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "idType"
       },
       {
        "type": "PropertyName",
        "name": "propName"
       },
       {
        "type": "ObjectIdGenerator",
        "name": "generator"
       },
       {
        "type": "boolean",
        "name": "alwaysAsId"
       }
      ],
      "type": "ObjectIdWriter",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "JsonSerializer",
        "name": "ser"
       }
      ],
      "type": "ObjectIdWriter",
      "name": "withSerializer"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "newState"
       }
      ],
      "type": "ObjectIdWriter",
      "name": "withAlwaysAsId"
     }
    ],
    "fields": [
     {
      "type": "JavaType",
      "name": "idType"
     },
     {
      "type": "SerializableString",
      "name": "propertyName"
     },
     {
      "type": "ObjectIdGenerator",
      "name": "generator"
     },
     {
      "type": "JsonSerializer",
      "name": "serializer"
     },
     {
      "type": "boolean",
      "name": "alwaysAsId"
     }
    ]
   }
  ]
 },
 {
  "filename": "AttributePropertyWriter.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "AttributePropertyWriter",
    "methods": [
     {
      "params": [
       {
        "type": "String",
        "name": "attrName"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDef"
       },
       {
        "type": "Annotations",
        "name": "contextAnnotations"
       },
       {
        "type": "JavaType",
        "name": "declaredType"
       }
      ],
      "type": "AttributePropertyWriter",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "declaringClass"
       },
       {
        "type": "BeanPropertyDefinition",
        "name": "propDef"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "VirtualBeanPropertyWriter",
      "name": "withConfig"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "prov"
       }
      ],
      "type": "Object",
      "name": "value"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "_attrName"
     }
    ]
   }
  ]
 },
 {
  "filename": "UnwrappingBeanSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "UnwrappingBeanSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "NameTransformer",
        "name": "transformer"
       }
      ],
      "type": "JsonSerializer",
      "name": "unwrappingSerializer"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isUnwrappingSerializer"
     },
     {
      "params": [
       {
        "type": "ObjectIdWriter",
        "name": "objectIdWriter"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withObjectIdWriter"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "filterId"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withFilterId"
     },
     {
      "params": [
       {
        "type": "Set",
        "name": "toIgnore"
       }
      ],
      "type": "BeanSerializerBase",
      "name": "withIgnorals"
     },
     {
      "params": [],
      "type": "BeanSerializerBase",
      "name": "asArraySerializer"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NameTransformer",
      "name": "_nameTransformer"
     }
    ]
   }
  ]
 },
 {
  "filename": "UnknownSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "UnknownSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "Type",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "prov"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "failForEmpty"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "TypeWrappedSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ser.impl",
  "classes": [
   {
    "name": "TypeWrappedSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "handledType"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "BeanProperty",
        "name": "property"
       }
      ],
      "type": "JsonSerializer",
      "name": "createContextual"
     },
     {
      "params": [],
      "type": "JsonSerializer",
      "name": "valueSerializer"
     },
     {
      "params": [],
      "type": "TypeSerializer",
      "name": "typeSerializer"
     }
    ],
    "fields": [
     {
      "type": "TypeSerializer",
      "name": "_typeSerializer"
     },
     {
      "type": "JsonSerializer",
      "name": "_serializer"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedField.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedField",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationMap",
        "name": "ann"
       }
      ],
      "type": "AnnotatedField",
      "name": "withAnnotations"
     },
     {
      "params": [],
      "type": "Field",
      "name": "getAnnotated"
     },
     {
      "params": [],
      "type": "int",
      "name": "getModifiers"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawType"
     },
     {
      "params": [],
      "type": "Type",
      "name": "getGenericType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDeclaringClass"
     },
     {
      "params": [],
      "type": "Member",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "setValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "Object",
      "name": "getValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "getAnnotationCount"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isTransient"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": "Object",
      "name": "writeReplace"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Field",
      "name": "_field"
     },
     {
      "type": "Serialization",
      "name": "_serialization"
     }
    ]
   }
  ]
 },
 {
  "filename": "NopAnnotationIntrospector.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "NopAnnotationIntrospector",
    "methods": [
     {
      "params": [],
      "type": "Version",
      "name": "version"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "NopAnnotationIntrospector",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "POJOPropertiesCollector.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "POJOPropertiesCollector",
    "methods": [
     {
      "params": [],
      "type": "MapperConfig",
      "name": "getConfig"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "AnnotatedClass",
      "name": "getClassDef"
     },
     {
      "params": [],
      "type": "AnnotationIntrospector",
      "name": "getAnnotationIntrospector"
     },
     {
      "params": [],
      "type": "List",
      "name": "getProperties"
     },
     {
      "params": [],
      "type": "Map",
      "name": "getInjectables"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "getJsonValueMethod"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getJsonValueAccessor"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getAnyGetter"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getAnySetterField"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "getAnySetterMethod"
     },
     {
      "params": [],
      "type": "Set",
      "name": "getIgnoredPropertyNames"
     },
     {
      "params": [],
      "type": "ObjectIdInfo",
      "name": "getObjectIdInfo"
     },
     {
      "params": [],
      "type": "Class",
      "name": "findPOJOBuilderClass"
     },
     {
      "params": [],
      "type": "Map",
      "name": "getPropertyMap"
     },
     {
      "params": [],
      "type": null,
      "name": "collectAll"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       }
      ],
      "type": null,
      "name": "_addFields"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       }
      ],
      "type": null,
      "name": "_addCreators"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       },
       {
        "type": "AnnotatedParameter",
        "name": "param"
       }
      ],
      "type": null,
      "name": "_addCreatorParam"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       }
      ],
      "type": null,
      "name": "_addMethods"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       },
       {
        "type": "AnnotatedMethod",
        "name": "m"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": null,
      "name": "_addGetterMethod"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       },
       {
        "type": "AnnotatedMethod",
        "name": "m"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "ai"
       }
      ],
      "type": null,
      "name": "_addSetterMethod"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       }
      ],
      "type": null,
      "name": "_addInjectables"
     },
     {
      "params": [
       {
        "type": "JacksonInject",
        "name": "injectable"
       },
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": null,
      "name": "_doAddInjectable"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "simpleName"
       }
      ],
      "type": "PropertyName",
      "name": "_propNameFromSimple"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       }
      ],
      "type": null,
      "name": "_removeUnwantedProperties"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       }
      ],
      "type": null,
      "name": "_removeUnwantedAccessor"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": null,
      "name": "_collectIgnorals"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       }
      ],
      "type": null,
      "name": "_renameProperties"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "propMap"
       },
       {
        "type": "PropertyNamingStrategy",
        "name": "naming"
       }
      ],
      "type": null,
      "name": "_renameUsing"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       }
      ],
      "type": null,
      "name": "_renameWithWrappers"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       }
      ],
      "type": null,
      "name": "_sortProperties"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "msg"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "type": null,
      "name": "reportProblem"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       },
       {
        "type": "PropertyName",
        "name": "name"
       }
      ],
      "type": "POJOPropertyBuilder",
      "name": "_property"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "props"
       },
       {
        "type": "String",
        "name": "implName"
       }
      ],
      "type": "POJOPropertyBuilder",
      "name": "_property"
     },
     {
      "params": [],
      "type": "PropertyNamingStrategy",
      "name": "_findNamingStrategy"
     },
     {
      "params": [
       {
        "type": "POJOPropertyBuilder",
        "name": "prop"
       },
       {
        "type": "List",
        "name": "creatorProperties"
       }
      ],
      "type": null,
      "name": "_updateCreatorProperty"
     }
    ],
    "fields": [
     {
      "type": "MapperConfig",
      "name": "_config"
     },
     {
      "type": "boolean",
      "name": "_forSerialization"
     },
     {
      "type": "boolean",
      "name": "_stdBeanNaming"
     },
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "AnnotatedClass",
      "name": "_classDef"
     },
     {
      "type": "VisibilityChecker",
      "name": "_visibilityChecker"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_annotationIntrospector"
     },
     {
      "type": "boolean",
      "name": "_useAnnotations"
     },
     {
      "type": "String",
      "name": "_mutatorPrefix"
     },
     {
      "type": "boolean",
      "name": "_collected"
     },
     {
      "type": "LinkedHashMap",
      "name": "_properties"
     },
     {
      "type": "LinkedList",
      "name": "_creatorProperties"
     },
     {
      "type": "LinkedList",
      "name": "_anyGetters"
     },
     {
      "type": "LinkedList",
      "name": "_anySetters"
     },
     {
      "type": "LinkedList",
      "name": "_anySetterField"
     },
     {
      "type": "LinkedList",
      "name": "_jsonValueAccessors"
     },
     {
      "type": "HashSet",
      "name": "_ignoredPropertyNames"
     },
     {
      "type": "LinkedHashMap",
      "name": "_injectables"
     }
    ]
   }
  ]
 },
 {
  "filename": "VisibilityChecker.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "VisibilityChecker",
    "methods": [
     {
      "params": [
       {
        "type": "JsonAutoDetect",
        "name": "ann"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "JsonAutoDetect",
        "name": "vis"
       }
      ],
      "type": "T",
      "name": "withOverrides"
     },
     {
      "params": [
       {
        "type": "Visibility",
        "name": "v"
       }
      ],
      "type": "T",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "PropertyAccessor",
        "name": "method"
       },
       {
        "type": "Visibility",
        "name": "v"
       }
      ],
      "type": "T",
      "name": "withVisibility"
     },
     {
      "params": [
       {
        "type": "Visibility",
        "name": "v"
       }
      ],
      "type": "T",
      "name": "withGetterVisibility"
     },
     {
      "params": [
       {
        "type": "Visibility",
        "name": "v"
       }
      ],
      "type": "T",
      "name": "withIsGetterVisibility"
     },
     {
      "params": [
       {
        "type": "Visibility",
        "name": "v"
       }
      ],
      "type": "T",
      "name": "withSetterVisibility"
     },
     {
      "params": [
       {
        "type": "Visibility",
        "name": "v"
       }
      ],
      "type": "T",
      "name": "withCreatorVisibility"
     },
     {
      "params": [
       {
        "type": "Visibility",
        "name": "v"
       }
      ],
      "type": "T",
      "name": "withFieldVisibility"
     },
     {
      "params": [
       {
        "type": "Method",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "isGetterVisible"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "isGetterVisible"
     },
     {
      "params": [
       {
        "type": "Method",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "isIsGetterVisible"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "isIsGetterVisible"
     },
     {
      "params": [
       {
        "type": "Method",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "isSetterVisible"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "isSetterVisible"
     },
     {
      "params": [
       {
        "type": "Member",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "isCreatorVisible"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "isCreatorVisible"
     },
     {
      "params": [
       {
        "type": "Field",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isFieldVisible"
     },
     {
      "params": [
       {
        "type": "AnnotatedField",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "isFieldVisible"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "POJOPropertyBuilder.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "POJOPropertyBuilder",
    "methods": [
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "POJOPropertyBuilder",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "newSimpleName"
       }
      ],
      "type": "POJOPropertyBuilder",
      "name": "withSimpleName"
     },
     {
      "params": [
       {
        "type": "POJOPropertyBuilder",
        "name": "other"
       }
      ],
      "type": "int",
      "name": "compareTo"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getFullName"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "name"
       }
      ],
      "type": "boolean",
      "name": "hasName"
     },
     {
      "params": [],
      "type": "String",
      "name": "getInternalName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getWrapperName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isExplicitlyIncluded"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isExplicitlyNamed"
     },
     {
      "params": [],
      "type": "PropertyMetadata",
      "name": "getMetadata"
     },
     {
      "params": [
       {
        "type": "PropertyMetadata",
        "name": "metadata"
       }
      ],
      "type": "PropertyMetadata",
      "name": "_getSetterInfo"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getPrimaryType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawPrimaryType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasGetter"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasSetter"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasField"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasConstructorParameter"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "couldDeserialize"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "couldSerialize"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "getGetter"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "getSetter"
     },
     {
      "params": [],
      "type": "AnnotatedField",
      "name": "getField"
     },
     {
      "params": [],
      "type": "AnnotatedParameter",
      "name": "getConstructorParameter"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "getConstructorParameters"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getPrimaryMember"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "m"
       }
      ],
      "type": "int",
      "name": "_getterPriority"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "m"
       }
      ],
      "type": "int",
      "name": "_setterPriority"
     },
     {
      "params": [],
      "type": "Class",
      "name": "findViews"
     },
     {
      "params": [],
      "type": "AnnotationIntrospector",
      "name": "findReferenceType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isTypeId"
     },
     {
      "params": [],
      "type": "Boolean",
      "name": "_findRequired"
     },
     {
      "params": [],
      "type": "String",
      "name": "_findDescription"
     },
     {
      "params": [],
      "type": "Integer",
      "name": "_findIndex"
     },
     {
      "params": [],
      "type": "String",
      "name": "_findDefaultValue"
     },
     {
      "params": [],
      "type": "ObjectIdInfo",
      "name": "findObjectIdInfo"
     },
     {
      "params": [],
      "type": "JsonInclude",
      "name": "findInclusion"
     },
     {
      "params": [],
      "type": "JsonProperty",
      "name": "findAccess"
     },
     {
      "params": [
       {
        "type": "AnnotatedField",
        "name": "a"
       },
       {
        "type": "PropertyName",
        "name": "name"
       },
       {
        "type": "boolean",
        "name": "explName"
       },
       {
        "type": "boolean",
        "name": "visible"
       },
       {
        "type": "boolean",
        "name": "ignored"
       }
      ],
      "type": null,
      "name": "addField"
     },
     {
      "params": [
       {
        "type": "AnnotatedParameter",
        "name": "a"
       },
       {
        "type": "PropertyName",
        "name": "name"
       },
       {
        "type": "boolean",
        "name": "explName"
       },
       {
        "type": "boolean",
        "name": "visible"
       },
       {
        "type": "boolean",
        "name": "ignored"
       }
      ],
      "type": null,
      "name": "addCtor"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "a"
       },
       {
        "type": "PropertyName",
        "name": "name"
       },
       {
        "type": "boolean",
        "name": "explName"
       },
       {
        "type": "boolean",
        "name": "visible"
       },
       {
        "type": "boolean",
        "name": "ignored"
       }
      ],
      "type": null,
      "name": "addGetter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "a"
       },
       {
        "type": "PropertyName",
        "name": "name"
       },
       {
        "type": "boolean",
        "name": "explName"
       },
       {
        "type": "boolean",
        "name": "visible"
       },
       {
        "type": "boolean",
        "name": "ignored"
       }
      ],
      "type": null,
      "name": "addSetter"
     },
     {
      "params": [
       {
        "type": "POJOPropertyBuilder",
        "name": "src"
       }
      ],
      "type": null,
      "name": "addAll"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "chain1"
       },
       {
        "type": "Linked",
        "name": "chain2"
       }
      ],
      "type": "Linked",
      "name": "merge"
     },
     {
      "params": [],
      "type": null,
      "name": "removeIgnored"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "inferMutators"
       }
      ],
      "type": "JsonProperty",
      "name": "removeNonVisible"
     },
     {
      "params": [],
      "type": null,
      "name": "removeConstructors"
     },
     {
      "params": [],
      "type": null,
      "name": "trimByVisibility"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "forSerialization"
       }
      ],
      "type": null,
      "name": "mergeAnnotations"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Linked",
        "name": "nodes"
       }
      ],
      "type": "AnnotationMap",
      "name": "_mergeAnnotations"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "node"
       }
      ],
      "type": "AnnotationMap",
      "name": "_getAllAnnotations"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "node"
       },
       {
        "type": "AnnotationMap",
        "name": "ann"
       }
      ],
      "type": "Linked",
      "name": "_applyAnnotations"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "node"
       }
      ],
      "type": "Linked",
      "name": "_removeIgnored"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "node"
       }
      ],
      "type": "Linked",
      "name": "_removeNonVisible"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "node"
       }
      ],
      "type": "Linked",
      "name": "_trimByVisibility"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "n"
       }
      ],
      "type": "boolean",
      "name": "_anyExplicits"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "n"
       }
      ],
      "type": "boolean",
      "name": "_anyExplicitNames"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "anyVisible"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "n"
       }
      ],
      "type": "boolean",
      "name": "_anyVisible"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "anyIgnorals"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "n"
       }
      ],
      "type": "boolean",
      "name": "_anyIgnorals"
     },
     {
      "params": [],
      "type": "Set",
      "name": "findExplicitNames"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "newNames"
       }
      ],
      "type": "Collection",
      "name": "explode"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "newNames"
       },
       {
        "type": "Map",
        "name": "props"
       },
       {
        "type": "Linked",
        "name": "accessors"
       }
      ],
      "type": null,
      "name": "_explode"
     },
     {
      "params": [
       {
        "type": "Linked",
        "name": "node"
       },
       {
        "type": "Set",
        "name": "renamed"
       }
      ],
      "type": "Set",
      "name": "_findExplicitNames"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "WithMember",
        "name": "func"
       }
      ],
      "type": "T",
      "name": "fromMemberAnnotations"
     },
     {
      "params": [
       {
        "type": "WithMember",
        "name": "func"
       },
       {
        "type": "T",
        "name": "defaultValue"
       }
      ],
      "type": "T",
      "name": "fromMemberAnnotationsExcept"
     }
    ],
    "fields": [
     {
      "type": "AnnotationIntrospector",
      "name": "NOT_REFEFERENCE_PROP"
     },
     {
      "type": "boolean",
      "name": "_forSerialization"
     },
     {
      "type": "MapperConfig",
      "name": "_config"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_annotationIntrospector"
     },
     {
      "type": "PropertyName",
      "name": "_name"
     },
     {
      "type": "PropertyName",
      "name": "_internalName"
     },
     {
      "type": "Linked",
      "name": "_fields"
     },
     {
      "type": "Linked",
      "name": "_ctorParameters"
     },
     {
      "type": "Linked",
      "name": "_getters"
     },
     {
      "type": "Linked",
      "name": "_setters"
     },
     {
      "type": "PropertyMetadata",
      "name": "_metadata"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_referenceInfo"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedConstructor.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedConstructor",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationMap",
        "name": "ann"
       }
      ],
      "type": "AnnotatedConstructor",
      "name": "withAnnotations"
     },
     {
      "params": [],
      "type": "Constructor",
      "name": "getAnnotated"
     },
     {
      "params": [],
      "type": "int",
      "name": "getModifiers"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawType"
     },
     {
      "params": [],
      "type": "int",
      "name": "getParameterCount"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "Class",
      "name": "getRawParameterType"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JavaType",
      "name": "getParameterType"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "Type",
      "name": "getGenericParameterType"
     },
     {
      "params": [],
      "type": "Object",
      "name": "call"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "type": "Object",
      "name": "call"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "arg"
       }
      ],
      "type": "Object",
      "name": "call1"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDeclaringClass"
     },
     {
      "params": [],
      "type": "Member",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "setValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "Object",
      "name": "getValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "Object",
      "name": "writeReplace"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Constructor",
      "name": "_constructor"
     },
     {
      "type": "Serialization",
      "name": "_serialization"
     }
    ]
   }
  ]
 },
 {
  "filename": "JacksonAnnotationIntrospector.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "JacksonAnnotationIntrospector",
    "methods": [
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "b"
       }
      ],
      "type": "JacksonAnnotationIntrospector",
      "name": "setConstructorPropertiesImpliesCreator"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "ann"
       }
      ],
      "type": "boolean",
      "name": "isAnnotationBundle"
     },
     {
      "params": [
       {
        "type": "Enum",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "findEnumValue"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumType"
       },
       {
        "type": "Enum",
        "name": "enumValues"
       },
       {
        "type": "String",
        "name": "names"
       }
      ],
      "type": "String",
      "name": "findEnumValues"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumCls"
       }
      ],
      "type": "Enum",
      "name": "findDefaultEnumValue"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "PropertyName",
      "name": "findRootName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonIgnoreProperties",
      "name": "findPropertyIgnorals"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Boolean",
      "name": "isIgnorableType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findFilterId"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Object",
      "name": "findNamingStrategy"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findClassDescription"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "VisibilityChecker",
        "name": "checker"
       }
      ],
      "type": "VisibilityChecker",
      "name": "findAutoDetectVisibility"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "String",
      "name": "findImplicitPropertyName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "m"
       }
      ],
      "type": "List",
      "name": "findPropertyAliases"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "hasIgnoreMarker"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "Boolean",
      "name": "hasRequiredMarker"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "m"
       }
      ],
      "type": "JsonProperty",
      "name": "findPropertyAccess"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "String",
      "name": "findPropertyDescription"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "Integer",
      "name": "findPropertyIndex"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "String",
      "name": "findPropertyDefaultValue"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "JsonFormat",
      "name": "findFormat"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "ReferenceProperty",
      "name": "findReferenceType"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "NameTransformer",
      "name": "findUnwrappingNameTransformer"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "JacksonInject",
      "name": "findInjectableValue"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "Object",
      "name": "findInjectableValueId"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Class",
      "name": "findViews"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMethod",
        "name": "setter1"
       },
       {
        "type": "AnnotatedMethod",
        "name": "setter2"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "resolveSetterConflict"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "findTypeResolver"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "findPropertyTypeResolver"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "containerType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "findPropertyContentTypeResolver"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "List",
      "name": "findSubtypes"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findTypeName"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "Boolean",
      "name": "isTypeId"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "ObjectIdInfo",
      "name": "findObjectIdInfo"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       },
       {
        "type": "ObjectIdInfo",
        "name": "objectIdInfo"
       }
      ],
      "type": "ObjectIdInfo",
      "name": "findObjectReferenceInfo"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findKeySerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findContentSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findNullSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonInclude",
      "name": "findPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JsonInclude",
        "name": "value"
       }
      ],
      "type": "JsonInclude",
      "name": "_refinePropertyInclusion"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonSerialize",
      "name": "findSerializationTyping"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findSerializationConverter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findSerializationContentConverter"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "JavaType",
      "name": "refineSerializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Class",
      "name": "findSerializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Class",
      "name": "findSerializationKeyType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Class",
      "name": "findSerializationContentType"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findSerializationPropertyOrder"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "Boolean",
      "name": "findSerializationSortAlphabetically"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "Boolean",
      "name": "_findSortAlpha"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "List",
        "name": "properties"
       }
      ],
      "type": null,
      "name": "findAndAddVirtualProperties"
     },
     {
      "params": [
       {
        "type": "JsonAppend",
        "name": "attr"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "_constructVirtualProperty"
     },
     {
      "params": [
       {
        "type": "JsonAppend",
        "name": "prop"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "BeanPropertyWriter",
      "name": "_constructVirtualProperty"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "PropertyName",
      "name": "findNameForSerialization"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasAsValue"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasAnyGetter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "hasAnyGetterAnnotation"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "hasAsValueAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findDeserializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findContentDeserializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findDeserializationConverter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findDeserializationContentConverter"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "JavaType",
      "name": "refineDeserializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseContentType"
       }
      ],
      "type": "Class",
      "name": "findDeserializationContentType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Class",
      "name": "findDeserializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseKeyType"
       }
      ],
      "type": "Class",
      "name": "findDeserializationKeyType"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Object",
      "name": "findValueInstantiator"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Class",
      "name": "findPOJOBuilder"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "JsonPOJOBuilder",
      "name": "findPOJOBuilderConfig"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "PropertyName",
      "name": "findNameForDeserialization"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasAnySetter"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonSetter",
      "name": "findSetterInfo"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "findMergeInfo"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "hasAnySetterAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "boolean",
      "name": "hasCreatorAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonCreator",
      "name": "findCreatorBinding"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonCreator",
      "name": "findCreatorAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "boolean",
      "name": "_isIgnorable"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Class",
      "name": "_classIfExplicit"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Class",
        "name": "implicit"
       }
      ],
      "type": "Class",
      "name": "_classIfExplicit"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "localName"
       },
       {
        "type": "String",
        "name": "namespace"
       }
      ],
      "type": "PropertyName",
      "name": "_propertyName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "PropertyName",
      "name": "_findConstructorName"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "ann"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "_findTypeResolver"
     },
     {
      "params": [],
      "type": "StdTypeResolverBuilder",
      "name": "_constructStdTypeResolverBuilder"
     },
     {
      "params": [],
      "type": "StdTypeResolverBuilder",
      "name": "_constructNoTypeResolverBuilder"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "baseType"
       },
       {
        "type": "Class",
        "name": "refinement"
       }
      ],
      "type": "boolean",
      "name": "_primitiveAndWrapper"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "baseType"
       },
       {
        "type": "Class",
        "name": "refinement"
       }
      ],
      "type": "boolean",
      "name": "_primitiveAndWrapper"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "ANNOTATIONS_TO_INFER_SER"
     },
     {
      "type": "Class",
      "name": "ANNOTATIONS_TO_INFER_DESER"
     },
     {
      "type": "Java7Support",
      "name": "_java7Helper"
     },
     {
      "type": "LRUMap",
      "name": "_annotationsInside"
     },
     {
      "type": "boolean",
      "name": "_cfgConstructorPropertiesImpliesCreator"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedClass.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedClass",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       }
      ],
      "type": "AnnotatedClass",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "MixInResolver",
        "name": "mir"
       }
      ],
      "type": "AnnotatedClass",
      "name": "construct"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "raw"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       }
      ],
      "type": "AnnotatedClass",
      "name": "constructWithoutSuperTypes"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "raw"
       },
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "MixInResolver",
        "name": "mir"
       }
      ],
      "type": "AnnotatedClass",
      "name": "constructWithoutSuperTypes"
     },
     {
      "params": [
       {
        "type": "Type",
        "name": "type"
       }
      ],
      "type": "JavaType",
      "name": "resolveType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getAnnotated"
     },
     {
      "params": [],
      "type": "int",
      "name": "getModifiers"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "boolean",
      "name": "hasAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "annoClasses"
       }
      ],
      "type": "boolean",
      "name": "hasOneOf"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawType"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "annotations"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "Annotations",
      "name": "getAnnotations"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasAnnotations"
     },
     {
      "params": [],
      "type": "AnnotatedConstructor",
      "name": "getDefaultConstructor"
     },
     {
      "params": [],
      "type": "List",
      "name": "getConstructors"
     },
     {
      "params": [],
      "type": "List",
      "name": "getFactoryMethods"
     },
     {
      "params": [],
      "type": "List",
      "name": "getStaticMethods"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "memberMethods"
     },
     {
      "params": [],
      "type": "int",
      "name": "getMemberMethodCount"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Class",
        "name": "paramTypes"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "findMethod"
     },
     {
      "params": [],
      "type": "int",
      "name": "getFieldCount"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "fields"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isNonStaticInnerClass"
     },
     {
      "params": [],
      "type": "List",
      "name": "_fields"
     },
     {
      "params": [],
      "type": "AnnotatedMethodMap",
      "name": "_methods"
     },
     {
      "params": [],
      "type": "Creators",
      "name": "_creators"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": [
     {
      "type": "Creators",
      "name": "NO_CREATORS"
     },
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "Class",
      "name": "_class"
     },
     {
      "type": "TypeBindings",
      "name": "_bindings"
     },
     {
      "type": "List",
      "name": "_superTypes"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_annotationIntrospector"
     },
     {
      "type": "TypeFactory",
      "name": "_typeFactory"
     },
     {
      "type": "MixInResolver",
      "name": "_mixInResolver"
     },
     {
      "type": "Class",
      "name": "_primaryMixIn"
     },
     {
      "type": "Annotations",
      "name": "_classAnnotations"
     },
     {
      "type": "Creators",
      "name": "_creators"
     },
     {
      "type": "AnnotatedMethodMap",
      "name": "_memberMethods"
     },
     {
      "type": "List",
      "name": "_fields"
     },
     {
      "type": "Boolean",
      "name": "_nonStaticInnerClass"
     }
    ]
   }
  ]
 },
 {
  "filename": "CollectorBase.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "CollectorBase",
    "methods": [
     {
      "params": [
       {
        "type": "Annotation",
        "name": "anns"
       }
      ],
      "type": "AnnotationCollector",
      "name": "collectAnnotations"
     },
     {
      "params": [
       {
        "type": "AnnotationCollector",
        "name": "c"
       },
       {
        "type": "Annotation",
        "name": "anns"
       }
      ],
      "type": "AnnotationCollector",
      "name": "collectAnnotations"
     },
     {
      "params": [
       {
        "type": "AnnotationCollector",
        "name": "c"
       },
       {
        "type": "Annotation",
        "name": "bundle"
       }
      ],
      "type": "AnnotationCollector",
      "name": "collectFromBundle"
     },
     {
      "params": [
       {
        "type": "AnnotationCollector",
        "name": "c"
       },
       {
        "type": "Annotation",
        "name": "anns"
       }
      ],
      "type": "AnnotationCollector",
      "name": "collectDefaultAnnotations"
     },
     {
      "params": [
       {
        "type": "AnnotationCollector",
        "name": "c"
       },
       {
        "type": "Annotation",
        "name": "bundle"
       }
      ],
      "type": "AnnotationCollector",
      "name": "collectDefaultFromBundle"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "a"
       }
      ],
      "type": "boolean",
      "name": "_ignorableAnnotation"
     },
     {
      "params": [],
      "type": "AnnotationMap",
      "name": "_emptyAnnotationMap"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "count"
       }
      ],
      "type": "AnnotationMap",
      "name": "_emptyAnnotationMaps"
     }
    ],
    "fields": [
     {
      "type": "AnnotationMap",
      "name": "NO_ANNOTATION_MAPS"
     },
     {
      "type": "Annotation",
      "name": "NO_ANNOTATIONS"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_intr"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotationMap.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotationMap",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "Annotation",
        "name": "value"
       }
      ],
      "type": "AnnotationMap",
      "name": "of"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "A",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "boolean",
      "name": "has"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "annoClasses"
       }
      ],
      "type": "boolean",
      "name": "hasOneOf"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "annotations"
     },
     {
      "params": [
       {
        "type": "AnnotationMap",
        "name": "primary"
       },
       {
        "type": "AnnotationMap",
        "name": "secondary"
       }
      ],
      "type": "AnnotationMap",
      "name": "merge"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "ann"
       }
      ],
      "type": "boolean",
      "name": "addIfNotPresent"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "ann"
       }
      ],
      "type": "boolean",
      "name": "add"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "ann"
       }
      ],
      "type": "boolean",
      "name": "_add"
     }
    ],
    "fields": [
     {
      "type": "HashMap",
      "name": "_annotations"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedFieldCollector.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedFieldCollector",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       },
       {
        "type": "TypeResolutionContext",
        "name": "tc"
       },
       {
        "type": "MixInResolver",
        "name": "mixins"
       },
       {
        "type": "TypeFactory",
        "name": "types"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "List",
      "name": "collectFields"
     },
     {
      "params": [
       {
        "type": "TypeResolutionContext",
        "name": "tc"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "List",
      "name": "collect"
     },
     {
      "params": [
       {
        "type": "TypeResolutionContext",
        "name": "tc"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "Map",
        "name": "fields"
       }
      ],
      "type": "Map",
      "name": "_findFields"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "mixInCls"
       },
       {
        "type": "Class",
        "name": "targetClass"
       },
       {
        "type": "Map",
        "name": "fields"
       }
      ],
      "type": null,
      "name": "_addFieldMixIns"
     },
     {
      "params": [
       {
        "type": "Field",
        "name": "f"
       }
      ],
      "type": "boolean",
      "name": "_isIncludableField"
     }
    ],
    "fields": [
     {
      "type": "TypeFactory",
      "name": "_typeFactory"
     },
     {
      "type": "MixInResolver",
      "name": "_mixInResolver"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedCreatorCollector.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedCreatorCollector",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       },
       {
        "type": "TypeResolutionContext",
        "name": "tc"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "Class",
        "name": "primaryMixIn"
       }
      ],
      "type": "Creators",
      "name": "collectCreators"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "Class",
        "name": "primaryMixIn"
       }
      ],
      "type": "Creators",
      "name": "collect"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "Class",
        "name": "primaryMixIn"
       }
      ],
      "type": "List",
      "name": "_findPotentialConstructors"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "Class",
        "name": "primaryMixIn"
       }
      ],
      "type": "List",
      "name": "_findPotentialFactories"
     },
     {
      "params": [
       {
        "type": "ClassUtil",
        "name": "ctor"
       },
       {
        "type": "ClassUtil",
        "name": "mixin"
       }
      ],
      "type": "AnnotatedConstructor",
      "name": "constructDefaultConstructor"
     },
     {
      "params": [
       {
        "type": "ClassUtil",
        "name": "ctor"
       },
       {
        "type": "ClassUtil",
        "name": "mixin"
       }
      ],
      "type": "AnnotatedConstructor",
      "name": "constructNonDefaultConstructor"
     },
     {
      "params": [
       {
        "type": "Method",
        "name": "m"
       },
       {
        "type": "Method",
        "name": "mixin"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "constructFactoryCreator"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "mainAnns"
       },
       {
        "type": "Annotation",
        "name": "mixinAnns"
       }
      ],
      "type": "AnnotationMap",
      "name": "collectAnnotations"
     },
     {
      "params": [
       {
        "type": "ClassUtil",
        "name": "main"
       },
       {
        "type": "ClassUtil",
        "name": "mixin"
       }
      ],
      "type": "AnnotationMap",
      "name": "collectAnnotations"
     },
     {
      "params": [
       {
        "type": "AnnotatedElement",
        "name": "main"
       },
       {
        "type": "AnnotatedElement",
        "name": "mixin"
       }
      ],
      "type": "AnnotationMap",
      "name": "collectAnnotations"
     },
     {
      "params": [
       {
        "type": "Constructor",
        "name": "c"
       }
      ],
      "type": "boolean",
      "name": "isIncludableConstructor"
     }
    ],
    "fields": [
     {
      "type": "TypeResolutionContext",
      "name": "_typeContext"
     },
     {
      "type": "AnnotatedConstructor",
      "name": "_defaultConstructor"
     }
    ]
   }
  ]
 },
 {
  "filename": "VirtualAnnotatedMember.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "VirtualAnnotatedMember",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationMap",
        "name": "fallback"
       }
      ],
      "type": "Annotated",
      "name": "withAnnotations"
     },
     {
      "params": [],
      "type": "Field",
      "name": "getAnnotated"
     },
     {
      "params": [],
      "type": "int",
      "name": "getModifiers"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDeclaringClass"
     },
     {
      "params": [],
      "type": "Member",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "setValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "Object",
      "name": "getValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "getAnnotationCount"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Class",
      "name": "_declaringClass"
     },
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "String",
      "name": "_name"
     }
    ]
   }
  ]
 },
 {
  "filename": "WithMember.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "WithMember",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "T",
      "name": "withMember"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "AnnotatedMethodCollector.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedMethodCollector",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       },
       {
        "type": "TypeResolutionContext",
        "name": "tc"
       },
       {
        "type": "MixInResolver",
        "name": "mixins"
       },
       {
        "type": "TypeFactory",
        "name": "types"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "List",
        "name": "superTypes"
       },
       {
        "type": "Class",
        "name": "primaryMixIn"
       }
      ],
      "type": "AnnotatedMethodMap",
      "name": "collectMethods"
     },
     {
      "params": [
       {
        "type": "TypeFactory",
        "name": "typeFactory"
       },
       {
        "type": "TypeResolutionContext",
        "name": "tc"
       },
       {
        "type": "JavaType",
        "name": "mainType"
       },
       {
        "type": "List",
        "name": "superTypes"
       },
       {
        "type": "Class",
        "name": "primaryMixIn"
       }
      ],
      "type": "AnnotatedMethodMap",
      "name": "collect"
     },
     {
      "params": [
       {
        "type": "TypeResolutionContext",
        "name": "tc"
       },
       {
        "type": "Class",
        "name": "cls"
       },
       {
        "type": "Map",
        "name": "methods"
       },
       {
        "type": "Class",
        "name": "mixInCls"
       }
      ],
      "type": null,
      "name": "_addMemberMethods"
     },
     {
      "params": [
       {
        "type": "TypeResolutionContext",
        "name": "tc"
       },
       {
        "type": "Class",
        "name": "targetClass"
       },
       {
        "type": "Map",
        "name": "methods"
       },
       {
        "type": "Class",
        "name": "mixInCls"
       }
      ],
      "type": null,
      "name": "_addMethodMixIns"
     },
     {
      "params": [
       {
        "type": "Method",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "_isIncludableMemberMethod"
     }
    ],
    "fields": [
     {
      "type": "MixInResolver",
      "name": "_mixInResolver"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": []
 },
 {
  "filename": "ConcreteBeanPropertyBase.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "ConcreteBeanPropertyBase",
    "methods": [
     {
      "params": [],
      "type": "boolean",
      "name": "isRequired"
     },
     {
      "params": [],
      "type": "PropertyMetadata",
      "name": "getMetadata"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isVirtual"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "intr"
       }
      ],
      "type": "JsonFormat",
      "name": "findFormatOverrides"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonFormat",
      "name": "findPropertyFormat"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "baseType"
       }
      ],
      "type": "JsonInclude",
      "name": "findPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       }
      ],
      "type": "List",
      "name": "findAliases"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "PropertyMetadata",
      "name": "_metadata"
     },
     {
      "type": "JsonFormat",
      "name": "_propertyFormat"
     },
     {
      "type": "List",
      "name": "_aliases"
     }
    ]
   }
  ]
 },
 {
  "filename": "Annotated.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "Annotated",
    "methods": [
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "boolean",
      "name": "hasAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "annoClasses"
       }
      ],
      "type": "boolean",
      "name": "hasOneOf"
     },
     {
      "params": [],
      "type": "AnnotatedElement",
      "name": "getAnnotated"
     },
     {
      "params": [],
      "type": "int",
      "name": "getModifiers"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isPublic"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [
       {
        "type": "TypeBindings",
        "name": "bogus"
       }
      ],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "Type",
      "name": "getGenericType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawType"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "annotations"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BasicClassIntrospector.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "BasicClassIntrospector",
    "methods": [
     {
      "params": [],
      "type": "ClassIntrospector",
      "name": "copy"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "forSerialization"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "forDeserialization"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "forDeserializationWithBuilder"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "forCreation"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "forClassAnnotations"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "forDirectClassAnnotations"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       },
       {
        "type": "boolean",
        "name": "forSerialization"
       },
       {
        "type": "String",
        "name": "mutatorPrefix"
       }
      ],
      "type": "POJOPropertiesCollector",
      "name": "collectProperties"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       },
       {
        "type": "boolean",
        "name": "forSerialization"
       }
      ],
      "type": "POJOPropertiesCollector",
      "name": "collectPropertiesWithBuilder"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "boolean",
        "name": "forSerialization"
       },
       {
        "type": "String",
        "name": "mutatorPrefix"
       }
      ],
      "type": "POJOPropertiesCollector",
      "name": "constructPropertyCollector"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "_findStdTypeDesc"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "_isStdJDKCollection"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "_findStdJdkCollectionDesc"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "AnnotatedClass",
      "name": "_resolveAnnotatedClass"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "AnnotatedClass",
      "name": "_resolveAnnotatedWithoutSuperTypes"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BasicBeanDescription",
      "name": "STRING_DESC"
     },
     {
      "type": "BasicBeanDescription",
      "name": "BOOLEAN_DESC"
     },
     {
      "type": "BasicBeanDescription",
      "name": "INT_DESC"
     },
     {
      "type": "BasicBeanDescription",
      "name": "LONG_DESC"
     },
     {
      "type": "LRUMap",
      "name": "_cachedFCA"
     }
    ]
   }
  ]
 },
 {
  "filename": "SimpleMixInResolver.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "SimpleMixInResolver",
    "methods": [
     {
      "params": [
       {
        "type": "ClassIntrospector",
        "name": "overrides"
       }
      ],
      "type": "SimpleMixInResolver",
      "name": "withOverrides"
     },
     {
      "params": [],
      "type": "SimpleMixInResolver",
      "name": "withoutLocalDefinitions"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "sourceMixins"
       }
      ],
      "type": null,
      "name": "setLocalDefinitions"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "target"
       },
       {
        "type": "Class",
        "name": "mixinSource"
       }
      ],
      "type": null,
      "name": "addLocalDefinition"
     },
     {
      "params": [],
      "type": "SimpleMixInResolver",
      "name": "copy"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "cls"
       }
      ],
      "type": "Class",
      "name": "findMixInClassFor"
     },
     {
      "params": [],
      "type": "int",
      "name": "localSize"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ClassIntrospector",
      "name": "_overrides"
     },
     {
      "type": "Map",
      "name": "_localMixIns"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotationCollector.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotationCollector",
    "methods": [
     {
      "params": [],
      "type": "Annotations",
      "name": "emptyAnnotations"
     },
     {
      "params": [],
      "type": "AnnotationCollector",
      "name": "emptyCollector"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "data"
       }
      ],
      "type": "AnnotationCollector",
      "name": "emptyCollector"
     },
     {
      "params": [],
      "type": "Annotations",
      "name": "asAnnotations"
     },
     {
      "params": [],
      "type": "AnnotationMap",
      "name": "asAnnotationMap"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getData"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "ann"
       }
      ],
      "type": "boolean",
      "name": "isPresent"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "ann"
       }
      ],
      "type": "AnnotationCollector",
      "name": "addOrOverride"
     }
    ],
    "fields": [
     {
      "type": "Annotations",
      "name": "NO_ANNOTATIONS"
     },
     {
      "type": "Object",
      "name": "_data"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedMethod.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedMethod",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationMap",
        "name": "ann"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "withAnnotations"
     },
     {
      "params": [],
      "type": "Method",
      "name": "getAnnotated"
     },
     {
      "params": [],
      "type": "int",
      "name": "getModifiers"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawType"
     },
     {
      "params": [],
      "type": "Type",
      "name": "getGenericType"
     },
     {
      "params": [],
      "type": "Object",
      "name": "call"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "type": "Object",
      "name": "call"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "arg"
       }
      ],
      "type": "Object",
      "name": "call1"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "Object",
      "name": "callOn"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "type": "Object",
      "name": "callOnWith"
     },
     {
      "params": [],
      "type": "int",
      "name": "getParameterCount"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "Class",
      "name": "getRawParameterType"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JavaType",
      "name": "getParameterType"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "Type",
      "name": "getGenericParameterType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDeclaringClass"
     },
     {
      "params": [],
      "type": "Method",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "setValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "Object",
      "name": "getValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "getFullName"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawParameterTypes"
     },
     {
      "params": [],
      "type": "Type",
      "name": "getGenericParameterTypes"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawReturnType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasReturnType"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "Object",
      "name": "writeReplace"
     },
     {
      "params": [],
      "type": "Object",
      "name": "readResolve"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Method",
      "name": "_method"
     },
     {
      "type": "Class",
      "name": "_paramClasses"
     },
     {
      "type": "Serialization",
      "name": "_serialization"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectIdInfo.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "ObjectIdInfo",
    "methods": [
     {
      "params": [],
      "type": "ObjectIdInfo",
      "name": "empty"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "state"
       }
      ],
      "type": "ObjectIdInfo",
      "name": "withAlwaysAsId"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getPropertyName"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getScope"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getGeneratorType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getResolverType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "getAlwaysAsId"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "PropertyName",
      "name": "_propertyName"
     },
     {
      "type": "Class",
      "name": "_generator"
     },
     {
      "type": "Class",
      "name": "_resolver"
     },
     {
      "type": "Class",
      "name": "_scope"
     },
     {
      "type": "boolean",
      "name": "_alwaysAsId"
     },
     {
      "type": "ObjectIdInfo",
      "name": "EMPTY"
     }
    ]
   }
  ]
 },
 {
  "filename": "BasicBeanDescription.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "BasicBeanDescription",
    "methods": [
     {
      "params": [
       {
        "type": "POJOPropertiesCollector",
        "name": "coll"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "forDeserialization"
     },
     {
      "params": [
       {
        "type": "POJOPropertiesCollector",
        "name": "coll"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "forSerialization"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "BasicBeanDescription",
      "name": "forOtherUse"
     },
     {
      "params": [],
      "type": "List",
      "name": "_properties"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propName"
       }
      ],
      "type": "boolean",
      "name": "removeProperty"
     },
     {
      "params": [
       {
        "type": "BeanPropertyDefinition",
        "name": "def"
       }
      ],
      "type": "boolean",
      "name": "addProperty"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "name"
       }
      ],
      "type": "boolean",
      "name": "hasProperty"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "name"
       }
      ],
      "type": "BeanPropertyDefinition",
      "name": "findProperty"
     },
     {
      "params": [],
      "type": "AnnotatedClass",
      "name": "getClassInfo"
     },
     {
      "params": [],
      "type": "ObjectIdInfo",
      "name": "getObjectIdInfo"
     },
     {
      "params": [],
      "type": "List",
      "name": "findProperties"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "findJsonValueMethod"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "findJsonValueAccessor"
     },
     {
      "params": [],
      "type": "Set",
      "name": "getIgnoredPropertyNames"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasKnownClassAnnotations"
     },
     {
      "params": [],
      "type": "Annotations",
      "name": "getClassAnnotations"
     },
     {
      "params": [],
      "type": "TypeBindings",
      "name": "bindingsForBeanType"
     },
     {
      "params": [
       {
        "type": "java",
        "name": "jdkType"
       }
      ],
      "type": "JavaType",
      "name": "resolveType"
     },
     {
      "params": [],
      "type": "AnnotatedConstructor",
      "name": "findDefaultConstructor"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "findAnySetterAccessor"
     },
     {
      "params": [],
      "type": "Map",
      "name": "findInjectables"
     },
     {
      "params": [],
      "type": "List",
      "name": "getConstructors"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "fixAccess"
       }
      ],
      "type": "Object",
      "name": "instantiateBean"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Class",
        "name": "paramTypes"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "findMethod"
     },
     {
      "params": [
       {
        "type": "JsonFormat",
        "name": "defValue"
       }
      ],
      "type": "JsonFormat",
      "name": "findExpectedFormat"
     },
     {
      "params": [],
      "type": "Class",
      "name": "findDefaultViews"
     },
     {
      "params": [],
      "type": "Converter",
      "name": "findSerializationConverter"
     },
     {
      "params": [
       {
        "type": "JsonInclude",
        "name": "defValue"
       }
      ],
      "type": "JsonInclude",
      "name": "findPropertyInclusion"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "findAnyGetter"
     },
     {
      "params": [],
      "type": "List",
      "name": "findBackReferences"
     },
     {
      "params": [],
      "type": "Map",
      "name": "findBackReferenceProperties"
     },
     {
      "params": [],
      "type": "List",
      "name": "getFactoryMethods"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "argTypes"
       }
      ],
      "type": "Constructor",
      "name": "findSingleArgConstructor"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "expArgTypes"
       }
      ],
      "type": "Method",
      "name": "findFactoryMethod"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "isFactoryMethod"
     },
     {
      "params": [
       {
        "type": "AnnotatedParameter",
        "name": "param"
       }
      ],
      "type": "PropertyName",
      "name": "_findCreatorPropertyName"
     },
     {
      "params": [],
      "type": "Class",
      "name": "findPOJOBuilder"
     },
     {
      "params": [],
      "type": "JsonPOJOBuilder",
      "name": "findPOJOBuilderConfig"
     },
     {
      "params": [],
      "type": "Converter",
      "name": "findDeserializationConverter"
     },
     {
      "params": [],
      "type": "String",
      "name": "findClassDescription"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "ignoredProperties"
       },
       {
        "type": "boolean",
        "name": "forSerialization"
       }
      ],
      "type": "LinkedHashMap",
      "name": "_findPropertyFields"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "converterDef"
       }
      ],
      "type": "Converter",
      "name": "_createConverter"
     }
    ],
    "fields": [
     {
      "type": "Class",
      "name": "NO_VIEWS"
     },
     {
      "type": "POJOPropertiesCollector",
      "name": "_propCollector"
     },
     {
      "type": "MapperConfig",
      "name": "_config"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_annotationIntrospector"
     },
     {
      "type": "AnnotatedClass",
      "name": "_classInfo"
     },
     {
      "type": "Class",
      "name": "_defaultViews"
     },
     {
      "type": "boolean",
      "name": "_defaultViewsResolved"
     },
     {
      "type": "List",
      "name": "_properties"
     },
     {
      "type": "ObjectIdInfo",
      "name": "_objectIdInfo"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedMember.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedMember",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationMap",
        "name": "fallback"
       }
      ],
      "type": "Annotated",
      "name": "withAnnotations"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDeclaringClass"
     },
     {
      "params": [],
      "type": "Member",
      "name": "getMember"
     },
     {
      "params": [],
      "type": "String",
      "name": "getFullName"
     },
     {
      "params": [],
      "type": "TypeResolutionContext",
      "name": "getTypeContext"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "A",
      "name": "getAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "acls"
       }
      ],
      "type": "boolean",
      "name": "hasAnnotation"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "annoClasses"
       }
      ],
      "type": "boolean",
      "name": "hasOneOf"
     },
     {
      "params": [],
      "type": "Iterable",
      "name": "annotations"
     },
     {
      "params": [],
      "type": "AnnotationMap",
      "name": "getAllAnnotations"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "force"
       }
      ],
      "type": null,
      "name": "fixAccess"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "setValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "Object",
      "name": "getValue"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "TypeResolutionContext",
      "name": "_typeContext"
     },
     {
      "type": "AnnotationMap",
      "name": "_annotations"
     }
    ]
   }
  ]
 },
 {
  "filename": "TypeResolutionContext.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "TypeResolutionContext",
    "methods": [
     {
      "params": [
       {
        "type": "Type",
        "name": "t"
       }
      ],
      "type": "JavaType",
      "name": "resolveType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "AnnotatedMethodMap.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedMethodMap",
    "methods": [
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Class",
        "name": "paramTypes"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "find"
     },
     {
      "params": [
       {
        "type": "Method",
        "name": "m"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "find"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "iterator"
     }
    ],
    "fields": [
     {
      "type": "Map",
      "name": "_methods"
     }
    ]
   }
  ]
 },
 {
  "filename": "BeanPropertyDefinition.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "BeanPropertyDefinition",
    "methods": [
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "newName"
       }
      ],
      "type": "BeanPropertyDefinition",
      "name": "withName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "newSimpleName"
       }
      ],
      "type": "BeanPropertyDefinition",
      "name": "withSimpleName"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getFullName"
     },
     {
      "params": [
       {
        "type": "PropertyName",
        "name": "name"
       }
      ],
      "type": "boolean",
      "name": "hasName"
     },
     {
      "params": [],
      "type": "String",
      "name": "getInternalName"
     },
     {
      "params": [],
      "type": "PropertyName",
      "name": "getWrapperName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isExplicitlyIncluded"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isExplicitlyNamed"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getPrimaryType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawPrimaryType"
     },
     {
      "params": [],
      "type": "PropertyMetadata",
      "name": "getMetadata"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isRequired"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "couldDeserialize"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "couldSerialize"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasGetter"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasSetter"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasField"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasConstructorParameter"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "getGetter"
     },
     {
      "params": [],
      "type": "AnnotatedMethod",
      "name": "getSetter"
     },
     {
      "params": [],
      "type": "AnnotatedField",
      "name": "getField"
     },
     {
      "params": [],
      "type": "AnnotatedParameter",
      "name": "getConstructorParameter"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "getConstructorParameters"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getAccessor"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getMutator"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getNonConstructorMutator"
     },
     {
      "params": [],
      "type": "AnnotatedMember",
      "name": "getPrimaryMember"
     },
     {
      "params": [],
      "type": "Class",
      "name": "findViews"
     },
     {
      "params": [],
      "type": "AnnotationIntrospector",
      "name": "findReferenceType"
     },
     {
      "params": [],
      "type": "String",
      "name": "findReferenceName"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isTypeId"
     },
     {
      "params": [],
      "type": "ObjectIdInfo",
      "name": "findObjectIdInfo"
     },
     {
      "params": [],
      "type": "JsonInclude",
      "name": "findInclusion"
     }
    ],
    "fields": [
     {
      "type": "JsonInclude",
      "name": "EMPTY_INCLUDE"
     }
    ]
   }
  ]
 },
 {
  "filename": "MemberKey.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "MemberKey",
    "methods": [
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "int",
      "name": "argCount"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": [
     {
      "type": "Class",
      "name": "NO_CLASSES"
     },
     {
      "type": "String",
      "name": "_name"
     },
     {
      "type": "Class",
      "name": "_argTypes"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedParameter.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedParameter",
    "methods": [
     {
      "params": [
       {
        "type": "AnnotationMap",
        "name": "ann"
       }
      ],
      "type": "AnnotatedParameter",
      "name": "withAnnotations"
     },
     {
      "params": [],
      "type": "AnnotatedElement",
      "name": "getAnnotated"
     },
     {
      "params": [],
      "type": "int",
      "name": "getModifiers"
     },
     {
      "params": [],
      "type": "String",
      "name": "getName"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getRawType"
     },
     {
      "params": [],
      "type": "JavaType",
      "name": "getType"
     },
     {
      "params": [],
      "type": "Type",
      "name": "getGenericType"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getDeclaringClass"
     },
     {
      "params": [],
      "type": "Member",
      "name": "getMember"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": null,
      "name": "setValue"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "Object",
      "name": "getValue"
     },
     {
      "params": [],
      "type": "Type",
      "name": "getParameterType"
     },
     {
      "params": [],
      "type": "AnnotatedWithParams",
      "name": "getOwner"
     },
     {
      "params": [],
      "type": "int",
      "name": "getIndex"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "AnnotatedWithParams",
      "name": "_owner"
     },
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "int",
      "name": "_index"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotationIntrospectorPair.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotationIntrospectorPair",
    "methods": [
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [
       {
        "type": "AnnotationIntrospector",
        "name": "primary"
       },
       {
        "type": "AnnotationIntrospector",
        "name": "secondary"
       }
      ],
      "type": "AnnotationIntrospector",
      "name": "create"
     },
     {
      "params": [],
      "type": "Collection",
      "name": "allIntrospectors"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "result"
       }
      ],
      "type": "Collection",
      "name": "allIntrospectors"
     },
     {
      "params": [
       {
        "type": "Annotation",
        "name": "ann"
       }
      ],
      "type": "boolean",
      "name": "isAnnotationBundle"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "PropertyName",
      "name": "findRootName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonIgnoreProperties",
      "name": "findPropertyIgnorals"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Boolean",
      "name": "isIgnorableType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "Object",
      "name": "findFilterId"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Object",
      "name": "findNamingStrategy"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findClassDescription"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findPropertiesToIgnore"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ac"
       },
       {
        "type": "boolean",
        "name": "forSerialization"
       }
      ],
      "type": "String",
      "name": "findPropertiesToIgnore"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Boolean",
      "name": "findIgnoreUnknownProperties"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "VisibilityChecker",
        "name": "checker"
       }
      ],
      "type": "VisibilityChecker",
      "name": "findAutoDetectVisibility"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "findTypeResolver"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "findPropertyTypeResolver"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMember",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "TypeResolverBuilder",
      "name": "findPropertyContentTypeResolver"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "List",
      "name": "findSubtypes"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findTypeName"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "ReferenceProperty",
      "name": "findReferenceType"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "NameTransformer",
      "name": "findUnwrappingNameTransformer"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "JacksonInject",
      "name": "findInjectableValue"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "boolean",
      "name": "hasIgnoreMarker"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "Boolean",
      "name": "hasRequiredMarker"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "m"
       }
      ],
      "type": "Object",
      "name": "findInjectableValueId"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Object",
      "name": "findSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findKeySerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findContentSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findNullSerializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JsonInclude",
        "name": "defValue"
       }
      ],
      "type": "JsonInclude",
      "name": "findSerializationInclusion"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JsonInclude",
        "name": "defValue"
       }
      ],
      "type": "JsonInclude",
      "name": "findSerializationInclusionForContent"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonInclude",
      "name": "findPropertyInclusion"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonSerialize",
      "name": "findSerializationTyping"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findSerializationConverter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findSerializationContentConverter"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Class",
      "name": "findViews"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "member"
       }
      ],
      "type": "Boolean",
      "name": "isTypeId"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "ObjectIdInfo",
      "name": "findObjectIdInfo"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       },
       {
        "type": "ObjectIdInfo",
        "name": "objectIdInfo"
       }
      ],
      "type": "ObjectIdInfo",
      "name": "findObjectReferenceInfo"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "JsonFormat",
      "name": "findFormat"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "PropertyName",
      "name": "findWrapperName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "String",
      "name": "findPropertyDefaultValue"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "String",
      "name": "findPropertyDescription"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "Integer",
      "name": "findPropertyIndex"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "ann"
       }
      ],
      "type": "String",
      "name": "findImplicitPropertyName"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "List",
      "name": "findPropertyAliases"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "JsonProperty",
      "name": "findPropertyAccess"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedMethod",
        "name": "setter1"
       },
       {
        "type": "AnnotatedMethod",
        "name": "setter2"
       }
      ],
      "type": "AnnotatedMethod",
      "name": "resolveSetterConflict"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "JavaType",
      "name": "refineSerializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Class",
      "name": "findSerializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Class",
      "name": "findSerializationKeyType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Class",
      "name": "findSerializationContentType"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "String",
      "name": "findSerializationPropertyOrder"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "ann"
       }
      ],
      "type": "Boolean",
      "name": "findSerializationSortAlphabetically"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "AnnotatedClass",
        "name": "ac"
       },
       {
        "type": "List",
        "name": "properties"
       }
      ],
      "type": null,
      "name": "findAndAddVirtualProperties"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "PropertyName",
      "name": "findNameForSerialization"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasAsValue"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasAnyGetter"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumType"
       },
       {
        "type": "Enum",
        "name": "enumValues"
       },
       {
        "type": "String",
        "name": "names"
       }
      ],
      "type": "String",
      "name": "findEnumValues"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "enumCls"
       }
      ],
      "type": "Enum",
      "name": "findDefaultEnumValue"
     },
     {
      "params": [
       {
        "type": "Enum",
        "name": "value"
       }
      ],
      "type": "String",
      "name": "findEnumValue"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "hasAsValueAnnotation"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "hasAnyGetterAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findDeserializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findKeyDeserializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       }
      ],
      "type": "Object",
      "name": "findContentDeserializer"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findDeserializationConverter"
     },
     {
      "params": [
       {
        "type": "AnnotatedMember",
        "name": "a"
       }
      ],
      "type": "Object",
      "name": "findDeserializationContentConverter"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "a"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "JavaType",
      "name": "refineDeserializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseType"
       }
      ],
      "type": "Class",
      "name": "findDeserializationType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseKeyType"
       }
      ],
      "type": "Class",
      "name": "findDeserializationKeyType"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "am"
       },
       {
        "type": "JavaType",
        "name": "baseContentType"
       }
      ],
      "type": "Class",
      "name": "findDeserializationContentType"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Object",
      "name": "findValueInstantiator"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "Class",
      "name": "findPOJOBuilder"
     },
     {
      "params": [
       {
        "type": "AnnotatedClass",
        "name": "ac"
       }
      ],
      "type": "JsonPOJOBuilder",
      "name": "findPOJOBuilderConfig"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "PropertyName",
      "name": "findNameForDeserialization"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasAnySetter"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonSetter",
      "name": "findSetterInfo"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "findMergeInfo"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "boolean",
      "name": "hasCreatorAnnotation"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonCreator",
      "name": "findCreatorBinding"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "JsonCreator",
      "name": "findCreatorAnnotation"
     },
     {
      "params": [
       {
        "type": "AnnotatedMethod",
        "name": "am"
       }
      ],
      "type": "boolean",
      "name": "hasAnySetterAnnotation"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "maybeCls"
       },
       {
        "type": "Class",
        "name": "implicit"
       }
      ],
      "type": "boolean",
      "name": "_isExplicitClassOrOb"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "maybeCls"
       },
       {
        "type": "Class",
        "name": "implicit"
       }
      ],
      "type": "Object",
      "name": "_explicitClassOrOb"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_primary"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_secondary"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedWithParams.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedWithParams",
    "methods": [
     {
      "params": [
       {
        "type": "int",
        "name": "paramIndex"
       },
       {
        "type": "Annotation",
        "name": "a"
       }
      ],
      "type": null,
      "name": "addOrOverrideParam"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "AnnotationMap",
        "name": "ann"
       }
      ],
      "type": "AnnotatedParameter",
      "name": "replaceParameterAnnotations"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "AnnotationMap",
      "name": "getParameterAnnotations"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "AnnotatedParameter",
      "name": "getParameter"
     },
     {
      "params": [],
      "type": "int",
      "name": "getParameterCount"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "Class",
      "name": "getRawParameterType"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JavaType",
      "name": "getParameterType"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "Type",
      "name": "getGenericParameterType"
     },
     {
      "params": [],
      "type": "int",
      "name": "getAnnotationCount"
     },
     {
      "params": [],
      "type": "Object",
      "name": "call"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "type": "Object",
      "name": "call"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "arg"
       }
      ],
      "type": "Object",
      "name": "call1"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "AnnotationMap",
      "name": "_paramAnnotations"
     }
    ]
   }
  ]
 },
 {
  "filename": "AnnotatedClassResolver.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "AnnotatedClassResolver",
    "methods": [
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "forType"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "AnnotatedClass",
      "name": "resolve"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "forType"
       }
      ],
      "type": "AnnotatedClass",
      "name": "resolveWithoutSuperTypes"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "forType"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "AnnotatedClass",
      "name": "resolveWithoutSuperTypes"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "forType"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "AnnotatedClass",
      "name": "resolveWithoutSuperTypes"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "type": "boolean",
      "name": "skippableArray"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "raw"
       }
      ],
      "type": "AnnotatedClass",
      "name": "createPrimordial"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "config"
       },
       {
        "type": "Class",
        "name": "raw"
       }
      ],
      "type": "AnnotatedClass",
      "name": "createArrayType"
     },
     {
      "params": [],
      "type": "AnnotatedClass",
      "name": "resolveFully"
     },
     {
      "params": [],
      "type": "AnnotatedClass",
      "name": "resolveWithoutSuperTypes"
     },
     {
      "params": [
       {
        "type": "List",
        "name": "superTypes"
       }
      ],
      "type": "Annotations",
      "name": "resolveClassAnnotations"
     },
     {
      "params": [
       {
        "type": "AnnotationCollector",
        "name": "annotations"
       },
       {
        "type": "Class",
        "name": "target"
       },
       {
        "type": "Class",
        "name": "mixin"
       }
      ],
      "type": "AnnotationCollector",
      "name": "_addClassMixIns"
     },
     {
      "params": [
       {
        "type": "AnnotationCollector",
        "name": "c"
       },
       {
        "type": "Annotation",
        "name": "anns"
       }
      ],
      "type": "AnnotationCollector",
      "name": "_addAnnotationsIfNotPresent"
     },
     {
      "params": [
       {
        "type": "AnnotationCollector",
        "name": "c"
       },
       {
        "type": "Annotation",
        "name": "bundle"
       }
      ],
      "type": "AnnotationCollector",
      "name": "_addFromBundleIfNotPresent"
     }
    ],
    "fields": [
     {
      "type": "Annotations",
      "name": "NO_ANNOTATIONS"
     },
     {
      "type": "MapperConfig",
      "name": "_config"
     },
     {
      "type": "AnnotationIntrospector",
      "name": "_intr"
     },
     {
      "type": "MixInResolver",
      "name": "_mixInResolver"
     },
     {
      "type": "TypeBindings",
      "name": "_bindings"
     },
     {
      "type": "JavaType",
      "name": "_type"
     },
     {
      "type": "Class",
      "name": "_class"
     },
     {
      "type": "Class",
      "name": "_primaryMixin"
     }
    ]
   }
  ]
 },
 {
  "filename": "ClassIntrospector.java",
  "package_name": "com.fasterxml.jackson.databind.introspect",
  "classes": [
   {
    "name": "ClassIntrospector",
    "methods": [
     {
      "params": [],
      "type": "ClassIntrospector",
      "name": "copy"
     },
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BeanDescription",
      "name": "forSerialization"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BeanDescription",
      "name": "forDeserialization"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BeanDescription",
      "name": "forDeserializationWithBuilder"
     },
     {
      "params": [
       {
        "type": "DeserializationConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BeanDescription",
      "name": "forCreation"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BeanDescription",
      "name": "forClassAnnotations"
     },
     {
      "params": [
       {
        "type": "MapperConfig",
        "name": "cfg"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "MixInResolver",
        "name": "r"
       }
      ],
      "type": "BeanDescription",
      "name": "forDirectClassAnnotations"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "TextNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "TextNode",
    "methods": [
     {
      "params": [
       {
        "type": "String",
        "name": "v"
       }
      ],
      "type": "TextNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "String",
      "name": "textValue"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "b64variant"
       }
      ],
      "type": "byte",
      "name": "getBinaryValue"
     },
     {
      "params": [],
      "type": "byte",
      "name": "binaryValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "defaultValue"
       }
      ],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "defaultValue"
       }
      ],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "defaultValue"
       }
      ],
      "type": "int",
      "name": "asInt"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "defaultValue"
       }
      ],
      "type": "long",
      "name": "asLong"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "defaultValue"
       }
      ],
      "type": "double",
      "name": "asDouble"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "StringBuilder",
        "name": "sb"
       },
       {
        "type": "String",
        "name": "content"
       }
      ],
      "type": null,
      "name": "appendQuoted"
     }
    ],
    "fields": [
     {
      "type": "TextNode",
      "name": "EMPTY_STRING_NODE"
     },
     {
      "type": "String",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "NumericNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "NumericNode",
    "methods": [
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "numberType"
     },
     {
      "params": [],
      "type": "Number",
      "name": "numberValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "intValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "longValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "doubleValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "decimalValue"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "bigIntegerValue"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToLong"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [],
      "type": "int",
      "name": "asInt"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "defaultValue"
       }
      ],
      "type": "int",
      "name": "asInt"
     },
     {
      "params": [],
      "type": "long",
      "name": "asLong"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "defaultValue"
       }
      ],
      "type": "long",
      "name": "asLong"
     },
     {
      "params": [],
      "type": "double",
      "name": "asDouble"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "defaultValue"
       }
      ],
      "type": "double",
      "name": "asDouble"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isNaN"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ValueNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "ValueNode",
    "methods": [
     {
      "params": [
       {
        "type": "JsonPointer",
        "name": "ptr"
       }
      ],
      "type": "JsonNode",
      "name": "_at"
     },
     {
      "params": [],
      "type": "T",
      "name": "deepCopy"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "path"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "boolean",
      "name": "has"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "boolean",
      "name": "hasNonNull"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "path"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "boolean",
      "name": "has"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "boolean",
      "name": "hasNonNull"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "findValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "ObjectNode",
      "name": "findParent"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findValues"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findValuesAsText"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findParents"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "BinaryNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "BinaryNode",
    "methods": [
     {
      "params": [
       {
        "type": "byte",
        "name": "data"
       }
      ],
      "type": "BinaryNode",
      "name": "valueOf"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "data"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ],
      "type": "BinaryNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "byte",
      "name": "binaryValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jg"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "BinaryNode",
      "name": "EMPTY_BINARY_NODE"
     },
     {
      "type": "byte",
      "name": "_data"
     }
    ]
   }
  ]
 },
 {
  "filename": "TreeTraversingParser.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "TreeTraversingParser",
    "methods": [
     {
      "params": [
       {
        "type": "ObjectCodec",
        "name": "c"
       }
      ],
      "type": null,
      "name": "setCodec"
     },
     {
      "params": [],
      "type": "ObjectCodec",
      "name": "getCodec"
     },
     {
      "params": [],
      "type": "Version",
      "name": "version"
     },
     {
      "params": [],
      "type": null,
      "name": "close"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "nextToken"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "skipChildren"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isClosed"
     },
     {
      "params": [],
      "type": "String",
      "name": "getCurrentName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": null,
      "name": "overrideCurrentName"
     },
     {
      "params": [],
      "type": "JsonStreamContext",
      "name": "getParsingContext"
     },
     {
      "params": [],
      "type": "JsonLocation",
      "name": "getTokenLocation"
     },
     {
      "params": [],
      "type": "JsonLocation",
      "name": "getCurrentLocation"
     },
     {
      "params": [],
      "type": "String",
      "name": "getText"
     },
     {
      "params": [],
      "type": "char",
      "name": "getTextCharacters"
     },
     {
      "params": [],
      "type": "int",
      "name": "getTextLength"
     },
     {
      "params": [],
      "type": "int",
      "name": "getTextOffset"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "hasTextCharacters"
     },
     {
      "params": [],
      "type": "NumberType",
      "name": "getNumberType"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "getBigIntegerValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "getDecimalValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "getDoubleValue"
     },
     {
      "params": [],
      "type": "float",
      "name": "getFloatValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "getLongValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "getIntValue"
     },
     {
      "params": [],
      "type": "Number",
      "name": "getNumberValue"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getEmbeddedObject"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isNaN"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "b64variant"
       }
      ],
      "type": "byte",
      "name": "getBinaryValue"
     },
     {
      "params": [
       {
        "type": "Base64Variant",
        "name": "b64variant"
       },
       {
        "type": "OutputStream",
        "name": "out"
       }
      ],
      "type": "int",
      "name": "readBinaryValue"
     },
     {
      "params": [],
      "type": "JsonNode",
      "name": "currentNode"
     },
     {
      "params": [],
      "type": "JsonNode",
      "name": "currentNumericNode"
     },
     {
      "params": [],
      "type": null,
      "name": "_handleEOF"
     }
    ],
    "fields": [
     {
      "type": "ObjectCodec",
      "name": "_objectCodec"
     },
     {
      "type": "NodeCursor",
      "name": "_nodeCursor"
     },
     {
      "type": "JsonToken",
      "name": "_nextToken"
     },
     {
      "type": "boolean",
      "name": "_startContainer"
     },
     {
      "type": "boolean",
      "name": "_closed"
     }
    ]
   }
  ]
 },
 {
  "filename": "NullNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "NullNode",
    "methods": [
     {
      "params": [],
      "type": "NullNode",
      "name": "getInstance"
     },
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "defaultValue"
       }
      ],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "NullNode",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "ContainerNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "ContainerNode",
    "methods": [
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [],
      "type": "ArrayNode",
      "name": "arrayNode"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "capacity"
       }
      ],
      "type": "ArrayNode",
      "name": "arrayNode"
     },
     {
      "params": [],
      "type": "ObjectNode",
      "name": "objectNode"
     },
     {
      "params": [],
      "type": "NullNode",
      "name": "nullNode"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "v"
       }
      ],
      "type": "BooleanNode",
      "name": "booleanNode"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "short",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "float",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "BigInteger",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "BigDecimal",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Byte",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Short",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Integer",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Long",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Float",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Double",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "TextNode",
      "name": "textNode"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "data"
       }
      ],
      "type": "BinaryNode",
      "name": "binaryNode"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "data"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ],
      "type": "BinaryNode",
      "name": "binaryNode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "ValueNode",
      "name": "pojoNode"
     },
     {
      "params": [
       {
        "type": "RawValue",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "rawValueNode"
     },
     {
      "params": [],
      "type": "T",
      "name": "removeAll"
     }
    ],
    "fields": [
     {
      "type": "JsonNodeFactory",
      "name": "_nodeFactory"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": []
 },
 {
  "filename": "NodeCursor.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "NodeCursor",
    "methods": [
     {
      "params": [],
      "type": "NodeCursor",
      "name": "getParent"
     },
     {
      "params": [],
      "type": "String",
      "name": "getCurrentName"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "type": null,
      "name": "overrideCurrentName"
     },
     {
      "params": [],
      "type": "java",
      "name": "getCurrentValue"
     },
     {
      "params": [
       {
        "type": "java",
        "name": "v"
       }
      ],
      "type": null,
      "name": "setCurrentValue"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "nextToken"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "nextValue"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "endToken"
     },
     {
      "params": [],
      "type": "JsonNode",
      "name": "currentNode"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "currentHasChildren"
     },
     {
      "params": [],
      "type": "NodeCursor",
      "name": "iterateChildren"
     }
    ],
    "fields": [
     {
      "type": "NodeCursor",
      "name": "_parent"
     },
     {
      "type": "String",
      "name": "_currentName"
     },
     {
      "type": "java",
      "name": "_currentValue"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonNodeType.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "JsonNodeType",
    "methods": [],
    "fields": []
   }
  ]
 },
 {
  "filename": "BigIntegerNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "BigIntegerNode",
    "methods": [
     {
      "params": [
       {
        "type": "BigInteger",
        "name": "v"
       }
      ],
      "type": "BigIntegerNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "numberType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isIntegralNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isBigInteger"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToLong"
     },
     {
      "params": [],
      "type": "Number",
      "name": "numberValue"
     },
     {
      "params": [],
      "type": "short",
      "name": "shortValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "intValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "longValue"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "bigIntegerValue"
     },
     {
      "params": [],
      "type": "float",
      "name": "floatValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "doubleValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "decimalValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "defaultValue"
       }
      ],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jg"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "BigInteger",
      "name": "MIN_INTEGER"
     },
     {
      "type": "BigInteger",
      "name": "MAX_INTEGER"
     },
     {
      "type": "BigInteger",
      "name": "MIN_LONG"
     },
     {
      "type": "BigInteger",
      "name": "MAX_LONG"
     },
     {
      "type": "BigInteger",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "DecimalNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "DecimalNode",
    "methods": [
     {
      "params": [
       {
        "type": "BigDecimal",
        "name": "d"
       }
      ],
      "type": "DecimalNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "numberType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isFloatingPointNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isBigDecimal"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToLong"
     },
     {
      "params": [],
      "type": "Number",
      "name": "numberValue"
     },
     {
      "params": [],
      "type": "short",
      "name": "shortValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "intValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "longValue"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "bigIntegerValue"
     },
     {
      "params": [],
      "type": "float",
      "name": "floatValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "doubleValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "decimalValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "DecimalNode",
      "name": "ZERO"
     },
     {
      "type": "BigDecimal",
      "name": "MIN_INTEGER"
     },
     {
      "type": "BigDecimal",
      "name": "MAX_INTEGER"
     },
     {
      "type": "BigDecimal",
      "name": "MIN_LONG"
     },
     {
      "type": "BigDecimal",
      "name": "MAX_LONG"
     },
     {
      "type": "BigDecimal",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "FloatNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "FloatNode",
    "methods": [
     {
      "params": [
       {
        "type": "float",
        "name": "v"
       }
      ],
      "type": "FloatNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "numberType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isFloatingPointNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isFloat"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToLong"
     },
     {
      "params": [],
      "type": "Number",
      "name": "numberValue"
     },
     {
      "params": [],
      "type": "short",
      "name": "shortValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "intValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "longValue"
     },
     {
      "params": [],
      "type": "float",
      "name": "floatValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "doubleValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "decimalValue"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "bigIntegerValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isNaN"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "float",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "BooleanNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "BooleanNode",
    "methods": [
     {
      "params": [],
      "type": "BooleanNode",
      "name": "getTrue"
     },
     {
      "params": [],
      "type": "BooleanNode",
      "name": "getFalse"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "b"
       }
      ],
      "type": "BooleanNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "booleanValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "defaultValue"
       }
      ],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "defaultValue"
       }
      ],
      "type": "int",
      "name": "asInt"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "defaultValue"
       }
      ],
      "type": "long",
      "name": "asLong"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "defaultValue"
       }
      ],
      "type": "double",
      "name": "asDouble"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     }
    ],
    "fields": [
     {
      "type": "BooleanNode",
      "name": "TRUE"
     },
     {
      "type": "BooleanNode",
      "name": "FALSE"
     },
     {
      "type": "boolean",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "LongNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "LongNode",
    "methods": [
     {
      "params": [
       {
        "type": "long",
        "name": "l"
       }
      ],
      "type": "LongNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "numberType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isIntegralNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isLong"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToLong"
     },
     {
      "params": [],
      "type": "Number",
      "name": "numberValue"
     },
     {
      "params": [],
      "type": "short",
      "name": "shortValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "intValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "longValue"
     },
     {
      "params": [],
      "type": "float",
      "name": "floatValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "doubleValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "decimalValue"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "bigIntegerValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "defaultValue"
       }
      ],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jg"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "IntNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "IntNode",
    "methods": [
     {
      "params": [
       {
        "type": "int",
        "name": "i"
       }
      ],
      "type": "IntNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "numberType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isIntegralNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToLong"
     },
     {
      "params": [],
      "type": "Number",
      "name": "numberValue"
     },
     {
      "params": [],
      "type": "short",
      "name": "shortValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "intValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "longValue"
     },
     {
      "params": [],
      "type": "float",
      "name": "floatValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "doubleValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "decimalValue"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "bigIntegerValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "defaultValue"
       }
      ],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jg"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "int",
      "name": "MIN_CANONICAL"
     },
     {
      "type": "int",
      "name": "MAX_CANONICAL"
     },
     {
      "type": "IntNode",
      "name": "CANONICALS"
     },
     {
      "type": "int",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonNodeFactory.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "JsonNodeFactory",
    "methods": [
     {
      "params": [
       {
        "type": "boolean",
        "name": "bigDecimalExact"
       }
      ],
      "type": "JsonNodeFactory",
      "name": "withExactBigDecimals"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "v"
       }
      ],
      "type": "BooleanNode",
      "name": "booleanNode"
     },
     {
      "params": [],
      "type": "NullNode",
      "name": "nullNode"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Byte",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "short",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Short",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Integer",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Long",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "BigInteger",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "float",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Float",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "v"
       }
      ],
      "type": "NumericNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Double",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "BigDecimal",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "TextNode",
      "name": "textNode"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "data"
       }
      ],
      "type": "BinaryNode",
      "name": "binaryNode"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "data"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ],
      "type": "BinaryNode",
      "name": "binaryNode"
     },
     {
      "params": [],
      "type": "ArrayNode",
      "name": "arrayNode"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "capacity"
       }
      ],
      "type": "ArrayNode",
      "name": "arrayNode"
     },
     {
      "params": [],
      "type": "ObjectNode",
      "name": "objectNode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "ValueNode",
      "name": "pojoNode"
     },
     {
      "params": [
       {
        "type": "RawValue",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "rawValueNode"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "l"
       }
      ],
      "type": "boolean",
      "name": "_inIntRange"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "boolean",
      "name": "_cfgBigDecimalExact"
     },
     {
      "type": "JsonNodeFactory",
      "name": "decimalsNormalized"
     },
     {
      "type": "JsonNodeFactory",
      "name": "decimalsAsIs"
     },
     {
      "type": "JsonNodeFactory",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "DoubleNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "DoubleNode",
    "methods": [
     {
      "params": [
       {
        "type": "double",
        "name": "v"
       }
      ],
      "type": "DoubleNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "numberType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isFloatingPointNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isDouble"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToLong"
     },
     {
      "params": [],
      "type": "Number",
      "name": "numberValue"
     },
     {
      "params": [],
      "type": "short",
      "name": "shortValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "intValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "longValue"
     },
     {
      "params": [],
      "type": "float",
      "name": "floatValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "doubleValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "decimalValue"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "bigIntegerValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isNaN"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "double",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "BaseJsonNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "BaseJsonNode",
    "methods": [
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "findPath"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "traverse"
     },
     {
      "params": [
       {
        "type": "ObjectCodec",
        "name": "codec"
       }
      ],
      "type": "JsonParser",
      "name": "traverse"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "numberType"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "ArrayNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "ArrayNode",
    "methods": [
     {
      "params": [
       {
        "type": "JsonPointer",
        "name": "ptr"
       }
      ],
      "type": "JsonNode",
      "name": "_at"
     },
     {
      "params": [],
      "type": "ArrayNode",
      "name": "deepCopy"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isArray"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "elements"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "path"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "path"
     },
     {
      "params": [
       {
        "type": "Comparator",
        "name": "comparator"
       },
       {
        "type": "JsonNode",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "f"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "findValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findValues"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findValuesAsText"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "ObjectNode",
      "name": "findParent"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findParents"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "JsonNode",
        "name": "value"
       }
      ],
      "type": "JsonNode",
      "name": "set"
     },
     {
      "params": [
       {
        "type": "JsonNode",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "ArrayNode",
        "name": "other"
       }
      ],
      "type": "ArrayNode",
      "name": "addAll"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "nodes"
       }
      ],
      "type": "ArrayNode",
      "name": "addAll"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "JsonNode",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "remove"
     },
     {
      "params": [],
      "type": "ArrayNode",
      "name": "removeAll"
     },
     {
      "params": [],
      "type": "ArrayNode",
      "name": "addArray"
     },
     {
      "params": [],
      "type": "ObjectNode",
      "name": "addObject"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "addPOJO"
     },
     {
      "params": [
       {
        "type": "RawValue",
        "name": "raw"
       }
      ],
      "type": "ArrayNode",
      "name": "addRawValue"
     },
     {
      "params": [],
      "type": "ArrayNode",
      "name": "addNull"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "Integer",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "Long",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "float",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "Float",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "Double",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "BigDecimal",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "BigInteger",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "Boolean",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "add"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "ArrayNode",
      "name": "insertArray"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "ObjectNode",
      "name": "insertObject"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "insertPOJO"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "ArrayNode",
      "name": "insertNull"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Integer",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "long",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Long",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "float",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Float",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "double",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Double",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "BigDecimal",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "BigInteger",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "String",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "boolean",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Boolean",
        "name": "value"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "byte",
        "name": "v"
       }
      ],
      "type": "ArrayNode",
      "name": "insert"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [
       {
        "type": "ArrayNode",
        "name": "other"
       }
      ],
      "type": "boolean",
      "name": "_childrenEqual"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "JsonNode",
        "name": "node"
       }
      ],
      "type": "ArrayNode",
      "name": "_add"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "JsonNode",
        "name": "node"
       }
      ],
      "type": "ArrayNode",
      "name": "_insert"
     }
    ],
    "fields": [
     {
      "type": "List",
      "name": "_children"
     }
    ]
   }
  ]
 },
 {
  "filename": "ObjectNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "ObjectNode",
    "methods": [
     {
      "params": [
       {
        "type": "JsonPointer",
        "name": "ptr"
       }
      ],
      "type": "JsonNode",
      "name": "_at"
     },
     {
      "params": [],
      "type": "ObjectNode",
      "name": "deepCopy"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": "boolean",
      "name": "isEmpty"
     },
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isObject"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "int",
      "name": "size"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "elements"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "get"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "fieldNames"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "type": "JsonNode",
      "name": "path"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "path"
     },
     {
      "params": [],
      "type": "Iterator",
      "name": "fields"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "type": "ObjectNode",
      "name": "with"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "type": "ArrayNode",
      "name": "withArray"
     },
     {
      "params": [
       {
        "type": "Comparator",
        "name": "comparator"
       },
       {
        "type": "JsonNode",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "findValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findValues"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findValuesAsText"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "ObjectNode",
      "name": "findParent"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "List",
        "name": "foundSoFar"
       }
      ],
      "type": "List",
      "name": "findParents"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "JsonNode",
        "name": "value"
       }
      ],
      "type": "JsonNode",
      "name": "set"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "properties"
       }
      ],
      "type": "JsonNode",
      "name": "setAll"
     },
     {
      "params": [
       {
        "type": "ObjectNode",
        "name": "other"
       }
      ],
      "type": "JsonNode",
      "name": "setAll"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "JsonNode",
        "name": "value"
       }
      ],
      "type": "JsonNode",
      "name": "replace"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "fieldNames"
       }
      ],
      "type": "ObjectNode",
      "name": "without"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "JsonNode",
        "name": "value"
       }
      ],
      "type": "JsonNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "JsonNode",
      "name": "remove"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "fieldNames"
       }
      ],
      "type": "ObjectNode",
      "name": "remove"
     },
     {
      "params": [],
      "type": "ObjectNode",
      "name": "removeAll"
     },
     {
      "params": [
       {
        "type": "Map",
        "name": "properties"
       }
      ],
      "type": "JsonNode",
      "name": "putAll"
     },
     {
      "params": [
       {
        "type": "ObjectNode",
        "name": "other"
       }
      ],
      "type": "JsonNode",
      "name": "putAll"
     },
     {
      "params": [
       {
        "type": "Collection",
        "name": "fieldNames"
       }
      ],
      "type": "ObjectNode",
      "name": "retain"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldNames"
       }
      ],
      "type": "ObjectNode",
      "name": "retain"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "ArrayNode",
      "name": "putArray"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "ObjectNode",
      "name": "putObject"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "ObjectNode",
      "name": "putPOJO"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "RawValue",
        "name": "raw"
       }
      ],
      "type": "ObjectNode",
      "name": "putRawValue"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       }
      ],
      "type": "ObjectNode",
      "name": "putNull"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "short",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Short",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Integer",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "long",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Long",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "float",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Float",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "double",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Double",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "BigDecimal",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "BigInteger",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "String",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "boolean",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Boolean",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "byte",
        "name": "v"
       }
      ],
      "type": "ObjectNode",
      "name": "put"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [
       {
        "type": "ObjectNode",
        "name": "other"
       }
      ],
      "type": "boolean",
      "name": "_childrenEqual"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "JsonNode",
        "name": "value"
       }
      ],
      "type": "ObjectNode",
      "name": "_put"
     }
    ],
    "fields": [
     {
      "type": "Map",
      "name": "_children"
     }
    ]
   }
  ]
 },
 {
  "filename": "ShortNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "ShortNode",
    "methods": [
     {
      "params": [
       {
        "type": "short",
        "name": "l"
       }
      ],
      "type": "ShortNode",
      "name": "valueOf"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "JsonParser",
      "name": "numberType"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isIntegralNumber"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "isShort"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToInt"
     },
     {
      "params": [],
      "type": "boolean",
      "name": "canConvertToLong"
     },
     {
      "params": [],
      "type": "Number",
      "name": "numberValue"
     },
     {
      "params": [],
      "type": "short",
      "name": "shortValue"
     },
     {
      "params": [],
      "type": "int",
      "name": "intValue"
     },
     {
      "params": [],
      "type": "long",
      "name": "longValue"
     },
     {
      "params": [],
      "type": "float",
      "name": "floatValue"
     },
     {
      "params": [],
      "type": "double",
      "name": "doubleValue"
     },
     {
      "params": [],
      "type": "BigDecimal",
      "name": "decimalValue"
     },
     {
      "params": [],
      "type": "BigInteger",
      "name": "bigIntegerValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "defaultValue"
       }
      ],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jg"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "short",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "MissingNode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "MissingNode",
    "methods": [
     {
      "params": [],
      "type": "boolean",
      "name": "isMissingNode"
     },
     {
      "params": [],
      "type": "T",
      "name": "deepCopy"
     },
     {
      "params": [],
      "type": "MissingNode",
      "name": "getInstance"
     },
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "defaultValue"
       }
      ],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "jg"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     }
    ],
    "fields": [
     {
      "type": "MissingNode",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "JsonNodeCreator.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "JsonNodeCreator",
    "methods": [
     {
      "params": [
       {
        "type": "boolean",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "booleanNode"
     },
     {
      "params": [],
      "type": "ValueNode",
      "name": "nullNode"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Byte",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "short",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Short",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Integer",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Long",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "BigInteger",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "float",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Float",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "Double",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "BigDecimal",
        "name": "v"
       }
      ],
      "type": "ValueNode",
      "name": "numberNode"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ],
      "type": "ValueNode",
      "name": "textNode"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "data"
       }
      ],
      "type": "ValueNode",
      "name": "binaryNode"
     },
     {
      "params": [
       {
        "type": "byte",
        "name": "data"
       },
       {
        "type": "int",
        "name": "offset"
       },
       {
        "type": "int",
        "name": "length"
       }
      ],
      "type": "ValueNode",
      "name": "binaryNode"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "pojo"
       }
      ],
      "type": "ValueNode",
      "name": "pojoNode"
     },
     {
      "params": [
       {
        "type": "RawValue",
        "name": "value"
       }
      ],
      "type": "ValueNode",
      "name": "rawValueNode"
     },
     {
      "params": [],
      "type": "ArrayNode",
      "name": "arrayNode"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "capacity"
       }
      ],
      "type": "ArrayNode",
      "name": "arrayNode"
     },
     {
      "params": [],
      "type": "ObjectNode",
      "name": "objectNode"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "POJONode.java",
  "package_name": "com.fasterxml.jackson.databind.node",
  "classes": [
   {
    "name": "POJONode",
    "methods": [
     {
      "params": [],
      "type": "JsonNodeType",
      "name": "getNodeType"
     },
     {
      "params": [],
      "type": "JsonToken",
      "name": "asToken"
     },
     {
      "params": [],
      "type": "byte",
      "name": "binaryValue"
     },
     {
      "params": [],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "defaultValue"
       }
      ],
      "type": "String",
      "name": "asText"
     },
     {
      "params": [
       {
        "type": "boolean",
        "name": "defaultValue"
       }
      ],
      "type": "boolean",
      "name": "asBoolean"
     },
     {
      "params": [
       {
        "type": "int",
        "name": "defaultValue"
       }
      ],
      "type": "int",
      "name": "asInt"
     },
     {
      "params": [
       {
        "type": "long",
        "name": "defaultValue"
       }
      ],
      "type": "long",
      "name": "asLong"
     },
     {
      "params": [
       {
        "type": "double",
        "name": "defaultValue"
       }
      ],
      "type": "double",
      "name": "asDouble"
     },
     {
      "params": [
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [],
      "type": "Object",
      "name": "getPojo"
     },
     {
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "type": "boolean",
      "name": "equals"
     },
     {
      "params": [
       {
        "type": "POJONode",
        "name": "other"
       }
      ],
      "type": "boolean",
      "name": "_pojoEquals"
     },
     {
      "params": [],
      "type": "int",
      "name": "hashCode"
     },
     {
      "params": [],
      "type": "String",
      "name": "toString"
     }
    ],
    "fields": [
     {
      "type": "Object",
      "name": "_value"
     }
    ]
   }
  ]
 },
 {
  "filename": "DOMDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": [
   {
    "name": "DOMDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "T",
      "name": "_deserialize"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "value"
       }
      ],
      "type": "Document",
      "name": "parse"
     },
     {
      "params": [],
      "type": "DocumentBuilder",
      "name": "documentBuilder"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DocumentBuilderFactory",
      "name": "DEFAULT_PARSER_FACTORY"
     }
    ]
   }
  ]
 },
 {
  "filename": "NioPathSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": [
   {
    "name": "NioPathSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Path",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "gen"
       },
       {
        "type": "SerializerProvider",
        "name": "serializers"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "Path",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "g"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "TypeSerializer",
        "name": "typeSer"
       }
      ],
      "type": null,
      "name": "serializeWithType"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": []
 },
 {
  "filename": "Java7Support.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": [
   {
    "name": "Java7Support",
    "methods": [
     {
      "params": [],
      "type": "Java7Support",
      "name": "instance"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "findTransient"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasCreatorAnnotation"
     },
     {
      "params": [
       {
        "type": "AnnotatedParameter",
        "name": "p"
       }
      ],
      "type": "PropertyName",
      "name": "findConstructorName"
     },
     {
      "params": [],
      "type": "Class",
      "name": "getClassJavaNioFilePath"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "JsonDeserializer",
      "name": "getDeserializerForJavaNioFilePath"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "JsonSerializer",
      "name": "getSerializerForJavaNioFilePath"
     }
    ],
    "fields": [
     {
      "type": "Java7Support",
      "name": "IMPL"
     }
    ]
   }
  ]
 },
 {
  "filename": "NioPathDeserializer.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": [
   {
    "name": "NioPathDeserializer",
    "methods": [
     {
      "params": [
       {
        "type": "JsonParser",
        "name": "p"
       },
       {
        "type": "DeserializationContext",
        "name": "ctxt"
       }
      ],
      "type": "Path",
      "name": "deserialize"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ]
 },
 {
  "filename": "CoreXMLSerializers.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": [
   {
    "name": "CoreXMLSerializers",
    "methods": [
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonSerializer",
      "name": "findSerializer"
     }
    ],
    "fields": []
   }
  ]
 },
 {
  "filename": "CoreXMLDeserializers.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": [
   {
    "name": "CoreXMLDeserializers",
    "methods": [
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findBeanDeserializer"
     }
    ],
    "fields": [
     {
      "type": "DatatypeFactory",
      "name": "_dataTypeFactory"
     },
     {
      "type": "int",
      "name": "TYPE_DURATION"
     },
     {
      "type": "int",
      "name": "TYPE_G_CALENDAR"
     },
     {
      "type": "int",
      "name": "TYPE_QNAME"
     }
    ]
   }
  ]
 },
 {
  "filename": "DOMSerializer.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": [
   {
    "name": "DOMSerializer",
    "methods": [
     {
      "params": [
       {
        "type": "Node",
        "name": "value"
       },
       {
        "type": "JsonGenerator",
        "name": "jgen"
       },
       {
        "type": "SerializerProvider",
        "name": "provider"
       }
      ],
      "type": null,
      "name": "serialize"
     },
     {
      "params": [
       {
        "type": "SerializerProvider",
        "name": "provider"
       },
       {
        "type": "java",
        "name": "typeHint"
       }
      ],
      "type": "JsonNode",
      "name": "getSchema"
     },
     {
      "params": [
       {
        "type": "JsonFormatVisitorWrapper",
        "name": "visitor"
       },
       {
        "type": "JavaType",
        "name": "typeHint"
       }
      ],
      "type": null,
      "name": "acceptJsonFormatVisitor"
     }
    ],
    "fields": [
     {
      "type": "DOMImplementationLS",
      "name": "_domImpl"
     }
    ]
   }
  ]
 },
 {
  "filename": "OptionalHandlerFactory.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": [
   {
    "name": "OptionalHandlerFactory",
    "methods": [
     {
      "params": [
       {
        "type": "SerializationConfig",
        "name": "config"
       },
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonSerializer",
      "name": "findSerializer"
     },
     {
      "params": [
       {
        "type": "JavaType",
        "name": "type"
       },
       {
        "type": "DeserializationConfig",
        "name": "config"
       },
       {
        "type": "BeanDescription",
        "name": "beanDesc"
       }
      ],
      "type": "JsonDeserializer",
      "name": "findDeserializer"
     },
     {
      "params": [
       {
        "type": "String",
        "name": "className"
       }
      ],
      "type": "Object",
      "name": "instantiate"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       },
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "type": "boolean",
      "name": "hasSuperClassStartingWith"
     }
    ],
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "PACKAGE_PREFIX_JAVAX_XML"
     },
     {
      "type": "String",
      "name": "SERIALIZERS_FOR_JAVAX_XML"
     },
     {
      "type": "String",
      "name": "DESERIALIZERS_FOR_JAVAX_XML"
     },
     {
      "type": "String",
      "name": "SERIALIZER_FOR_DOM_NODE"
     },
     {
      "type": "String",
      "name": "DESERIALIZER_FOR_DOM_DOCUMENT"
     },
     {
      "type": "String",
      "name": "DESERIALIZER_FOR_DOM_NODE"
     },
     {
      "type": "Class",
      "name": "CLASS_DOM_NODE"
     },
     {
      "type": "Class",
      "name": "CLASS_DOM_DOCUMENT"
     },
     {
      "type": "Java7Support",
      "name": "_jdk7Helper"
     },
     {
      "type": "OptionalHandlerFactory",
      "name": "instance"
     }
    ]
   }
  ]
 },
 {
  "filename": "Java7SupportImpl.java",
  "package_name": "com.fasterxml.jackson.databind.ext",
  "classes": [
   {
    "name": "Java7SupportImpl",
    "methods": [
     {
      "params": [],
      "type": "Class",
      "name": "getClassJavaNioFilePath"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "JsonDeserializer",
      "name": "getDeserializerForJavaNioFilePath"
     },
     {
      "params": [
       {
        "type": "Class",
        "name": "rawType"
       }
      ],
      "type": "JsonSerializer",
      "name": "getSerializerForJavaNioFilePath"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "findTransient"
     },
     {
      "params": [
       {
        "type": "Annotated",
        "name": "a"
       }
      ],
      "type": "Boolean",
      "name": "hasCreatorAnnotation"
     },
     {
      "params": [
       {
        "type": "AnnotatedParameter",
        "name": "p"
       }
      ],
      "type": "PropertyName",
      "name": "findConstructorName"
     }
    ],
    "fields": [
     {
      "type": "Class",
      "name": "_bogus"
     }
    ]
   }
  ]
 }
]