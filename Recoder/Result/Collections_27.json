[
 {
  "filename": "Put.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "t",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     }
    ],
    "fields": [],
    "name": "Put"
   }
  ]
 },
 {
  "filename": "OrderedMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "previousKey",
      "type": "K"
     }
    ],
    "fields": [],
    "name": "OrderedMap"
   }
  ]
 },
 {
  "filename": "ListUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "emptyIfNull",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "defaultList",
        "type": "List"
       }
      ],
      "name": "defaultIfNull",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list1",
        "type": "List"
       },
       {
        "name": "list2",
        "type": "List"
       }
      ],
      "name": "intersection",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list1",
        "type": "List"
       },
       {
        "name": "list2",
        "type": "List"
       }
      ],
      "name": "subtract",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list1",
        "type": "List"
       },
       {
        "name": "list2",
        "type": "List"
       }
      ],
      "name": "sum",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list1",
        "type": "List"
       },
       {
        "name": "list2",
        "type": "List"
       }
      ],
      "name": "union",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "inputCollection",
        "type": "Collection"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "select",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "inputCollection",
        "type": "Collection"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "selectRejected",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list1",
        "type": "Collection"
       },
       {
        "name": "list2",
        "type": "Collection"
       }
      ],
      "name": "isEqualList",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "Collection"
       }
      ],
      "name": "hashCodeForList",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "retain",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "remove",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "synchronizedList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "unmodifiableList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "factory",
        "type": "Factory"
       }
      ],
      "name": "lazyList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "fixedSizeList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "List"
       },
       {
        "name": "b",
        "type": "List"
       }
      ],
      "name": "longestCommonSubsequence",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "List"
       },
       {
        "name": "b",
        "type": "List"
       },
       {
        "name": "equator",
        "type": "Equator"
       }
      ],
      "name": "longestCommonSubsequence",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "CharSequence"
       },
       {
        "name": "b",
        "type": "CharSequence"
       }
      ],
      "name": "longestCommonSubsequence",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "size",
        "type": "int"
       }
      ],
      "name": "partition",
      "type": "List"
     }
    ],
    "fields": [],
    "name": "ListUtils"
   }
  ]
 },
 {
  "filename": "ComparatorUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "naturalComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "comparators",
        "type": "Comparator"
       }
      ],
      "name": "chainedComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "comparators",
        "type": "Collection"
       }
      ],
      "name": "chainedComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       }
      ],
      "name": "reversedComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "trueFirst",
        "type": "boolean"
       }
      ],
      "name": "booleanComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       }
      ],
      "name": "nullLowComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       }
      ],
      "name": "nullHighComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "o1",
        "type": "E"
       },
       {
        "name": "o2",
        "type": "E"
       },
       {
        "name": "comparator",
        "type": "Comparator"
       }
      ],
      "name": "min",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "o1",
        "type": "E"
       },
       {
        "name": "o2",
        "type": "E"
       },
       {
        "name": "comparator",
        "type": "Comparator"
       }
      ],
      "name": "max",
      "type": "E"
     }
    ],
    "fields": [
     {
      "name": "NATURAL_COMPARATOR",
      "type": "Comparator"
     }
    ],
    "name": "ComparatorUtils"
   }
  ]
 },
 {
  "filename": "Bag.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "nCopies",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "nCopies",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     }
    ],
    "fields": [],
    "name": "Bag"
   }
  ]
 },
 {
  "filename": "MultiSet.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "setCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "occurrences",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "occurrences",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "int"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [],
    "name": "MultiSet"
   }
  ]
 },
 {
  "filename": "BoundedMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "maxSize",
      "type": "int"
     }
    ],
    "fields": [],
    "name": "BoundedMap"
   }
  ]
 },
 {
  "filename": "TrieUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "trie",
        "type": "Trie"
       }
      ],
      "name": "unmodifiableTrie",
      "type": "Trie"
     }
    ],
    "fields": [],
    "name": "TrieUtils"
   }
  ]
 },
 {
  "filename": "CollectionUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "emptyCollection",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       }
      ],
      "name": "emptyIfNull",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       }
      ],
      "name": "union",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       }
      ],
      "name": "intersection",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       }
      ],
      "name": "disjunction",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       }
      ],
      "name": "subtract",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       },
       {
        "name": "p",
        "type": "Predicate"
       }
      ],
      "name": "subtract",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "coll1",
        "type": "Collection"
       },
       {
        "name": "coll2",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll1",
        "type": "Collection"
       },
       {
        "name": "coll2",
        "type": "Collection"
       }
      ],
      "name": "containsAny",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Iterable"
       }
      ],
      "name": "getCardinalityMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Collection"
       },
       {
        "name": "b",
        "type": "Collection"
       }
      ],
      "name": "isSubCollection",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Collection"
       },
       {
        "name": "b",
        "type": "Collection"
       }
      ],
      "name": "isProperSubCollection",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Collection"
       },
       {
        "name": "b",
        "type": "Collection"
       }
      ],
      "name": "isEqualCollection",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Collection"
       },
       {
        "name": "b",
        "type": "Collection"
       },
       {
        "name": "equator",
        "type": "Equator"
       }
      ],
      "name": "isEqualCollection",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "O"
       },
       {
        "name": "coll",
        "type": "Iterable"
       }
      ],
      "name": "cardinality",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "find",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Iterable"
       },
       {
        "name": "closure",
        "type": "C"
       }
      ],
      "name": "forAllDo",
      "type": "C"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "closure",
        "type": "C"
       }
      ],
      "name": "forAllDo",
      "type": "C"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Iterable"
       },
       {
        "name": "closure",
        "type": "C"
       }
      ],
      "name": "forAllButLastDo",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "closure",
        "type": "C"
       }
      ],
      "name": "forAllButLastDo",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "filter",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "filterInverse",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transform",
      "type": null
     },
     {
      "params": [
       {
        "name": "input",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "countMatches",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "exists",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "matchesAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "inputCollection",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "select",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "inputCollection",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "outputCollection",
        "type": "R"
       }
      ],
      "name": "select",
      "type": "R"
     },
     {
      "params": [
       {
        "name": "inputCollection",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "outputCollection",
        "type": "R"
       },
       {
        "name": "rejectedCollection",
        "type": "R"
       }
      ],
      "name": "select",
      "type": "R"
     },
     {
      "params": [
       {
        "name": "inputCollection",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "selectRejected",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "inputCollection",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "outputCollection",
        "type": "R"
       }
      ],
      "name": "selectRejected",
      "type": "R"
     },
     {
      "params": [
       {
        "name": "inputCollection",
        "type": "Iterable"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "collect",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "inputIterator",
        "type": "Iterator"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "collect",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "inputCollection",
        "type": "Iterable"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       },
       {
        "name": "outputCollection",
        "type": "R"
       }
      ],
      "name": "collect",
      "type": "R"
     },
     {
      "params": [
       {
        "name": "inputIterator",
        "type": "Iterator"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       },
       {
        "name": "outputCollection",
        "type": "R"
       }
      ],
      "name": "collect",
      "type": "R"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "addIgnoreNull",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "enumeration",
        "type": "Enumeration"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "elements",
        "type": "C"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "checkIndexBounds",
      "type": null
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "sizeIsEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "isNotEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "Object"
       }
      ],
      "name": "reverseArray",
      "type": null
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "maxSize",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       }
      ],
      "name": "collate",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       },
       {
        "name": "includeDuplicates",
        "type": "boolean"
       }
      ],
      "name": "collate",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       },
       {
        "name": "c",
        "type": "Comparator"
       }
      ],
      "name": "collate",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       },
       {
        "name": "c",
        "type": "Comparator"
       },
       {
        "name": "includeDuplicates",
        "type": "boolean"
       }
      ],
      "name": "collate",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       }
      ],
      "name": "permutations",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "retain",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Iterable"
       },
       {
        "name": "retain",
        "type": "Iterable"
       },
       {
        "name": "equator",
        "type": "Equator"
       }
      ],
      "name": "retainAll",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "remove",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Iterable"
       },
       {
        "name": "remove",
        "type": "Iterable"
       },
       {
        "name": "equator",
        "type": "Equator"
       }
      ],
      "name": "removeAll",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       }
      ],
      "name": "synchronizedCollection",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       }
      ],
      "name": "unmodifiableCollection",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedCollection",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingCollection",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       }
      ],
      "name": "extractSingleton",
      "type": "E"
     }
    ],
    "fields": [
     {
      "name": "EMPTY_COLLECTION",
      "type": "Collection"
     }
    ],
    "name": "CollectionUtils"
   }
  ]
 },
 {
  "filename": "BidiMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "removeValue",
      "type": "K"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "BidiMap"
     },
     {
      "params": [],
      "name": "values",
      "type": "Set"
     }
    ],
    "fields": [],
    "name": "BidiMap"
   }
  ]
 },
 {
  "filename": "Closure.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "input",
        "type": "T"
       }
      ],
      "name": "execute",
      "type": null
     }
    ],
    "fields": [],
    "name": "Closure"
   }
  ]
 },
 {
  "filename": "Trie.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "prefixMap",
      "type": "SortedMap"
     }
    ],
    "fields": [],
    "name": "Trie"
   }
  ]
 },
 {
  "filename": "ListValuedMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "get",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "List"
     }
    ],
    "fields": [],
    "name": "ListValuedMap"
   }
  ]
 },
 {
  "filename": "OrderedIterator.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     }
    ],
    "fields": [],
    "name": "OrderedIterator"
   }
  ]
 },
 {
  "filename": "Factory.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "create",
      "type": "T"
     }
    ],
    "fields": [],
    "name": "Factory"
   }
  ]
 },
 {
  "filename": "SplitMapUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "get",
        "type": "Get"
       }
      ],
      "name": "readableMap",
      "type": "IterableMap"
     },
     {
      "params": [
       {
        "name": "put",
        "type": "Put"
       }
      ],
      "name": "writableMap",
      "type": "Map"
     }
    ],
    "fields": [],
    "name": "SplitMapUtils"
   }
  ]
 },
 {
  "filename": "Get.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     }
    ],
    "fields": [],
    "name": "Get"
   }
  ]
 },
 {
  "filename": "FactoryUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "exceptionFactory",
      "type": "Factory"
     },
     {
      "params": [],
      "name": "nullFactory",
      "type": "Factory"
     },
     {
      "params": [
       {
        "name": "constantToReturn",
        "type": "T"
       }
      ],
      "name": "constantFactory",
      "type": "Factory"
     },
     {
      "params": [
       {
        "name": "prototype",
        "type": "T"
       }
      ],
      "name": "prototypeFactory",
      "type": "Factory"
     },
     {
      "params": [
       {
        "name": "classToInstantiate",
        "type": "Class"
       }
      ],
      "name": "instantiateFactory",
      "type": "Factory"
     },
     {
      "params": [
       {
        "name": "classToInstantiate",
        "type": "Class"
       },
       {
        "name": "paramTypes",
        "type": "Class"
       },
       {
        "name": "args",
        "type": "Object"
       }
      ],
      "name": "instantiateFactory",
      "type": "Factory"
     }
    ],
    "fields": [],
    "name": "FactoryUtils"
   }
  ]
 },
 {
  "filename": "FluentIterable.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "empty",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "singleton",
        "type": "T"
       }
      ],
      "name": "of",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "elements",
        "type": "T"
       }
      ],
      "name": "of",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "of",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "elements",
        "type": "E"
       }
      ],
      "name": "append",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "other",
        "type": "Iterable"
       }
      ],
      "name": "append",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "other",
        "type": "Iterable"
       }
      ],
      "name": "collate",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "other",
        "type": "Iterable"
       },
       {
        "name": "comparator",
        "type": "Comparator"
       }
      ],
      "name": "collate",
      "type": "FluentIterable"
     },
     {
      "params": [],
      "name": "eval",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "filter",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "maxSize",
        "type": "long"
       }
      ],
      "name": "limit",
      "type": "FluentIterable"
     },
     {
      "params": [],
      "name": "loop",
      "type": "FluentIterable"
     },
     {
      "params": [],
      "name": "reverse",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "elementsToSkip",
        "type": "long"
       }
      ],
      "name": "skip",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transform",
      "type": "FluentIterable"
     },
     {
      "params": [],
      "name": "unique",
      "type": "FluentIterable"
     },
     {
      "params": [],
      "name": "unmodifiable",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "other",
        "type": "Iterable"
       }
      ],
      "name": "zip",
      "type": "FluentIterable"
     },
     {
      "params": [
       {
        "name": "others",
        "type": "Iterable"
       }
      ],
      "name": "zip",
      "type": "FluentIterable"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "asEnumeration",
      "type": "Enumeration"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "allMatch",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "anyMatch",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "forEach",
      "type": null
     },
     {
      "params": [
       {
        "name": "position",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       }
      ],
      "name": "copyInto",
      "type": null
     },
     {
      "params": [
       {
        "name": "arrayClass",
        "type": "Class"
       }
      ],
      "name": "toArray",
      "type": "E"
     },
     {
      "params": [],
      "name": "toList",
      "type": "List"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "iterable",
      "type": "Iterable"
     }
    ],
    "name": "FluentIterable"
   }
  ]
 },
 {
  "filename": "ResettableListIterator.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [],
    "fields": [],
    "name": "ResettableListIterator"
   }
  ]
 },
 {
  "filename": "IterableMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [],
    "fields": [],
    "name": "IterableMap"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4",
  "classes": []
 },
 {
  "filename": "IterableSortedMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [],
    "fields": [],
    "name": "IterableSortedMap"
   }
  ]
 },
 {
  "filename": "OrderedBidiMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "OrderedBidiMap"
     }
    ],
    "fields": [],
    "name": "OrderedBidiMap"
   }
  ]
 },
 {
  "filename": "MultiMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "item",
        "type": "V"
       }
      ],
      "name": "removeMapping",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "put",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "Object"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     }
    ],
    "fields": [],
    "name": "MultiMap"
   }
  ]
 },
 {
  "filename": "EnumerationUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "e",
        "type": "Enumeration"
       },
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "enumeration",
        "type": "Enumeration"
       }
      ],
      "name": "toList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "stringTokenizer",
        "type": "StringTokenizer"
       }
      ],
      "name": "toList",
      "type": "List"
     }
    ],
    "fields": [],
    "name": "EnumerationUtils"
   }
  ]
 },
 {
  "filename": "TransformerUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "exceptionTransformer",
      "type": "Transformer"
     },
     {
      "params": [],
      "name": "nullTransformer",
      "type": "Transformer"
     },
     {
      "params": [],
      "name": "nopTransformer",
      "type": "Transformer"
     },
     {
      "params": [],
      "name": "cloneTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "constantToReturn",
        "type": "O"
       }
      ],
      "name": "constantTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "asTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "asTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "factory",
        "type": "Factory"
       }
      ],
      "name": "asTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "transformers",
        "type": "Transformer"
       }
      ],
      "name": "chainedTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "transformers",
        "type": "Collection"
       }
      ],
      "name": "chainedTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "trueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "ifTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "trueTransformer",
        "type": "Transformer"
       },
       {
        "name": "falseTransformer",
        "type": "Transformer"
       }
      ],
      "name": "ifTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "trueTransformer",
        "type": "Transformer"
       },
       {
        "name": "falseTransformer",
        "type": "Transformer"
       }
      ],
      "name": "switchTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       },
       {
        "name": "transformers",
        "type": "Transformer"
       }
      ],
      "name": "switchTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       },
       {
        "name": "transformers",
        "type": "Transformer"
       },
       {
        "name": "defaultTransformer",
        "type": "Transformer"
       }
      ],
      "name": "switchTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "predicatesAndTransformers",
        "type": "Map"
       }
      ],
      "name": "switchTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "objectsAndTransformers",
        "type": "Map"
       }
      ],
      "name": "switchMapTransformer",
      "type": "Transformer"
     },
     {
      "params": [],
      "name": "instantiateTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "paramTypes",
        "type": "Class"
       },
       {
        "name": "args",
        "type": "Object"
       }
      ],
      "name": "instantiateTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "mapTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "methodName",
        "type": "String"
       }
      ],
      "name": "invokerTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "methodName",
        "type": "String"
       },
       {
        "name": "paramTypes",
        "type": "Class"
       },
       {
        "name": "args",
        "type": "Object"
       }
      ],
      "name": "invokerTransformer",
      "type": "Transformer"
     },
     {
      "params": [],
      "name": "stringValueTransformer",
      "type": "Transformer"
     }
    ],
    "fields": [],
    "name": "TransformerUtils"
   }
  ]
 },
 {
  "filename": "MultiMapUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "emptyMultiValuedMap",
      "type": "MultiValuedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       }
      ],
      "name": "emptyIfNull",
      "type": "MultiValuedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       }
      ],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getCollection",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getValuesAsList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getValuesAsSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getValuesAsBag",
      "type": "Bag"
     },
     {
      "params": [],
      "name": "newListValuedHashMap",
      "type": "ListValuedMap"
     },
     {
      "params": [
       {
        "name": "listClass",
        "type": "Class"
       }
      ],
      "name": "newListValuedHashMap",
      "type": "ListValuedMap"
     },
     {
      "params": [],
      "name": "newSetValuedHashMap",
      "type": "SetValuedMap"
     },
     {
      "params": [
       {
        "name": "setClass",
        "type": "Class"
       }
      ],
      "name": "newSetValuedHashMap",
      "type": "SetValuedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       }
      ],
      "name": "unmodifiableMultiValuedMap",
      "type": "MultiValuedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedMultiValuedMap",
      "type": "MultiValuedMap"
     }
    ],
    "fields": [
     {
      "name": "EMPTY_MULTI_VALUED_MAP",
      "type": "MultiValuedMap"
     }
    ],
    "name": "MultiMapUtils"
   }
  ]
 },
 {
  "filename": "OrderedMapIterator.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "K"
     }
    ],
    "fields": [],
    "name": "OrderedMapIterator"
   }
  ]
 },
 {
  "filename": "BoundedCollection.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "maxSize",
      "type": "int"
     }
    ],
    "fields": [],
    "name": "BoundedCollection"
   }
  ]
 },
 {
  "filename": "Predicate.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     }
    ],
    "fields": [],
    "name": "Predicate"
   }
  ]
 },
 {
  "filename": "ClosureUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "exceptionClosure",
      "type": "Closure"
     },
     {
      "params": [],
      "name": "nopClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "asClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "count",
        "type": "int"
       },
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "forClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "whileClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "closure",
        "type": "Closure"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "doWhileClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "methodName",
        "type": "String"
       }
      ],
      "name": "invokerClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "methodName",
        "type": "String"
       },
       {
        "name": "paramTypes",
        "type": "Class"
       },
       {
        "name": "args",
        "type": "Object"
       }
      ],
      "name": "invokerClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "closures",
        "type": "Closure"
       }
      ],
      "name": "chainedClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "closures",
        "type": "Collection"
       }
      ],
      "name": "chainedClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "trueClosure",
        "type": "Closure"
       }
      ],
      "name": "ifClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "trueClosure",
        "type": "Closure"
       },
       {
        "name": "falseClosure",
        "type": "Closure"
       }
      ],
      "name": "ifClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       },
       {
        "name": "closures",
        "type": "Closure"
       }
      ],
      "name": "switchClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       },
       {
        "name": "closures",
        "type": "Closure"
       },
       {
        "name": "defaultClosure",
        "type": "Closure"
       }
      ],
      "name": "switchClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "predicatesAndClosures",
        "type": "Map"
       }
      ],
      "name": "switchClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "objectsAndClosures",
        "type": "Map"
       }
      ],
      "name": "switchMapClosure",
      "type": "Closure"
     }
    ],
    "fields": [],
    "name": "ClosureUtils"
   }
  ]
 },
 {
  "filename": "SetValuedMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "get",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "Set"
     }
    ],
    "fields": [],
    "name": "SetValuedMap"
   }
  ]
 },
 {
  "filename": "Equator.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "o1",
        "type": "T"
       },
       {
        "name": "o2",
        "type": "T"
       }
      ],
      "name": "equate",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "o",
        "type": "T"
       }
      ],
      "name": "hash",
      "type": "int"
     }
    ],
    "fields": [],
    "name": "Equator"
   }
  ]
 },
 {
  "filename": "ArrayStack.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "empty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "peek",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "n",
        "type": "int"
       }
      ],
      "name": "peek",
      "type": "E"
     },
     {
      "params": [],
      "name": "pop",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "item",
        "type": "E"
       }
      ],
      "name": "push",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "search",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "ArrayStack"
   }
  ]
 },
 {
  "filename": "MultiValuedMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsMapping",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "get",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "values",
        "type": "Iterable"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "item",
        "type": "Object"
       }
      ],
      "name": "removeMapping",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "entries",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "keys",
      "type": "MultiSet"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "asMap",
      "type": "Map"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     }
    ],
    "fields": [],
    "name": "MultiValuedMap"
   }
  ]
 },
 {
  "filename": "IterableUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "emptyIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       }
      ],
      "name": "chainedIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       },
       {
        "name": "c",
        "type": "Iterable"
       }
      ],
      "name": "chainedIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       },
       {
        "name": "c",
        "type": "Iterable"
       },
       {
        "name": "d",
        "type": "Iterable"
       }
      ],
      "name": "chainedIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterables",
        "type": "Iterable"
       }
      ],
      "name": "chainedIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       }
      ],
      "name": "collatedIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       },
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       }
      ],
      "name": "collatedIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "filteredIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "maxSize",
        "type": "long"
       }
      ],
      "name": "boundedIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "loopingIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "reversedIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "elementsToSkip",
        "type": "long"
       }
      ],
      "name": "skippingIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "uniqueIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "unmodifiableIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterable"
       },
       {
        "name": "b",
        "type": "Iterable"
       }
      ],
      "name": "zippingIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "first",
        "type": "Iterable"
       },
       {
        "name": "others",
        "type": "Iterable"
       }
      ],
      "name": "zippingIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "emptyIfNull",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "forEach",
      "type": null
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "forEachButLast",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "find",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "matchesAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "matchesAny",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "countMatches",
      "type": "long"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "equator",
        "type": "Equator"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "obj",
        "type": "T"
       }
      ],
      "name": "frequency",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "partition",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "partition",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "partitionFactory",
        "type": "Factory"
       },
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "partition",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "toList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       },
       {
        "name": "delimiter",
        "type": "String"
       },
       {
        "name": "prefix",
        "type": "String"
       },
       {
        "name": "suffix",
        "type": "String"
       }
      ],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "checkNotNull",
      "type": null
     },
     {
      "params": [
       {
        "name": "iterables",
        "type": "Iterable"
       }
      ],
      "name": "checkNotNull",
      "type": null
     },
     {
      "params": [
       {
        "name": "iterable",
        "type": "Iterable"
       }
      ],
      "name": "emptyIteratorIfNull",
      "type": "Iterator"
     }
    ],
    "fields": [
     {
      "name": "EMPTY_ITERABLE",
      "type": "FluentIterable"
     }
    ],
    "name": "IterableUtils"
   }
  ]
 },
 {
  "filename": "QueueUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "queue",
        "type": "Queue"
       }
      ],
      "name": "unmodifiableQueue",
      "type": "Queue"
     },
     {
      "params": [
       {
        "name": "queue",
        "type": "Queue"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedQueue",
      "type": "Queue"
     },
     {
      "params": [
       {
        "name": "queue",
        "type": "Queue"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingQueue",
      "type": "Queue"
     },
     {
      "params": [],
      "name": "emptyQueue",
      "type": "Queue"
     }
    ],
    "fields": [
     {
      "name": "EMPTY_QUEUE",
      "type": "Queue"
     }
    ],
    "name": "QueueUtils"
   }
  ]
 },
 {
  "filename": "IterableGet.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     }
    ],
    "fields": [],
    "name": "IterableGet"
   }
  ]
 },
 {
  "filename": "SortedBag.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [],
      "name": "first",
      "type": "E"
     },
     {
      "params": [],
      "name": "last",
      "type": "E"
     }
    ],
    "fields": [],
    "name": "SortedBag"
   }
  ]
 },
 {
  "filename": "BagUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       }
      ],
      "name": "synchronizedBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       }
      ],
      "name": "unmodifiableBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       }
      ],
      "name": "collectionBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       }
      ],
      "name": "synchronizedSortedBag",
      "type": "SortedBag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       }
      ],
      "name": "unmodifiableSortedBag",
      "type": "SortedBag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedSortedBag",
      "type": "SortedBag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingSortedBag",
      "type": "SortedBag"
     },
     {
      "params": [],
      "name": "emptyBag",
      "type": "Bag"
     },
     {
      "params": [],
      "name": "emptySortedBag",
      "type": "SortedBag"
     }
    ],
    "fields": [
     {
      "name": "EMPTY_BAG",
      "type": "Bag"
     },
     {
      "name": "EMPTY_SORTED_BAG",
      "type": "Bag"
     }
    ],
    "name": "BagUtils"
   }
  ]
 },
 {
  "filename": "Transformer.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "input",
        "type": "I"
       }
      ],
      "name": "transform",
      "type": "O"
     }
    ],
    "fields": [],
    "name": "Transformer"
   }
  ]
 },
 {
  "filename": "Unmodifiable.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [],
    "fields": [],
    "name": "Unmodifiable"
   }
  ]
 },
 {
  "filename": "IteratorUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "emptyIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [],
      "name": "emptyListIterator",
      "type": "ResettableListIterator"
     },
     {
      "params": [],
      "name": "emptyOrderedIterator",
      "type": "OrderedIterator"
     },
     {
      "params": [],
      "name": "emptyMapIterator",
      "type": "MapIterator"
     },
     {
      "params": [],
      "name": "emptyOrderedMapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "singletonIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "singletonListIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "E"
       }
      ],
      "name": "arrayIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "Object"
       }
      ],
      "name": "arrayIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "E"
       },
       {
        "name": "start",
        "type": "int"
       }
      ],
      "name": "arrayIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "Object"
       },
       {
        "name": "start",
        "type": "int"
       }
      ],
      "name": "arrayIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "E"
       },
       {
        "name": "start",
        "type": "int"
       },
       {
        "name": "end",
        "type": "int"
       }
      ],
      "name": "arrayIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "Object"
       },
       {
        "name": "start",
        "type": "int"
       },
       {
        "name": "end",
        "type": "int"
       }
      ],
      "name": "arrayIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "E"
       }
      ],
      "name": "arrayListIterator",
      "type": "ResettableListIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "Object"
       }
      ],
      "name": "arrayListIterator",
      "type": "ResettableListIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "E"
       },
       {
        "name": "start",
        "type": "int"
       }
      ],
      "name": "arrayListIterator",
      "type": "ResettableListIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "Object"
       },
       {
        "name": "start",
        "type": "int"
       }
      ],
      "name": "arrayListIterator",
      "type": "ResettableListIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "E"
       },
       {
        "name": "start",
        "type": "int"
       },
       {
        "name": "end",
        "type": "int"
       }
      ],
      "name": "arrayListIterator",
      "type": "ResettableListIterator"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "Object"
       },
       {
        "name": "start",
        "type": "int"
       },
       {
        "name": "end",
        "type": "int"
       }
      ],
      "name": "arrayListIterator",
      "type": "ResettableListIterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "max",
        "type": "long"
       }
      ],
      "name": "boundedIterator",
      "type": "BoundedIterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "offset",
        "type": "long"
       },
       {
        "name": "max",
        "type": "long"
       }
      ],
      "name": "boundedIterator",
      "type": "BoundedIterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "unmodifiableIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "listIterator",
        "type": "ListIterator"
       }
      ],
      "name": "unmodifiableListIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "mapIterator",
        "type": "MapIterator"
       }
      ],
      "name": "unmodifiableMapIterator",
      "type": "MapIterator"
     },
     {
      "params": [
       {
        "name": "iterator1",
        "type": "Iterator"
       },
       {
        "name": "iterator2",
        "type": "Iterator"
       }
      ],
      "name": "chainedIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterators",
        "type": "Iterator"
       }
      ],
      "name": "chainedIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterators",
        "type": "Collection"
       }
      ],
      "name": "chainedIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       },
       {
        "name": "iterator1",
        "type": "Iterator"
       },
       {
        "name": "iterator2",
        "type": "Iterator"
       }
      ],
      "name": "collatedIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       },
       {
        "name": "iterators",
        "type": "Iterator"
       }
      ],
      "name": "collatedIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       },
       {
        "name": "iterators",
        "type": "Collection"
       }
      ],
      "name": "collatedIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "root",
        "type": "E"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "objectGraphIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "transform",
        "type": "Transformer"
       }
      ],
      "name": "transformedIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "filteredIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "listIterator",
        "type": "ListIterator"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "filteredListIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "loopingIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "loopingListIterator",
      "type": "ResettableListIterator"
     },
     {
      "params": [
       {
        "name": "nodeList",
        "type": "NodeList"
       }
      ],
      "name": "nodeListIterator",
      "type": "NodeListIterator"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       }
      ],
      "name": "nodeListIterator",
      "type": "NodeListIterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "peekingIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "pushbackIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "offset",
        "type": "long"
       }
      ],
      "name": "skippingIterator",
      "type": "SkippingIterator"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterator"
       },
       {
        "name": "b",
        "type": "Iterator"
       }
      ],
      "name": "zippingIterator",
      "type": "ZippingIterator"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Iterator"
       },
       {
        "name": "b",
        "type": "Iterator"
       },
       {
        "name": "c",
        "type": "Iterator"
       }
      ],
      "name": "zippingIterator",
      "type": "ZippingIterator"
     },
     {
      "params": [
       {
        "name": "iterators",
        "type": "Iterator"
       }
      ],
      "name": "zippingIterator",
      "type": "ZippingIterator"
     },
     {
      "params": [
       {
        "name": "enumeration",
        "type": "Enumeration"
       }
      ],
      "name": "asIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "enumeration",
        "type": "Enumeration"
       },
       {
        "name": "removeCollection",
        "type": "Collection"
       }
      ],
      "name": "asIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "asEnumeration",
      "type": "Enumeration"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "asIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "asMultipleUseIterable",
      "type": "Iterable"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "toListIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "arrayClass",
        "type": "Class"
       }
      ],
      "name": "toArray",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "toList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "estimatedSize",
        "type": "int"
       }
      ],
      "name": "toList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "getIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "forEach",
      "type": null
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "forEachButLast",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "find",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "matchesAny",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "matchesAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       },
       {
        "name": "delimiter",
        "type": "String"
       },
       {
        "name": "prefix",
        "type": "String"
       },
       {
        "name": "suffix",
        "type": "String"
       }
      ],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "EMPTY_ITERATOR",
      "type": "ResettableIterator"
     },
     {
      "name": "EMPTY_LIST_ITERATOR",
      "type": "ResettableListIterator"
     },
     {
      "name": "EMPTY_ORDERED_ITERATOR",
      "type": "OrderedIterator"
     },
     {
      "name": "EMPTY_MAP_ITERATOR",
      "type": "MapIterator"
     },
     {
      "name": "EMPTY_ORDERED_MAP_ITERATOR",
      "type": "OrderedMapIterator"
     },
     {
      "name": "DEFAULT_TOSTRING_PREFIX",
      "type": "String"
     },
     {
      "name": "DEFAULT_TOSTRING_SUFFIX",
      "type": "String"
     },
     {
      "name": "DEFAULT_TOSTRING_DELIMITER",
      "type": "String"
     }
    ],
    "name": "IteratorUtils"
   }
  ]
 },
 {
  "filename": "SortedBidiMap.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "SortedBidiMap"
     },
     {
      "params": [],
      "name": "valueComparator",
      "type": "Comparator"
     }
    ],
    "fields": [],
    "name": "SortedBidiMap"
   }
  ]
 },
 {
  "filename": "PredicateUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "exceptionPredicate",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "truePredicate",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "falsePredicate",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "nullPredicate",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "notNullPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "T"
       }
      ],
      "name": "equalPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "T"
       }
      ],
      "name": "identityPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "type",
        "type": "Class"
       }
      ],
      "name": "instanceofPredicate",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "uniquePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "methodName",
        "type": "String"
       }
      ],
      "name": "invokerPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "methodName",
        "type": "String"
       },
       {
        "name": "paramTypes",
        "type": "Class"
       },
       {
        "name": "args",
        "type": "Object"
       }
      ],
      "name": "invokerPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate1",
        "type": "Predicate"
       },
       {
        "name": "predicate2",
        "type": "Predicate"
       }
      ],
      "name": "andPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "allPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Collection"
       }
      ],
      "name": "allPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate1",
        "type": "Predicate"
       },
       {
        "name": "predicate2",
        "type": "Predicate"
       }
      ],
      "name": "orPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "anyPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Collection"
       }
      ],
      "name": "anyPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate1",
        "type": "Predicate"
       },
       {
        "name": "predicate2",
        "type": "Predicate"
       }
      ],
      "name": "eitherPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "onePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Collection"
       }
      ],
      "name": "onePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate1",
        "type": "Predicate"
       },
       {
        "name": "predicate2",
        "type": "Predicate"
       }
      ],
      "name": "neitherPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "nonePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Collection"
       }
      ],
      "name": "nonePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "notPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "asPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "nullIsExceptionPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "nullIsFalsePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "nullIsTruePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "transformer",
        "type": "Transformer"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "transformedPredicate",
      "type": "Predicate"
     }
    ],
    "fields": [],
    "name": "PredicateUtils"
   }
  ]
 },
 {
  "filename": "MapUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getObject",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getBoolean",
      "type": "Boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getNumber",
      "type": "Number"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getByte",
      "type": "Byte"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getShort",
      "type": "Short"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getInteger",
      "type": "Integer"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getLong",
      "type": "Long"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getFloat",
      "type": "Float"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getDouble",
      "type": "Double"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "V"
       }
      ],
      "name": "getObject",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "String"
       }
      ],
      "name": "getString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "Boolean"
       }
      ],
      "name": "getBoolean",
      "type": "Boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "Number"
       }
      ],
      "name": "getNumber",
      "type": "Number"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "Byte"
       }
      ],
      "name": "getByte",
      "type": "Byte"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "Short"
       }
      ],
      "name": "getShort",
      "type": "Short"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "Integer"
       }
      ],
      "name": "getInteger",
      "type": "Integer"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "Long"
       }
      ],
      "name": "getLong",
      "type": "Long"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "Float"
       }
      ],
      "name": "getFloat",
      "type": "Float"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "Double"
       }
      ],
      "name": "getDouble",
      "type": "Double"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "Map"
       }
      ],
      "name": "getMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getBooleanValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getByteValue",
      "type": "byte"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getShortValue",
      "type": "short"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getIntValue",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getLongValue",
      "type": "long"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getFloatValue",
      "type": "float"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "getDoubleValue",
      "type": "double"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "boolean"
       }
      ],
      "name": "getBooleanValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "byte"
       }
      ],
      "name": "getByteValue",
      "type": "byte"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "short"
       }
      ],
      "name": "getShortValue",
      "type": "short"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "int"
       }
      ],
      "name": "getIntValue",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "long"
       }
      ],
      "name": "getLongValue",
      "type": "long"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "float"
       }
      ],
      "name": "getFloatValue",
      "type": "float"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "defaultValue",
        "type": "double"
       }
      ],
      "name": "getDoubleValue",
      "type": "double"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "toProperties",
      "type": "Properties"
     },
     {
      "params": [
       {
        "name": "resourceBundle",
        "type": "ResourceBundle"
       }
      ],
      "name": "toMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "PrintStream"
       },
       {
        "name": "label",
        "type": "Object"
       },
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "verbosePrint",
      "type": null
     },
     {
      "params": [
       {
        "name": "out",
        "type": "PrintStream"
       },
       {
        "name": "label",
        "type": "Object"
       },
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "debugPrint",
      "type": null
     },
     {
      "params": [
       {
        "name": "out",
        "type": "PrintStream"
       },
       {
        "name": "label",
        "type": "Object"
       },
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "lineage",
        "type": "Deque"
       },
       {
        "name": "debug",
        "type": "boolean"
       }
      ],
      "name": "verbosePrintInternal",
      "type": null
     },
     {
      "params": [
       {
        "name": "out",
        "type": "PrintStream"
       },
       {
        "name": "indent",
        "type": "int"
       }
      ],
      "name": "printIndent",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "invertMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "safeAddToMap",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "array",
        "type": "Object"
       }
      ],
      "name": "putAll",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "emptyIfNull",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "isNotEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "synchronizedMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "unmodifiableMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "keyPred",
        "type": "Predicate"
       },
       {
        "name": "valuePred",
        "type": "Predicate"
       }
      ],
      "name": "predicatedMap",
      "type": "IterableMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedMap",
      "type": "IterableMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "fixedSizeMap",
      "type": "IterableMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "factory",
        "type": "Factory"
       }
      ],
      "name": "lazyMap",
      "type": "IterableMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "transformerFactory",
        "type": "Transformer"
       }
      ],
      "name": "lazyMap",
      "type": "IterableMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "orderedMap",
      "type": "OrderedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "multiValueMap",
      "type": "MultiValueMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "collectionClass",
        "type": "Class"
       }
      ],
      "name": "multiValueMap",
      "type": "MultiValueMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "collectionFactory",
        "type": "Factory"
       }
      ],
      "name": "multiValueMap",
      "type": "MultiValueMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       }
      ],
      "name": "synchronizedSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       }
      ],
      "name": "unmodifiableSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       },
       {
        "name": "keyPred",
        "type": "Predicate"
       },
       {
        "name": "valuePred",
        "type": "Predicate"
       }
      ],
      "name": "predicatedSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       }
      ],
      "name": "fixedSizeSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       },
       {
        "name": "factory",
        "type": "Factory"
       }
      ],
      "name": "lazySortedMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       },
       {
        "name": "transformerFactory",
        "type": "Transformer"
       }
      ],
      "name": "lazySortedMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "elements",
        "type": "Iterable"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       }
      ],
      "name": "populateMap",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "elements",
        "type": "Iterable"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "populateMap",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiMap"
       },
       {
        "name": "elements",
        "type": "Iterable"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       }
      ],
      "name": "populateMap",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiMap"
       },
       {
        "name": "elements",
        "type": "Iterable"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "populateMap",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "iterableMap",
      "type": "IterableMap"
     },
     {
      "params": [
       {
        "name": "sortedMap",
        "type": "SortedMap"
       }
      ],
      "name": "iterableSortedMap",
      "type": "IterableSortedMap"
     }
    ],
    "fields": [
     {
      "name": "EMPTY_SORTED_MAP",
      "type": "SortedMap"
     },
     {
      "name": "INDENT_STRING",
      "type": "String"
     }
    ],
    "name": "MapUtils"
   }
  ]
 },
 {
  "filename": "SetUtils.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "emptySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "emptySortedSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       }
      ],
      "name": "emptyIfNull",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "set1",
        "type": "Collection"
       },
       {
        "name": "set2",
        "type": "Collection"
       }
      ],
      "name": "isEqualSet",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Collection"
       }
      ],
      "name": "hashCodeForSet",
      "type": "int"
     },
     {
      "params": [],
      "name": "newIdentityHashSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       }
      ],
      "name": "synchronizedSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       }
      ],
      "name": "unmodifiableSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       }
      ],
      "name": "orderedSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "SortedSet"
       }
      ],
      "name": "synchronizedSortedSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "SortedSet"
       }
      ],
      "name": "unmodifiableSortedSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "SortedSet"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedSortedSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "SortedSet"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedSortedSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "NavigableSet"
       }
      ],
      "name": "unmodifiableNavigableSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "NavigableSet"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedNavigableSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "NavigableSet"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedNavigableSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Set"
       },
       {
        "name": "b",
        "type": "Set"
       }
      ],
      "name": "union",
      "type": "SetView"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Set"
       },
       {
        "name": "b",
        "type": "Set"
       }
      ],
      "name": "difference",
      "type": "SetView"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Set"
       },
       {
        "name": "b",
        "type": "Set"
       }
      ],
      "name": "intersection",
      "type": "SetView"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Set"
       },
       {
        "name": "b",
        "type": "Set"
       }
      ],
      "name": "disjunction",
      "type": "SetView"
     }
    ],
    "fields": [
     {
      "name": "EMPTY_SORTED_SET",
      "type": "SortedSet"
     }
    ],
    "name": "SetUtils"
   }
  ]
 },
 {
  "filename": "MapIterator.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "K"
     },
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     }
    ],
    "fields": [],
    "name": "MapIterator"
   }
  ]
 },
 {
  "filename": "FunctorException.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "FunctorException"
   }
  ]
 },
 {
  "filename": "ResettableIterator.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [],
    "name": "ResettableIterator"
   }
  ]
 },
 {
  "filename": "KeyValue.java",
  "package_name": "org.apache.commons.collections4",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     }
    ],
    "fields": [],
    "name": "KeyValue"
   }
  ]
 },
 {
  "filename": "UnmodifiableSortedBidiMap.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "SortedBidiMap"
       }
      ],
      "name": "unmodifiableSortedBidiMap",
      "type": "SortedBidiMap"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "removeValue",
      "type": "K"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "SortedBidiMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     }
    ],
    "fields": [
     {
      "name": "inverse",
      "type": "UnmodifiableSortedBidiMap"
     }
    ],
    "name": "UnmodifiableSortedBidiMap"
   }
  ]
 },
 {
  "filename": "UnmodifiableOrderedBidiMap.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "OrderedBidiMap"
       }
      ],
      "name": "unmodifiableOrderedBidiMap",
      "type": "OrderedBidiMap"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "removeValue",
      "type": "K"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "OrderedBidiMap"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "inverseOrderedBidiMap",
      "type": "OrderedBidiMap"
     }
    ],
    "fields": [
     {
      "name": "inverse",
      "type": "UnmodifiableOrderedBidiMap"
     }
    ],
    "name": "UnmodifiableOrderedBidiMap"
   }
  ]
 },
 {
  "filename": "TreeBidiMap.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "removeValue",
      "type": "K"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Set"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "OrderedBidiMap"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "doPut",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "doRemoveKey",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "doRemoveValue",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "data",
        "type": "Object"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "lookup",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "lookupKey",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "lookupValue",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "nextGreater",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "nextSmaller",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "o1",
        "type": "T"
       },
       {
        "name": "o2",
        "type": "T"
       }
      ],
      "name": "compare",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "leastNode",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "greatestNode",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "from",
        "type": "Node"
       },
       {
        "name": "to",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "copyColor",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "isRed",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "isBlack",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "makeRed",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "makeBlack",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "getGrandParent",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "getParent",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "getRightChild",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "getLeftChild",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "rotateLeft",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "rotateRight",
      "type": null
     },
     {
      "params": [
       {
        "name": "insertedNode",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "doRedBlackInsert",
      "type": null
     },
     {
      "params": [
       {
        "name": "deletedNode",
        "type": "Node"
       }
      ],
      "name": "doRedBlackDelete",
      "type": null
     },
     {
      "params": [
       {
        "name": "replacementNode",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "doRedBlackDeleteFixup",
      "type": null
     },
     {
      "params": [
       {
        "name": "x",
        "type": "Node"
       },
       {
        "name": "y",
        "type": "Node"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "swapPosition",
      "type": null
     },
     {
      "params": [
       {
        "name": "o",
        "type": "Object"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "checkNonNullComparable",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "checkKey",
      "type": null
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "checkValue",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "checkKeyAndValue",
      "type": null
     },
     {
      "params": [],
      "name": "modify",
      "type": null
     },
     {
      "params": [],
      "name": "grow",
      "type": null
     },
     {
      "params": [],
      "name": "shrink",
      "type": null
     },
     {
      "params": [
       {
        "name": "newNode",
        "type": "Node"
       }
      ],
      "name": "insertValue",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       },
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "doEquals",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "doHashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "doToString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "dataElement",
        "type": "DataElement"
       }
      ],
      "name": "getMapIterator",
      "type": "MapIterator"
     },
     {
      "params": [
       {
        "name": "stream",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "stream",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "rootNode",
      "type": "Node"
     },
     {
      "name": "nodeCount",
      "type": "int"
     },
     {
      "name": "modifications",
      "type": "int"
     },
     {
      "name": "keySet",
      "type": "Set"
     },
     {
      "name": "valuesSet",
      "type": "Set"
     },
     {
      "name": "entrySet",
      "type": "Set"
     },
     {
      "name": "inverse",
      "type": "Inverse"
     }
    ],
    "name": "TreeBidiMap"
   }
  ]
 },
 {
  "filename": "DualLinkedHashBidiMap.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "normalMap",
        "type": "Map"
       },
       {
        "name": "reverseMap",
        "type": "Map"
       },
       {
        "name": "inverseBidiMap",
        "type": "BidiMap"
       }
      ],
      "name": "createBidiMap",
      "type": "BidiMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "DualLinkedHashBidiMap"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": []
 },
 {
  "filename": "AbstractBidiMapDecorator.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "BidiMap"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "removeValue",
      "type": "K"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "BidiMap"
     },
     {
      "params": [],
      "name": "values",
      "type": "Set"
     }
    ],
    "fields": [],
    "name": "AbstractBidiMapDecorator"
   }
  ]
 },
 {
  "filename": "AbstractOrderedBidiMapDecorator.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "OrderedBidiMap"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "OrderedBidiMap"
     }
    ],
    "fields": [],
    "name": "AbstractOrderedBidiMapDecorator"
   }
  ]
 },
 {
  "filename": "UnmodifiableBidiMap.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "BidiMap"
       }
      ],
      "name": "unmodifiableBidiMap",
      "type": "BidiMap"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "removeValue",
      "type": "K"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "BidiMap"
     }
    ],
    "fields": [
     {
      "name": "inverse",
      "type": "UnmodifiableBidiMap"
     }
    ],
    "name": "UnmodifiableBidiMap"
   }
  ]
 },
 {
  "filename": "DualHashBidiMap.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "normalMap",
        "type": "Map"
       },
       {
        "name": "reverseMap",
        "type": "Map"
       },
       {
        "name": "inverseBidiMap",
        "type": "BidiMap"
       }
      ],
      "name": "createBidiMap",
      "type": "BidiMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "DualHashBidiMap"
   }
  ]
 },
 {
  "filename": "DualTreeBidiMap.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "normalMap",
        "type": "Map"
       },
       {
        "name": "reverseMap",
        "type": "Map"
       },
       {
        "name": "inverseMap",
        "type": "BidiMap"
       }
      ],
      "name": "createBidiMap",
      "type": "DualTreeBidiMap"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [],
      "name": "valueComparator",
      "type": "Comparator"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "inverseSortedBidiMap",
      "type": "SortedBidiMap"
     },
     {
      "params": [],
      "name": "inverseOrderedBidiMap",
      "type": "OrderedBidiMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "SortedBidiMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "name": "valueComparator",
      "type": "Comparator"
     }
    ],
    "name": "DualTreeBidiMap"
   }
  ]
 },
 {
  "filename": "AbstractSortedBidiMapDecorator.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "SortedBidiMap"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "SortedBidiMap"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [],
      "name": "valueComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     }
    ],
    "fields": [],
    "name": "AbstractSortedBidiMapDecorator"
   }
  ]
 },
 {
  "filename": "AbstractDualBidiMap.java",
  "package_name": "org.apache.commons.collections4.bidimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "normalMap",
        "type": "Map"
       },
       {
        "name": "reverseMap",
        "type": "Map"
       },
       {
        "name": "inverseMap",
        "type": "BidiMap"
       }
      ],
      "name": "createBidiMap",
      "type": "BidiMap"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "removeValue",
      "type": "K"
     },
     {
      "params": [],
      "name": "inverseBidiMap",
      "type": "BidiMap"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "createKeySetIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "values",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "createValuesIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "createEntrySetIterator",
      "type": "Iterator"
     }
    ],
    "fields": [
     {
      "name": "normalMap",
      "type": "Map"
     },
     {
      "name": "reverseMap",
      "type": "Map"
     },
     {
      "name": "inverseBidiMap",
      "type": "BidiMap"
     },
     {
      "name": "keySet",
      "type": "Set"
     },
     {
      "name": "values",
      "type": "Set"
     },
     {
      "name": "entrySet",
      "type": "Set"
     }
    ],
    "name": "AbstractDualBidiMap"
   }
  ]
 },
 {
  "filename": "CollectionBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       }
      ],
      "name": "collectionBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "CollectionBag"
   }
  ]
 },
 {
  "filename": "TransformedSortedBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingSortedBag",
      "type": "TransformedSortedBag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedSortedBag",
      "type": "TransformedSortedBag"
     },
     {
      "params": [],
      "name": "getSortedBag",
      "type": "SortedBag"
     },
     {
      "params": [],
      "name": "first",
      "type": "E"
     },
     {
      "params": [],
      "name": "last",
      "type": "E"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "TransformedSortedBag"
   }
  ]
 },
 {
  "filename": "AbstractBagDecorator.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractBagDecorator"
   }
  ]
 },
 {
  "filename": "SynchronizedBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       }
      ],
      "name": "synchronizedBag",
      "type": "SynchronizedBag"
     },
     {
      "params": [],
      "name": "getBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "SynchronizedBag"
   }
  ]
 },
 {
  "filename": "TreeBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "first",
      "type": "E"
     },
     {
      "params": [],
      "name": "last",
      "type": "E"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [],
      "name": "getMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "TreeBag"
   }
  ]
 },
 {
  "filename": "HashBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "HashBag"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": []
 },
 {
  "filename": "UnmodifiableSortedBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       }
      ],
      "name": "unmodifiableSortedBag",
      "type": "SortedBag"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableSortedBag"
   }
  ]
 },
 {
  "filename": "PredicatedSortedBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedSortedBag",
      "type": "PredicatedSortedBag"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "SortedBag"
     },
     {
      "params": [],
      "name": "first",
      "type": "E"
     },
     {
      "params": [],
      "name": "last",
      "type": "E"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PredicatedSortedBag"
   }
  ]
 },
 {
  "filename": "AbstractMapBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getMap",
      "type": "Map"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "other",
        "type": "Bag"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "nCopies",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "nCopies",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "other",
        "type": "Bag"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "doWriteObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "doReadObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "map",
      "type": "Map"
     },
     {
      "name": "size",
      "type": "int"
     },
     {
      "name": "modCount",
      "type": "int"
     },
     {
      "name": "uniqueSet",
      "type": "Set"
     }
    ],
    "name": "AbstractMapBag"
   }
  ]
 },
 {
  "filename": "TransformedBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedBag",
      "type": "Bag"
     },
     {
      "params": [],
      "name": "getBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "nCopies",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "nCopies",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "TransformedBag"
   }
  ]
 },
 {
  "filename": "UnmodifiableBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       }
      ],
      "name": "unmodifiableBag",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableBag"
   }
  ]
 },
 {
  "filename": "CollectionSortedBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       }
      ],
      "name": "collectionSortedBag",
      "type": "SortedBag"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "CollectionSortedBag"
   }
  ]
 },
 {
  "filename": "SynchronizedSortedBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "SortedBag"
       }
      ],
      "name": "synchronizedSortedBag",
      "type": "SynchronizedSortedBag"
     },
     {
      "params": [],
      "name": "getSortedBag",
      "type": "SortedBag"
     },
     {
      "params": [],
      "name": "first",
      "type": "E"
     },
     {
      "params": [],
      "name": "last",
      "type": "E"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "SynchronizedSortedBag"
   }
  ]
 },
 {
  "filename": "AbstractSortedBagDecorator.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "SortedBag"
     },
     {
      "params": [],
      "name": "first",
      "type": "E"
     },
     {
      "params": [],
      "name": "last",
      "type": "E"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractSortedBagDecorator"
   }
  ]
 },
 {
  "filename": "PredicatedBag.java",
  "package_name": "org.apache.commons.collections4.bag",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bag",
        "type": "Bag"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedBag",
      "type": "PredicatedBag"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "Bag"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PredicatedBag"
   }
  ]
 },
 {
  "filename": "DefaultKeyValue.java",
  "package_name": "org.apache.commons.collections4.keyvalue",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "setKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "toMapEntry",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [],
    "name": "DefaultKeyValue"
   }
  ]
 },
 {
  "filename": "DefaultMapEntry.java",
  "package_name": "org.apache.commons.collections4.keyvalue",
  "classes": [
   {
    "methods": [],
    "fields": [],
    "name": "DefaultMapEntry"
   }
  ]
 },
 {
  "filename": "MultiKey.java",
  "package_name": "org.apache.commons.collections4.keyvalue",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getKeys",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "other",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "keys",
        "type": "Object"
       }
      ],
      "name": "calculateHashCode",
      "type": null
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "keys",
      "type": "K"
     },
     {
      "name": "hashCode",
      "type": "int"
     }
    ],
    "name": "MultiKey"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.keyvalue",
  "classes": []
 },
 {
  "filename": "AbstractMapEntry.java",
  "package_name": "org.apache.commons.collections4.keyvalue",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [],
    "name": "AbstractMapEntry"
   }
  ]
 },
 {
  "filename": "AbstractKeyValue.java",
  "package_name": "org.apache.commons.collections4.keyvalue",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "setKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "key",
      "type": "K"
     },
     {
      "name": "value",
      "type": "V"
     }
    ],
    "name": "AbstractKeyValue"
   }
  ]
 },
 {
  "filename": "TiedMapEntry.java",
  "package_name": "org.apache.commons.collections4.keyvalue",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "map",
      "type": "Map"
     },
     {
      "name": "key",
      "type": "K"
     }
    ],
    "name": "TiedMapEntry"
   }
  ]
 },
 {
  "filename": "AbstractMapEntryDecorator.java",
  "package_name": "org.apache.commons.collections4.keyvalue",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getMapEntry",
      "type": "Map"
     },
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "entry",
      "type": "Map"
     }
    ],
    "name": "AbstractMapEntryDecorator"
   }
  ]
 },
 {
  "filename": "UnmodifiableMapEntry.java",
  "package_name": "org.apache.commons.collections4.keyvalue",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     }
    ],
    "fields": [],
    "name": "UnmodifiableMapEntry"
   }
  ]
 },
 {
  "filename": "MapBackedSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "mapBackedSet",
      "type": "MapBackedSet"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "dummyValue",
        "type": "V"
       }
      ],
      "name": "mapBackedSet",
      "type": "MapBackedSet"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "map",
      "type": "Map"
     },
     {
      "name": "dummyValue",
      "type": "V"
     }
    ],
    "name": "MapBackedSet"
   }
  ]
 },
 {
  "filename": "AbstractSortedSetDecorator.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "subSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "headSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       }
      ],
      "name": "tailSet",
      "type": "SortedSet"
     },
     {
      "params": [],
      "name": "first",
      "type": "E"
     },
     {
      "params": [],
      "name": "last",
      "type": "E"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractSortedSetDecorator"
   }
  ]
 },
 {
  "filename": "UnmodifiableNavigableSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "NavigableSet"
       }
      ],
      "name": "unmodifiableNavigableSet",
      "type": "NavigableSet"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "subSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "headSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       }
      ],
      "name": "tailSet",
      "type": "SortedSet"
     },
     {
      "params": [],
      "name": "descendingSet",
      "type": "NavigableSet"
     },
     {
      "params": [],
      "name": "descendingIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "fromInclusive",
        "type": "boolean"
       },
       {
        "name": "toElement",
        "type": "E"
       },
       {
        "name": "toInclusive",
        "type": "boolean"
       }
      ],
      "name": "subSet",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "toElement",
        "type": "E"
       },
       {
        "name": "inclusive",
        "type": "boolean"
       }
      ],
      "name": "headSet",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "inclusive",
        "type": "boolean"
       }
      ],
      "name": "tailSet",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableNavigableSet"
   }
  ]
 },
 {
  "filename": "PredicatedNavigableSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "NavigableSet"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedNavigableSet",
      "type": "PredicatedNavigableSet"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "lower",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "floor",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "ceiling",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "higher",
      "type": "E"
     },
     {
      "params": [],
      "name": "pollFirst",
      "type": "E"
     },
     {
      "params": [],
      "name": "pollLast",
      "type": "E"
     },
     {
      "params": [],
      "name": "descendingSet",
      "type": "NavigableSet"
     },
     {
      "params": [],
      "name": "descendingIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "fromInclusive",
        "type": "boolean"
       },
       {
        "name": "toElement",
        "type": "E"
       },
       {
        "name": "toInclusive",
        "type": "boolean"
       }
      ],
      "name": "subSet",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "toElement",
        "type": "E"
       },
       {
        "name": "inclusive",
        "type": "boolean"
       }
      ],
      "name": "headSet",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "inclusive",
        "type": "boolean"
       }
      ],
      "name": "tailSet",
      "type": "NavigableSet"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PredicatedNavigableSet"
   }
  ]
 },
 {
  "filename": "CompositeSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "mutator",
        "type": "SetMutator"
       }
      ],
      "name": "setMutator",
      "type": null
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       }
      ],
      "name": "addComposited",
      "type": null
     },
     {
      "params": [
       {
        "name": "set1",
        "type": "Set"
       },
       {
        "name": "set2",
        "type": "Set"
       }
      ],
      "name": "addComposited",
      "type": null
     },
     {
      "params": [
       {
        "name": "sets",
        "type": "Set"
       }
      ],
      "name": "addComposited",
      "type": null
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       }
      ],
      "name": "removeComposited",
      "type": null
     },
     {
      "params": [],
      "name": "toSet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "getSets",
      "type": "List"
     },
     {
      "params": [],
      "name": "getMutator",
      "type": "SetMutator"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "mutator",
      "type": "SetMutator"
     },
     {
      "name": "all",
      "type": "List"
     }
    ],
    "name": "CompositeSet"
   }
  ]
 },
 {
  "filename": "TransformedNavigableSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "NavigableSet"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingNavigableSet",
      "type": "TransformedNavigableSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "NavigableSet"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedNavigableSet",
      "type": "TransformedNavigableSet"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "lower",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "floor",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "ceiling",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "higher",
      "type": "E"
     },
     {
      "params": [],
      "name": "pollFirst",
      "type": "E"
     },
     {
      "params": [],
      "name": "pollLast",
      "type": "E"
     },
     {
      "params": [],
      "name": "descendingSet",
      "type": "NavigableSet"
     },
     {
      "params": [],
      "name": "descendingIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "fromInclusive",
        "type": "boolean"
       },
       {
        "name": "toElement",
        "type": "E"
       },
       {
        "name": "toInclusive",
        "type": "boolean"
       }
      ],
      "name": "subSet",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "toElement",
        "type": "E"
       },
       {
        "name": "inclusive",
        "type": "boolean"
       }
      ],
      "name": "headSet",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "inclusive",
        "type": "boolean"
       }
      ],
      "name": "tailSet",
      "type": "NavigableSet"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "TransformedNavigableSet"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": []
 },
 {
  "filename": "TransformedSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingSet",
      "type": "TransformedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "TransformedSet"
   }
  ]
 },
 {
  "filename": "TransformedSortedSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "SortedSet"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingSortedSet",
      "type": "TransformedSortedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "SortedSet"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedSortedSet",
      "type": "TransformedSortedSet"
     },
     {
      "params": [],
      "name": "getSortedSet",
      "type": "SortedSet"
     },
     {
      "params": [],
      "name": "first",
      "type": "E"
     },
     {
      "params": [],
      "name": "last",
      "type": "E"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "subSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "headSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       }
      ],
      "name": "tailSet",
      "type": "SortedSet"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "TransformedSortedSet"
   }
  ]
 },
 {
  "filename": "ListOrderedSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       },
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "listOrderedSet",
      "type": "ListOrderedSet"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       }
      ],
      "name": "listOrderedSet",
      "type": "ListOrderedSet"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "listOrderedSet",
      "type": "ListOrderedSet"
     },
     {
      "params": [],
      "name": "asList",
      "type": "List"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "iterator",
      "type": "OrderedIterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "setOrder",
      "type": "List"
     }
    ],
    "name": "ListOrderedSet"
   }
  ]
 },
 {
  "filename": "AbstractSerializableSetDecorator.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractSerializableSetDecorator"
   }
  ]
 },
 {
  "filename": "UnmodifiableSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       }
      ],
      "name": "unmodifiableSet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableSet"
   }
  ]
 },
 {
  "filename": "AbstractSetDecorator.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractSetDecorator"
   }
  ]
 },
 {
  "filename": "PredicatedSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedSet",
      "type": "PredicatedSet"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PredicatedSet"
   }
  ]
 },
 {
  "filename": "UnmodifiableSortedSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "SortedSet"
       }
      ],
      "name": "unmodifiableSortedSet",
      "type": "SortedSet"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "subSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "headSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       }
      ],
      "name": "tailSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableSortedSet"
   }
  ]
 },
 {
  "filename": "PredicatedSortedSet.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "SortedSet"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedSortedSet",
      "type": "PredicatedSortedSet"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "SortedSet"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [],
      "name": "first",
      "type": "E"
     },
     {
      "params": [],
      "name": "last",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "subSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "toElement",
        "type": "E"
       }
      ],
      "name": "headSet",
      "type": "SortedSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       }
      ],
      "name": "tailSet",
      "type": "SortedSet"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PredicatedSortedSet"
   }
  ]
 },
 {
  "filename": "AbstractNavigableSetDecorator.java",
  "package_name": "org.apache.commons.collections4.set",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "lower",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "floor",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "ceiling",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "e",
        "type": "E"
       }
      ],
      "name": "higher",
      "type": "E"
     },
     {
      "params": [],
      "name": "pollFirst",
      "type": "E"
     },
     {
      "params": [],
      "name": "pollLast",
      "type": "E"
     },
     {
      "params": [],
      "name": "descendingSet",
      "type": "NavigableSet"
     },
     {
      "params": [],
      "name": "descendingIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "fromInclusive",
        "type": "boolean"
       },
       {
        "name": "toElement",
        "type": "E"
       },
       {
        "name": "toInclusive",
        "type": "boolean"
       }
      ],
      "name": "subSet",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "toElement",
        "type": "E"
       },
       {
        "name": "inclusive",
        "type": "boolean"
       }
      ],
      "name": "headSet",
      "type": "NavigableSet"
     },
     {
      "params": [
       {
        "name": "fromElement",
        "type": "E"
       },
       {
        "name": "inclusive",
        "type": "boolean"
       }
      ],
      "name": "tailSet",
      "type": "NavigableSet"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractNavigableSetDecorator"
   }
  ]
 },
 {
  "filename": "ReplacementsHandler.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "skipped",
        "type": "int"
       },
       {
        "name": "from",
        "type": "List"
       },
       {
        "name": "to",
        "type": "List"
       }
      ],
      "name": "handleReplacement",
      "type": null
     }
    ],
    "fields": [],
    "name": "ReplacementsHandler"
   }
  ]
 },
 {
  "filename": "EditScript.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "command",
        "type": "KeepCommand"
       }
      ],
      "name": "append",
      "type": null
     },
     {
      "params": [
       {
        "name": "command",
        "type": "InsertCommand"
       }
      ],
      "name": "append",
      "type": null
     },
     {
      "params": [
       {
        "name": "command",
        "type": "DeleteCommand"
       }
      ],
      "name": "append",
      "type": null
     },
     {
      "params": [
       {
        "name": "visitor",
        "type": "CommandVisitor"
       }
      ],
      "name": "visit",
      "type": null
     },
     {
      "params": [],
      "name": "getLCSLength",
      "type": "int"
     },
     {
      "params": [],
      "name": "getModifications",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "commands",
      "type": "List"
     },
     {
      "name": "lcsLength",
      "type": "int"
     },
     {
      "name": "modifications",
      "type": "int"
     }
    ],
    "name": "EditScript"
   }
  ]
 },
 {
  "filename": "CommandVisitor.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "visitInsertCommand",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "visitKeepCommand",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "visitDeleteCommand",
      "type": null
     }
    ],
    "fields": [],
    "name": "CommandVisitor"
   }
  ]
 },
 {
  "filename": "SequencesComparator.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getScript",
      "type": "EditScript"
     },
     {
      "params": [
       {
        "name": "start",
        "type": "int"
       },
       {
        "name": "diag",
        "type": "int"
       },
       {
        "name": "end1",
        "type": "int"
       },
       {
        "name": "end2",
        "type": "int"
       }
      ],
      "name": "buildSnake",
      "type": "Snake"
     },
     {
      "params": [
       {
        "name": "start1",
        "type": "int"
       },
       {
        "name": "end1",
        "type": "int"
       },
       {
        "name": "start2",
        "type": "int"
       },
       {
        "name": "end2",
        "type": "int"
       }
      ],
      "name": "getMiddleSnake",
      "type": "Snake"
     },
     {
      "params": [
       {
        "name": "start1",
        "type": "int"
       },
       {
        "name": "end1",
        "type": "int"
       },
       {
        "name": "start2",
        "type": "int"
       },
       {
        "name": "end2",
        "type": "int"
       },
       {
        "name": "script",
        "type": "EditScript"
       }
      ],
      "name": "buildScript",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "sequence1",
      "type": "List"
     },
     {
      "name": "sequence2",
      "type": "List"
     },
     {
      "name": "equator",
      "type": "Equator"
     },
     {
      "name": "vDown",
      "type": "int"
     },
     {
      "name": "vUp",
      "type": "int"
     }
    ],
    "name": "SequencesComparator"
   }
  ]
 },
 {
  "filename": "EditCommand.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getObject",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "visitor",
        "type": "CommandVisitor"
       }
      ],
      "name": "accept",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "object",
      "type": "T"
     }
    ],
    "name": "EditCommand"
   }
  ]
 },
 {
  "filename": "DeleteCommand.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "visitor",
        "type": "CommandVisitor"
       }
      ],
      "name": "accept",
      "type": null
     }
    ],
    "fields": [],
    "name": "DeleteCommand"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": []
 },
 {
  "filename": "InsertCommand.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "visitor",
        "type": "CommandVisitor"
       }
      ],
      "name": "accept",
      "type": null
     }
    ],
    "fields": [],
    "name": "InsertCommand"
   }
  ]
 },
 {
  "filename": "KeepCommand.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "visitor",
        "type": "CommandVisitor"
       }
      ],
      "name": "accept",
      "type": null
     }
    ],
    "fields": [],
    "name": "KeepCommand"
   }
  ]
 },
 {
  "filename": "ReplacementsFinder.java",
  "package_name": "org.apache.commons.collections4.sequence",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "visitInsertCommand",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "visitKeepCommand",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "visitDeleteCommand",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "pendingInsertions",
      "type": "List"
     },
     {
      "name": "pendingDeletions",
      "type": "List"
     },
     {
      "name": "skipped",
      "type": "int"
     },
     {
      "name": "handler",
      "type": "ReplacementsHandler"
     }
    ],
    "name": "ReplacementsFinder"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.trie",
  "classes": []
 },
 {
  "filename": "AbstractPatriciaTrie.java",
  "package_name": "org.apache.commons.collections4.trie",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "incrementSize",
      "type": null
     },
     {
      "params": [],
      "name": "decrementSize",
      "type": null
     },
     {
      "params": [],
      "name": "incrementModCount",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "TrieEntry"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       }
      ],
      "name": "addEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "k",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "k",
        "type": "Object"
       }
      ],
      "name": "getEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "select",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "selectKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "selectValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "h",
        "type": "TrieEntry"
       },
       {
        "name": "bitIndex",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       },
       {
        "name": "reference",
        "type": "Reference"
       }
      ],
      "name": "selectR",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "k",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "k",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       }
      ],
      "name": "getNearestEntryForKey",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "h",
        "type": "TrieEntry"
       }
      ],
      "name": "removeEntry",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "h",
        "type": "TrieEntry"
       }
      ],
      "name": "removeExternalEntry",
      "type": null
     },
     {
      "params": [
       {
        "name": "h",
        "type": "TrieEntry"
       }
      ],
      "name": "removeInternalEntry",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "TrieEntry"
       }
      ],
      "name": "nextEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "start",
        "type": "TrieEntry"
       },
       {
        "name": "previous",
        "type": "TrieEntry"
       },
       {
        "name": "tree",
        "type": "TrieEntry"
       }
      ],
      "name": "nextEntryImpl",
      "type": "TrieEntry"
     },
     {
      "params": [],
      "name": "firstEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "TrieEntry"
       }
      ],
      "name": "followLeft",
      "type": "TrieEntry"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "prefixMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "offsetInBits",
        "type": "int"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       }
      ],
      "name": "getPrefixMapByBits",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "higherEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "ceilingEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "lowerEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "floorEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "prefix",
        "type": "K"
       },
       {
        "name": "offsetInBits",
        "type": "int"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       }
      ],
      "name": "subtree",
      "type": "TrieEntry"
     },
     {
      "params": [],
      "name": "lastEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "TrieEntry"
       }
      ],
      "name": "followRight",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "start",
        "type": "TrieEntry"
       }
      ],
      "name": "previousEntry",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "TrieEntry"
       },
       {
        "name": "parentOfSubtree",
        "type": "TrieEntry"
       }
      ],
      "name": "nextEntryInSubtree",
      "type": "TrieEntry"
     },
     {
      "params": [
       {
        "name": "next",
        "type": "TrieEntry"
       },
       {
        "name": "from",
        "type": "TrieEntry"
       }
      ],
      "name": "isValidUplink",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "stream",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "stream",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "root",
      "type": "TrieEntry"
     },
     {
      "name": "keySet",
      "type": "Set"
     },
     {
      "name": "values",
      "type": "Collection"
     },
     {
      "name": "entrySet",
      "type": "Set"
     },
     {
      "name": "size",
      "type": "int"
     },
     {
      "name": "modCount",
      "type": "int"
     }
    ],
    "name": "AbstractPatriciaTrie"
   }
  ]
 },
 {
  "filename": "UnmodifiableTrie.java",
  "package_name": "org.apache.commons.collections4.trie",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "trie",
        "type": "Trie"
       }
      ],
      "name": "unmodifiableTrie",
      "type": "Trie"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "m",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "prefixMap",
      "type": "SortedMap"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "delegate",
      "type": "Trie"
     }
    ],
    "name": "UnmodifiableTrie"
   }
  ]
 },
 {
  "filename": "PatriciaTrie.java",
  "package_name": "org.apache.commons.collections4.trie",
  "classes": [
   {
    "methods": [],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PatriciaTrie"
   }
  ]
 },
 {
  "filename": "KeyAnalyzer.java",
  "package_name": "org.apache.commons.collections4.trie",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bitIndex",
        "type": "int"
       }
      ],
      "name": "isOutOfBoundsIndex",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "bitIndex",
        "type": "int"
       }
      ],
      "name": "isEqualBitKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "bitIndex",
        "type": "int"
       }
      ],
      "name": "isNullBitKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "bitIndex",
        "type": "int"
       }
      ],
      "name": "isValidBitIndex",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "bitsPerElement",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "lengthInBits",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "bitIndex",
        "type": "int"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       }
      ],
      "name": "isBitSet",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "offsetInBits",
        "type": "int"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       },
       {
        "name": "other",
        "type": "K"
       },
       {
        "name": "otherOffsetInBits",
        "type": "int"
       },
       {
        "name": "otherLengthInBits",
        "type": "int"
       }
      ],
      "name": "bitIndex",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "prefix",
        "type": "K"
       },
       {
        "name": "offsetInBits",
        "type": "int"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "isPrefix",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "o1",
        "type": "K"
       },
       {
        "name": "o2",
        "type": "K"
       }
      ],
      "name": "compare",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "NULL_BIT_KEY",
      "type": "int"
     },
     {
      "name": "EQUAL_BIT_KEY",
      "type": "int"
     },
     {
      "name": "OUT_OF_BOUNDS_BIT_KEY",
      "type": "int"
     }
    ],
    "name": "KeyAnalyzer"
   }
  ]
 },
 {
  "filename": "AbstractBitwiseTrie.java",
  "package_name": "org.apache.commons.collections4.trie",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getKeyAnalyzer",
      "type": "KeyAnalyzer"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "castKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "lengthInBits",
      "type": "int"
     },
     {
      "params": [],
      "name": "bitsPerElement",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "bitIndex",
        "type": "int"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       }
      ],
      "name": "isBitSet",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "foundKey",
        "type": "K"
       }
      ],
      "name": "bitIndex",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "other",
        "type": "K"
       }
      ],
      "name": "compareKeys",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "a",
        "type": "Object"
       },
       {
        "name": "b",
        "type": "Object"
       }
      ],
      "name": "compare",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "keyAnalyzer",
      "type": "KeyAnalyzer"
     }
    ],
    "name": "AbstractBitwiseTrie"
   }
  ]
 },
 {
  "filename": "StringKeyAnalyzer.java",
  "package_name": "org.apache.commons.collections4.trie.analyzer",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bit",
        "type": "int"
       }
      ],
      "name": "mask",
      "type": "int"
     },
     {
      "params": [],
      "name": "bitsPerElement",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "String"
       }
      ],
      "name": "lengthInBits",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "String"
       },
       {
        "name": "offsetInBits",
        "type": "int"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       },
       {
        "name": "other",
        "type": "String"
       },
       {
        "name": "otherOffsetInBits",
        "type": "int"
       },
       {
        "name": "otherLengthInBits",
        "type": "int"
       }
      ],
      "name": "bitIndex",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "String"
       },
       {
        "name": "bitIndex",
        "type": "int"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       }
      ],
      "name": "isBitSet",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "prefix",
        "type": "String"
       },
       {
        "name": "offsetInBits",
        "type": "int"
       },
       {
        "name": "lengthInBits",
        "type": "int"
       },
       {
        "name": "key",
        "type": "String"
       }
      ],
      "name": "isPrefix",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "StringKeyAnalyzer"
     },
     {
      "name": "LENGTH",
      "type": "int"
     },
     {
      "name": "MSB",
      "type": "int"
     }
    ],
    "name": "StringKeyAnalyzer"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.trie.analyzer",
  "classes": []
 },
 {
  "filename": "MultiValuedHashMap.java",
  "package_name": "org.apache.commons.collections4.multimap",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "listValuedHashMap",
      "type": "ListValuedMap"
     },
     {
      "params": [
       {
        "name": "listClass",
        "type": "Class"
       }
      ],
      "name": "listValuedHashMap",
      "type": "ListValuedMap"
     },
     {
      "params": [],
      "name": "setValuedHashMap",
      "type": "SetValuedMap"
     },
     {
      "params": [
       {
        "name": "setClass",
        "type": "Class"
       }
      ],
      "name": "setValuedHashMap",
      "type": "SetValuedMap"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "DEFAULT_INITIAL_CAPACITY",
      "type": "int"
     },
     {
      "name": "DEFAULT_LOAD_FACTOR",
      "type": "float"
     }
    ],
    "name": "MultiValuedHashMap"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.multimap",
  "classes": []
 },
 {
  "filename": "AbstractMultiValuedMap.java",
  "package_name": "org.apache.commons.collections4.multimap",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsMapping",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "entries",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "get",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "removeMapping",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "keys",
      "type": "MultiSet"
     },
     {
      "params": [],
      "name": "asMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "values",
        "type": "Iterable"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [],
      "name": "createCollection",
      "type": "Collection"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "collectionFactory",
      "type": "Factory"
     },
     {
      "name": "valuesView",
      "type": "Collection"
     },
     {
      "name": "entryValuesView",
      "type": "EntryValues"
     },
     {
      "name": "keysMultiSetView",
      "type": "KeysMultiSet"
     },
     {
      "name": "map",
      "type": "Map"
     }
    ],
    "name": "AbstractMultiValuedMap"
   }
  ]
 },
 {
  "filename": "UnmodifiableMultiValuedMap.java",
  "package_name": "org.apache.commons.collections4.multimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       }
      ],
      "name": "unmodifiableMultiValuedMap",
      "type": "UnmodifiableMultiValuedMap"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "item",
        "type": "Object"
       }
      ],
      "name": "removeMapping",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "get",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "entries",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "keys",
      "type": "MultiSet"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "asMap",
      "type": "Map"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "values",
        "type": "Iterable"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableMultiValuedMap"
   }
  ]
 },
 {
  "filename": "AbstractMultiValuedMapDecorator.java",
  "package_name": "org.apache.commons.collections4.multimap",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "MultiValuedMap"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsMapping",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "get",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "item",
        "type": "Object"
       }
      ],
      "name": "removeMapping",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "entries",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "keys",
      "type": "MultiSet"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "asMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "values",
        "type": "Iterable"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "map",
      "type": "MultiValuedMap"
     }
    ],
    "name": "AbstractMultiValuedMapDecorator"
   }
  ]
 },
 {
  "filename": "AbstractListValuedMap.java",
  "package_name": "org.apache.commons.collections4.multimap",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "createCollection",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "get",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractListValuedMap"
   }
  ]
 },
 {
  "filename": "AbstractSetValuedMap.java",
  "package_name": "org.apache.commons.collections4.multimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "get",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractSetValuedMap"
   }
  ]
 },
 {
  "filename": "TransformedMultiValuedMap.java",
  "package_name": "org.apache.commons.collections4.multimap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingMap",
      "type": "TransformedMultiValuedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedMap",
      "type": "TransformedMultiValuedMap"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "K"
       }
      ],
      "name": "transformKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "V"
       }
      ],
      "name": "transformValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "values",
        "type": "Iterable"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "MultiValuedMap"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "keyTransformer",
      "type": "Transformer"
     },
     {
      "name": "valueTransformer",
      "type": "Transformer"
     }
    ],
    "name": "TransformedMultiValuedMap"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.splitmap",
  "classes": []
 },
 {
  "filename": "AbstractIterableGetMapDecorator.java",
  "package_name": "org.apache.commons.collections4.splitmap",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "map",
      "type": "Map"
     }
    ],
    "name": "AbstractIterableGetMapDecorator"
   }
  ]
 },
 {
  "filename": "TransformedSplitMap.java",
  "package_name": "org.apache.commons.collections4.splitmap",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingMap",
      "type": "TransformedSplitMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "J"
       }
      ],
      "name": "transformKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "U"
       }
      ],
      "name": "transformValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "transformMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "U"
       }
      ],
      "name": "checkSetValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "J"
       },
       {
        "name": "value",
        "type": "U"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "keyTransformer",
      "type": "Transformer"
     },
     {
      "name": "valueTransformer",
      "type": "Transformer"
     }
    ],
    "name": "TransformedSplitMap"
   }
  ]
 },
 {
  "filename": "ComparatorPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       },
       {
        "name": "comparator",
        "type": "Comparator"
       }
      ],
      "name": "comparatorPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       },
       {
        "name": "comparator",
        "type": "Comparator"
       },
       {
        "name": "criterion",
        "type": "Criterion"
       }
      ],
      "name": "comparatorPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "target",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "object",
      "type": "T"
     },
     {
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "name": "criterion",
      "type": "Criterion"
     }
    ],
    "name": "ComparatorPredicate"
   }
  ]
 },
 {
  "filename": "FactoryTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "factory",
        "type": "Factory"
       }
      ],
      "name": "factoryTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "I"
       }
      ],
      "name": "transform",
      "type": "O"
     },
     {
      "params": [],
      "name": "getFactory",
      "type": "Factory"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iFactory",
      "type": "Factory"
     }
    ],
    "name": "FactoryTransformer"
   }
  ]
 },
 {
  "filename": "ExceptionClosure.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "exceptionClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "execute",
      "type": null
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Closure"
     }
    ],
    "name": "ExceptionClosure"
   }
  ]
 },
 {
  "filename": "SwitchTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       },
       {
        "name": "transformers",
        "type": "Transformer"
       },
       {
        "name": "defaultTransformer",
        "type": "Transformer"
       }
      ],
      "name": "switchTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "switchTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "I"
       }
      ],
      "name": "transform",
      "type": "O"
     },
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "getTransformers",
      "type": "Transformer"
     },
     {
      "params": [],
      "name": "getDefaultTransformer",
      "type": "Transformer"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicates",
      "type": "Predicate"
     },
     {
      "name": "iTransformers",
      "type": "Transformer"
     },
     {
      "name": "iDefault",
      "type": "Transformer"
     }
    ],
    "name": "SwitchTransformer"
   }
  ]
 },
 {
  "filename": "OnePredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "onePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Collection"
       }
      ],
      "name": "onePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "OnePredicate"
   }
  ]
 },
 {
  "filename": "ChainedTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "transformers",
        "type": "Transformer"
       }
      ],
      "name": "chainedTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "transformers",
        "type": "Collection"
       }
      ],
      "name": "chainedTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "transform",
      "type": "T"
     },
     {
      "params": [],
      "name": "getTransformers",
      "type": "Transformer"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iTransformers",
      "type": "Transformer"
     }
    ],
    "name": "ChainedTransformer"
   }
  ]
 },
 {
  "filename": "ConstantTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "nullTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "constantToReturn",
        "type": "O"
       }
      ],
      "name": "constantTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "I"
       }
      ],
      "name": "transform",
      "type": "O"
     },
     {
      "params": [],
      "name": "getConstant",
      "type": "O"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "NULL_INSTANCE",
      "type": "Transformer"
     },
     {
      "name": "iConstant",
      "type": "O"
     }
    ],
    "name": "ConstantTransformer"
   }
  ]
 },
 {
  "filename": "NullIsTruePredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "nullIsTruePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicate",
      "type": "Predicate"
     }
    ],
    "name": "NullIsTruePredicate"
   }
  ]
 },
 {
  "filename": "PredicateTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicateTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "T"
       }
      ],
      "name": "transform",
      "type": "Boolean"
     },
     {
      "params": [],
      "name": "getPredicate",
      "type": "Predicate"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicate",
      "type": "Predicate"
     }
    ],
    "name": "PredicateTransformer"
   }
  ]
 },
 {
  "filename": "ExceptionFactory.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "exceptionFactory",
      "type": "Factory"
     },
     {
      "params": [],
      "name": "create",
      "type": "T"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Factory"
     }
    ],
    "name": "ExceptionFactory"
   }
  ]
 },
 {
  "filename": "ExceptionPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "exceptionPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Predicate"
     }
    ],
    "name": "ExceptionPredicate"
   }
  ]
 },
 {
  "filename": "PredicateDecorator.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     }
    ],
    "fields": [],
    "name": "PredicateDecorator"
   }
  ]
 },
 {
  "filename": "InstantiateTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "instantiateTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "paramTypes",
        "type": "Class"
       },
       {
        "name": "args",
        "type": "Object"
       }
      ],
      "name": "instantiateTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "Class"
       }
      ],
      "name": "transform",
      "type": "T"
     }
    ],
    "fields": [
     {
      "name": "NO_ARG_INSTANCE",
      "type": "Transformer"
     },
     {
      "name": "iParamTypes",
      "type": "Class"
     },
     {
      "name": "iArgs",
      "type": "Object"
     }
    ],
    "name": "InstantiateTransformer"
   }
  ]
 },
 {
  "filename": "AllPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "allPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Collection"
       }
      ],
      "name": "allPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AllPredicate"
   }
  ]
 },
 {
  "filename": "AbstractQuantifierPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicates",
      "type": "Predicate"
     }
    ],
    "name": "AbstractQuantifierPredicate"
   }
  ]
 },
 {
  "filename": "CloneTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "cloneTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "T"
       }
      ],
      "name": "transform",
      "type": "T"
     }
    ],
    "fields": [
     {
      "name": "INSTANCE",
      "type": "Transformer"
     }
    ],
    "name": "CloneTransformer"
   }
  ]
 },
 {
  "filename": "StringValueTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "stringValueTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "T"
       }
      ],
      "name": "transform",
      "type": "String"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Transformer"
     }
    ],
    "name": "StringValueTransformer"
   }
  ]
 },
 {
  "filename": "InvokerTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "methodName",
        "type": "String"
       }
      ],
      "name": "invokerTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "methodName",
        "type": "String"
       },
       {
        "name": "paramTypes",
        "type": "Class"
       },
       {
        "name": "args",
        "type": "Object"
       }
      ],
      "name": "invokerTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "Object"
       }
      ],
      "name": "transform",
      "type": "O"
     }
    ],
    "fields": [
     {
      "name": "iMethodName",
      "type": "String"
     },
     {
      "name": "iParamTypes",
      "type": "Class"
     },
     {
      "name": "iArgs",
      "type": "Object"
     }
    ],
    "name": "InvokerTransformer"
   }
  ]
 },
 {
  "filename": "EqualPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "equalPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       },
       {
        "name": "equator",
        "type": "Equator"
       }
      ],
      "name": "equalPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iValue",
      "type": "T"
     },
     {
      "name": "equator",
      "type": "Equator"
     }
    ],
    "name": "EqualPredicate"
   }
  ]
 },
 {
  "filename": "NotPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "notPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicate",
      "type": "Predicate"
     }
    ],
    "name": "NotPredicate"
   }
  ]
 },
 {
  "filename": "OrPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate1",
        "type": "Predicate"
       },
       {
        "name": "predicate2",
        "type": "Predicate"
       }
      ],
      "name": "orPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicate1",
      "type": "Predicate"
     },
     {
      "name": "iPredicate2",
      "type": "Predicate"
     }
    ],
    "name": "OrPredicate"
   }
  ]
 },
 {
  "filename": "TransformedPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "transformer",
        "type": "Transformer"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "transformedPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "getTransformer",
      "type": "Transformer"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iTransformer",
      "type": "Transformer"
     },
     {
      "name": "iPredicate",
      "type": "Predicate"
     }
    ],
    "name": "TransformedPredicate"
   }
  ]
 },
 {
  "filename": "ClosureTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "closureTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "T"
       }
      ],
      "name": "transform",
      "type": "T"
     },
     {
      "params": [],
      "name": "getClosure",
      "type": "Closure"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iClosure",
      "type": "Closure"
     }
    ],
    "name": "ClosureTransformer"
   }
  ]
 },
 {
  "filename": "WhileClosure.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "closure",
        "type": "Closure"
       },
       {
        "name": "doLoop",
        "type": "boolean"
       }
      ],
      "name": "whileClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "execute",
      "type": null
     },
     {
      "params": [],
      "name": "getPredicate",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "getClosure",
      "type": "Closure"
     },
     {
      "params": [],
      "name": "isDoLoop",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "iPredicate",
      "type": "Predicate"
     },
     {
      "name": "iClosure",
      "type": "Closure"
     },
     {
      "name": "iDoLoop",
      "type": "boolean"
     }
    ],
    "name": "WhileClosure"
   }
  ]
 },
 {
  "filename": "PrototypeFactory.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "prototype",
        "type": "T"
       }
      ],
      "name": "prototypeFactory",
      "type": "Factory"
     }
    ],
    "fields": [],
    "name": "PrototypeFactory"
   }
  ]
 },
 {
  "filename": "TruePredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "truePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Predicate"
     }
    ],
    "name": "TruePredicate"
   }
  ]
 },
 {
  "filename": "NOPClosure.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "nopClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "execute",
      "type": null
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Closure"
     }
    ],
    "name": "NOPClosure"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": []
 },
 {
  "filename": "AnyPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "anyPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Collection"
       }
      ],
      "name": "anyPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AnyPredicate"
   }
  ]
 },
 {
  "filename": "ChainedClosure.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "closures",
        "type": "Closure"
       }
      ],
      "name": "chainedClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "closures",
        "type": "Collection"
       }
      ],
      "name": "chainedClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "execute",
      "type": null
     },
     {
      "params": [],
      "name": "getClosures",
      "type": "Closure"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iClosures",
      "type": "Closure"
     }
    ],
    "name": "ChainedClosure"
   }
  ]
 },
 {
  "filename": "NotNullPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "notNullPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Predicate"
     }
    ],
    "name": "NotNullPredicate"
   }
  ]
 },
 {
  "filename": "CatchAndRethrowClosure.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "execute",
      "type": null
     },
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "executeAndThrow",
      "type": null
     }
    ],
    "fields": [],
    "name": "CatchAndRethrowClosure"
   }
  ]
 },
 {
  "filename": "NullIsExceptionPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "nullIsExceptionPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicate",
      "type": "Predicate"
     }
    ],
    "name": "NullIsExceptionPredicate"
   }
  ]
 },
 {
  "filename": "SwitchClosure.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       },
       {
        "name": "closures",
        "type": "Closure"
       },
       {
        "name": "defaultClosure",
        "type": "Closure"
       }
      ],
      "name": "switchClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "predicatesAndClosures",
        "type": "Map"
       }
      ],
      "name": "switchClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "execute",
      "type": null
     },
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "getClosures",
      "type": "Closure"
     },
     {
      "params": [],
      "name": "getDefaultClosure",
      "type": "Closure"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicates",
      "type": "Predicate"
     },
     {
      "name": "iClosures",
      "type": "Closure"
     },
     {
      "name": "iDefault",
      "type": "Closure"
     }
    ],
    "name": "SwitchClosure"
   }
  ]
 },
 {
  "filename": "IdentityPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "identityPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "T"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iValue",
      "type": "T"
     }
    ],
    "name": "IdentityPredicate"
   }
  ]
 },
 {
  "filename": "TransformerClosure.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformerClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "execute",
      "type": null
     },
     {
      "params": [],
      "name": "getTransformer",
      "type": "Transformer"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iTransformer",
      "type": "Transformer"
     }
    ],
    "name": "TransformerClosure"
   }
  ]
 },
 {
  "filename": "MapTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "mapTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "I"
       }
      ],
      "name": "transform",
      "type": "O"
     },
     {
      "params": [],
      "name": "getMap",
      "type": "Map"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iMap",
      "type": "Map"
     }
    ],
    "name": "MapTransformer"
   }
  ]
 },
 {
  "filename": "ConstantFactory.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "constantToReturn",
        "type": "T"
       }
      ],
      "name": "constantFactory",
      "type": "Factory"
     },
     {
      "params": [],
      "name": "create",
      "type": "T"
     },
     {
      "params": [],
      "name": "getConstant",
      "type": "T"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "NULL_INSTANCE",
      "type": "Factory"
     },
     {
      "name": "iConstant",
      "type": "T"
     }
    ],
    "name": "ConstantFactory"
   }
  ]
 },
 {
  "filename": "NonePredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "nonePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Collection"
       }
      ],
      "name": "nonePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "NonePredicate"
   }
  ]
 },
 {
  "filename": "NullPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "nullPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Predicate"
     }
    ],
    "name": "NullPredicate"
   }
  ]
 },
 {
  "filename": "TransformerPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformerPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getTransformer",
      "type": "Transformer"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iTransformer",
      "type": "Transformer"
     }
    ],
    "name": "TransformerPredicate"
   }
  ]
 },
 {
  "filename": "ExceptionTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "exceptionTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "I"
       }
      ],
      "name": "transform",
      "type": "O"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Transformer"
     }
    ],
    "name": "ExceptionTransformer"
   }
  ]
 },
 {
  "filename": "FalsePredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "falsePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Predicate"
     }
    ],
    "name": "FalsePredicate"
   }
  ]
 },
 {
  "filename": "InstanceofPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "type",
        "type": "Class"
       }
      ],
      "name": "instanceOfPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getType",
      "type": "Class"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iType",
      "type": "Class"
     }
    ],
    "name": "InstanceofPredicate"
   }
  ]
 },
 {
  "filename": "UniquePredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "uniquePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iSet",
      "type": "Set"
     }
    ],
    "name": "UniquePredicate"
   }
  ]
 },
 {
  "filename": "AndPredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate1",
        "type": "Predicate"
       },
       {
        "name": "predicate2",
        "type": "Predicate"
       }
      ],
      "name": "andPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicate1",
      "type": "Predicate"
     },
     {
      "name": "iPredicate2",
      "type": "Predicate"
     }
    ],
    "name": "AndPredicate"
   }
  ]
 },
 {
  "filename": "InstantiateFactory.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "classToInstantiate",
        "type": "Class"
       },
       {
        "name": "paramTypes",
        "type": "Class"
       },
       {
        "name": "args",
        "type": "Object"
       }
      ],
      "name": "instantiateFactory",
      "type": "Factory"
     },
     {
      "params": [],
      "name": "findConstructor",
      "type": null
     },
     {
      "params": [],
      "name": "create",
      "type": "T"
     }
    ],
    "fields": [
     {
      "name": "iClassToInstantiate",
      "type": "Class"
     },
     {
      "name": "iParamTypes",
      "type": "Class"
     },
     {
      "name": "iArgs",
      "type": "Object"
     },
     {
      "name": "iConstructor",
      "type": "Constructor"
     }
    ],
    "name": "InstantiateFactory"
   }
  ]
 },
 {
  "filename": "IfTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "trueTransformer",
        "type": "Transformer"
       },
       {
        "name": "falseTransformer",
        "type": "Transformer"
       }
      ],
      "name": "ifTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "trueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "ifTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "I"
       }
      ],
      "name": "transform",
      "type": "O"
     },
     {
      "params": [],
      "name": "getPredicate",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "getTrueTransformer",
      "type": "Transformer"
     },
     {
      "params": [],
      "name": "getFalseTransformer",
      "type": "Transformer"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicate",
      "type": "Predicate"
     },
     {
      "name": "iTrueTransformer",
      "type": "Transformer"
     },
     {
      "name": "iFalseTransformer",
      "type": "Transformer"
     }
    ],
    "name": "IfTransformer"
   }
  ]
 },
 {
  "filename": "NOPTransformer.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "nopTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "T"
       }
      ],
      "name": "transform",
      "type": "T"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "Transformer"
     }
    ],
    "name": "NOPTransformer"
   }
  ]
 },
 {
  "filename": "FunctorUtils.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "copy",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "coerce",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Predicate"
       }
      ],
      "name": "validate",
      "type": null
     },
     {
      "params": [
       {
        "name": "predicates",
        "type": "Collection"
       }
      ],
      "name": "validate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "closures",
        "type": "Closure"
       }
      ],
      "name": "copy",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "closures",
        "type": "Closure"
       }
      ],
      "name": "validate",
      "type": null
     },
     {
      "params": [
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "coerce",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "transformers",
        "type": "Transformer"
       }
      ],
      "name": "copy",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "transformers",
        "type": "Transformer"
       }
      ],
      "name": "validate",
      "type": null
     },
     {
      "params": [
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "coerce",
      "type": "Transformer"
     }
    ],
    "fields": [],
    "name": "FunctorUtils"
   }
  ]
 },
 {
  "filename": "ForClosure.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "count",
        "type": "int"
       },
       {
        "name": "closure",
        "type": "Closure"
       }
      ],
      "name": "forClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "execute",
      "type": null
     },
     {
      "params": [],
      "name": "getClosure",
      "type": "Closure"
     },
     {
      "params": [],
      "name": "getCount",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "iCount",
      "type": "int"
     },
     {
      "name": "iClosure",
      "type": "Closure"
     }
    ],
    "name": "ForClosure"
   }
  ]
 },
 {
  "filename": "DefaultEquator.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "defaultEquator",
      "type": "DefaultEquator"
     },
     {
      "params": [
       {
        "name": "o1",
        "type": "T"
       },
       {
        "name": "o2",
        "type": "T"
       }
      ],
      "name": "equate",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "o",
        "type": "T"
       }
      ],
      "name": "hash",
      "type": "int"
     },
     {
      "params": [],
      "name": "readResolve",
      "type": "Object"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "DefaultEquator"
     },
     {
      "name": "HASHCODE_NULL",
      "type": "int"
     }
    ],
    "name": "DefaultEquator"
   }
  ]
 },
 {
  "filename": "NullIsFalsePredicate.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "nullIsFalsePredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "evaluate",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "getPredicates",
      "type": "Predicate"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicate",
      "type": "Predicate"
     }
    ],
    "name": "NullIsFalsePredicate"
   }
  ]
 },
 {
  "filename": "IfClosure.java",
  "package_name": "org.apache.commons.collections4.functors",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "trueClosure",
        "type": "Closure"
       }
      ],
      "name": "ifClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       },
       {
        "name": "trueClosure",
        "type": "Closure"
       },
       {
        "name": "falseClosure",
        "type": "Closure"
       }
      ],
      "name": "ifClosure",
      "type": "Closure"
     },
     {
      "params": [
       {
        "name": "input",
        "type": "E"
       }
      ],
      "name": "execute",
      "type": null
     },
     {
      "params": [],
      "name": "getPredicate",
      "type": "Predicate"
     },
     {
      "params": [],
      "name": "getTrueClosure",
      "type": "Closure"
     },
     {
      "params": [],
      "name": "getFalseClosure",
      "type": "Closure"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "iPredicate",
      "type": "Predicate"
     },
     {
      "name": "iTrueClosure",
      "type": "Closure"
     },
     {
      "name": "iFalseClosure",
      "type": "Closure"
     }
    ],
    "name": "IfClosure"
   }
  ]
 },
 {
  "filename": "NodeCachingLinkedList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getMaximumCacheSize",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "maximumCacheSize",
        "type": "int"
       }
      ],
      "name": "setMaximumCacheSize",
      "type": null
     },
     {
      "params": [],
      "name": "shrinkCacheToMaximumSize",
      "type": null
     },
     {
      "params": [],
      "name": "getNodeFromCache",
      "type": "Node"
     },
     {
      "params": [],
      "name": "isCacheFull",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       }
      ],
      "name": "addNodeToCache",
      "type": null
     },
     {
      "params": [
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "createNode",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       }
      ],
      "name": "removeNode",
      "type": null
     },
     {
      "params": [],
      "name": "removeAllNodes",
      "type": null
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "DEFAULT_MAXIMUM_CACHE_SIZE",
      "type": "int"
     },
     {
      "name": "firstCachedNode",
      "type": "Node"
     },
     {
      "name": "cacheSize",
      "type": "int"
     },
     {
      "name": "maximumCacheSize",
      "type": "int"
     }
    ],
    "name": "NodeCachingLinkedList"
   }
  ]
 },
 {
  "filename": "TransformedList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingList",
      "type": "TransformedList"
     },
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedList",
      "type": "TransformedList"
     },
     {
      "params": [],
      "name": "getList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "lastIndexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "i",
        "type": "int"
       }
      ],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "set",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       },
       {
        "name": "toIndex",
        "type": "int"
       }
      ],
      "name": "subList",
      "type": "List"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "TransformedList"
   }
  ]
 },
 {
  "filename": "SetUniqueList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "setUniqueList",
      "type": "SetUniqueList"
     },
     {
      "params": [],
      "name": "asSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "set",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       },
       {
        "name": "toIndex",
        "type": "int"
       }
      ],
      "name": "subList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       },
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "createSetBasedOnList",
      "type": "Set"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "set",
      "type": "Set"
     }
    ],
    "name": "SetUniqueList"
   }
  ]
 },
 {
  "filename": "GrowthList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "growthList",
      "type": "GrowthList"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "element",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "element",
        "type": "E"
       }
      ],
      "name": "set",
      "type": "E"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "GrowthList"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": []
 },
 {
  "filename": "UnmodifiableList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "unmodifiableList",
      "type": "List"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "set",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       },
       {
        "name": "toIndex",
        "type": "int"
       }
      ],
      "name": "subList",
      "type": "List"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableList"
   }
  ]
 },
 {
  "filename": "LazyList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "factory",
        "type": "Factory"
       }
      ],
      "name": "lazyList",
      "type": "LazyList"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       },
       {
        "name": "toIndex",
        "type": "int"
       }
      ],
      "name": "subList",
      "type": "List"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "factory",
      "type": "Factory"
     }
    ],
    "name": "LazyList"
   }
  ]
 },
 {
  "filename": "TreeList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       }
      ],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "c",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "set",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "startIndex",
        "type": "int"
       },
       {
        "name": "endIndex",
        "type": "int"
       }
      ],
      "name": "checkInterval",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "root",
      "type": "AVLNode"
     },
     {
      "name": "size",
      "type": "int"
     }
    ],
    "name": "TreeList"
   }
  ]
 },
 {
  "filename": "CursorableLinkedList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "init",
      "type": null
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       }
      ],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [],
      "name": "cursor",
      "type": "CursorableLinkedList"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       }
      ],
      "name": "cursor",
      "type": "CursorableLinkedList"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "updateNode",
      "type": null
     },
     {
      "params": [
       {
        "name": "nodeToInsert",
        "type": "Node"
       },
       {
        "name": "insertBeforeNode",
        "type": "Node"
       }
      ],
      "name": "addNode",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       }
      ],
      "name": "removeNode",
      "type": null
     },
     {
      "params": [],
      "name": "removeAllNodes",
      "type": null
     },
     {
      "params": [
       {
        "name": "cursor",
        "type": "Cursor"
       }
      ],
      "name": "registerCursor",
      "type": null
     },
     {
      "params": [
       {
        "name": "cursor",
        "type": "Cursor"
       }
      ],
      "name": "unregisterCursor",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       }
      ],
      "name": "broadcastNodeChanged",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       }
      ],
      "name": "broadcastNodeRemoved",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       }
      ],
      "name": "broadcastNodeInserted",
      "type": null
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "subList",
        "type": "LinkedSubList"
       },
       {
        "name": "fromIndex",
        "type": "int"
       }
      ],
      "name": "createSubListListIterator",
      "type": "ListIterator"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "cursors",
      "type": "List"
     }
    ],
    "name": "CursorableLinkedList"
   }
  ]
 },
 {
  "filename": "AbstractSerializableListDecorator.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractSerializableListDecorator"
   }
  ]
 },
 {
  "filename": "PredicatedList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedList",
      "type": "PredicatedList"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "lastIndexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "i",
        "type": "int"
       }
      ],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "set",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       },
       {
        "name": "toIndex",
        "type": "int"
       }
      ],
      "name": "subList",
      "type": "List"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PredicatedList"
   }
  ]
 },
 {
  "filename": "AbstractListDecorator.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "lastIndexOf",
      "type": "int"
     },
     {
      "params": [],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "set",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       },
       {
        "name": "toIndex",
        "type": "int"
       }
      ],
      "name": "subList",
      "type": "List"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractListDecorator"
   }
  ]
 },
 {
  "filename": "AbstractLinkedList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "init",
      "type": null
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       }
      ],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "lastIndexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "fromIndexInclusive",
        "type": "int"
       },
       {
        "name": "toIndexExclusive",
        "type": "int"
       }
      ],
      "name": "subList",
      "type": "List"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "set",
      "type": "E"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "getFirst",
      "type": "E"
     },
     {
      "params": [],
      "name": "getLast",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "o",
        "type": "E"
       }
      ],
      "name": "addFirst",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "o",
        "type": "E"
       }
      ],
      "name": "addLast",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "removeFirst",
      "type": "E"
     },
     {
      "params": [],
      "name": "removeLast",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "value1",
        "type": "Object"
       },
       {
        "name": "value2",
        "type": "Object"
       }
      ],
      "name": "isEqualValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "updateNode",
      "type": null
     },
     {
      "params": [],
      "name": "createHeaderNode",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "createNode",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "addNodeBefore",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       },
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "addNodeAfter",
      "type": null
     },
     {
      "params": [
       {
        "name": "nodeToInsert",
        "type": "Node"
       },
       {
        "name": "insertBeforeNode",
        "type": "Node"
       }
      ],
      "name": "addNode",
      "type": null
     },
     {
      "params": [
       {
        "name": "node",
        "type": "Node"
       }
      ],
      "name": "removeNode",
      "type": null
     },
     {
      "params": [],
      "name": "removeAllNodes",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "endMarkerAllowed",
        "type": "boolean"
       }
      ],
      "name": "getNode",
      "type": "Node"
     },
     {
      "params": [
       {
        "name": "subList",
        "type": "LinkedSubList"
       }
      ],
      "name": "createSubListIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "subList",
        "type": "LinkedSubList"
       },
       {
        "name": "fromIndex",
        "type": "int"
       }
      ],
      "name": "createSubListListIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "outputStream",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "doWriteObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "inputStream",
        "type": "ObjectInputStream"
       }
      ],
      "name": "doReadObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "header",
      "type": "Node"
     },
     {
      "name": "size",
      "type": "int"
     },
     {
      "name": "modCount",
      "type": "int"
     }
    ],
    "name": "AbstractLinkedList"
   }
  ]
 },
 {
  "filename": "FixedSizeList.java",
  "package_name": "org.apache.commons.collections4.list",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "list",
        "type": "List"
       }
      ],
      "name": "fixedSizeList",
      "type": "FixedSizeList"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "lastIndexOf",
      "type": "int"
     },
     {
      "params": [],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "listIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "set",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "fromIndex",
        "type": "int"
       },
       {
        "name": "toIndex",
        "type": "int"
       }
      ],
      "name": "subList",
      "type": "List"
     },
     {
      "params": [],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "maxSize",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "FixedSizeList"
   }
  ]
 },
 {
  "filename": "PredicatedQueue.java",
  "package_name": "org.apache.commons.collections4.queue",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "Queue",
        "type": "Queue"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedQueue",
      "type": "PredicatedQueue"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "Queue"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "offer",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "poll",
      "type": "E"
     },
     {
      "params": [],
      "name": "peek",
      "type": "E"
     },
     {
      "params": [],
      "name": "element",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": "E"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PredicatedQueue"
   }
  ]
 },
 {
  "filename": "TransformedQueue.java",
  "package_name": "org.apache.commons.collections4.queue",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "queue",
        "type": "Queue"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingQueue",
      "type": "TransformedQueue"
     },
     {
      "params": [
       {
        "name": "queue",
        "type": "Queue"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedQueue",
      "type": "TransformedQueue"
     },
     {
      "params": [],
      "name": "getQueue",
      "type": "Queue"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "offer",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "poll",
      "type": "E"
     },
     {
      "params": [],
      "name": "peek",
      "type": "E"
     },
     {
      "params": [],
      "name": "element",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": "E"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "TransformedQueue"
   }
  ]
 },
 {
  "filename": "UnmodifiableQueue.java",
  "package_name": "org.apache.commons.collections4.queue",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "queue",
        "type": "Queue"
       }
      ],
      "name": "unmodifiableQueue",
      "type": "Queue"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "offer",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "poll",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": "E"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableQueue"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.queue",
  "classes": []
 },
 {
  "filename": "CircularFifoQueue.java",
  "package_name": "org.apache.commons.collections4.queue",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isAtFullCapacity",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "maxSize",
      "type": "int"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "element",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "element",
        "type": "E"
       }
      ],
      "name": "offer",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "poll",
      "type": "E"
     },
     {
      "params": [],
      "name": "element",
      "type": "E"
     },
     {
      "params": [],
      "name": "peek",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "increment",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "decrement",
      "type": "int"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "elements",
      "type": "E"
     },
     {
      "name": "start",
      "type": "int"
     },
     {
      "name": "end",
      "type": "int"
     },
     {
      "name": "full",
      "type": "boolean"
     },
     {
      "name": "maxElements",
      "type": "int"
     }
    ],
    "name": "CircularFifoQueue"
   }
  ]
 },
 {
  "filename": "AbstractQueueDecorator.java",
  "package_name": "org.apache.commons.collections4.queue",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "Queue"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "offer",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "poll",
      "type": "E"
     },
     {
      "params": [],
      "name": "peek",
      "type": "E"
     },
     {
      "params": [],
      "name": "element",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": "E"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractQueueDecorator"
   }
  ]
 },
 {
  "filename": "BooleanComparator.java",
  "package_name": "org.apache.commons.collections4.comparators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getTrueFirstComparator",
      "type": "BooleanComparator"
     },
     {
      "params": [],
      "name": "getFalseFirstComparator",
      "type": "BooleanComparator"
     },
     {
      "params": [
       {
        "name": "trueFirst",
        "type": "boolean"
       }
      ],
      "name": "booleanComparator",
      "type": "BooleanComparator"
     },
     {
      "params": [
       {
        "name": "b1",
        "type": "Boolean"
       },
       {
        "name": "b2",
        "type": "Boolean"
       }
      ],
      "name": "compare",
      "type": "int"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "sortsTrueFirst",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "TRUE_FIRST",
      "type": "BooleanComparator"
     },
     {
      "name": "FALSE_FIRST",
      "type": "BooleanComparator"
     },
     {
      "name": "trueFirst",
      "type": "boolean"
     }
    ],
    "name": "BooleanComparator"
   }
  ]
 },
 {
  "filename": "NullComparator.java",
  "package_name": "org.apache.commons.collections4.comparators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "o1",
        "type": "E"
       },
       {
        "name": "o2",
        "type": "E"
       }
      ],
      "name": "compare",
      "type": "int"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "nonNullComparator",
      "type": "Comparator"
     },
     {
      "name": "nullsAreHigh",
      "type": "boolean"
     }
    ],
    "name": "NullComparator"
   }
  ]
 },
 {
  "filename": "FixedOrderComparator.java",
  "package_name": "org.apache.commons.collections4.comparators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "isLocked",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "checkLocked",
      "type": null
     },
     {
      "params": [],
      "name": "getUnknownObjectBehavior",
      "type": "UnknownObjectBehavior"
     },
     {
      "params": [
       {
        "name": "unknownObjectBehavior",
        "type": "UnknownObjectBehavior"
       }
      ],
      "name": "setUnknownObjectBehavior",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "T"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "existingObj",
        "type": "T"
       },
       {
        "name": "newObj",
        "type": "T"
       }
      ],
      "name": "addAsEqual",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj1",
        "type": "T"
       },
       {
        "name": "obj2",
        "type": "T"
       }
      ],
      "name": "compare",
      "type": "int"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "map",
      "type": "Map"
     },
     {
      "name": "counter",
      "type": "int"
     },
     {
      "name": "isLocked",
      "type": "boolean"
     },
     {
      "name": "unknownObjectBehavior",
      "type": "UnknownObjectBehavior"
     }
    ],
    "name": "FixedOrderComparator"
   }
  ]
 },
 {
  "filename": "ReverseComparator.java",
  "package_name": "org.apache.commons.collections4.comparators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "obj1",
        "type": "E"
       },
       {
        "name": "obj2",
        "type": "E"
       }
      ],
      "name": "compare",
      "type": "int"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "comparator",
      "type": "Comparator"
     }
    ],
    "name": "ReverseComparator"
   }
  ]
 },
 {
  "filename": "TransformingComparator.java",
  "package_name": "org.apache.commons.collections4.comparators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "obj1",
        "type": "I"
       },
       {
        "name": "obj2",
        "type": "I"
       }
      ],
      "name": "compare",
      "type": "int"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "decorated",
      "type": "Comparator"
     },
     {
      "name": "transformer",
      "type": "Transformer"
     }
    ],
    "name": "TransformingComparator"
   }
  ]
 },
 {
  "filename": "ComparatorChain.java",
  "package_name": "org.apache.commons.collections4.comparators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       }
      ],
      "name": "addComparator",
      "type": null
     },
     {
      "params": [
       {
        "name": "comparator",
        "type": "Comparator"
       },
       {
        "name": "reverse",
        "type": "boolean"
       }
      ],
      "name": "addComparator",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "comparator",
        "type": "Comparator"
       }
      ],
      "name": "setComparator",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "comparator",
        "type": "Comparator"
       },
       {
        "name": "reverse",
        "type": "boolean"
       }
      ],
      "name": "setComparator",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "setForwardSort",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "setReverseSort",
      "type": null
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isLocked",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "checkLocked",
      "type": null
     },
     {
      "params": [],
      "name": "checkChainIntegrity",
      "type": null
     },
     {
      "params": [
       {
        "name": "o1",
        "type": "E"
       },
       {
        "name": "o2",
        "type": "E"
       }
      ],
      "name": "compare",
      "type": "int"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "comparatorChain",
      "type": "List"
     },
     {
      "name": "orderingBits",
      "type": "BitSet"
     },
     {
      "name": "isLocked",
      "type": "boolean"
     }
    ],
    "name": "ComparatorChain"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.comparators",
  "classes": []
 },
 {
  "filename": "ComparableComparator.java",
  "package_name": "org.apache.commons.collections4.comparators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "comparableComparator",
      "type": "ComparableComparator"
     },
     {
      "params": [
       {
        "name": "obj1",
        "type": "E"
       },
       {
        "name": "obj2",
        "type": "E"
       }
      ],
      "name": "compare",
      "type": "int"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "INSTANCE",
      "type": "ComparableComparator"
     }
    ],
    "name": "ComparableComparator"
   }
  ]
 },
 {
  "filename": "IndexedCollection.java",
  "package_name": "org.apache.commons.collections4.collection",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       }
      ],
      "name": "uniqueIndexedCollection",
      "type": "IndexedCollection"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       }
      ],
      "name": "nonUniqueIndexedCollection",
      "type": "IndexedCollection"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "C"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "get",
      "type": "C"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "reindex",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "C"
       }
      ],
      "name": "addToIndex",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "C"
       }
      ],
      "name": "removeFromIndex",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "keyTransformer",
      "type": "Transformer"
     },
     {
      "name": "index",
      "type": "MultiMap"
     },
     {
      "name": "uniqueIndex",
      "type": "boolean"
     }
    ],
    "name": "IndexedCollection"
   }
  ]
 },
 {
  "filename": "CompositeCollection.java",
  "package_name": "org.apache.commons.collections4.collection",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "mutator",
        "type": "CollectionMutator"
       }
      ],
      "name": "setMutator",
      "type": null
     },
     {
      "params": [
       {
        "name": "compositeCollection",
        "type": "Collection"
       }
      ],
      "name": "addComposited",
      "type": null
     },
     {
      "params": [
       {
        "name": "compositeCollection1",
        "type": "Collection"
       },
       {
        "name": "compositeCollection2",
        "type": "Collection"
       }
      ],
      "name": "addComposited",
      "type": null
     },
     {
      "params": [
       {
        "name": "compositeCollections",
        "type": "Collection"
       }
      ],
      "name": "addComposited",
      "type": null
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeComposited",
      "type": null
     },
     {
      "params": [],
      "name": "toCollection",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "getCollections",
      "type": "List"
     },
     {
      "params": [],
      "name": "getMutator",
      "type": "CollectionMutator"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "mutator",
      "type": "CollectionMutator"
     },
     {
      "name": "all",
      "type": "List"
     }
    ],
    "name": "CompositeCollection"
   }
  ]
 },
 {
  "filename": "AbstractCollectionDecorator.java",
  "package_name": "org.apache.commons.collections4.collection",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "setCollection",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "collection",
      "type": "Collection"
     }
    ],
    "name": "AbstractCollectionDecorator"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.collection",
  "classes": []
 },
 {
  "filename": "UnmodifiableBoundedCollection.java",
  "package_name": "org.apache.commons.collections4.collection",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "coll",
        "type": "BoundedCollection"
       }
      ],
      "name": "unmodifiableBoundedCollection",
      "type": "BoundedCollection"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "unmodifiableBoundedCollection",
      "type": "BoundedCollection"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "maxSize",
      "type": "int"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "BoundedCollection"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableBoundedCollection"
   }
  ]
 },
 {
  "filename": "SynchronizedCollection.java",
  "package_name": "org.apache.commons.collections4.collection",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "synchronizedCollection",
      "type": "SynchronizedCollection"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "containsAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "collection",
      "type": "Collection"
     },
     {
      "name": "lock",
      "type": "Object"
     }
    ],
    "name": "SynchronizedCollection"
   }
  ]
 },
 {
  "filename": "UnmodifiableCollection.java",
  "package_name": "org.apache.commons.collections4.collection",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "unmodifiableCollection",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableCollection"
   }
  ]
 },
 {
  "filename": "TransformedCollection.java",
  "package_name": "org.apache.commons.collections4.collection",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingCollection",
      "type": "TransformedCollection"
     },
     {
      "params": [
       {
        "name": "collection",
        "type": "Collection"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedCollection",
      "type": "TransformedCollection"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "transform",
      "type": "E"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "transform",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "transformer",
      "type": "Transformer"
     }
    ],
    "name": "TransformedCollection"
   }
  ]
 },
 {
  "filename": "PredicatedCollection.java",
  "package_name": "org.apache.commons.collections4.collection",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "builder",
      "type": "Builder"
     },
     {
      "params": [],
      "name": "notNullBuilder",
      "type": "Builder"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedCollection",
      "type": "PredicatedCollection"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "validate",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "predicate",
      "type": "Predicate"
     }
    ],
    "name": "PredicatedCollection"
   }
  ]
 },
 {
  "filename": "HashMultiSet.java",
  "package_name": "org.apache.commons.collections4.multiset",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "HashMultiSet"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.multiset",
  "classes": []
 },
 {
  "filename": "AbstractMapMultiSet.java",
  "package_name": "org.apache.commons.collections4.multiset",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getMap",
      "type": "Map"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "setCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "contains",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "occurrences",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "int"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "occurrences",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "createUniqueSetIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "createEntrySetIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "doWriteObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "doReadObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "map",
      "type": "Map"
     },
     {
      "name": "size",
      "type": "int"
     },
     {
      "name": "modCount",
      "type": "int"
     },
     {
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "name": "entrySet",
      "type": "Set"
     }
    ],
    "name": "AbstractMapMultiSet"
   }
  ]
 },
 {
  "filename": "AbstractMultiSetDecorator.java",
  "package_name": "org.apache.commons.collections4.multiset",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "MultiSet"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "setCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "int"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "AbstractMultiSetDecorator"
   }
  ]
 },
 {
  "filename": "PredicatedMultiSet.java",
  "package_name": "org.apache.commons.collections4.multiset",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "multiset",
        "type": "MultiSet"
       },
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedMultiSet",
      "type": "PredicatedMultiSet"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "MultiSet"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "setCount",
      "type": "int"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PredicatedMultiSet"
   }
  ]
 },
 {
  "filename": "SynchronizedMultiSet.java",
  "package_name": "org.apache.commons.collections4.multiset",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "multiset",
        "type": "MultiSet"
       }
      ],
      "name": "synchronizedBag",
      "type": "SynchronizedMultiSet"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "MultiSet"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "getCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "setCount",
      "type": "int"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "SynchronizedMultiSet"
   }
  ]
 },
 {
  "filename": "UnmodifiableMultiSet.java",
  "package_name": "org.apache.commons.collections4.multiset",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "multiset",
        "type": "MultiSet"
       }
      ],
      "name": "unmodifiableMultiSet",
      "type": "MultiSet"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "setCount",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "E"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "add",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       },
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "int"
     },
     {
      "params": [],
      "name": "uniqueSet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableMultiSet"
   }
  ]
 },
 {
  "filename": "UnmodifiableMapIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "iterator",
        "type": "MapIterator"
       }
      ],
      "name": "unmodifiableMapIterator",
      "type": "MapIterator"
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "K"
     },
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "MapIterator"
     }
    ],
    "name": "UnmodifiableMapIterator"
   }
  ]
 },
 {
  "filename": "SingletonListIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "beforeFirst",
      "type": "boolean"
     },
     {
      "name": "nextCalled",
      "type": "boolean"
     },
     {
      "name": "removed",
      "type": "boolean"
     },
     {
      "name": "object",
      "type": "E"
     }
    ],
    "name": "SingletonListIterator"
   }
  ]
 },
 {
  "filename": "IteratorChain.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "addIterator",
      "type": null
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isLocked",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "checkLocked",
      "type": null
     },
     {
      "params": [],
      "name": "lockChain",
      "type": null
     },
     {
      "params": [],
      "name": "updateCurrentIterator",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iteratorChain",
      "type": "Queue"
     },
     {
      "name": "currentIterator",
      "type": "Iterator"
     },
     {
      "name": "lastUsedIterator",
      "type": "Iterator"
     },
     {
      "name": "isLocked",
      "type": "boolean"
     }
    ],
    "name": "IteratorChain"
   }
  ]
 },
 {
  "filename": "EmptyIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "resettableEmptyIterator",
      "type": "ResettableIterator"
     },
     {
      "params": [],
      "name": "emptyIterator",
      "type": "Iterator"
     }
    ],
    "fields": [
     {
      "name": "RESETTABLE_INSTANCE",
      "type": "ResettableIterator"
     },
     {
      "name": "INSTANCE",
      "type": "Iterator"
     }
    ],
    "name": "EmptyIterator"
   }
  ]
 },
 {
  "filename": "UniqueFilterIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [],
    "fields": [],
    "name": "UniqueFilterIterator"
   }
  ]
 },
 {
  "filename": "FilterListIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "o",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [
       {
        "name": "o",
        "type": "E"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [],
      "name": "getListIterator",
      "type": "ListIterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "ListIterator"
       }
      ],
      "name": "setListIterator",
      "type": null
     },
     {
      "params": [],
      "name": "getPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "setPredicate",
      "type": null
     },
     {
      "params": [],
      "name": "clearNextObject",
      "type": null
     },
     {
      "params": [],
      "name": "setNextObject",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clearPreviousObject",
      "type": null
     },
     {
      "params": [],
      "name": "setPreviousObject",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "ListIterator"
     },
     {
      "name": "predicate",
      "type": "Predicate"
     },
     {
      "name": "nextObject",
      "type": "E"
     },
     {
      "name": "nextObjectSet",
      "type": "boolean"
     },
     {
      "name": "previousObject",
      "type": "E"
     },
     {
      "name": "previousObjectSet",
      "type": "boolean"
     },
     {
      "name": "nextIndex",
      "type": "int"
     }
    ],
    "name": "FilterListIterator"
   }
  ]
 },
 {
  "filename": "AbstractEmptyIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [],
    "name": "AbstractEmptyIterator"
   }
  ]
 },
 {
  "filename": "ArrayListIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "o",
        "type": "Object"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "o",
        "type": "Object"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "lastItemIndex",
      "type": "int"
     }
    ],
    "name": "ArrayListIterator"
   }
  ]
 },
 {
  "filename": "ObjectArrayListIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "lastItemIndex",
      "type": "int"
     }
    ],
    "name": "ObjectArrayListIterator"
   }
  ]
 },
 {
  "filename": "UnmodifiableIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "unmodifiableIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "Iterator"
     }
    ],
    "name": "UnmodifiableIterator"
   }
  ]
 },
 {
  "filename": "PushbackIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "pushbackIterator",
      "type": "PushbackIterator"
     },
     {
      "params": [
       {
        "name": "item",
        "type": "E"
       }
      ],
      "name": "pushback",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "name": "items",
      "type": "Deque"
     }
    ],
    "name": "PushbackIterator"
   }
  ]
 },
 {
  "filename": "UnmodifiableListIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "iterator",
        "type": "ListIterator"
       }
      ],
      "name": "umodifiableListIterator",
      "type": "ListIterator"
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "ListIterator"
     }
    ],
    "name": "UnmodifiableListIterator"
   }
  ]
 },
 {
  "filename": "ArrayIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "bound",
        "type": "int"
       },
       {
        "name": "len",
        "type": "int"
       },
       {
        "name": "type",
        "type": "String"
       }
      ],
      "name": "checkBound",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "getArray",
      "type": "Object"
     },
     {
      "params": [],
      "name": "getStartIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "getEndIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "array",
      "type": "Object"
     },
     {
      "name": "startIndex",
      "type": "int"
     },
     {
      "name": "endIndex",
      "type": "int"
     },
     {
      "name": "index",
      "type": "int"
     }
    ],
    "name": "ArrayIterator"
   }
  ]
 },
 {
  "filename": "FilterIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "getIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "setIterator",
      "type": null
     },
     {
      "params": [],
      "name": "getPredicate",
      "type": "Predicate"
     },
     {
      "params": [
       {
        "name": "predicate",
        "type": "Predicate"
       }
      ],
      "name": "setPredicate",
      "type": null
     },
     {
      "params": [],
      "name": "setNextObject",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "name": "predicate",
      "type": "Predicate"
     },
     {
      "name": "nextObject",
      "type": "E"
     },
     {
      "name": "nextObjectSet",
      "type": "boolean"
     }
    ],
    "name": "FilterIterator"
   }
  ]
 },
 {
  "filename": "ReverseListIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "list",
      "type": "List"
     },
     {
      "name": "iterator",
      "type": "ListIterator"
     },
     {
      "name": "validForUpdate",
      "type": "boolean"
     }
    ],
    "name": "ReverseListIterator"
   }
  ]
 },
 {
  "filename": "EmptyListIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "resettableEmptyListIterator",
      "type": "ResettableListIterator"
     },
     {
      "params": [],
      "name": "emptyListIterator",
      "type": "ListIterator"
     }
    ],
    "fields": [
     {
      "name": "RESETTABLE_INSTANCE",
      "type": "ResettableListIterator"
     },
     {
      "name": "INSTANCE",
      "type": "ListIterator"
     }
    ],
    "name": "EmptyListIterator"
   }
  ]
 },
 {
  "filename": "EntrySetMapIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "K"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "map",
      "type": "Map"
     },
     {
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "name": "last",
      "type": "Map"
     },
     {
      "name": "canRemove",
      "type": "boolean"
     }
    ],
    "name": "EntrySetMapIterator"
   }
  ]
 },
 {
  "filename": "IteratorIterable.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "createTypesafeIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "name": "typeSafeIterator",
      "type": "Iterator"
     }
    ],
    "name": "IteratorIterable"
   }
  ]
 },
 {
  "filename": "EmptyOrderedMapIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "emptyOrderedMapIterator",
      "type": "OrderedMapIterator"
     }
    ],
    "fields": [
     {
      "name": "INSTANCE",
      "type": "OrderedMapIterator"
     }
    ],
    "name": "EmptyOrderedMapIterator"
   }
  ]
 },
 {
  "filename": "EmptyMapIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "emptyMapIterator",
      "type": "MapIterator"
     }
    ],
    "fields": [
     {
      "name": "INSTANCE",
      "type": "MapIterator"
     }
    ],
    "name": "EmptyMapIterator"
   }
  ]
 },
 {
  "filename": "AbstractEmptyMapIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     }
    ],
    "fields": [],
    "name": "AbstractEmptyMapIterator"
   }
  ]
 },
 {
  "filename": "AbstractIteratorDecorator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "next",
      "type": "E"
     }
    ],
    "fields": [],
    "name": "AbstractIteratorDecorator"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": []
 },
 {
  "filename": "IteratorEnumeration.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasMoreElements",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "nextElement",
      "type": "E"
     },
     {
      "params": [],
      "name": "getIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "setIterator",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "Iterator"
     }
    ],
    "name": "IteratorEnumeration"
   }
  ]
 },
 {
  "filename": "UnmodifiableOrderedMapIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "iterator",
        "type": "OrderedMapIterator"
       }
      ],
      "name": "unmodifiableOrderedMapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "K"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "K"
     },
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "OrderedMapIterator"
     }
    ],
    "name": "UnmodifiableOrderedMapIterator"
   }
  ]
 },
 {
  "filename": "BoundedIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "init",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "checkBounds",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "name": "offset",
      "type": "long"
     },
     {
      "name": "max",
      "type": "long"
     },
     {
      "name": "pos",
      "type": "long"
     }
    ],
    "name": "BoundedIterator"
   }
  ]
 },
 {
  "filename": "ListIteratorWrapper.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "UNSUPPORTED_OPERATION_MESSAGE",
      "type": "String"
     },
     {
      "name": "CANNOT_REMOVE_MESSAGE",
      "type": "String"
     },
     {
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "name": "list",
      "type": "List"
     },
     {
      "name": "currentIndex",
      "type": "int"
     },
     {
      "name": "wrappedIteratorIndex",
      "type": "int"
     },
     {
      "name": "removeState",
      "type": "boolean"
     }
    ],
    "name": "ListIteratorWrapper"
   }
  ]
 },
 {
  "filename": "LoopingIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "collection",
      "type": "Collection"
     },
     {
      "name": "iterator",
      "type": "Iterator"
     }
    ],
    "name": "LoopingIterator"
   }
  ]
 },
 {
  "filename": "EnumerationIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "getEnumeration",
      "type": "Enumeration"
     },
     {
      "params": [
       {
        "name": "enumeration",
        "type": "Enumeration"
       }
      ],
      "name": "setEnumeration",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "collection",
      "type": "Collection"
     },
     {
      "name": "enumeration",
      "type": "Enumeration"
     },
     {
      "name": "last",
      "type": "E"
     }
    ],
    "name": "EnumerationIterator"
   }
  ]
 },
 {
  "filename": "SingletonIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "removeAllowed",
      "type": "boolean"
     },
     {
      "name": "beforeFirst",
      "type": "boolean"
     },
     {
      "name": "removed",
      "type": "boolean"
     },
     {
      "name": "object",
      "type": "E"
     }
    ],
    "name": "SingletonIterator"
   }
  ]
 },
 {
  "filename": "CollatingIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "addIterator",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "setIterator",
      "type": null
     },
     {
      "params": [],
      "name": "getIterators",
      "type": "List"
     },
     {
      "params": [],
      "name": "getComparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "comp",
        "type": "Comparator"
       }
      ],
      "name": "setComparator",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "getIteratorIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "start",
      "type": null
     },
     {
      "params": [
       {
        "name": "i",
        "type": "int"
       }
      ],
      "name": "set",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "i",
        "type": "int"
       }
      ],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "checkNotStarted",
      "type": null
     },
     {
      "params": [],
      "name": "least",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "set",
        "type": "BitSet"
       }
      ],
      "name": "anyValueSet",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "iters",
        "type": "List"
       }
      ],
      "name": "anyHasNext",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "name": "iterators",
      "type": "List"
     },
     {
      "name": "values",
      "type": "List"
     },
     {
      "name": "valueSet",
      "type": "BitSet"
     },
     {
      "name": "lastReturned",
      "type": "int"
     }
    ],
    "name": "CollatingIterator"
   }
  ]
 },
 {
  "filename": "AbstractListIteratorDecorator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getListIterator",
      "type": "ListIterator"
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "ListIterator"
     }
    ],
    "name": "AbstractListIteratorDecorator"
   }
  ]
 },
 {
  "filename": "LazyIteratorChain.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "count",
        "type": "int"
       }
      ],
      "name": "nextIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "updateCurrentIterator",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "callCounter",
      "type": "int"
     },
     {
      "name": "chainExhausted",
      "type": "boolean"
     },
     {
      "name": "currentIterator",
      "type": "Iterator"
     },
     {
      "name": "lastUsedIterator",
      "type": "Iterator"
     }
    ],
    "name": "LazyIteratorChain"
   }
  ]
 },
 {
  "filename": "ZippingIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterators",
      "type": "Iterator"
     },
     {
      "name": "nextIterator",
      "type": "Iterator"
     },
     {
      "name": "lastReturned",
      "type": "Iterator"
     }
    ],
    "name": "ZippingIterator"
   }
  ]
 },
 {
  "filename": "TransformIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "O"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "getIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "setIterator",
      "type": null
     },
     {
      "params": [],
      "name": "getTransformer",
      "type": "Transformer"
     },
     {
      "params": [
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "setTransformer",
      "type": null
     },
     {
      "params": [
       {
        "name": "source",
        "type": "I"
       }
      ],
      "name": "transform",
      "type": "O"
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "name": "transformer",
      "type": "Transformer"
     }
    ],
    "name": "TransformIterator"
   }
  ]
 },
 {
  "filename": "ObjectGraphIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "updateCurrentIterator",
      "type": null
     },
     {
      "params": [
       {
        "name": "value",
        "type": "E"
       }
      ],
      "name": "findNext",
      "type": null
     },
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "findNextByIterator",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "stack",
      "type": "Deque"
     },
     {
      "name": "root",
      "type": "E"
     },
     {
      "name": "transformer",
      "type": "Transformer"
     },
     {
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "name": "currentIterator",
      "type": "Iterator"
     },
     {
      "name": "currentValue",
      "type": "E"
     },
     {
      "name": "lastUsedIterator",
      "type": "Iterator"
     }
    ],
    "name": "ObjectGraphIterator"
   }
  ]
 },
 {
  "filename": "PermutationIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "List"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "keys",
      "type": "int"
     },
     {
      "name": "objectMap",
      "type": "Map"
     },
     {
      "name": "direction",
      "type": "boolean"
     },
     {
      "name": "nextPermutation",
      "type": "List"
     }
    ],
    "name": "PermutationIterator"
   }
  ]
 },
 {
  "filename": "ObjectArrayIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "getArray",
      "type": "E"
     },
     {
      "params": [],
      "name": "getStartIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "getEndIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "array",
      "type": "E"
     },
     {
      "name": "startIndex",
      "type": "int"
     },
     {
      "name": "endIndex",
      "type": "int"
     },
     {
      "name": "index",
      "type": "int"
     }
    ],
    "name": "ObjectArrayIterator"
   }
  ]
 },
 {
  "filename": "AbstractOrderedMapIteratorDecorator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getOrderedMapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "K"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "K"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "OrderedMapIterator"
     }
    ],
    "name": "AbstractOrderedMapIteratorDecorator"
   }
  ]
 },
 {
  "filename": "LoopingListIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "nextIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "hasPrevious",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "previous",
      "type": "E"
     },
     {
      "params": [],
      "name": "previousIndex",
      "type": "int"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "add",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "E"
       }
      ],
      "name": "set",
      "type": null
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     },
     {
      "params": [],
      "name": "_reset",
      "type": null
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "list",
      "type": "List"
     },
     {
      "name": "iterator",
      "type": "ListIterator"
     }
    ],
    "name": "LoopingListIterator"
   }
  ]
 },
 {
  "filename": "EmptyOrderedIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "emptyOrderedIterator",
      "type": "OrderedIterator"
     }
    ],
    "fields": [
     {
      "name": "INSTANCE",
      "type": "OrderedIterator"
     }
    ],
    "name": "EmptyOrderedIterator"
   }
  ]
 },
 {
  "filename": "AbstractUntypedIteratorDecorator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "Iterator"
     }
    ],
    "name": "AbstractUntypedIteratorDecorator"
   }
  ]
 },
 {
  "filename": "PeekingIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "iterator",
        "type": "Iterator"
       }
      ],
      "name": "peekingIterator",
      "type": "PeekingIterator"
     },
     {
      "params": [],
      "name": "fill",
      "type": null
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "peek",
      "type": "E"
     },
     {
      "params": [],
      "name": "element",
      "type": "E"
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "name": "exhausted",
      "type": "boolean"
     },
     {
      "name": "slotFilled",
      "type": "boolean"
     },
     {
      "name": "slot",
      "type": "E"
     }
    ],
    "name": "PeekingIterator"
   }
  ]
 },
 {
  "filename": "SkippingIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "init",
      "type": null
     },
     {
      "params": [],
      "name": "next",
      "type": "E"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "offset",
      "type": "long"
     },
     {
      "name": "pos",
      "type": "long"
     }
    ],
    "name": "SkippingIterator"
   }
  ]
 },
 {
  "filename": "NodeListIterator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "Node"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "nodeList",
      "type": "NodeList"
     },
     {
      "name": "index",
      "type": "int"
     }
    ],
    "name": "NodeListIterator"
   }
  ]
 },
 {
  "filename": "AbstractMapIteratorDecorator.java",
  "package_name": "org.apache.commons.collections4.iterators",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getMapIterator",
      "type": "MapIterator"
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "K"
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     }
    ],
    "fields": [
     {
      "name": "iterator",
      "type": "MapIterator"
     }
    ],
    "name": "AbstractMapIteratorDecorator"
   }
  ]
 },
 {
  "filename": "HashedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "clone",
      "type": "HashedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "HashedMap"
   }
  ]
 },
 {
  "filename": "LazyMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "factory",
        "type": "Factory"
       }
      ],
      "name": "lazyMap",
      "type": "LazyMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "factory",
        "type": "Transformer"
       }
      ],
      "name": "lazyMap",
      "type": "LazyMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "factory",
      "type": "Transformer"
     }
    ],
    "name": "LazyMap"
   }
  ]
 },
 {
  "filename": "AbstractHashedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "init",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "_putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "convertKey",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "hash",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       }
      ],
      "name": "isEqualKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value1",
        "type": "Object"
       },
       {
        "name": "value2",
        "type": "Object"
       }
      ],
      "name": "isEqualValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "hashCode",
        "type": "int"
       },
       {
        "name": "dataSize",
        "type": "int"
       }
      ],
      "name": "hashIndex",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "getEntry",
      "type": "HashEntry"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       },
       {
        "name": "newValue",
        "type": "V"
       }
      ],
      "name": "updateEntry",
      "type": null
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       },
       {
        "name": "hashIndex",
        "type": "int"
       },
       {
        "name": "hashCode",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "reuseEntry",
      "type": null
     },
     {
      "params": [
       {
        "name": "hashIndex",
        "type": "int"
       },
       {
        "name": "hashCode",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "addMapping",
      "type": null
     },
     {
      "params": [
       {
        "name": "next",
        "type": "HashEntry"
       },
       {
        "name": "hashCode",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "createEntry",
      "type": "HashEntry"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       },
       {
        "name": "hashIndex",
        "type": "int"
       }
      ],
      "name": "addEntry",
      "type": null
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       },
       {
        "name": "hashIndex",
        "type": "int"
       },
       {
        "name": "previous",
        "type": "HashEntry"
       }
      ],
      "name": "removeMapping",
      "type": null
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       },
       {
        "name": "hashIndex",
        "type": "int"
       },
       {
        "name": "previous",
        "type": "HashEntry"
       }
      ],
      "name": "removeEntry",
      "type": null
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       }
      ],
      "name": "destroyEntry",
      "type": null
     },
     {
      "params": [],
      "name": "checkCapacity",
      "type": null
     },
     {
      "params": [
       {
        "name": "newCapacity",
        "type": "int"
       }
      ],
      "name": "ensureCapacity",
      "type": null
     },
     {
      "params": [
       {
        "name": "proposedCapacity",
        "type": "int"
       }
      ],
      "name": "calculateNewCapacity",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "newCapacity",
        "type": "int"
       },
       {
        "name": "factor",
        "type": "float"
       }
      ],
      "name": "calculateThreshold",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       }
      ],
      "name": "entryNext",
      "type": "HashEntry"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       }
      ],
      "name": "entryHashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       }
      ],
      "name": "entryKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       }
      ],
      "name": "entryValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "createEntrySetIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "createKeySetIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "createValuesIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "doWriteObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "doReadObject",
      "type": null
     },
     {
      "params": [],
      "name": "clone",
      "type": "AbstractHashedMap"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "NO_NEXT_ENTRY",
      "type": "String"
     },
     {
      "name": "NO_PREVIOUS_ENTRY",
      "type": "String"
     },
     {
      "name": "REMOVE_INVALID",
      "type": "String"
     },
     {
      "name": "GETKEY_INVALID",
      "type": "String"
     },
     {
      "name": "GETVALUE_INVALID",
      "type": "String"
     },
     {
      "name": "SETVALUE_INVALID",
      "type": "String"
     },
     {
      "name": "DEFAULT_CAPACITY",
      "type": "int"
     },
     {
      "name": "DEFAULT_THRESHOLD",
      "type": "int"
     },
     {
      "name": "DEFAULT_LOAD_FACTOR",
      "type": "float"
     },
     {
      "name": "MAXIMUM_CAPACITY",
      "type": "int"
     },
     {
      "name": "NULL",
      "type": "Object"
     },
     {
      "name": "loadFactor",
      "type": "float"
     },
     {
      "name": "size",
      "type": "int"
     },
     {
      "name": "data",
      "type": "HashEntry"
     },
     {
      "name": "threshold",
      "type": "int"
     },
     {
      "name": "modCount",
      "type": "int"
     },
     {
      "name": "entrySet",
      "type": "EntrySet"
     },
     {
      "name": "keySet",
      "type": "KeySet"
     },
     {
      "name": "values",
      "type": "Values"
     }
    ],
    "name": "AbstractHashedMap"
   }
  ]
 },
 {
  "filename": "SingletonMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "maxSize",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "isEqualKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "isEqualValue",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clone",
      "type": "SingletonMap"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "key",
      "type": "K"
     },
     {
      "name": "value",
      "type": "V"
     }
    ],
    "name": "SingletonMap"
   }
  ]
 },
 {
  "filename": "ReferenceMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "ReferenceMap"
   }
  ]
 },
 {
  "filename": "TransformedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingMap",
      "type": "TransformedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedMap",
      "type": "TransformedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "K"
       }
      ],
      "name": "transformKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "V"
       }
      ],
      "name": "transformValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "transformMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "checkSetValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "isSetValueChecking",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "keyTransformer",
      "type": "Transformer"
     },
     {
      "name": "valueTransformer",
      "type": "Transformer"
     }
    ],
    "name": "TransformedMap"
   }
  ]
 },
 {
  "filename": "AbstractMapDecorator.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "Map"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "map",
      "type": "Map"
     }
    ],
    "name": "AbstractMapDecorator"
   }
  ]
 },
 {
  "filename": "ReferenceIdentityMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "hash",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "hashEntry",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       }
      ],
      "name": "isEqualKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value1",
        "type": "Object"
       },
       {
        "name": "value2",
        "type": "Object"
       }
      ],
      "name": "isEqualValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "ReferenceIdentityMap"
   }
  ]
 },
 {
  "filename": "StaticBucketMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "getHash",
      "type": "int"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "r",
        "type": "Runnable"
       }
      ],
      "name": "atomic",
      "type": null
     },
     {
      "params": [
       {
        "name": "r",
        "type": "Runnable"
       },
       {
        "name": "bucket",
        "type": "int"
       }
      ],
      "name": "atomic",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "DEFAULT_BUCKETS",
      "type": "int"
     },
     {
      "name": "buckets",
      "type": "Node"
     },
     {
      "name": "locks",
      "type": "Lock"
     }
    ],
    "name": "StaticBucketMap"
   }
  ]
 },
 {
  "filename": "AbstractSortedMapDecorator.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "SortedMap"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     }
    ],
    "fields": [],
    "name": "AbstractSortedMapDecorator"
   }
  ]
 },
 {
  "filename": "AbstractIterableMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     }
    ],
    "fields": [],
    "name": "AbstractIterableMap"
   }
  ]
 },
 {
  "filename": "AbstractInputCheckedMapDecorator.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "checkSetValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "isSetValueChecking",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     }
    ],
    "fields": [],
    "name": "AbstractInputCheckedMapDecorator"
   }
  ]
 },
 {
  "filename": "PassiveExpiringMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "timeToLive",
        "type": "long"
       },
       {
        "name": "timeUnit",
        "type": "TimeUnit"
       }
      ],
      "name": "validateAndConvertToMillis",
      "type": "long"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "now",
        "type": "long"
       },
       {
        "name": "expirationTimeObject",
        "type": "Long"
       }
      ],
      "name": "isExpired",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "now",
      "type": "long"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "now",
        "type": "long"
       }
      ],
      "name": "removeAllExpired",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "now",
        "type": "long"
       }
      ],
      "name": "removeIfExpired",
      "type": null
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "expirationMap",
      "type": "Map"
     },
     {
      "name": "expiringPolicy",
      "type": "ExpirationPolicy"
     }
    ],
    "name": "PassiveExpiringMap"
   }
  ]
 },
 {
  "filename": "UnmodifiableOrderedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "OrderedMap"
       }
      ],
      "name": "unmodifiableOrderedMap",
      "type": "OrderedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableOrderedMap"
   }
  ]
 },
 {
  "filename": "UnmodifiableSortedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       }
      ],
      "name": "unmodifiableSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableSortedMap"
   }
  ]
 },
 {
  "filename": "UnmodifiableEntrySet.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "set",
        "type": "Set"
       }
      ],
      "name": "unmodifiableEntrySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Map"
       }
      ],
      "name": "add",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "addAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "object",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "coll",
        "type": "Collection"
       }
      ],
      "name": "retainAll",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "toArray",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "array",
        "type": "T"
       }
      ],
      "name": "toArray",
      "type": "T"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableEntrySet"
   }
  ]
 },
 {
  "filename": "LazySortedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       },
       {
        "name": "factory",
        "type": "Factory"
       }
      ],
      "name": "lazySortedMap",
      "type": "LazySortedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       },
       {
        "name": "factory",
        "type": "Transformer"
       }
      ],
      "name": "lazySortedMap",
      "type": "LazySortedMap"
     },
     {
      "params": [],
      "name": "getSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "LazySortedMap"
   }
  ]
 },
 {
  "filename": "DefaultedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "defaultValue",
        "type": "V"
       }
      ],
      "name": "defaultedMap",
      "type": "DefaultedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "factory",
        "type": "Factory"
       }
      ],
      "name": "defaultedMap",
      "type": "DefaultedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "transformer",
        "type": "Transformer"
       }
      ],
      "name": "defaultedMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "value",
      "type": "Transformer"
     }
    ],
    "name": "DefaultedMap"
   }
  ]
 },
 {
  "filename": "MultiKeyMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "AbstractHashedMap"
       }
      ],
      "name": "multiKeyMap",
      "type": "MultiKeyMap"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "K"
       },
       {
        "name": "key2",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       }
      ],
      "name": "removeMultiKey",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       }
      ],
      "name": "hash",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "AbstractHashedMap"
       },
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       }
      ],
      "name": "isEqualKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "K"
       },
       {
        "name": "key2",
        "type": "K"
       },
       {
        "name": "key3",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       }
      ],
      "name": "removeMultiKey",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       }
      ],
      "name": "hash",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "AbstractHashedMap"
       },
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       }
      ],
      "name": "isEqualKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "K"
       },
       {
        "name": "key2",
        "type": "K"
       },
       {
        "name": "key3",
        "type": "K"
       },
       {
        "name": "key4",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       }
      ],
      "name": "removeMultiKey",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       }
      ],
      "name": "hash",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "AbstractHashedMap"
       },
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       }
      ],
      "name": "isEqualKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       },
       {
        "name": "key5",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       },
       {
        "name": "key5",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "K"
       },
       {
        "name": "key2",
        "type": "K"
       },
       {
        "name": "key3",
        "type": "K"
       },
       {
        "name": "key4",
        "type": "K"
       },
       {
        "name": "key5",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       },
       {
        "name": "key5",
        "type": "Object"
       }
      ],
      "name": "removeMultiKey",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       },
       {
        "name": "key5",
        "type": "Object"
       }
      ],
      "name": "hash",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "AbstractHashedMap"
       },
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       },
       {
        "name": "key5",
        "type": "Object"
       }
      ],
      "name": "isEqualKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       },
       {
        "name": "key3",
        "type": "Object"
       },
       {
        "name": "key4",
        "type": "Object"
       }
      ],
      "name": "removeAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "MultiKey"
       }
      ],
      "name": "checkKey",
      "type": null
     },
     {
      "params": [],
      "name": "clone",
      "type": "MultiKeyMap"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "MultiKey"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [],
      "name": "decorated",
      "type": "AbstractHashedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "MultiKeyMap"
   }
  ]
 },
 {
  "filename": "EntrySetToMapIteratorAdapter.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "getKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "hasNext",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "next",
      "type": "K"
     },
     {
      "params": [],
      "name": "reset",
      "type": null
     },
     {
      "params": [],
      "name": "remove",
      "type": null
     },
     {
      "params": [],
      "name": "current",
      "type": "Map"
     }
    ],
    "fields": [
     {
      "name": "entrySet",
      "type": "Set"
     },
     {
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "name": "entry",
      "type": "Map"
     }
    ],
    "name": "EntrySetToMapIteratorAdapter"
   }
  ]
 },
 {
  "filename": "package-info.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": []
 },
 {
  "filename": "AbstractLinkedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "init",
      "type": null
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "getEntry",
      "type": "LinkEntry"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "getEntry",
      "type": "LinkEntry"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       },
       {
        "name": "hashIndex",
        "type": "int"
       }
      ],
      "name": "addEntry",
      "type": null
     },
     {
      "params": [
       {
        "name": "next",
        "type": "HashEntry"
       },
       {
        "name": "hashCode",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "createEntry",
      "type": "LinkEntry"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       },
       {
        "name": "hashIndex",
        "type": "int"
       },
       {
        "name": "previous",
        "type": "HashEntry"
       }
      ],
      "name": "removeEntry",
      "type": null
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "LinkEntry"
       }
      ],
      "name": "entryBefore",
      "type": "LinkEntry"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "LinkEntry"
       }
      ],
      "name": "entryAfter",
      "type": "LinkEntry"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "createEntrySetIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "createKeySetIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "createValuesIterator",
      "type": "Iterator"
     }
    ],
    "fields": [
     {
      "name": "header",
      "type": "LinkEntry"
     }
    ],
    "name": "AbstractLinkedMap"
   }
  ]
 },
 {
  "filename": "TransformedSortedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformingSortedMap",
      "type": "TransformedSortedMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       },
       {
        "name": "keyTransformer",
        "type": "Transformer"
       },
       {
        "name": "valueTransformer",
        "type": "Transformer"
       }
      ],
      "name": "transformedSortedMap",
      "type": "TransformedSortedMap"
     },
     {
      "params": [],
      "name": "getSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "TransformedSortedMap"
   }
  ]
 },
 {
  "filename": "AbstractReferenceMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "init",
      "type": null
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "purgeBeforeRead",
      "type": null
     },
     {
      "params": [],
      "name": "purgeBeforeWrite",
      "type": null
     },
     {
      "params": [],
      "name": "purge",
      "type": null
     },
     {
      "params": [
       {
        "name": "ref",
        "type": "Reference"
       }
      ],
      "name": "purge",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "getEntry",
      "type": "HashEntry"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "hashEntry",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key1",
        "type": "Object"
       },
       {
        "name": "key2",
        "type": "Object"
       }
      ],
      "name": "isEqualKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "next",
        "type": "HashEntry"
       },
       {
        "name": "hashCode",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "createEntry",
      "type": "ReferenceEntry"
     },
     {
      "params": [],
      "name": "createEntrySetIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "createKeySetIterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "createValuesIterator",
      "type": "Iterator"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "doWriteObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "doReadObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "type",
        "type": "ReferenceStrength"
       }
      ],
      "name": "isKeyType",
      "type": "boolean"
     }
    ],
    "fields": [
     {
      "name": "keyType",
      "type": "ReferenceStrength"
     },
     {
      "name": "valueType",
      "type": "ReferenceStrength"
     },
     {
      "name": "purgeValues",
      "type": "boolean"
     },
     {
      "name": "queue",
      "type": "ReferenceQueue"
     }
    ],
    "name": "AbstractReferenceMap"
   }
  ]
 },
 {
  "filename": "LinkedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "clone",
      "type": "LinkedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "asList",
      "type": "List"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "LinkedMap"
   }
  ]
 },
 {
  "filename": "LRUMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "updateToMRU",
        "type": "boolean"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "LinkEntry"
       }
      ],
      "name": "moveToMRU",
      "type": null
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "HashEntry"
       },
       {
        "name": "newValue",
        "type": "V"
       }
      ],
      "name": "updateEntry",
      "type": null
     },
     {
      "params": [
       {
        "name": "hashIndex",
        "type": "int"
       },
       {
        "name": "hashCode",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "addMapping",
      "type": null
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "LinkEntry"
       },
       {
        "name": "hashIndex",
        "type": "int"
       },
       {
        "name": "hashCode",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "reuseMapping",
      "type": null
     },
     {
      "params": [
       {
        "name": "entry",
        "type": "LinkEntry"
       }
      ],
      "name": "removeLRU",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "maxSize",
      "type": "int"
     },
     {
      "params": [],
      "name": "isScanUntilRemovable",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "clone",
      "type": "LRUMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "doWriteObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "doReadObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "DEFAULT_MAX_SIZE",
      "type": "int"
     },
     {
      "name": "maxSize",
      "type": "int"
     },
     {
      "name": "scanUntilRemovable",
      "type": "boolean"
     }
    ],
    "name": "LRUMap"
   }
  ]
 },
 {
  "filename": "MultiValueMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "multiValueMap",
      "type": "MultiValueMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "collectionClass",
        "type": "Class"
       }
      ],
      "name": "multiValueMap",
      "type": "MultiValueMap"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "collectionFactory",
        "type": "Factory"
       }
      ],
      "name": "multiValueMap",
      "type": "MultiValueMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "removeMapping",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "put",
      "type": "Object"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       },
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "getCollection",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "size",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "values",
        "type": "Collection"
       }
      ],
      "name": "putAll",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "iterator",
      "type": "Iterator"
     },
     {
      "params": [],
      "name": "totalSize",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "size",
        "type": "int"
       }
      ],
      "name": "createCollection",
      "type": "Collection"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "collectionFactory",
      "type": "Factory"
     },
     {
      "name": "valuesView",
      "type": "Collection"
     }
    ],
    "name": "MultiValueMap"
   }
  ]
 },
 {
  "filename": "CaseInsensitiveMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "convertKey",
      "type": "Object"
     },
     {
      "params": [],
      "name": "clone",
      "type": "CaseInsensitiveMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "CaseInsensitiveMap"
   }
  ]
 },
 {
  "filename": "CompositeMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "mutator",
        "type": "MapMutator"
       }
      ],
      "name": "setMutator",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "addComposited",
      "type": null
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "removeComposited",
      "type": "Map"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "composite",
      "type": "Map"
     },
     {
      "name": "mutator",
      "type": "MapMutator"
     }
    ],
    "name": "CompositeMap"
   }
  ]
 },
 {
  "filename": "Flat3Map.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "get",
      "type": "V"
     },
     {
      "params": [],
      "name": "size",
      "type": "int"
     },
     {
      "params": [],
      "name": "isEmpty",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "containsKey",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "value",
        "type": "Object"
       }
      ],
      "name": "containsValue",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [],
      "name": "convertToMap",
      "type": null
     },
     {
      "params": [],
      "name": "createDelegateMap",
      "type": "AbstractHashedMap"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "clone",
      "type": "Flat3Map"
     },
     {
      "params": [
       {
        "name": "obj",
        "type": "Object"
       }
      ],
      "name": "equals",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "hashCode",
      "type": "int"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "size",
      "type": "int"
     },
     {
      "name": "hash1",
      "type": "int"
     },
     {
      "name": "hash2",
      "type": "int"
     },
     {
      "name": "hash3",
      "type": "int"
     },
     {
      "name": "key1",
      "type": "K"
     },
     {
      "name": "key2",
      "type": "K"
     },
     {
      "name": "key3",
      "type": "K"
     },
     {
      "name": "value1",
      "type": "V"
     },
     {
      "name": "value2",
      "type": "V"
     },
     {
      "name": "value3",
      "type": "V"
     },
     {
      "name": "delegateMap",
      "type": "AbstractHashedMap"
     }
    ],
    "name": "Flat3Map"
   }
  ]
 },
 {
  "filename": "PredicatedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       },
       {
        "name": "keyPredicate",
        "type": "Predicate"
       },
       {
        "name": "valuePredicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedMap",
      "type": "PredicatedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "validate",
      "type": null
     },
     {
      "params": [
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "checkSetValue",
      "type": "V"
     },
     {
      "params": [],
      "name": "isSetValueChecking",
      "type": "boolean"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "keyPredicate",
      "type": "Predicate"
     },
     {
      "name": "valuePredicate",
      "type": "Predicate"
     }
    ],
    "name": "PredicatedMap"
   }
  ]
 },
 {
  "filename": "AbstractOrderedMapDecorator.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [],
      "name": "decorated",
      "type": "OrderedMap"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     }
    ],
    "fields": [],
    "name": "AbstractOrderedMapDecorator"
   }
  ]
 },
 {
  "filename": "FixedSizeMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "fixedSizeMap",
      "type": "FixedSizeMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "maxSize",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "FixedSizeMap"
   }
  ]
 },
 {
  "filename": "FixedSizeSortedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       }
      ],
      "name": "fixedSizeSortedMap",
      "type": "FixedSizeSortedMap"
     },
     {
      "params": [],
      "name": "getSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     },
     {
      "params": [],
      "name": "isFull",
      "type": "boolean"
     },
     {
      "params": [],
      "name": "maxSize",
      "type": "int"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "FixedSizeSortedMap"
   }
  ]
 },
 {
  "filename": "PredicatedSortedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "SortedMap"
       },
       {
        "name": "keyPredicate",
        "type": "Predicate"
       },
       {
        "name": "valuePredicate",
        "type": "Predicate"
       }
      ],
      "name": "predicatedSortedMap",
      "type": "PredicatedSortedMap"
     },
     {
      "params": [],
      "name": "getSortedMap",
      "type": "SortedMap"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "comparator",
      "type": "Comparator"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       },
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "subMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "toKey",
        "type": "K"
       }
      ],
      "name": "headMap",
      "type": "SortedMap"
     },
     {
      "params": [
       {
        "name": "fromKey",
        "type": "K"
       }
      ],
      "name": "tailMap",
      "type": "SortedMap"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "PredicatedSortedMap"
   }
  ]
 },
 {
  "filename": "ListOrderedMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "listOrderedMap",
      "type": "ListOrderedMap"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "OrderedMapIterator"
     },
     {
      "params": [],
      "name": "firstKey",
      "type": "K"
     },
     {
      "params": [],
      "name": "lastKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "nextKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "previousKey",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keyList",
      "type": "List"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     },
     {
      "params": [],
      "name": "valueList",
      "type": "List"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "toString",
      "type": "String"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "get",
      "type": "K"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "getValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "indexOf",
      "type": "int"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "setValue",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       },
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "index",
        "type": "int"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "asList",
      "type": "List"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     },
     {
      "name": "insertOrder",
      "type": "List"
     }
    ],
    "name": "ListOrderedMap"
   }
  ]
 },
 {
  "filename": "UnmodifiableMap.java",
  "package_name": "org.apache.commons.collections4.map",
  "classes": [
   {
    "methods": [
     {
      "params": [
       {
        "name": "map",
        "type": "Map"
       }
      ],
      "name": "unmodifiableMap",
      "type": "Map"
     },
     {
      "params": [
       {
        "name": "out",
        "type": "ObjectOutputStream"
       }
      ],
      "name": "writeObject",
      "type": null
     },
     {
      "params": [
       {
        "name": "in",
        "type": "ObjectInputStream"
       }
      ],
      "name": "readObject",
      "type": null
     },
     {
      "params": [],
      "name": "clear",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "K"
       },
       {
        "name": "value",
        "type": "V"
       }
      ],
      "name": "put",
      "type": "V"
     },
     {
      "params": [
       {
        "name": "mapToCopy",
        "type": "Map"
       }
      ],
      "name": "putAll",
      "type": null
     },
     {
      "params": [
       {
        "name": "key",
        "type": "Object"
       }
      ],
      "name": "remove",
      "type": "V"
     },
     {
      "params": [],
      "name": "mapIterator",
      "type": "MapIterator"
     },
     {
      "params": [],
      "name": "entrySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "keySet",
      "type": "Set"
     },
     {
      "params": [],
      "name": "values",
      "type": "Collection"
     }
    ],
    "fields": [
     {
      "name": "serialVersionUID",
      "type": "long"
     }
    ],
    "name": "UnmodifiableMap"
   }
  ]
 }
]