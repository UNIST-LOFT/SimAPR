[
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadableDateTime",
    "methods": [
     {
      "type": "int",
      "name": "getDayOfWeek",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeekOfWeekyear",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeekyear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getYearOfEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getYearOfCentury",
      "params": []
     },
     {
      "type": "int",
      "name": "getCenturyOfEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillisOfSecond",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillisOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getSecondOfMinute",
      "params": []
     },
     {
      "type": "int",
      "name": "getSecondOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinuteOfHour",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinuteOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getHourOfDay",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": []
     },
     {
      "type": "MutableDateTime",
      "name": "toMutableDateTime",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadableDateTime.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "byte",
      "name": "ERA"
     },
     {
      "type": "byte",
      "name": "YEAR_OF_ERA"
     },
     {
      "type": "byte",
      "name": "CENTURY_OF_ERA"
     },
     {
      "type": "byte",
      "name": "YEAR_OF_CENTURY"
     },
     {
      "type": "byte",
      "name": "YEAR"
     },
     {
      "type": "byte",
      "name": "DAY_OF_YEAR"
     },
     {
      "type": "byte",
      "name": "MONTH_OF_YEAR"
     },
     {
      "type": "byte",
      "name": "DAY_OF_MONTH"
     },
     {
      "type": "byte",
      "name": "WEEKYEAR_OF_CENTURY"
     },
     {
      "type": "byte",
      "name": "WEEKYEAR"
     },
     {
      "type": "byte",
      "name": "WEEK_OF_WEEKYEAR"
     },
     {
      "type": "byte",
      "name": "DAY_OF_WEEK"
     },
     {
      "type": "byte",
      "name": "HALFDAY_OF_DAY"
     },
     {
      "type": "byte",
      "name": "HOUR_OF_HALFDAY"
     },
     {
      "type": "byte",
      "name": "CLOCKHOUR_OF_HALFDAY"
     },
     {
      "type": "byte",
      "name": "CLOCKHOUR_OF_DAY"
     },
     {
      "type": "byte",
      "name": "HOUR_OF_DAY"
     },
     {
      "type": "byte",
      "name": "MINUTE_OF_DAY"
     },
     {
      "type": "byte",
      "name": "MINUTE_OF_HOUR"
     },
     {
      "type": "byte",
      "name": "SECOND_OF_DAY"
     },
     {
      "type": "byte",
      "name": "SECOND_OF_MINUTE"
     },
     {
      "type": "byte",
      "name": "MILLIS_OF_DAY"
     },
     {
      "type": "byte",
      "name": "MILLIS_OF_SECOND"
     },
     {
      "type": "DateTimeFieldType",
      "name": "ERA_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "YEAR_OF_ERA_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "CENTURY_OF_ERA_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "YEAR_OF_CENTURY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "YEAR_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "DAY_OF_YEAR_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "MONTH_OF_YEAR_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "DAY_OF_MONTH_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "WEEKYEAR_OF_CENTURY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "WEEKYEAR_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "WEEK_OF_WEEKYEAR_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "DAY_OF_WEEK_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "HALFDAY_OF_DAY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "HOUR_OF_HALFDAY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "CLOCKHOUR_OF_HALFDAY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "CLOCKHOUR_OF_DAY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "HOUR_OF_DAY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "MINUTE_OF_DAY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "MINUTE_OF_HOUR_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "SECOND_OF_DAY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "SECOND_OF_MINUTE_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "MILLIS_OF_DAY_TYPE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "MILLIS_OF_SECOND_TYPE"
     },
     {
      "type": "String",
      "name": "iName"
     }
    ],
    "name": "DateTimeFieldType",
    "methods": [
     {
      "type": "DateTimeFieldType",
      "name": "millisOfSecond",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "millisOfDay",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "secondOfMinute",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "secondOfDay",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "minuteOfHour",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "minuteOfDay",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "hourOfDay",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "clockhourOfDay",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "hourOfHalfday",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "clockhourOfHalfday",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "halfdayOfDay",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "dayOfWeek",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "dayOfYear",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "weekOfWeekyear",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "weekyearOfCentury",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "year",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "yearOfEra",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "yearOfCentury",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "centuryOfEra",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "era",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getDurationType",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getRangeDurationType",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DateTimeFieldType.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Chronology",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": null,
      "name": "validate",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "long",
        "name": "startInstant"
       },
       {
        "type": "long",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "millis",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "millisOfSecond",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "millisOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "seconds",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "secondOfMinute",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "secondOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "minutes",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "minuteOfHour",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "minuteOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "hours",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "hourOfDay",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "clockhourOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "halfdays",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "hourOfHalfday",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "clockhourOfHalfday",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "halfdayOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "days",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "dayOfWeek",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "dayOfYear",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "weeks",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "weekOfWeekyear",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "weekyears",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "weekyearOfCentury",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "months",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "years",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "year",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "yearOfEra",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "yearOfCentury",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "centuries",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "centuryOfEra",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "eras",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "era",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Chronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Hours",
      "name": "ZERO"
     },
     {
      "type": "Hours",
      "name": "ONE"
     },
     {
      "type": "Hours",
      "name": "TWO"
     },
     {
      "type": "Hours",
      "name": "THREE"
     },
     {
      "type": "Hours",
      "name": "FOUR"
     },
     {
      "type": "Hours",
      "name": "FIVE"
     },
     {
      "type": "Hours",
      "name": "SIX"
     },
     {
      "type": "Hours",
      "name": "SEVEN"
     },
     {
      "type": "Hours",
      "name": "EIGHT"
     },
     {
      "type": "Hours",
      "name": "MAX_VALUE"
     },
     {
      "type": "Hours",
      "name": "MIN_VALUE"
     },
     {
      "type": "PeriodFormatter",
      "name": "PARSER"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Hours",
    "methods": [
     {
      "type": "Hours",
      "name": "hours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "hoursBetween",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "hoursBetween",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "start"
       },
       {
        "type": "ReadablePartial",
        "name": "end"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "hoursIn",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "standardHoursIn",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "parseHours",
      "params": [
       {
        "type": "String",
        "name": "periodStr"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "Weeks",
      "name": "toStandardWeeks",
      "params": []
     },
     {
      "type": "Days",
      "name": "toStandardDays",
      "params": []
     },
     {
      "type": "Minutes",
      "name": "toStandardMinutes",
      "params": []
     },
     {
      "type": "Seconds",
      "name": "toStandardSeconds",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toStandardDuration",
      "params": []
     },
     {
      "type": "int",
      "name": "getHours",
      "params": []
     },
     {
      "type": "Hours",
      "name": "plus",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "plus",
      "params": [
       {
        "type": "Hours",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "minus",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "minus",
      "params": [
       {
        "type": "Hours",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "multipliedBy",
      "params": [
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "dividedBy",
      "params": [
       {
        "type": "int",
        "name": "divisor"
       }
      ]
     },
     {
      "type": "Hours",
      "name": "negated",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isGreaterThan",
      "params": [
       {
        "type": "Hours",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLessThan",
      "params": [
       {
        "type": "Hours",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Hours.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Map",
      "name": "cTypes"
     },
     {
      "type": "int",
      "name": "YEAR_INDEX"
     },
     {
      "type": "int",
      "name": "MONTH_INDEX"
     },
     {
      "type": "int",
      "name": "WEEK_INDEX"
     },
     {
      "type": "int",
      "name": "DAY_INDEX"
     },
     {
      "type": "int",
      "name": "HOUR_INDEX"
     },
     {
      "type": "int",
      "name": "MINUTE_INDEX"
     },
     {
      "type": "int",
      "name": "SECOND_INDEX"
     },
     {
      "type": "int",
      "name": "MILLI_INDEX"
     },
     {
      "type": "PeriodType",
      "name": "cStandard"
     },
     {
      "type": "PeriodType",
      "name": "cYMDTime"
     },
     {
      "type": "PeriodType",
      "name": "cYMD"
     },
     {
      "type": "PeriodType",
      "name": "cYWDTime"
     },
     {
      "type": "PeriodType",
      "name": "cYWD"
     },
     {
      "type": "PeriodType",
      "name": "cYDTime"
     },
     {
      "type": "PeriodType",
      "name": "cYD"
     },
     {
      "type": "PeriodType",
      "name": "cDTime"
     },
     {
      "type": "PeriodType",
      "name": "cTime"
     },
     {
      "type": "PeriodType",
      "name": "cYears"
     },
     {
      "type": "PeriodType",
      "name": "cMonths"
     },
     {
      "type": "PeriodType",
      "name": "cWeeks"
     },
     {
      "type": "PeriodType",
      "name": "cDays"
     },
     {
      "type": "PeriodType",
      "name": "cHours"
     },
     {
      "type": "PeriodType",
      "name": "cMinutes"
     },
     {
      "type": "PeriodType",
      "name": "cSeconds"
     },
     {
      "type": "PeriodType",
      "name": "cMillis"
     },
     {
      "type": "String",
      "name": "iName"
     },
     {
      "type": "DurationFieldType",
      "name": "iTypes"
     },
     {
      "type": "int",
      "name": "iIndices"
     }
    ],
    "name": "PeriodType",
    "methods": [
     {
      "type": "PeriodType",
      "name": "standard",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "yearMonthDayTime",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "yearMonthDay",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "yearWeekDayTime",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "yearWeekDay",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "yearDayTime",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "yearDay",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "dayTime",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "time",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "years",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "months",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "weeks",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "days",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "hours",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "minutes",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "seconds",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "millis",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "forFields",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "types"
       }
      ]
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "int",
      "name": "getIndexedField",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "setIndexedField",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "newValue"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "addIndexedField",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "PeriodType",
      "name": "withYearsRemoved",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "withMonthsRemoved",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "withWeeksRemoved",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "withDaysRemoved",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "withHoursRemoved",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "withMinutesRemoved",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "withSecondsRemoved",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "withMillisRemoved",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "withFieldRemoved",
      "params": [
       {
        "type": "int",
        "name": "indicesIndex"
       },
       {
        "type": "String",
        "name": "name"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "PeriodType.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Minutes",
      "name": "ZERO"
     },
     {
      "type": "Minutes",
      "name": "ONE"
     },
     {
      "type": "Minutes",
      "name": "TWO"
     },
     {
      "type": "Minutes",
      "name": "THREE"
     },
     {
      "type": "Minutes",
      "name": "MAX_VALUE"
     },
     {
      "type": "Minutes",
      "name": "MIN_VALUE"
     },
     {
      "type": "PeriodFormatter",
      "name": "PARSER"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Minutes",
    "methods": [
     {
      "type": "Minutes",
      "name": "minutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "minutesBetween",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "minutesBetween",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "start"
       },
       {
        "type": "ReadablePartial",
        "name": "end"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "minutesIn",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "standardMinutesIn",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "parseMinutes",
      "params": [
       {
        "type": "String",
        "name": "periodStr"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "Weeks",
      "name": "toStandardWeeks",
      "params": []
     },
     {
      "type": "Days",
      "name": "toStandardDays",
      "params": []
     },
     {
      "type": "Hours",
      "name": "toStandardHours",
      "params": []
     },
     {
      "type": "Seconds",
      "name": "toStandardSeconds",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toStandardDuration",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinutes",
      "params": []
     },
     {
      "type": "Minutes",
      "name": "plus",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "plus",
      "params": [
       {
        "type": "Minutes",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "minus",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "minus",
      "params": [
       {
        "type": "Minutes",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "multipliedBy",
      "params": [
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "dividedBy",
      "params": [
       {
        "type": "int",
        "name": "divisor"
       }
      ]
     },
     {
      "type": "Minutes",
      "name": "negated",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isGreaterThan",
      "params": [
       {
        "type": "Minutes",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLessThan",
      "params": [
       {
        "type": "Minutes",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Minutes.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeFieldType",
      "name": "FIELD_TYPES"
     },
     {
      "type": "int",
      "name": "YEAR"
     },
     {
      "type": "int",
      "name": "MONTH_OF_YEAR"
     },
     {
      "type": "int",
      "name": "DAY_OF_MONTH"
     }
    ],
    "name": "YearMonthDay",
    "methods": [
     {
      "type": "YearMonthDay",
      "name": "fromCalendarFields",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "fromDateFields",
      "params": [
       {
        "type": "Date",
        "name": "date"
       }
      ]
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldTypes",
      "params": []
     },
     {
      "type": "YearMonthDay",
      "name": "withChronologyRetainFields",
      "params": [
       {
        "type": "Chronology",
        "name": "newChronology"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "plusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "plusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "plusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "minusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "minusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "minusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "toLocalDate",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtMidnight",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtMidnight",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtCurrentTime",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtCurrentTime",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "toDateMidnight",
      "params": []
     },
     {
      "type": "DateMidnight",
      "name": "toDateMidnight",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "TimeOfDay",
        "name": "time"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "TimeOfDay",
        "name": "time"
       },
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": []
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "int",
      "name": "getYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": []
     },
     {
      "type": "YearMonthDay",
      "name": "withYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "withMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "monthOfYear"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "withDayOfMonth",
      "params": [
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "Property",
      "name": "year",
      "params": []
     },
     {
      "type": "Property",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "YearMonthDay.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeFieldType",
      "name": "FIELD_TYPES"
     },
     {
      "type": "DateTimeFormatter",
      "name": "PARSER"
     },
     {
      "type": "int",
      "name": "MONTH_OF_YEAR"
     },
     {
      "type": "int",
      "name": "DAY_OF_MONTH"
     }
    ],
    "name": "MonthDay",
    "methods": [
     {
      "type": "MonthDay",
      "name": "now",
      "params": []
     },
     {
      "type": "MonthDay",
      "name": "now",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "now",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "fromCalendarFields",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "fromDateFields",
      "params": [
       {
        "type": "Date",
        "name": "date"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldTypes",
      "params": []
     },
     {
      "type": "MonthDay",
      "name": "withChronologyRetainFields",
      "params": [
       {
        "type": "Chronology",
        "name": "newChronology"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "plusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "plusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "minusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "minusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "toLocalDate",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": []
     },
     {
      "type": "MonthDay",
      "name": "withMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "monthOfYear"
       }
      ]
     },
     {
      "type": "MonthDay",
      "name": "withDayOfMonth",
      "params": [
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "Property",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "MonthDay.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadWritableInstant",
    "methods": [
     {
      "type": null,
      "name": "setMillis",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "setMillis",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "setChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": null,
      "name": "setZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": null,
      "name": "setZoneRetainFields",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": null,
      "name": "set",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadWritableInstant.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Chronology",
      "name": "iChronology"
     },
     {
      "type": "DateTimeFieldType",
      "name": "iTypes"
     },
     {
      "type": "int",
      "name": "iValues"
     },
     {
      "type": "DateTimeFormatter",
      "name": "iFormatter"
     }
    ],
    "name": "Partial",
    "methods": [
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldTypes",
      "params": []
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValues",
      "params": []
     },
     {
      "type": "Partial",
      "name": "withChronologyRetainFields",
      "params": [
       {
        "type": "Chronology",
        "name": "newChronology"
       }
      ]
     },
     {
      "type": "Partial",
      "name": "with",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Partial",
      "name": "without",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       }
      ]
     },
     {
      "type": "Partial",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Partial",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Partial",
      "name": "withFieldAddWrapped",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Partial",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Partial",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Partial",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isMatch",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isMatch",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "DateTimeFormatter",
      "name": "getFormatter",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toStringList",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Partial.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeFieldType",
      "name": "FIELD_TYPES"
     },
     {
      "type": "int",
      "name": "YEAR"
     },
     {
      "type": "int",
      "name": "MONTH_OF_YEAR"
     }
    ],
    "name": "YearMonth",
    "methods": [
     {
      "type": "YearMonth",
      "name": "now",
      "params": []
     },
     {
      "type": "YearMonth",
      "name": "now",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "now",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "fromCalendarFields",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "fromDateFields",
      "params": [
       {
        "type": "Date",
        "name": "date"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldTypes",
      "params": []
     },
     {
      "type": "YearMonth",
      "name": "withChronologyRetainFields",
      "params": [
       {
        "type": "Chronology",
        "name": "newChronology"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "plusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "plusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "minusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "minusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "toLocalDate",
      "params": [
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": []
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "int",
      "name": "getYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": []
     },
     {
      "type": "YearMonth",
      "name": "withYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "YearMonth",
      "name": "withMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "monthOfYear"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "Property",
      "name": "year",
      "params": []
     },
     {
      "type": "Property",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "YearMonth.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "MutableInterval",
    "methods": [
     {
      "type": "MutableInterval",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": null,
      "name": "setInterval",
      "params": [
       {
        "type": "long",
        "name": "startInstant"
       },
       {
        "type": "long",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "setInterval",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": null,
      "name": "setInterval",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": null,
      "name": "setChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "setStartMillis",
      "params": [
       {
        "type": "long",
        "name": "startInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "setStart",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       }
      ]
     },
     {
      "type": null,
      "name": "setEndMillis",
      "params": [
       {
        "type": "long",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "setEnd",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": null,
      "name": "setDurationAfterStart",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "setDurationBeforeEnd",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "setDurationAfterStart",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "setDurationBeforeEnd",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriodAfterStart",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriodBeforeEnd",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "MutableInterval",
      "name": "copy",
      "params": []
     },
     {
      "type": "Object",
      "name": "clone",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "MutableInterval.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadWritableInterval",
    "methods": [
     {
      "type": null,
      "name": "setInterval",
      "params": [
       {
        "type": "long",
        "name": "startInstant"
       },
       {
        "type": "long",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "setInterval",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": null,
      "name": "setInterval",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "startInstant"
       },
       {
        "type": "ReadableInstant",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "setChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "setStartMillis",
      "params": [
       {
        "type": "long",
        "name": "millisInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "setStart",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "setEndMillis",
      "params": [
       {
        "type": "long",
        "name": "millisInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "setEnd",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "setDurationAfterStart",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "setDurationBeforeEnd",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriodAfterStart",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriodBeforeEnd",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadWritableInterval.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Seconds",
      "name": "ZERO"
     },
     {
      "type": "Seconds",
      "name": "ONE"
     },
     {
      "type": "Seconds",
      "name": "TWO"
     },
     {
      "type": "Seconds",
      "name": "THREE"
     },
     {
      "type": "Seconds",
      "name": "MAX_VALUE"
     },
     {
      "type": "Seconds",
      "name": "MIN_VALUE"
     },
     {
      "type": "PeriodFormatter",
      "name": "PARSER"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Seconds",
    "methods": [
     {
      "type": "Seconds",
      "name": "seconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "secondsBetween",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "secondsBetween",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "start"
       },
       {
        "type": "ReadablePartial",
        "name": "end"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "secondsIn",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "standardSecondsIn",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "parseSeconds",
      "params": [
       {
        "type": "String",
        "name": "periodStr"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "Weeks",
      "name": "toStandardWeeks",
      "params": []
     },
     {
      "type": "Days",
      "name": "toStandardDays",
      "params": []
     },
     {
      "type": "Hours",
      "name": "toStandardHours",
      "params": []
     },
     {
      "type": "Minutes",
      "name": "toStandardMinutes",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toStandardDuration",
      "params": []
     },
     {
      "type": "int",
      "name": "getSeconds",
      "params": []
     },
     {
      "type": "Seconds",
      "name": "plus",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "plus",
      "params": [
       {
        "type": "Seconds",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "minus",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "minus",
      "params": [
       {
        "type": "Seconds",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "multipliedBy",
      "params": [
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "dividedBy",
      "params": [
       {
        "type": "int",
        "name": "divisor"
       }
      ]
     },
     {
      "type": "Seconds",
      "name": "negated",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isGreaterThan",
      "params": [
       {
        "type": "Seconds",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLessThan",
      "params": [
       {
        "type": "Seconds",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Seconds.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeFieldType",
      "name": "FIELD_TYPES"
     },
     {
      "type": "TimeOfDay",
      "name": "MIDNIGHT"
     },
     {
      "type": "int",
      "name": "HOUR_OF_DAY"
     },
     {
      "type": "int",
      "name": "MINUTE_OF_HOUR"
     },
     {
      "type": "int",
      "name": "SECOND_OF_MINUTE"
     },
     {
      "type": "int",
      "name": "MILLIS_OF_SECOND"
     }
    ],
    "name": "TimeOfDay",
    "methods": [
     {
      "type": "TimeOfDay",
      "name": "fromCalendarFields",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "fromDateFields",
      "params": [
       {
        "type": "Date",
        "name": "date"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "fromMillisOfDay",
      "params": [
       {
        "type": "long",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "fromMillisOfDay",
      "params": [
       {
        "type": "long",
        "name": "millisOfDay"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldTypes",
      "params": []
     },
     {
      "type": "TimeOfDay",
      "name": "withChronologyRetainFields",
      "params": [
       {
        "type": "Chronology",
        "name": "newChronology"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "plusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "plusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "plusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "plusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "minusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "minusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "minusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "minusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "toLocalTime",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeToday",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeToday",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "int",
      "name": "getHourOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinuteOfHour",
      "params": []
     },
     {
      "type": "int",
      "name": "getSecondOfMinute",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillisOfSecond",
      "params": []
     },
     {
      "type": "TimeOfDay",
      "name": "withHourOfDay",
      "params": [
       {
        "type": "int",
        "name": "hour"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "withMinuteOfHour",
      "params": [
       {
        "type": "int",
        "name": "minute"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "withSecondOfMinute",
      "params": [
       {
        "type": "int",
        "name": "second"
       }
      ]
     },
     {
      "type": "TimeOfDay",
      "name": "withMillisOfSecond",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Property",
      "name": "hourOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "minuteOfHour",
      "params": []
     },
     {
      "type": "Property",
      "name": "secondOfMinute",
      "params": []
     },
     {
      "type": "Property",
      "name": "millisOfSecond",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "TimeOfDay.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadablePeriod",
    "methods": [
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": []
     },
     {
      "type": "MutablePeriod",
      "name": "toMutablePeriod",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "readablePeriod"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadablePeriod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "LocalTime",
      "name": "MIDNIGHT"
     },
     {
      "type": "int",
      "name": "HOUR_OF_DAY"
     },
     {
      "type": "int",
      "name": "MINUTE_OF_HOUR"
     },
     {
      "type": "int",
      "name": "SECOND_OF_MINUTE"
     },
     {
      "type": "int",
      "name": "MILLIS_OF_SECOND"
     },
     {
      "type": "Set",
      "name": "TIME_DURATION_TYPES"
     },
     {
      "type": "long",
      "name": "iLocalMillis"
     },
     {
      "type": "Chronology",
      "name": "iChronology"
     }
    ],
    "name": "LocalTime",
    "methods": [
     {
      "type": "LocalTime",
      "name": "now",
      "params": []
     },
     {
      "type": "LocalTime",
      "name": "now",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "now",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "fromMillisOfDay",
      "params": [
       {
        "type": "long",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "fromMillisOfDay",
      "params": [
       {
        "type": "long",
        "name": "millisOfDay"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "fromCalendarFields",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "fromDateFields",
      "params": [
       {
        "type": "Date",
        "name": "date"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "long",
      "name": "getLocalMillis",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "partial"
       }
      ]
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "withLocalMillis",
      "params": [
       {
        "type": "long",
        "name": "newMillis"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "withFields",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "plusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "plusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "plusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "plusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "minusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "minusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "minusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "minusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       }
      ]
     },
     {
      "type": "int",
      "name": "getHourOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinuteOfHour",
      "params": []
     },
     {
      "type": "int",
      "name": "getSecondOfMinute",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillisOfSecond",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillisOfDay",
      "params": []
     },
     {
      "type": "LocalTime",
      "name": "withHourOfDay",
      "params": [
       {
        "type": "int",
        "name": "hour"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "withMinuteOfHour",
      "params": [
       {
        "type": "int",
        "name": "minute"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "withSecondOfMinute",
      "params": [
       {
        "type": "int",
        "name": "second"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "withMillisOfSecond",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "withMillisOfDay",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Property",
      "name": "hourOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "minuteOfHour",
      "params": []
     },
     {
      "type": "Property",
      "name": "secondOfMinute",
      "params": []
     },
     {
      "type": "Property",
      "name": "millisOfSecond",
      "params": []
     },
     {
      "type": "Property",
      "name": "millisOfDay",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeToday",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeToday",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "LocalTime.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "SystemMillisProvider",
      "name": "SYSTEM_MILLIS_PROVIDER"
     },
     {
      "type": "MillisProvider",
      "name": "cMillisProvider"
     },
     {
      "type": "Map",
      "name": "cZoneNames"
     }
    ],
    "name": "DateTimeUtils",
    "methods": [
     {
      "type": null,
      "name": "put",
      "params": [
       {
        "type": "Map",
        "name": "map"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "String",
        "name": "id"
       }
      ]
     },
     {
      "type": "long",
      "name": "currentTimeMillis",
      "params": []
     },
     {
      "type": null,
      "name": "setCurrentMillisSystem",
      "params": []
     },
     {
      "type": null,
      "name": "setCurrentMillisFixed",
      "params": [
       {
        "type": "long",
        "name": "fixedMillis"
       }
      ]
     },
     {
      "type": null,
      "name": "setCurrentMillisOffset",
      "params": [
       {
        "type": "long",
        "name": "offsetMillis"
       }
      ]
     },
     {
      "type": null,
      "name": "setCurrentMillisProvider",
      "params": [
       {
        "type": "MillisProvider",
        "name": "millisProvider"
       }
      ]
     },
     {
      "type": null,
      "name": "checkPermission",
      "params": []
     },
     {
      "type": "long",
      "name": "getInstantMillis",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getInstantChronology",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getIntervalChronology",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getIntervalChronology",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "ReadableInterval",
      "name": "getReadableInterval",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": [
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDurationMillis",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isContiguous",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "DateFormatSymbols",
      "name": "getDateFormatSymbols",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "Map",
      "name": "getDefaultTimeZoneNames",
      "params": []
     },
     {
      "type": null,
      "name": "setDefaultTimeZoneNames",
      "params": [
       {
        "type": "Map",
        "name": "names"
       }
      ]
     },
     {
      "type": "double",
      "name": "toJulianDay",
      "params": [
       {
        "type": "long",
        "name": "epochMillis"
       }
      ]
     },
     {
      "type": "long",
      "name": "toJulianDayNumber",
      "params": [
       {
        "type": "long",
        "name": "epochMillis"
       }
      ]
     },
     {
      "type": "long",
      "name": "fromJulianDay",
      "params": [
       {
        "type": "double",
        "name": "julianDay"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DateTimeUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "MutablePeriod",
    "methods": [
     {
      "type": "MutablePeriod",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "MutablePeriod",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "PeriodFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": null,
      "name": "clear",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "set",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "int",
        "name": "years"
       },
       {
        "type": "int",
        "name": "months"
       },
       {
        "type": "int",
        "name": "weeks"
       },
       {
        "type": "int",
        "name": "days"
       },
       {
        "type": "int",
        "name": "hours"
       },
       {
        "type": "int",
        "name": "minutes"
       },
       {
        "type": "int",
        "name": "seconds"
       },
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "long",
        "name": "startInstant"
       },
       {
        "type": "long",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "long",
        "name": "startInstant"
       },
       {
        "type": "long",
        "name": "endInstant"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "int",
        "name": "years"
       },
       {
        "type": "int",
        "name": "months"
       },
       {
        "type": "int",
        "name": "weeks"
       },
       {
        "type": "int",
        "name": "days"
       },
       {
        "type": "int",
        "name": "hours"
       },
       {
        "type": "int",
        "name": "minutes"
       },
       {
        "type": "int",
        "name": "seconds"
       },
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "mergePeriod",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "int",
      "name": "getYears",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonths",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeeks",
      "params": []
     },
     {
      "type": "int",
      "name": "getDays",
      "params": []
     },
     {
      "type": "int",
      "name": "getHours",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinutes",
      "params": []
     },
     {
      "type": "int",
      "name": "getSeconds",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillis",
      "params": []
     },
     {
      "type": null,
      "name": "setYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": null,
      "name": "addYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": null,
      "name": "setMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": null,
      "name": "addMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": null,
      "name": "setWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": null,
      "name": "addWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": null,
      "name": "setDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": null,
      "name": "addDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": null,
      "name": "setHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": null,
      "name": "addHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": null,
      "name": "setMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": null,
      "name": "addMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": null,
      "name": "setSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": null,
      "name": "addSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": null,
      "name": "setMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "addMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "MutablePeriod",
      "name": "copy",
      "params": []
     },
     {
      "type": "Object",
      "name": "clone",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "MutablePeriod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Weeks",
      "name": "ZERO"
     },
     {
      "type": "Weeks",
      "name": "ONE"
     },
     {
      "type": "Weeks",
      "name": "TWO"
     },
     {
      "type": "Weeks",
      "name": "THREE"
     },
     {
      "type": "Weeks",
      "name": "MAX_VALUE"
     },
     {
      "type": "Weeks",
      "name": "MIN_VALUE"
     },
     {
      "type": "PeriodFormatter",
      "name": "PARSER"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Weeks",
    "methods": [
     {
      "type": "Weeks",
      "name": "weeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "weeksBetween",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "weeksBetween",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "start"
       },
       {
        "type": "ReadablePartial",
        "name": "end"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "weeksIn",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "standardWeeksIn",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "parseWeeks",
      "params": [
       {
        "type": "String",
        "name": "periodStr"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "Days",
      "name": "toStandardDays",
      "params": []
     },
     {
      "type": "Hours",
      "name": "toStandardHours",
      "params": []
     },
     {
      "type": "Minutes",
      "name": "toStandardMinutes",
      "params": []
     },
     {
      "type": "Seconds",
      "name": "toStandardSeconds",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toStandardDuration",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeeks",
      "params": []
     },
     {
      "type": "Weeks",
      "name": "plus",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "plus",
      "params": [
       {
        "type": "Weeks",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "minus",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "minus",
      "params": [
       {
        "type": "Weeks",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "multipliedBy",
      "params": [
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "dividedBy",
      "params": [
       {
        "type": "int",
        "name": "divisor"
       }
      ]
     },
     {
      "type": "Weeks",
      "name": "negated",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isGreaterThan",
      "params": [
       {
        "type": "Weeks",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLessThan",
      "params": [
       {
        "type": "Weeks",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Weeks.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "DateMidnight",
    "methods": [
     {
      "type": "DateMidnight",
      "name": "now",
      "params": []
     },
     {
      "type": "DateMidnight",
      "name": "now",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "now",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "long",
      "name": "checkInstant",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withMillis",
      "params": [
       {
        "type": "long",
        "name": "newMillis"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "newChronology"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withZoneRetainFields",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "newZone"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withFields",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withDurationAdded",
      "params": [
       {
        "type": "long",
        "name": "durationToAdd"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withDurationAdded",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "durationToAdd"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "plus",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "plus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "plusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "plusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "plusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "plusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "minus",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "minus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "minusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "minusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "minusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "minusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "YearMonthDay",
      "name": "toYearMonthDay",
      "params": []
     },
     {
      "type": "LocalDate",
      "name": "toLocalDate",
      "params": []
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": []
     },
     {
      "type": "DateMidnight",
      "name": "withEra",
      "params": [
       {
        "type": "int",
        "name": "era"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withCenturyOfEra",
      "params": [
       {
        "type": "int",
        "name": "centuryOfEra"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withYearOfEra",
      "params": [
       {
        "type": "int",
        "name": "yearOfEra"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withYearOfCentury",
      "params": [
       {
        "type": "int",
        "name": "yearOfCentury"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekyear"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "monthOfYear"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withWeekOfWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekOfWeekyear"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withDayOfYear",
      "params": [
       {
        "type": "int",
        "name": "dayOfYear"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withDayOfMonth",
      "params": [
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "withDayOfWeek",
      "params": [
       {
        "type": "int",
        "name": "dayOfWeek"
       }
      ]
     },
     {
      "type": "Property",
      "name": "era",
      "params": []
     },
     {
      "type": "Property",
      "name": "centuryOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfCentury",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "year",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekOfWeekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfWeek",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DateMidnight.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "DateTime",
    "methods": [
     {
      "type": "DateTime",
      "name": "now",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "now",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "now",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeISO",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withMillis",
      "params": [
       {
        "type": "long",
        "name": "newMillis"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "newChronology"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "newZone"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withZoneRetainFields",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "newZone"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withEarlierOffsetAtOverlap",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "withLaterOffsetAtOverlap",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "withDate",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withTime",
      "params": [
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withTimeAtStartOfDay",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "withFields",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withDurationAdded",
      "params": [
       {
        "type": "long",
        "name": "durationToAdd"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withDurationAdded",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "durationToAdd"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plus",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "plusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minus",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "minusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "toDateMidnight",
      "params": []
     },
     {
      "type": "YearMonthDay",
      "name": "toYearMonthDay",
      "params": []
     },
     {
      "type": "TimeOfDay",
      "name": "toTimeOfDay",
      "params": []
     },
     {
      "type": "LocalDateTime",
      "name": "toLocalDateTime",
      "params": []
     },
     {
      "type": "LocalDate",
      "name": "toLocalDate",
      "params": []
     },
     {
      "type": "LocalTime",
      "name": "toLocalTime",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "withEra",
      "params": [
       {
        "type": "int",
        "name": "era"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withCenturyOfEra",
      "params": [
       {
        "type": "int",
        "name": "centuryOfEra"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withYearOfEra",
      "params": [
       {
        "type": "int",
        "name": "yearOfEra"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withYearOfCentury",
      "params": [
       {
        "type": "int",
        "name": "yearOfCentury"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekyear"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "monthOfYear"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withWeekOfWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekOfWeekyear"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withDayOfYear",
      "params": [
       {
        "type": "int",
        "name": "dayOfYear"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withDayOfMonth",
      "params": [
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withDayOfWeek",
      "params": [
       {
        "type": "int",
        "name": "dayOfWeek"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withHourOfDay",
      "params": [
       {
        "type": "int",
        "name": "hour"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withMinuteOfHour",
      "params": [
       {
        "type": "int",
        "name": "minute"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withSecondOfMinute",
      "params": [
       {
        "type": "int",
        "name": "second"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withMillisOfSecond",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "withMillisOfDay",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Property",
      "name": "era",
      "params": []
     },
     {
      "type": "Property",
      "name": "centuryOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfCentury",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "year",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekOfWeekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfWeek",
      "params": []
     },
     {
      "type": "Property",
      "name": "hourOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "minuteOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "minuteOfHour",
      "params": []
     },
     {
      "type": "Property",
      "name": "secondOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "secondOfMinute",
      "params": []
     },
     {
      "type": "Property",
      "name": "millisOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "millisOfSecond",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DateTime.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DateTimeField",
    "methods": [
     {
      "type": "DateTimeFieldType",
      "name": "getType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "add",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapPartial",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapField",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "newValue"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "int",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumShortTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfEven",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Duration",
      "name": "ZERO"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Duration",
    "methods": [
     {
      "type": "Duration",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "standardDays",
      "params": [
       {
        "type": "long",
        "name": "days"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "standardHours",
      "params": [
       {
        "type": "long",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "standardMinutes",
      "params": [
       {
        "type": "long",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "standardSeconds",
      "params": [
       {
        "type": "long",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "millis",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "long",
      "name": "getStandardDays",
      "params": []
     },
     {
      "type": "long",
      "name": "getStandardHours",
      "params": []
     },
     {
      "type": "long",
      "name": "getStandardMinutes",
      "params": []
     },
     {
      "type": "long",
      "name": "getStandardSeconds",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toDuration",
      "params": []
     },
     {
      "type": "Days",
      "name": "toStandardDays",
      "params": []
     },
     {
      "type": "Hours",
      "name": "toStandardHours",
      "params": []
     },
     {
      "type": "Minutes",
      "name": "toStandardMinutes",
      "params": []
     },
     {
      "type": "Seconds",
      "name": "toStandardSeconds",
      "params": []
     },
     {
      "type": "Duration",
      "name": "withMillis",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "withDurationAdded",
      "params": [
       {
        "type": "long",
        "name": "durationToAdd"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "withDurationAdded",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "durationToAdd"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "plus",
      "params": [
       {
        "type": "long",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "plus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "minus",
      "params": [
       {
        "type": "long",
        "name": "amount"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "minus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "amount"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Duration.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Period",
      "name": "ZERO"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Period",
    "methods": [
     {
      "type": "Period",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "Period",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "PeriodFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "Period",
      "name": "years",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "Period",
      "name": "months",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "Period",
      "name": "weeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "Period",
      "name": "days",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Period",
      "name": "hours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Period",
      "name": "seconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Period",
      "name": "millis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Period",
      "name": "fieldDifference",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "start"
       },
       {
        "type": "ReadablePartial",
        "name": "end"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": []
     },
     {
      "type": "int",
      "name": "getYears",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonths",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeeks",
      "params": []
     },
     {
      "type": "int",
      "name": "getDays",
      "params": []
     },
     {
      "type": "int",
      "name": "getHours",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinutes",
      "params": []
     },
     {
      "type": "int",
      "name": "getSeconds",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillis",
      "params": []
     },
     {
      "type": "Period",
      "name": "withPeriodType",
      "params": [
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withFields",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withField",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Period",
      "name": "withMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Period",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Period",
      "name": "plusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "Period",
      "name": "plusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "Period",
      "name": "plusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "Period",
      "name": "plusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Period",
      "name": "plusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Period",
      "name": "plusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Period",
      "name": "plusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Period",
      "name": "plusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "Period",
      "name": "minusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Period",
      "name": "multipliedBy",
      "params": [
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Period",
      "name": "negated",
      "params": []
     },
     {
      "type": "Weeks",
      "name": "toStandardWeeks",
      "params": []
     },
     {
      "type": "Days",
      "name": "toStandardDays",
      "params": []
     },
     {
      "type": "Hours",
      "name": "toStandardHours",
      "params": []
     },
     {
      "type": "Minutes",
      "name": "toStandardMinutes",
      "params": []
     },
     {
      "type": "Seconds",
      "name": "toStandardSeconds",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toStandardDuration",
      "params": []
     },
     {
      "type": null,
      "name": "checkYearsAndMonths",
      "params": [
       {
        "type": "String",
        "name": "destintionType"
       }
      ]
     },
     {
      "type": "Period",
      "name": "normalizedStandard",
      "params": []
     },
     {
      "type": "Period",
      "name": "normalizedStandard",
      "params": [
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Period.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadWritablePeriod",
    "methods": [
     {
      "type": null,
      "name": "clear",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "set",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "int",
        "name": "years"
       },
       {
        "type": "int",
        "name": "months"
       },
       {
        "type": "int",
        "name": "weeks"
       },
       {
        "type": "int",
        "name": "days"
       },
       {
        "type": "int",
        "name": "hours"
       },
       {
        "type": "int",
        "name": "minutes"
       },
       {
        "type": "int",
        "name": "seconds"
       },
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "int",
        "name": "years"
       },
       {
        "type": "int",
        "name": "months"
       },
       {
        "type": "int",
        "name": "weeks"
       },
       {
        "type": "int",
        "name": "days"
       },
       {
        "type": "int",
        "name": "hours"
       },
       {
        "type": "int",
        "name": "minutes"
       },
       {
        "type": "int",
        "name": "seconds"
       },
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": null,
      "name": "setYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": null,
      "name": "addYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": null,
      "name": "setMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": null,
      "name": "addMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": null,
      "name": "setWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": null,
      "name": "addWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": null,
      "name": "setDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": null,
      "name": "addDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": null,
      "name": "setHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": null,
      "name": "addHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": null,
      "name": "setMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": null,
      "name": "addMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": null,
      "name": "setSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": null,
      "name": "addSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": null,
      "name": "setMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "addMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadWritablePeriod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "IllegalInstantException",
    "methods": [
     {
      "type": "String",
      "name": "createMessage",
      "params": [
       {
        "type": "long",
        "name": "instantLocal"
       },
       {
        "type": "String",
        "name": "zoneId"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isIllegalInstant",
      "params": [
       {
        "type": "Throwable",
        "name": "ex"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "IllegalInstantException.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadableInterval",
    "methods": [
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "long",
      "name": "getStartMillis",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "getStart",
      "params": []
     },
     {
      "type": "long",
      "name": "getEndMillis",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "getEnd",
      "params": []
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "overlaps",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAfter",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAfter",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBefore",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBefore",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": []
     },
     {
      "type": "MutableInterval",
      "name": "toMutableInterval",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toDuration",
      "params": []
     },
     {
      "type": "long",
      "name": "toDurationMillis",
      "params": []
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": []
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": [
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "readableInterval"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadableInterval.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Months",
      "name": "ZERO"
     },
     {
      "type": "Months",
      "name": "ONE"
     },
     {
      "type": "Months",
      "name": "TWO"
     },
     {
      "type": "Months",
      "name": "THREE"
     },
     {
      "type": "Months",
      "name": "FOUR"
     },
     {
      "type": "Months",
      "name": "FIVE"
     },
     {
      "type": "Months",
      "name": "SIX"
     },
     {
      "type": "Months",
      "name": "SEVEN"
     },
     {
      "type": "Months",
      "name": "EIGHT"
     },
     {
      "type": "Months",
      "name": "NINE"
     },
     {
      "type": "Months",
      "name": "TEN"
     },
     {
      "type": "Months",
      "name": "ELEVEN"
     },
     {
      "type": "Months",
      "name": "TWELVE"
     },
     {
      "type": "Months",
      "name": "MAX_VALUE"
     },
     {
      "type": "Months",
      "name": "MIN_VALUE"
     },
     {
      "type": "PeriodFormatter",
      "name": "PARSER"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Months",
    "methods": [
     {
      "type": "Months",
      "name": "months",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "Months",
      "name": "monthsBetween",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": "Months",
      "name": "monthsBetween",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "start"
       },
       {
        "type": "ReadablePartial",
        "name": "end"
       }
      ]
     },
     {
      "type": "Months",
      "name": "monthsIn",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Months",
      "name": "parseMonths",
      "params": [
       {
        "type": "String",
        "name": "periodStr"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonths",
      "params": []
     },
     {
      "type": "Months",
      "name": "plus",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "Months",
      "name": "plus",
      "params": [
       {
        "type": "Months",
        "name": "months"
       }
      ]
     },
     {
      "type": "Months",
      "name": "minus",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "Months",
      "name": "minus",
      "params": [
       {
        "type": "Months",
        "name": "months"
       }
      ]
     },
     {
      "type": "Months",
      "name": "multipliedBy",
      "params": [
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Months",
      "name": "dividedBy",
      "params": [
       {
        "type": "int",
        "name": "divisor"
       }
      ]
     },
     {
      "type": "Months",
      "name": "negated",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isGreaterThan",
      "params": [
       {
        "type": "Months",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLessThan",
      "params": [
       {
        "type": "Months",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Months.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "ROUND_NONE"
     },
     {
      "type": "int",
      "name": "ROUND_FLOOR"
     },
     {
      "type": "int",
      "name": "ROUND_CEILING"
     },
     {
      "type": "int",
      "name": "ROUND_HALF_FLOOR"
     },
     {
      "type": "int",
      "name": "ROUND_HALF_CEILING"
     },
     {
      "type": "int",
      "name": "ROUND_HALF_EVEN"
     },
     {
      "type": "DateTimeField",
      "name": "iRoundingField"
     },
     {
      "type": "int",
      "name": "iRoundingMode"
     }
    ],
    "name": "MutableDateTime",
    "methods": [
     {
      "type": "MutableDateTime",
      "name": "now",
      "params": []
     },
     {
      "type": "MutableDateTime",
      "name": "now",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "MutableDateTime",
      "name": "now",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "MutableDateTime",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "MutableDateTime",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "DateTimeField",
      "name": "getRoundingField",
      "params": []
     },
     {
      "type": "int",
      "name": "getRoundingMode",
      "params": []
     },
     {
      "type": null,
      "name": "setRounding",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       }
      ]
     },
     {
      "type": null,
      "name": "setRounding",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       },
       {
        "type": "int",
        "name": "mode"
       }
      ]
     },
     {
      "type": null,
      "name": "setMillis",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "setMillis",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": null,
      "name": "setChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": null,
      "name": "setZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "newZone"
       }
      ]
     },
     {
      "type": null,
      "name": "setZoneRetainFields",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "newZone"
       }
      ]
     },
     {
      "type": null,
      "name": "set",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "add",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": null,
      "name": "setYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": null,
      "name": "addYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": null,
      "name": "setWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekyear"
       }
      ]
     },
     {
      "type": null,
      "name": "addWeekyears",
      "params": [
       {
        "type": "int",
        "name": "weekyears"
       }
      ]
     },
     {
      "type": null,
      "name": "setMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "monthOfYear"
       }
      ]
     },
     {
      "type": null,
      "name": "addMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": null,
      "name": "setWeekOfWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekOfWeekyear"
       }
      ]
     },
     {
      "type": null,
      "name": "addWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": null,
      "name": "setDayOfYear",
      "params": [
       {
        "type": "int",
        "name": "dayOfYear"
       }
      ]
     },
     {
      "type": null,
      "name": "setDayOfMonth",
      "params": [
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": null,
      "name": "setDayOfWeek",
      "params": [
       {
        "type": "int",
        "name": "dayOfWeek"
       }
      ]
     },
     {
      "type": null,
      "name": "addDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": null,
      "name": "setHourOfDay",
      "params": [
       {
        "type": "int",
        "name": "hourOfDay"
       }
      ]
     },
     {
      "type": null,
      "name": "addHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": null,
      "name": "setMinuteOfDay",
      "params": [
       {
        "type": "int",
        "name": "minuteOfDay"
       }
      ]
     },
     {
      "type": null,
      "name": "setMinuteOfHour",
      "params": [
       {
        "type": "int",
        "name": "minuteOfHour"
       }
      ]
     },
     {
      "type": null,
      "name": "addMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": null,
      "name": "setSecondOfDay",
      "params": [
       {
        "type": "int",
        "name": "secondOfDay"
       }
      ]
     },
     {
      "type": null,
      "name": "setSecondOfMinute",
      "params": [
       {
        "type": "int",
        "name": "secondOfMinute"
       }
      ]
     },
     {
      "type": null,
      "name": "addSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": null,
      "name": "setMillisOfDay",
      "params": [
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": null,
      "name": "setMillisOfSecond",
      "params": [
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": null,
      "name": "addMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "setDate",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "setDate",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "setDate",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": null,
      "name": "setTime",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "setTime",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "setTime",
      "params": [
       {
        "type": "int",
        "name": "hour"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": null,
      "name": "setDateTime",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "Property",
      "name": "era",
      "params": []
     },
     {
      "type": "Property",
      "name": "centuryOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfCentury",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "year",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekOfWeekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfWeek",
      "params": []
     },
     {
      "type": "Property",
      "name": "hourOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "minuteOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "minuteOfHour",
      "params": []
     },
     {
      "type": "Property",
      "name": "secondOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "secondOfMinute",
      "params": []
     },
     {
      "type": "Property",
      "name": "millisOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "millisOfSecond",
      "params": []
     },
     {
      "type": "MutableDateTime",
      "name": "copy",
      "params": []
     },
     {
      "type": "Object",
      "name": "clone",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "MutableDateTime.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadablePartial",
    "methods": [
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "field"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "field"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "baseInstant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "partial"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadablePartial.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeZone",
      "name": "UTC"
     },
     {
      "type": "Provider",
      "name": "cProvider"
     },
     {
      "type": "NameProvider",
      "name": "cNameProvider"
     },
     {
      "type": "Set",
      "name": "cAvailableIDs"
     },
     {
      "type": "DateTimeZone",
      "name": "cDefault"
     },
     {
      "type": "DateTimeFormatter",
      "name": "cOffsetFormatter"
     },
     {
      "type": "Map",
      "name": "iFixedOffsetCache"
     },
     {
      "type": "Map",
      "name": "cZoneIdConversion"
     },
     {
      "type": "String",
      "name": "iID"
     }
    ],
    "name": "DateTimeZone",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "getDefault",
      "params": []
     },
     {
      "type": null,
      "name": "setDefault",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "forID",
      "params": [
       {
        "type": "String",
        "name": "id"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "forOffsetHours",
      "params": [
       {
        "type": "int",
        "name": "hoursOffset"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "forOffsetHoursMinutes",
      "params": [
       {
        "type": "int",
        "name": "hoursOffset"
       },
       {
        "type": "int",
        "name": "minutesOffset"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "forOffsetMillis",
      "params": [
       {
        "type": "int",
        "name": "millisOffset"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "forTimeZone",
      "params": [
       {
        "type": "TimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "fixedOffsetZone",
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "int",
        "name": "offset"
       }
      ]
     },
     {
      "type": "Set",
      "name": "getAvailableIDs",
      "params": []
     },
     {
      "type": "Provider",
      "name": "getProvider",
      "params": []
     },
     {
      "type": null,
      "name": "setProvider",
      "params": [
       {
        "type": "Provider",
        "name": "provider"
       }
      ]
     },
     {
      "type": null,
      "name": "setProvider0",
      "params": [
       {
        "type": "Provider",
        "name": "provider"
       }
      ]
     },
     {
      "type": "Provider",
      "name": "getDefaultProvider",
      "params": []
     },
     {
      "type": "NameProvider",
      "name": "getNameProvider",
      "params": []
     },
     {
      "type": null,
      "name": "setNameProvider",
      "params": [
       {
        "type": "NameProvider",
        "name": "nameProvider"
       }
      ]
     },
     {
      "type": null,
      "name": "setNameProvider0",
      "params": [
       {
        "type": "NameProvider",
        "name": "nameProvider"
       }
      ]
     },
     {
      "type": "NameProvider",
      "name": "getDefaultNameProvider",
      "params": []
     },
     {
      "type": "String",
      "name": "getConvertedId",
      "params": [
       {
        "type": "String",
        "name": "id"
       }
      ]
     },
     {
      "type": "int",
      "name": "parseOffset",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "printOffset",
      "params": [
       {
        "type": "int",
        "name": "offset"
       }
      ]
     },
     {
      "type": "DateTimeFormatter",
      "name": "offsetFormatter",
      "params": []
     },
     {
      "type": "String",
      "name": "getID",
      "params": []
     },
     {
      "type": "String",
      "name": "getNameKey",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getShortName",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getShortName",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getName",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getName",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getOffset",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getOffset",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getStandardOffset",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isStandardOffset",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getOffsetFromLocal",
      "params": [
       {
        "type": "long",
        "name": "instantLocal"
       }
      ]
     },
     {
      "type": "long",
      "name": "convertUTCToLocal",
      "params": [
       {
        "type": "long",
        "name": "instantUTC"
       }
      ]
     },
     {
      "type": "long",
      "name": "convertLocalToUTC",
      "params": [
       {
        "type": "long",
        "name": "instantLocal"
       },
       {
        "type": "boolean",
        "name": "strict"
       },
       {
        "type": "long",
        "name": "originalInstantUTC"
       }
      ]
     },
     {
      "type": "long",
      "name": "convertLocalToUTC",
      "params": [
       {
        "type": "long",
        "name": "instantLocal"
       },
       {
        "type": "boolean",
        "name": "strict"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillisKeepLocal",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "newZone"
       },
       {
        "type": "long",
        "name": "oldInstant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLocalDateTimeGap",
      "params": [
       {
        "type": "LocalDateTime",
        "name": "localDateTime"
       }
      ]
     },
     {
      "type": "long",
      "name": "adjustOffset",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "boolean",
        "name": "earlierOrLater"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFixed",
      "params": []
     },
     {
      "type": "long",
      "name": "nextTransition",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "previousTransition",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "java",
      "name": "toTimeZone",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "Object",
      "name": "writeReplace",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DateTimeZone.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "JodaTimePermission",
    "methods": []
   }
  ],
  "package_name": "org.joda.time",
  "filename": "JodaTimePermission.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeFieldType",
      "name": "iDateTimeFieldType"
     },
     {
      "type": "DurationFieldType",
      "name": "iDurationFieldType"
     },
     {
      "type": "String",
      "name": "iFieldName"
     },
     {
      "type": "Number",
      "name": "iNumberValue"
     },
     {
      "type": "String",
      "name": "iStringValue"
     },
     {
      "type": "Number",
      "name": "iLowerBound"
     },
     {
      "type": "Number",
      "name": "iUpperBound"
     },
     {
      "type": "String",
      "name": "iMessage"
     }
    ],
    "name": "IllegalFieldValueException",
    "methods": [
     {
      "type": "String",
      "name": "createMessage",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "Number",
        "name": "value"
       },
       {
        "type": "Number",
        "name": "lowerBound"
       },
       {
        "type": "Number",
        "name": "upperBound"
       },
       {
        "type": "String",
        "name": "explain"
       }
      ]
     },
     {
      "type": "String",
      "name": "createMessage",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "String",
        "name": "value"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getDateTimeFieldType",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getDurationFieldType",
      "params": []
     },
     {
      "type": "String",
      "name": "getFieldName",
      "params": []
     },
     {
      "type": "Number",
      "name": "getIllegalNumberValue",
      "params": []
     },
     {
      "type": "String",
      "name": "getIllegalStringValue",
      "params": []
     },
     {
      "type": "String",
      "name": "getIllegalValueAsString",
      "params": []
     },
     {
      "type": "Number",
      "name": "getLowerBound",
      "params": []
     },
     {
      "type": "Number",
      "name": "getUpperBound",
      "params": []
     },
     {
      "type": "String",
      "name": "getMessage",
      "params": []
     },
     {
      "type": null,
      "name": "prependMessage",
      "params": [
       {
        "type": "String",
        "name": "message"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "IllegalFieldValueException.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "YEAR"
     },
     {
      "type": "int",
      "name": "MONTH_OF_YEAR"
     },
     {
      "type": "int",
      "name": "DAY_OF_MONTH"
     },
     {
      "type": "int",
      "name": "MILLIS_OF_DAY"
     },
     {
      "type": "long",
      "name": "iLocalMillis"
     },
     {
      "type": "Chronology",
      "name": "iChronology"
     }
    ],
    "name": "LocalDateTime",
    "methods": [
     {
      "type": "LocalDateTime",
      "name": "now",
      "params": []
     },
     {
      "type": "LocalDateTime",
      "name": "now",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "now",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "fromCalendarFields",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "fromDateFields",
      "params": [
       {
        "type": "Date",
        "name": "date"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "long",
      "name": "getLocalMillis",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "partial"
       }
      ]
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "toLocalDate",
      "params": []
     },
     {
      "type": "LocalTime",
      "name": "toLocalTime",
      "params": []
     },
     {
      "type": "Date",
      "name": "toDate",
      "params": []
     },
     {
      "type": "LocalDateTime",
      "name": "withLocalMillis",
      "params": [
       {
        "type": "long",
        "name": "newMillis"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withDate",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withTime",
      "params": [
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withFields",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withDurationAdded",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "durationToAdd"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "plusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minusHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minusMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minusSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "minusMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       }
      ]
     },
     {
      "type": "int",
      "name": "getEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getCenturyOfEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getYearOfEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getYearOfCentury",
      "params": []
     },
     {
      "type": "int",
      "name": "getYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeekyear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeekOfWeekyear",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfWeek",
      "params": []
     },
     {
      "type": "int",
      "name": "getHourOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinuteOfHour",
      "params": []
     },
     {
      "type": "int",
      "name": "getSecondOfMinute",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillisOfSecond",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillisOfDay",
      "params": []
     },
     {
      "type": "LocalDateTime",
      "name": "withEra",
      "params": [
       {
        "type": "int",
        "name": "era"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withCenturyOfEra",
      "params": [
       {
        "type": "int",
        "name": "centuryOfEra"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withYearOfEra",
      "params": [
       {
        "type": "int",
        "name": "yearOfEra"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withYearOfCentury",
      "params": [
       {
        "type": "int",
        "name": "yearOfCentury"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekyear"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "monthOfYear"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withWeekOfWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekOfWeekyear"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withDayOfYear",
      "params": [
       {
        "type": "int",
        "name": "dayOfYear"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withDayOfMonth",
      "params": [
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withDayOfWeek",
      "params": [
       {
        "type": "int",
        "name": "dayOfWeek"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withHourOfDay",
      "params": [
       {
        "type": "int",
        "name": "hour"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withMinuteOfHour",
      "params": [
       {
        "type": "int",
        "name": "minute"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withSecondOfMinute",
      "params": [
       {
        "type": "int",
        "name": "second"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withMillisOfSecond",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "withMillisOfDay",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Property",
      "name": "era",
      "params": []
     },
     {
      "type": "Property",
      "name": "centuryOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfCentury",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "year",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekOfWeekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfWeek",
      "params": []
     },
     {
      "type": "Property",
      "name": "hourOfDay",
      "params": []
     },
     {
      "type": "Property",
      "name": "minuteOfHour",
      "params": []
     },
     {
      "type": "Property",
      "name": "secondOfMinute",
      "params": []
     },
     {
      "type": "Property",
      "name": "millisOfSecond",
      "params": []
     },
     {
      "type": "Property",
      "name": "millisOfDay",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "LocalDateTime.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Days",
      "name": "ZERO"
     },
     {
      "type": "Days",
      "name": "ONE"
     },
     {
      "type": "Days",
      "name": "TWO"
     },
     {
      "type": "Days",
      "name": "THREE"
     },
     {
      "type": "Days",
      "name": "FOUR"
     },
     {
      "type": "Days",
      "name": "FIVE"
     },
     {
      "type": "Days",
      "name": "SIX"
     },
     {
      "type": "Days",
      "name": "SEVEN"
     },
     {
      "type": "Days",
      "name": "MAX_VALUE"
     },
     {
      "type": "Days",
      "name": "MIN_VALUE"
     },
     {
      "type": "PeriodFormatter",
      "name": "PARSER"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Days",
    "methods": [
     {
      "type": "Days",
      "name": "days",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Days",
      "name": "daysBetween",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": "Days",
      "name": "daysBetween",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "start"
       },
       {
        "type": "ReadablePartial",
        "name": "end"
       }
      ]
     },
     {
      "type": "Days",
      "name": "daysIn",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Days",
      "name": "standardDaysIn",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Days",
      "name": "parseDays",
      "params": [
       {
        "type": "String",
        "name": "periodStr"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "Weeks",
      "name": "toStandardWeeks",
      "params": []
     },
     {
      "type": "Hours",
      "name": "toStandardHours",
      "params": []
     },
     {
      "type": "Minutes",
      "name": "toStandardMinutes",
      "params": []
     },
     {
      "type": "Seconds",
      "name": "toStandardSeconds",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toStandardDuration",
      "params": []
     },
     {
      "type": "int",
      "name": "getDays",
      "params": []
     },
     {
      "type": "Days",
      "name": "plus",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Days",
      "name": "plus",
      "params": [
       {
        "type": "Days",
        "name": "days"
       }
      ]
     },
     {
      "type": "Days",
      "name": "minus",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Days",
      "name": "minus",
      "params": [
       {
        "type": "Days",
        "name": "days"
       }
      ]
     },
     {
      "type": "Days",
      "name": "multipliedBy",
      "params": [
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Days",
      "name": "dividedBy",
      "params": [
       {
        "type": "int",
        "name": "divisor"
       }
      ]
     },
     {
      "type": "Days",
      "name": "negated",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isGreaterThan",
      "params": [
       {
        "type": "Days",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLessThan",
      "params": [
       {
        "type": "Days",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Days.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "JANUARY"
     },
     {
      "type": "int",
      "name": "FEBRUARY"
     },
     {
      "type": "int",
      "name": "MARCH"
     },
     {
      "type": "int",
      "name": "APRIL"
     },
     {
      "type": "int",
      "name": "MAY"
     },
     {
      "type": "int",
      "name": "JUNE"
     },
     {
      "type": "int",
      "name": "JULY"
     },
     {
      "type": "int",
      "name": "AUGUST"
     },
     {
      "type": "int",
      "name": "SEPTEMBER"
     },
     {
      "type": "int",
      "name": "OCTOBER"
     },
     {
      "type": "int",
      "name": "NOVEMBER"
     },
     {
      "type": "int",
      "name": "DECEMBER"
     },
     {
      "type": "int",
      "name": "MONDAY"
     },
     {
      "type": "int",
      "name": "TUESDAY"
     },
     {
      "type": "int",
      "name": "WEDNESDAY"
     },
     {
      "type": "int",
      "name": "THURSDAY"
     },
     {
      "type": "int",
      "name": "FRIDAY"
     },
     {
      "type": "int",
      "name": "SATURDAY"
     },
     {
      "type": "int",
      "name": "SUNDAY"
     },
     {
      "type": "int",
      "name": "AM"
     },
     {
      "type": "int",
      "name": "PM"
     },
     {
      "type": "int",
      "name": "BC"
     },
     {
      "type": "int",
      "name": "BCE"
     },
     {
      "type": "int",
      "name": "AD"
     },
     {
      "type": "int",
      "name": "CE"
     },
     {
      "type": "int",
      "name": "MILLIS_PER_SECOND"
     },
     {
      "type": "int",
      "name": "SECONDS_PER_MINUTE"
     },
     {
      "type": "int",
      "name": "MILLIS_PER_MINUTE"
     },
     {
      "type": "int",
      "name": "MINUTES_PER_HOUR"
     },
     {
      "type": "int",
      "name": "SECONDS_PER_HOUR"
     },
     {
      "type": "int",
      "name": "MILLIS_PER_HOUR"
     },
     {
      "type": "int",
      "name": "HOURS_PER_DAY"
     },
     {
      "type": "int",
      "name": "MINUTES_PER_DAY"
     },
     {
      "type": "int",
      "name": "SECONDS_PER_DAY"
     },
     {
      "type": "int",
      "name": "MILLIS_PER_DAY"
     },
     {
      "type": "int",
      "name": "DAYS_PER_WEEK"
     },
     {
      "type": "int",
      "name": "HOURS_PER_WEEK"
     },
     {
      "type": "int",
      "name": "MINUTES_PER_WEEK"
     },
     {
      "type": "int",
      "name": "SECONDS_PER_WEEK"
     },
     {
      "type": "int",
      "name": "MILLIS_PER_WEEK"
     }
    ],
    "name": "DateTimeConstants",
    "methods": []
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DateTimeConstants.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadableInstant",
    "methods": [
     {
      "type": "long",
      "name": "getMillis",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "field"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "toInstant",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isEqual",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAfter",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBefore",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "readableInstant"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadableInstant.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "YEAR"
     },
     {
      "type": "int",
      "name": "MONTH_OF_YEAR"
     },
     {
      "type": "int",
      "name": "DAY_OF_MONTH"
     },
     {
      "type": "Set",
      "name": "DATE_DURATION_TYPES"
     },
     {
      "type": "long",
      "name": "iLocalMillis"
     },
     {
      "type": "Chronology",
      "name": "iChronology"
     },
     {
      "type": "int",
      "name": "iHash"
     }
    ],
    "name": "LocalDate",
    "methods": [
     {
      "type": "LocalDate",
      "name": "now",
      "params": []
     },
     {
      "type": "LocalDate",
      "name": "now",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "now",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "fromCalendarFields",
      "params": [
       {
        "type": "Calendar",
        "name": "calendar"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "fromDateFields",
      "params": [
       {
        "type": "Date",
        "name": "date"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "long",
      "name": "getLocalMillis",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "partial"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtStartOfDay",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtStartOfDay",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtMidnight",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtMidnight",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtCurrentTime",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeAtCurrentTime",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateMidnight",
      "name": "toDateMidnight",
      "params": []
     },
     {
      "type": "DateMidnight",
      "name": "toDateMidnight",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "toLocalDateTime",
      "params": [
       {
        "type": "LocalTime",
        "name": "time"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "LocalTime",
        "name": "time"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "LocalTime",
        "name": "time"
       },
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": []
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Date",
      "name": "toDate",
      "params": []
     },
     {
      "type": "LocalDate",
      "name": "withLocalMillis",
      "params": [
       {
        "type": "long",
        "name": "newMillis"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withFields",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withFieldAdded",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withPeriodAdded",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "plus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "plusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "plusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "plusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "plusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "minus",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "minusYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "minusMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "minusWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "minusDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": "Property",
      "name": "property",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       }
      ]
     },
     {
      "type": "int",
      "name": "getEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getCenturyOfEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getYearOfEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getYearOfCentury",
      "params": []
     },
     {
      "type": "int",
      "name": "getYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeekyear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeekOfWeekyear",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfWeek",
      "params": []
     },
     {
      "type": "LocalDate",
      "name": "withEra",
      "params": [
       {
        "type": "int",
        "name": "era"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withCenturyOfEra",
      "params": [
       {
        "type": "int",
        "name": "centuryOfEra"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withYearOfEra",
      "params": [
       {
        "type": "int",
        "name": "yearOfEra"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withYearOfCentury",
      "params": [
       {
        "type": "int",
        "name": "yearOfCentury"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekyear"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "monthOfYear"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withWeekOfWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekOfWeekyear"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withDayOfYear",
      "params": [
       {
        "type": "int",
        "name": "dayOfYear"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withDayOfMonth",
      "params": [
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "withDayOfWeek",
      "params": [
       {
        "type": "int",
        "name": "dayOfWeek"
       }
      ]
     },
     {
      "type": "Property",
      "name": "era",
      "params": []
     },
     {
      "type": "Property",
      "name": "centuryOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfCentury",
      "params": []
     },
     {
      "type": "Property",
      "name": "yearOfEra",
      "params": []
     },
     {
      "type": "Property",
      "name": "year",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "weekOfWeekyear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfYear",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "Property",
      "name": "dayOfWeek",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "LocalDate.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Interval",
    "methods": [
     {
      "type": "Interval",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": []
     },
     {
      "type": "Interval",
      "name": "overlap",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "gap",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "abuts",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "withChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "withStartMillis",
      "params": [
       {
        "type": "long",
        "name": "startInstant"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "withStart",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "withEndMillis",
      "params": [
       {
        "type": "long",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "withEnd",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "withDurationAfterStart",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "withDurationBeforeEnd",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "withPeriodAfterStart",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "withPeriodBeforeEnd",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Interval.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadWritableDateTime",
    "methods": [
     {
      "type": null,
      "name": "setYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": null,
      "name": "addYears",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": null,
      "name": "setWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekyear"
       }
      ]
     },
     {
      "type": null,
      "name": "addWeekyears",
      "params": [
       {
        "type": "int",
        "name": "weekyears"
       }
      ]
     },
     {
      "type": null,
      "name": "setMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "monthOfYear"
       }
      ]
     },
     {
      "type": null,
      "name": "addMonths",
      "params": [
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": null,
      "name": "setWeekOfWeekyear",
      "params": [
       {
        "type": "int",
        "name": "weekOfWeekyear"
       }
      ]
     },
     {
      "type": null,
      "name": "addWeeks",
      "params": [
       {
        "type": "int",
        "name": "weeks"
       }
      ]
     },
     {
      "type": null,
      "name": "setDayOfYear",
      "params": [
       {
        "type": "int",
        "name": "dayOfYear"
       }
      ]
     },
     {
      "type": null,
      "name": "setDayOfMonth",
      "params": [
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": null,
      "name": "setDayOfWeek",
      "params": [
       {
        "type": "int",
        "name": "dayOfWeek"
       }
      ]
     },
     {
      "type": null,
      "name": "addDays",
      "params": [
       {
        "type": "int",
        "name": "days"
       }
      ]
     },
     {
      "type": null,
      "name": "setHourOfDay",
      "params": [
       {
        "type": "int",
        "name": "hourOfDay"
       }
      ]
     },
     {
      "type": null,
      "name": "addHours",
      "params": [
       {
        "type": "int",
        "name": "hours"
       }
      ]
     },
     {
      "type": null,
      "name": "setMinuteOfDay",
      "params": [
       {
        "type": "int",
        "name": "minuteOfDay"
       }
      ]
     },
     {
      "type": null,
      "name": "setMinuteOfHour",
      "params": [
       {
        "type": "int",
        "name": "minuteOfHour"
       }
      ]
     },
     {
      "type": null,
      "name": "addMinutes",
      "params": [
       {
        "type": "int",
        "name": "minutes"
       }
      ]
     },
     {
      "type": null,
      "name": "setSecondOfDay",
      "params": [
       {
        "type": "int",
        "name": "secondOfDay"
       }
      ]
     },
     {
      "type": null,
      "name": "setSecondOfMinute",
      "params": [
       {
        "type": "int",
        "name": "secondOfMinute"
       }
      ]
     },
     {
      "type": null,
      "name": "addSeconds",
      "params": [
       {
        "type": "int",
        "name": "seconds"
       }
      ]
     },
     {
      "type": null,
      "name": "setMillisOfDay",
      "params": [
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": null,
      "name": "setMillisOfSecond",
      "params": [
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": null,
      "name": "addMillis",
      "params": [
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "setDate",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": null,
      "name": "setTime",
      "params": [
       {
        "type": "int",
        "name": "hour"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": null,
      "name": "setDateTime",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadWritableDateTime.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "ReadableDuration",
    "methods": [
     {
      "type": "long",
      "name": "getMillis",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toDuration",
      "params": []
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isEqual",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLongerThan",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isShorterThan",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "readableDuration"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "ReadableDuration.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "byte",
      "name": "ERAS"
     },
     {
      "type": "byte",
      "name": "CENTURIES"
     },
     {
      "type": "byte",
      "name": "WEEKYEARS"
     },
     {
      "type": "byte",
      "name": "YEARS"
     },
     {
      "type": "byte",
      "name": "MONTHS"
     },
     {
      "type": "byte",
      "name": "WEEKS"
     },
     {
      "type": "byte",
      "name": "DAYS"
     },
     {
      "type": "byte",
      "name": "HALFDAYS"
     },
     {
      "type": "byte",
      "name": "HOURS"
     },
     {
      "type": "byte",
      "name": "MINUTES"
     },
     {
      "type": "byte",
      "name": "SECONDS"
     },
     {
      "type": "byte",
      "name": "MILLIS"
     },
     {
      "type": "DurationFieldType",
      "name": "ERAS_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "CENTURIES_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "WEEKYEARS_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "YEARS_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "MONTHS_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "WEEKS_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "DAYS_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "HALFDAYS_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "HOURS_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "MINUTES_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "SECONDS_TYPE"
     },
     {
      "type": "DurationFieldType",
      "name": "MILLIS_TYPE"
     },
     {
      "type": "String",
      "name": "iName"
     }
    ],
    "name": "DurationFieldType",
    "methods": [
     {
      "type": "DurationFieldType",
      "name": "millis",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "seconds",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "minutes",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "hours",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "halfdays",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "days",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "weeks",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "weekyears",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "months",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "years",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "centuries",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "eras",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getField",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DurationFieldType.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeComparator",
      "name": "ALL_INSTANCE"
     },
     {
      "type": "DateTimeComparator",
      "name": "DATE_INSTANCE"
     },
     {
      "type": "DateTimeComparator",
      "name": "TIME_INSTANCE"
     },
     {
      "type": "DateTimeFieldType",
      "name": "iLowerLimit"
     },
     {
      "type": "DateTimeFieldType",
      "name": "iUpperLimit"
     }
    ],
    "name": "DateTimeComparator",
    "methods": [
     {
      "type": "DateTimeComparator",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "DateTimeComparator",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "lowerLimit"
       }
      ]
     },
     {
      "type": "DateTimeComparator",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "lowerLimit"
       },
       {
        "type": "DateTimeFieldType",
        "name": "upperLimit"
       }
      ]
     },
     {
      "type": "DateTimeComparator",
      "name": "getDateOnlyInstance",
      "params": []
     },
     {
      "type": "DateTimeComparator",
      "name": "getTimeOnlyInstance",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "getLowerLimit",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "getUpperLimit",
      "params": []
     },
     {
      "type": "int",
      "name": "compare",
      "params": [
       {
        "type": "Object",
        "name": "lhsObj"
       },
       {
        "type": "Object",
        "name": "rhsObj"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DateTimeComparator.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Years",
      "name": "ZERO"
     },
     {
      "type": "Years",
      "name": "ONE"
     },
     {
      "type": "Years",
      "name": "TWO"
     },
     {
      "type": "Years",
      "name": "THREE"
     },
     {
      "type": "Years",
      "name": "MAX_VALUE"
     },
     {
      "type": "Years",
      "name": "MIN_VALUE"
     },
     {
      "type": "PeriodFormatter",
      "name": "PARSER"
     },
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "Years",
    "methods": [
     {
      "type": "Years",
      "name": "years",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "Years",
      "name": "yearsBetween",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       }
      ]
     },
     {
      "type": "Years",
      "name": "yearsBetween",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "start"
       },
       {
        "type": "ReadablePartial",
        "name": "end"
       }
      ]
     },
     {
      "type": "Years",
      "name": "yearsIn",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Years",
      "name": "parseYears",
      "params": [
       {
        "type": "String",
        "name": "periodStr"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "int",
      "name": "getYears",
      "params": []
     },
     {
      "type": "Years",
      "name": "plus",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "Years",
      "name": "plus",
      "params": [
       {
        "type": "Years",
        "name": "years"
       }
      ]
     },
     {
      "type": "Years",
      "name": "minus",
      "params": [
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "Years",
      "name": "minus",
      "params": [
       {
        "type": "Years",
        "name": "years"
       }
      ]
     },
     {
      "type": "Years",
      "name": "multipliedBy",
      "params": [
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Years",
      "name": "dividedBy",
      "params": [
       {
        "type": "int",
        "name": "divisor"
       }
      ]
     },
     {
      "type": "Years",
      "name": "negated",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isGreaterThan",
      "params": [
       {
        "type": "Years",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLessThan",
      "params": [
       {
        "type": "Years",
        "name": "other"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Years.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DurationField",
    "methods": [
     {
      "type": "DurationFieldType",
      "name": "getType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isPrecise",
      "params": []
     },
     {
      "type": "long",
      "name": "getUnitMillis",
      "params": []
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "subtract",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "subtract",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "DurationField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "iMillis"
     }
    ],
    "name": "Instant",
    "methods": [
     {
      "type": "Instant",
      "name": "now",
      "params": []
     },
     {
      "type": "Instant",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "parse",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "toInstant",
      "params": []
     },
     {
      "type": "Instant",
      "name": "withMillis",
      "params": [
       {
        "type": "long",
        "name": "newMillis"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "withDurationAdded",
      "params": [
       {
        "type": "long",
        "name": "durationToAdd"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "withDurationAdded",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "durationToAdd"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "plus",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "plus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "minus",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "minus",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeISO",
      "params": []
     },
     {
      "type": "MutableDateTime",
      "name": "toMutableDateTime",
      "params": []
     },
     {
      "type": "MutableDateTime",
      "name": "toMutableDateTimeISO",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time",
  "filename": "Instant.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BasicChronology",
      "name": "iChronology"
     }
    ],
    "name": "BasicDayOfMonthDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValueForSet",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicDayOfMonthDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Chronology",
      "name": "iWithUTC"
     }
    ],
    "name": "LenientChronology",
    "methods": [
     {
      "type": "LenientChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "Chronology",
        "name": "base"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     },
     {
      "type": "DateTimeField",
      "name": "convertField",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "LenientChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeField",
      "name": "INSTANCE"
     }
    ],
    "name": "ISOYearOfEraDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "years"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapField",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "ISOYearOfEraDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "GJMonthOfYearDateTimeField",
    "methods": [
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "convertText",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumShortTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "GJMonthOfYearDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Instant",
      "name": "DEFAULT_CUTOVER"
     },
     {
      "type": "Map",
      "name": "cCache"
     },
     {
      "type": "JulianChronology",
      "name": "iJulianChronology"
     },
     {
      "type": "GregorianChronology",
      "name": "iGregorianChronology"
     },
     {
      "type": "Instant",
      "name": "iCutoverInstant"
     },
     {
      "type": "long",
      "name": "iCutoverMillis"
     },
     {
      "type": "long",
      "name": "iGapDuration"
     }
    ],
    "name": "GJChronology",
    "methods": [
     {
      "type": "long",
      "name": "convertByYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Chronology",
        "name": "from"
       },
       {
        "type": "Chronology",
        "name": "to"
       }
      ]
     },
     {
      "type": "long",
      "name": "convertByWeekyear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Chronology",
        "name": "from"
       },
       {
        "type": "Chronology",
        "name": "to"
       }
      ]
     },
     {
      "type": "GJChronology",
      "name": "getInstanceUTC",
      "params": []
     },
     {
      "type": "GJChronology",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "GJChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "GJChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       },
       {
        "type": "ReadableInstant",
        "name": "gregorianCutover"
       }
      ]
     },
     {
      "type": "GJChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       },
       {
        "type": "ReadableInstant",
        "name": "gregorianCutover"
       },
       {
        "type": "int",
        "name": "minDaysInFirstWeek"
       }
      ]
     },
     {
      "type": "GJChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       },
       {
        "type": "long",
        "name": "gregorianCutover"
       },
       {
        "type": "int",
        "name": "minDaysInFirstWeek"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "getGregorianCutover",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumDaysInFirstWeek",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     },
     {
      "type": "long",
      "name": "julianToGregorianByYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "gregorianToJulianByYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "julianToGregorianByWeekyear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "gregorianToJulianByWeekyear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "GJChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "AM"
     },
     {
      "type": "DateTimeField",
      "name": "ERA_FIELD"
     },
     {
      "type": "int",
      "name": "MIN_YEAR"
     },
     {
      "type": "int",
      "name": "MAX_YEAR"
     },
     {
      "type": "Map",
      "name": "cCache"
     },
     {
      "type": "CopticChronology",
      "name": "INSTANCE_UTC"
     }
    ],
    "name": "CopticChronology",
    "methods": [
     {
      "type": "CopticChronology",
      "name": "getInstanceUTC",
      "params": []
     },
     {
      "type": "CopticChronology",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "CopticChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "CopticChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       },
       {
        "type": "int",
        "name": "minDaysInFirstWeek"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "long",
      "name": "calculateFirstDayOfYearMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaxYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getApproxMillisAtEpochDividedByTwo",
      "params": []
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "CopticChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DurationField",
      "name": "cMillisField"
     },
     {
      "type": "DurationField",
      "name": "cSecondsField"
     },
     {
      "type": "DurationField",
      "name": "cMinutesField"
     },
     {
      "type": "DurationField",
      "name": "cHoursField"
     },
     {
      "type": "DurationField",
      "name": "cHalfdaysField"
     },
     {
      "type": "DurationField",
      "name": "cDaysField"
     },
     {
      "type": "DurationField",
      "name": "cWeeksField"
     },
     {
      "type": "DateTimeField",
      "name": "cMillisOfSecondField"
     },
     {
      "type": "DateTimeField",
      "name": "cMillisOfDayField"
     },
     {
      "type": "DateTimeField",
      "name": "cSecondOfMinuteField"
     },
     {
      "type": "DateTimeField",
      "name": "cSecondOfDayField"
     },
     {
      "type": "DateTimeField",
      "name": "cMinuteOfHourField"
     },
     {
      "type": "DateTimeField",
      "name": "cMinuteOfDayField"
     },
     {
      "type": "DateTimeField",
      "name": "cHourOfDayField"
     },
     {
      "type": "DateTimeField",
      "name": "cHourOfHalfdayField"
     },
     {
      "type": "DateTimeField",
      "name": "cClockhourOfDayField"
     },
     {
      "type": "DateTimeField",
      "name": "cClockhourOfHalfdayField"
     },
     {
      "type": "DateTimeField",
      "name": "cHalfdayOfDayField"
     },
     {
      "type": "int",
      "name": "CACHE_SIZE"
     },
     {
      "type": "int",
      "name": "CACHE_MASK"
     },
     {
      "type": "YearInfo",
      "name": "iYearInfoCache"
     },
     {
      "type": "int",
      "name": "iMinDaysInFirstWeek"
     }
    ],
    "name": "BasicChronology",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumDaysInFirstWeek",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInYearMax",
      "params": []
     },
     {
      "type": "int",
      "name": "getDaysInYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getWeeksInYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "long",
      "name": "getFirstWeekOfYearMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "long",
      "name": "getYearMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "long",
      "name": "getYearMonthMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "long",
      "name": "getYearMonthDayMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "int",
      "name": "getYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDayOfYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDayOfYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getWeekyear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getWeekOfWeekyear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getWeekOfWeekyear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDayOfWeek",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMillisOfDay",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInMonthMax",
      "params": []
     },
     {
      "type": "int",
      "name": "getDaysInMonthMax",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInMonthMaxForSet",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateMidnightMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "long",
      "name": "getYearDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLeapYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInYearMonth",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInMonthMax",
      "params": [
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "long",
      "name": "getTotalMillisByYearMonth",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "long",
      "name": "calculateFirstDayOfYearMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaxYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaxMonth",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaxMonth",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYearDividedByTwo",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerMonth",
      "params": []
     },
     {
      "type": "long",
      "name": "getApproxMillisAtEpochDividedByTwo",
      "params": []
     },
     {
      "type": "long",
      "name": "setYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "YearInfo",
      "name": "getYearInfo",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_YEAR"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_MONTH"
     },
     {
      "type": "int",
      "name": "DAYS_0000_TO_1970"
     },
     {
      "type": "int",
      "name": "MIN_YEAR"
     },
     {
      "type": "int",
      "name": "MAX_YEAR"
     },
     {
      "type": "GregorianChronology",
      "name": "INSTANCE_UTC"
     },
     {
      "type": "Map",
      "name": "cCache"
     }
    ],
    "name": "GregorianChronology",
    "methods": [
     {
      "type": "GregorianChronology",
      "name": "getInstanceUTC",
      "params": []
     },
     {
      "type": "GregorianChronology",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "GregorianChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "GregorianChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       },
       {
        "type": "int",
        "name": "minDaysInFirstWeek"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLeapYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "long",
      "name": "calculateFirstDayOfYearMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaxYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYearDividedByTwo",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerMonth",
      "params": []
     },
     {
      "type": "long",
      "name": "getApproxMillisAtEpochDividedByTwo",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "GregorianChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "ZonedChronology",
    "methods": [
     {
      "type": "ZonedChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "Chronology",
        "name": "base"
       },
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "useTimeArithmetic",
      "params": [
       {
        "type": "DurationField",
        "name": "field"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "long",
      "name": "localToUTC",
      "params": [
       {
        "type": "long",
        "name": "localInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "convertField",
      "params": [
       {
        "type": "DurationField",
        "name": "field"
       },
       {
        "type": "HashMap",
        "name": "converted"
       }
      ]
     },
     {
      "type": "DateTimeField",
      "name": "convertField",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       },
       {
        "type": "HashMap",
        "name": "converted"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "ZonedChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "FAST_CACHE_SIZE"
     },
     {
      "type": "GJLocaleSymbols",
      "name": "cFastCache"
     },
     {
      "type": "WeakHashMap",
      "name": "cCache"
     },
     {
      "type": "WeakReference",
      "name": "iLocale"
     },
     {
      "type": "String",
      "name": "iEras"
     },
     {
      "type": "String",
      "name": "iDaysOfWeek"
     },
     {
      "type": "String",
      "name": "iShortDaysOfWeek"
     },
     {
      "type": "String",
      "name": "iMonths"
     },
     {
      "type": "String",
      "name": "iShortMonths"
     },
     {
      "type": "String",
      "name": "iHalfday"
     },
     {
      "type": "TreeMap",
      "name": "iParseEras"
     },
     {
      "type": "TreeMap",
      "name": "iParseDaysOfWeek"
     },
     {
      "type": "TreeMap",
      "name": "iParseMonths"
     },
     {
      "type": "int",
      "name": "iMaxEraLength"
     },
     {
      "type": "int",
      "name": "iMaxDayOfWeekLength"
     },
     {
      "type": "int",
      "name": "iMaxShortDayOfWeekLength"
     },
     {
      "type": "int",
      "name": "iMaxMonthLength"
     },
     {
      "type": "int",
      "name": "iMaxShortMonthLength"
     },
     {
      "type": "int",
      "name": "iMaxHalfdayLength"
     }
    ],
    "name": "GJLocaleSymbols",
    "methods": [
     {
      "type": "GJLocaleSymbols",
      "name": "forLocale",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "realignMonths",
      "params": [
       {
        "type": "String",
        "name": "months"
       }
      ]
     },
     {
      "type": "String",
      "name": "realignDaysOfWeek",
      "params": [
       {
        "type": "String",
        "name": "daysOfWeek"
       }
      ]
     },
     {
      "type": null,
      "name": "addSymbols",
      "params": [
       {
        "type": "TreeMap",
        "name": "map"
       },
       {
        "type": "String",
        "name": "symbols"
       },
       {
        "type": "Integer",
        "name": "integers"
       }
      ]
     },
     {
      "type": null,
      "name": "addNumerals",
      "params": [
       {
        "type": "TreeMap",
        "name": "map"
       },
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "end"
       },
       {
        "type": "Integer",
        "name": "integers"
       }
      ]
     },
     {
      "type": "int",
      "name": "maxLength",
      "params": [
       {
        "type": "String",
        "name": "a"
       }
      ]
     },
     {
      "type": "String",
      "name": "eraValueToText",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "eraTextToValue",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "int",
      "name": "getEraMaxTextLength",
      "params": []
     },
     {
      "type": "String",
      "name": "monthOfYearValueToText",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "String",
      "name": "monthOfYearValueToShortText",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "monthOfYearTextToValue",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMonthMaxTextLength",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonthMaxShortTextLength",
      "params": []
     },
     {
      "type": "String",
      "name": "dayOfWeekValueToText",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "String",
      "name": "dayOfWeekValueToShortText",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "dayOfWeekTextToValue",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDayOfWeekMaxTextLength",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfWeekMaxShortTextLength",
      "params": []
     },
     {
      "type": "String",
      "name": "halfdayValueToText",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "halfdayTextToValue",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "int",
      "name": "getHalfdayMaxTextLength",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "GJLocaleSymbols.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BasicChronology",
      "name": "iChronology"
     }
    ],
    "name": "GJYearOfEraDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "years"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapField",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "GJYearOfEraDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "EE"
     },
     {
      "type": "DateTimeField",
      "name": "ERA_FIELD"
     },
     {
      "type": "int",
      "name": "MIN_YEAR"
     },
     {
      "type": "int",
      "name": "MAX_YEAR"
     },
     {
      "type": "Map",
      "name": "cCache"
     },
     {
      "type": "EthiopicChronology",
      "name": "INSTANCE_UTC"
     }
    ],
    "name": "EthiopicChronology",
    "methods": [
     {
      "type": "EthiopicChronology",
      "name": "getInstanceUTC",
      "params": []
     },
     {
      "type": "EthiopicChronology",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "EthiopicChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "EthiopicChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       },
       {
        "type": "int",
        "name": "minDaysInFirstWeek"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "long",
      "name": "calculateFirstDayOfYearMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaxYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getApproxMillisAtEpochDividedByTwo",
      "params": []
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "EthiopicChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "MIN"
     },
     {
      "type": "BasicChronology",
      "name": "iChronology"
     },
     {
      "type": "int",
      "name": "iMax"
     },
     {
      "type": "int",
      "name": "iLeapMonth"
     }
    ],
    "name": "BasicMonthOfYearDateTimeField",
    "methods": [
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "months"
       }
      ]
     },
     {
      "type": "int",
      "name": "add",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "months"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicMonthOfYearDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Chronology",
      "name": "iBase"
     },
     {
      "type": "Object",
      "name": "iParam"
     },
     {
      "type": "DurationField",
      "name": "iMillis"
     },
     {
      "type": "DurationField",
      "name": "iSeconds"
     },
     {
      "type": "DurationField",
      "name": "iMinutes"
     },
     {
      "type": "DurationField",
      "name": "iHours"
     },
     {
      "type": "DurationField",
      "name": "iHalfdays"
     },
     {
      "type": "DurationField",
      "name": "iDays"
     },
     {
      "type": "DurationField",
      "name": "iWeeks"
     },
     {
      "type": "DurationField",
      "name": "iWeekyears"
     },
     {
      "type": "DurationField",
      "name": "iMonths"
     },
     {
      "type": "DurationField",
      "name": "iYears"
     },
     {
      "type": "DurationField",
      "name": "iCenturies"
     },
     {
      "type": "DurationField",
      "name": "iEras"
     },
     {
      "type": "DateTimeField",
      "name": "iMillisOfSecond"
     },
     {
      "type": "DateTimeField",
      "name": "iMillisOfDay"
     },
     {
      "type": "DateTimeField",
      "name": "iSecondOfMinute"
     },
     {
      "type": "DateTimeField",
      "name": "iSecondOfDay"
     },
     {
      "type": "DateTimeField",
      "name": "iMinuteOfHour"
     },
     {
      "type": "DateTimeField",
      "name": "iMinuteOfDay"
     },
     {
      "type": "DateTimeField",
      "name": "iHourOfDay"
     },
     {
      "type": "DateTimeField",
      "name": "iClockhourOfDay"
     },
     {
      "type": "DateTimeField",
      "name": "iHourOfHalfday"
     },
     {
      "type": "DateTimeField",
      "name": "iClockhourOfHalfday"
     },
     {
      "type": "DateTimeField",
      "name": "iHalfdayOfDay"
     },
     {
      "type": "DateTimeField",
      "name": "iDayOfWeek"
     },
     {
      "type": "DateTimeField",
      "name": "iDayOfMonth"
     },
     {
      "type": "DateTimeField",
      "name": "iDayOfYear"
     },
     {
      "type": "DateTimeField",
      "name": "iWeekOfWeekyear"
     },
     {
      "type": "DateTimeField",
      "name": "iWeekyear"
     },
     {
      "type": "DateTimeField",
      "name": "iWeekyearOfCentury"
     },
     {
      "type": "DateTimeField",
      "name": "iMonthOfYear"
     },
     {
      "type": "DateTimeField",
      "name": "iYear"
     },
     {
      "type": "DateTimeField",
      "name": "iYearOfEra"
     },
     {
      "type": "DateTimeField",
      "name": "iYearOfCentury"
     },
     {
      "type": "DateTimeField",
      "name": "iCenturyOfEra"
     },
     {
      "type": "DateTimeField",
      "name": "iEra"
     },
     {
      "type": "int",
      "name": "iBaseFlags"
     }
    ],
    "name": "AssembledChronology",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "millis",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "millisOfSecond",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "millisOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "seconds",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "secondOfMinute",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "secondOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "minutes",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "minuteOfHour",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "minuteOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "hours",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "hourOfDay",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "clockhourOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "halfdays",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "hourOfHalfday",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "clockhourOfHalfday",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "halfdayOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "days",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "dayOfWeek",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "dayOfYear",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "weeks",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "weekOfWeekyear",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "weekyears",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "weekyearOfCentury",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "months",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "years",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "year",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "yearOfEra",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "yearOfCentury",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "centuries",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "centuryOfEra",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "eras",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "era",
      "params": []
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getBase",
      "params": []
     },
     {
      "type": "Object",
      "name": "getParam",
      "params": []
     },
     {
      "type": null,
      "name": "setFields",
      "params": []
     },
     {
      "type": null,
      "name": "readObject",
      "params": [
       {
        "type": "ObjectInputStream",
        "name": "in"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "AssembledChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BasicChronology",
      "name": "iChronology"
     }
    ],
    "name": "BasicWeekOfWeekyearDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValueForSet",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicWeekOfWeekyearDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_YEAR"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_MONTH"
     },
     {
      "type": "int",
      "name": "MIN_YEAR"
     },
     {
      "type": "int",
      "name": "MAX_YEAR"
     },
     {
      "type": "JulianChronology",
      "name": "INSTANCE_UTC"
     },
     {
      "type": "Map",
      "name": "cCache"
     }
    ],
    "name": "JulianChronology",
    "methods": [
     {
      "type": "int",
      "name": "adjustYearForSet",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "JulianChronology",
      "name": "getInstanceUTC",
      "params": []
     },
     {
      "type": "JulianChronology",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "JulianChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "JulianChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       },
       {
        "type": "int",
        "name": "minDaysInFirstWeek"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateMidnightMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLeapYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "long",
      "name": "calculateFirstDayOfYearMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaxYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYearDividedByTwo",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerMonth",
      "params": []
     },
     {
      "type": "long",
      "name": "getApproxMillisAtEpochDividedByTwo",
      "params": []
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "JulianChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "MIN_DAYS_PER_MONTH_ARRAY"
     },
     {
      "type": "int",
      "name": "MAX_DAYS_PER_MONTH_ARRAY"
     },
     {
      "type": "long",
      "name": "MIN_TOTAL_MILLIS_BY_MONTH_ARRAY"
     },
     {
      "type": "long",
      "name": "MAX_TOTAL_MILLIS_BY_MONTH_ARRAY"
     },
     {
      "type": "long",
      "name": "FEB_29"
     }
    ],
    "name": "BasicGJChronology",
    "methods": [
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInYearMonth",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInMonthMax",
      "params": [
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInMonthMaxForSet",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getTotalMillisByYearMonth",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "long",
      "name": "getYearDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "setYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicGJChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "BE"
     },
     {
      "type": "DateTimeField",
      "name": "ERA_FIELD"
     },
     {
      "type": "int",
      "name": "BUDDHIST_OFFSET"
     },
     {
      "type": "Map",
      "name": "cCache"
     },
     {
      "type": "BuddhistChronology",
      "name": "INSTANCE_UTC"
     }
    ],
    "name": "BuddhistChronology",
    "methods": [
     {
      "type": "BuddhistChronology",
      "name": "getInstanceUTC",
      "params": []
     },
     {
      "type": "BuddhistChronology",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "BuddhistChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BuddhistChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BasicChronology",
      "name": "iChronology"
     }
    ],
    "name": "BasicDayOfYearDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValueForSet",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicDayOfYearDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "MONTH_LENGTH"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_YEAR"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_MONTH"
     }
    ],
    "name": "BasicFixedMonthChronology",
    "methods": [
     {
      "type": "long",
      "name": "setYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "long",
      "name": "getYearDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getTotalMillisByYearMonth",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLeapYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInYearMonth",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInMonthMax",
      "params": []
     },
     {
      "type": "int",
      "name": "getDaysInMonthMax",
      "params": [
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaxMonth",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYearDividedByTwo",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerMonth",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicFixedMonthChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BasicChronology",
      "name": "iChronology"
     }
    ],
    "name": "GJEraDateTimeField",
    "methods": [
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "era"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfEven",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "GJEraDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BasicChronology",
      "name": "iChronology"
     }
    ],
    "name": "BasicYearDateTimeField",
    "methods": [
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "years"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicYearDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Chronology",
      "name": "iWithUTC"
     }
    ],
    "name": "StrictChronology",
    "methods": [
     {
      "type": "StrictChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "Chronology",
        "name": "base"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     },
     {
      "type": "DateTimeField",
      "name": "convertField",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "StrictChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "WEEK_53"
     },
     {
      "type": "BasicChronology",
      "name": "iChronology"
     }
    ],
    "name": "BasicWeekyearDateTimeField",
    "methods": [
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "years"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicWeekyearDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "ERA_VALUE"
     },
     {
      "type": "String",
      "name": "iEraText"
     }
    ],
    "name": "BasicSingleEraDateTimeField",
    "methods": [
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "era"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfEven",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BasicSingleEraDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "BasicChronology",
      "name": "iChronology"
     }
    ],
    "name": "GJDayOfWeekDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "convertText",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumShortTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "GJDayOfWeekDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ISOChronology",
      "name": "INSTANCE_UTC"
     },
     {
      "type": "int",
      "name": "FAST_CACHE_SIZE"
     },
     {
      "type": "ISOChronology",
      "name": "cFastCache"
     },
     {
      "type": "Map",
      "name": "cCache"
     }
    ],
    "name": "ISOChronology",
    "methods": [
     {
      "type": "ISOChronology",
      "name": "getInstanceUTC",
      "params": []
     },
     {
      "type": "ISOChronology",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "ISOChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "Object",
      "name": "writeReplace",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "ISOChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTime",
      "name": "iLowerLimit"
     },
     {
      "type": "DateTime",
      "name": "iUpperLimit"
     },
     {
      "type": "LimitChronology",
      "name": "iWithUTC"
     }
    ],
    "name": "LimitChronology",
    "methods": [
     {
      "type": "LimitChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "Chronology",
        "name": "base"
       },
       {
        "type": "ReadableDateTime",
        "name": "lowerLimit"
       },
       {
        "type": "ReadableDateTime",
        "name": "upperLimit"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "getLowerLimit",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "getUpperLimit",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "convertField",
      "params": [
       {
        "type": "DurationField",
        "name": "field"
       },
       {
        "type": "HashMap",
        "name": "converted"
       }
      ]
     },
     {
      "type": "DateTimeField",
      "name": "convertField",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       },
       {
        "type": "HashMap",
        "name": "converted"
       }
      ]
     },
     {
      "type": null,
      "name": "checkLimits",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "desc"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "LimitChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "AH"
     },
     {
      "type": "DateTimeField",
      "name": "ERA_FIELD"
     },
     {
      "type": "LeapYearPatternType",
      "name": "LEAP_YEAR_15_BASED"
     },
     {
      "type": "LeapYearPatternType",
      "name": "LEAP_YEAR_16_BASED"
     },
     {
      "type": "LeapYearPatternType",
      "name": "LEAP_YEAR_INDIAN"
     },
     {
      "type": "LeapYearPatternType",
      "name": "LEAP_YEAR_HABASH_AL_HASIB"
     },
     {
      "type": "int",
      "name": "MIN_YEAR"
     },
     {
      "type": "int",
      "name": "MAX_YEAR"
     },
     {
      "type": "int",
      "name": "MONTH_PAIR_LENGTH"
     },
     {
      "type": "int",
      "name": "LONG_MONTH_LENGTH"
     },
     {
      "type": "int",
      "name": "SHORT_MONTH_LENGTH"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_MONTH_PAIR"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_MONTH"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_LONG_MONTH"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_YEAR"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_SHORT_YEAR"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_LONG_YEAR"
     },
     {
      "type": "long",
      "name": "MILLIS_YEAR_1"
     },
     {
      "type": "int",
      "name": "CYCLE"
     },
     {
      "type": "long",
      "name": "MILLIS_PER_CYCLE"
     },
     {
      "type": "Map",
      "name": "cCache"
     },
     {
      "type": "IslamicChronology",
      "name": "INSTANCE_UTC"
     },
     {
      "type": "LeapYearPatternType",
      "name": "iLeapYears"
     }
    ],
    "name": "IslamicChronology",
    "methods": [
     {
      "type": "IslamicChronology",
      "name": "getInstanceUTC",
      "params": []
     },
     {
      "type": "IslamicChronology",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "IslamicChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "IslamicChronology",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       },
       {
        "type": "LeapYearPatternType",
        "name": "leapYears"
       }
      ]
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "LeapYearPatternType",
      "name": "getLeapYearPatternType",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "getYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "setYear",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "long",
      "name": "getYearDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getTotalMillisByYearMonth",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLeapYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInYearMax",
      "params": []
     },
     {
      "type": "int",
      "name": "getDaysInYear",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInYearMonth",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDaysInMonthMax",
      "params": []
     },
     {
      "type": "int",
      "name": "getDaysInMonthMax",
      "params": [
       {
        "type": "int",
        "name": "month"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerYearDividedByTwo",
      "params": []
     },
     {
      "type": "long",
      "name": "getAverageMillisPerMonth",
      "params": []
     },
     {
      "type": "long",
      "name": "calculateFirstDayOfYearMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaxYear",
      "params": []
     },
     {
      "type": "long",
      "name": "getApproxMillisAtEpochDividedByTwo",
      "params": []
     },
     {
      "type": null,
      "name": "assemble",
      "params": [
       {
        "type": "Fields",
        "name": "fields"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "IslamicChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "BaseChronology",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withUTC",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDateTimeMillis",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "hourOfDay"
       },
       {
        "type": "int",
        "name": "minuteOfHour"
       },
       {
        "type": "int",
        "name": "secondOfMinute"
       },
       {
        "type": "int",
        "name": "millisOfSecond"
       }
      ]
     },
     {
      "type": null,
      "name": "validate",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "long",
        "name": "startInstant"
       },
       {
        "type": "long",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "int",
        "name": "scalar"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "millis",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "millisOfSecond",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "millisOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "seconds",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "secondOfMinute",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "secondOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "minutes",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "minuteOfHour",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "minuteOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "hours",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "hourOfDay",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "clockhourOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "halfdays",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "hourOfHalfday",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "clockhourOfHalfday",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "halfdayOfDay",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "days",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "dayOfWeek",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "dayOfMonth",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "dayOfYear",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "weeks",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "weekOfWeekyear",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "weekyears",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "weekyearOfCentury",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "months",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "monthOfYear",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "years",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "year",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "yearOfEra",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "yearOfCentury",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "centuries",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "centuryOfEra",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "eras",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "era",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.chrono",
  "filename": "BaseChronology.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "HashMap",
      "name": "cCache"
     },
     {
      "type": "DateTimeFieldType",
      "name": "iType"
     },
     {
      "type": "DurationField",
      "name": "iDurationField"
     }
    ],
    "name": "UnsupportedDateTimeField",
    "methods": [
     {
      "type": "UnsupportedDateTimeField",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       },
       {
        "type": "DurationField",
        "name": "durationField"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "add",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapPartial",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapField",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "newValue"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "int",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumShortTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfEven",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "UnsupportedOperationException",
      "name": "unsupported",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "UnsupportedDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "HashMap",
      "name": "cCache"
     },
     {
      "type": "DurationFieldType",
      "name": "iType"
     }
    ],
    "name": "UnsupportedDurationField",
    "methods": [
     {
      "type": "UnsupportedDurationField",
      "name": "getInstance",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "DurationFieldType",
      "name": "getType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isPrecise",
      "params": []
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getUnitMillis",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "DurationField",
        "name": "durationField"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     },
     {
      "type": "UnsupportedOperationException",
      "name": "unsupported",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "UnsupportedDurationField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeField",
      "name": "iField"
     }
    ],
    "name": "DecoratedDateTimeField",
    "methods": [
     {
      "type": "DateTimeField",
      "name": "getWrappedField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "DecoratedDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "iRange"
     },
     {
      "type": "DurationField",
      "name": "iRangeField"
     }
    ],
    "name": "PreciseDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getRange",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "PreciseDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DurationField",
      "name": "iField"
     }
    ],
    "name": "DecoratedDurationField",
    "methods": [
     {
      "type": "DurationField",
      "name": "getWrappedField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isPrecise",
      "params": []
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getUnitMillis",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "DecoratedDurationField.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AbstractPartialFieldProperty",
    "methods": [
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "ReadablePartial",
      "name": "getReadablePartial",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": []
     },
     {
      "type": "String",
      "name": "getAsString",
      "params": []
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": []
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": []
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValueOverall",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValueOverall",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumShortTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "AbstractPartialFieldProperty.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Chronology",
      "name": "iChronology"
     },
     {
      "type": "int",
      "name": "iSkip"
     },
     {
      "type": "int",
      "name": "iMinValue"
     }
    ],
    "name": "SkipDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "SkipDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "iUnitMillis"
     },
     {
      "type": "DurationField",
      "name": "iUnitField"
     }
    ],
    "name": "PreciseDurationDateTimeField",
    "methods": [
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "getUnitMillis",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValueForSet",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "PreciseDurationDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "ZeroIsMaxDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapField",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfEven",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "ZeroIsMaxDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "iOffset"
     },
     {
      "type": "int",
      "name": "iMin"
     },
     {
      "type": "int",
      "name": "iMax"
     }
    ],
    "name": "OffsetDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "amount"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfEven",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getOffset",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "OffsetDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "iDivisor"
     },
     {
      "type": "DurationField",
      "name": "iRangeField"
     }
    ],
    "name": "RemainderDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfEven",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDivisor",
      "params": []
     },
     {
      "type": "int",
      "name": "getDivided",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "RemainderDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DurationField",
      "name": "INSTANCE"
     }
    ],
    "name": "MillisDurationField",
    "methods": [
     {
      "type": "DurationFieldType",
      "name": "getType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isPrecise",
      "params": []
     },
     {
      "type": "long",
      "name": "getUnitMillis",
      "params": []
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "DurationField",
        "name": "otherField"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "MillisDurationField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DateTimeField",
      "name": "iField"
     },
     {
      "type": "DateTimeFieldType",
      "name": "iType"
     }
    ],
    "name": "DelegatedDateTimeField",
    "methods": [
     {
      "type": "DateTimeField",
      "name": "getWrappedField",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "getType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "add",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapPartial",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapField",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "int",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "newValue"
       }
      ]
     },
     {
      "type": "int",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumShortTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfEven",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "DelegatedDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "DateTimeFieldType",
      "name": "iType"
     }
    ],
    "name": "BaseDateTimeField",
    "methods": [
     {
      "type": "DateTimeFieldType",
      "name": "getType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "int",
        "name": "fieldValue"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "add",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapPartial",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "addWrapField",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "valueToAdd"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "newValue"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "int",
      "name": "set",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "fieldIndex"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "convertText",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumShortTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfCeiling",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "roundHalfEven",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "BaseDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "AbstractReadableInstantFieldProperty",
    "methods": [
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": []
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": []
     },
     {
      "type": "String",
      "name": "getAsString",
      "params": []
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": []
     },
     {
      "type": "String",
      "name": "getAsText",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": []
     },
     {
      "type": "String",
      "name": "getAsShortText",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isLeap",
      "params": []
     },
     {
      "type": "int",
      "name": "getLeapAmount",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getLeapDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValueOverall",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValueOverall",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMaximumShortTextLength",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": []
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "AbstractReadableInstantFieldProperty.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "iUnitMillis"
     }
    ],
    "name": "PreciseDurationField",
    "methods": [
     {
      "type": "boolean",
      "name": "isPrecise",
      "params": []
     },
     {
      "type": "long",
      "name": "getUnitMillis",
      "params": []
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "PreciseDurationField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Chronology",
      "name": "iBase"
     }
    ],
    "name": "LenientDateTimeField",
    "methods": [
     {
      "type": "DateTimeField",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       },
       {
        "type": "Chronology",
        "name": "base"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "LenientDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "iDivisor"
     },
     {
      "type": "DurationField",
      "name": "iDurationField"
     },
     {
      "type": "int",
      "name": "iMin"
     },
     {
      "type": "int",
      "name": "iMax"
     }
    ],
    "name": "DividedDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "amount"
       }
      ]
     },
     {
      "type": "long",
      "name": "addWrapField",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "amount"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "int",
      "name": "getMaximumValue",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "remainder",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDivisor",
      "params": []
     },
     {
      "type": "int",
      "name": "getRemainder",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "DividedDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Chronology",
      "name": "iChronology"
     },
     {
      "type": "int",
      "name": "iSkip"
     },
     {
      "type": "int",
      "name": "iMinValue"
     }
    ],
    "name": "SkipUndoDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "millis"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getMinimumValue",
      "params": []
     },
     {
      "type": "Object",
      "name": "readResolve",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "SkipUndoDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DurationField",
      "name": "iField"
     },
     {
      "type": "DurationFieldType",
      "name": "iType"
     }
    ],
    "name": "DelegatedDurationField",
    "methods": [
     {
      "type": "DurationField",
      "name": "getWrappedField",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isPrecise",
      "params": []
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getUnitMillis",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "DurationField",
        "name": "durationField"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "DelegatedDurationField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DurationFieldType",
      "name": "iType"
     }
    ],
    "name": "BaseDurationField",
    "methods": [
     {
      "type": "DurationFieldType",
      "name": "getType",
      "params": []
     },
     {
      "type": "String",
      "name": "getName",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": []
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "DurationField",
        "name": "otherField"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "BaseDurationField.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "FieldUtils",
    "methods": [
     {
      "type": "int",
      "name": "safeNegate",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "safeAdd",
      "params": [
       {
        "type": "int",
        "name": "val1"
       },
       {
        "type": "int",
        "name": "val2"
       }
      ]
     },
     {
      "type": "long",
      "name": "safeAdd",
      "params": [
       {
        "type": "long",
        "name": "val1"
       },
       {
        "type": "long",
        "name": "val2"
       }
      ]
     },
     {
      "type": "long",
      "name": "safeSubtract",
      "params": [
       {
        "type": "long",
        "name": "val1"
       },
       {
        "type": "long",
        "name": "val2"
       }
      ]
     },
     {
      "type": "int",
      "name": "safeMultiply",
      "params": [
       {
        "type": "int",
        "name": "val1"
       },
       {
        "type": "int",
        "name": "val2"
       }
      ]
     },
     {
      "type": "long",
      "name": "safeMultiply",
      "params": [
       {
        "type": "long",
        "name": "val1"
       },
       {
        "type": "int",
        "name": "val2"
       }
      ]
     },
     {
      "type": "long",
      "name": "safeMultiply",
      "params": [
       {
        "type": "long",
        "name": "val1"
       },
       {
        "type": "long",
        "name": "val2"
       }
      ]
     },
     {
      "type": "int",
      "name": "safeToInt",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "safeMultiplyToInt",
      "params": [
       {
        "type": "long",
        "name": "val1"
       },
       {
        "type": "long",
        "name": "val2"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyValueBounds",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "lowerBound"
       },
       {
        "type": "int",
        "name": "upperBound"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyValueBounds",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "lowerBound"
       },
       {
        "type": "int",
        "name": "upperBound"
       }
      ]
     },
     {
      "type": null,
      "name": "verifyValueBounds",
      "params": [
       {
        "type": "String",
        "name": "fieldName"
       },
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "lowerBound"
       },
       {
        "type": "int",
        "name": "upperBound"
       }
      ]
     },
     {
      "type": "int",
      "name": "getWrappedValue",
      "params": [
       {
        "type": "int",
        "name": "currentValue"
       },
       {
        "type": "int",
        "name": "wrapValue"
       },
       {
        "type": "int",
        "name": "minValue"
       },
       {
        "type": "int",
        "name": "maxValue"
       }
      ]
     },
     {
      "type": "int",
      "name": "getWrappedValue",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "minValue"
       },
       {
        "type": "int",
        "name": "maxValue"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "object1"
       },
       {
        "type": "Object",
        "name": "object2"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "FieldUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "iUnitMillis"
     },
     {
      "type": "DurationField",
      "name": "iDurationField"
     }
    ],
    "name": "ImpreciseDateTimeField",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "DurationField",
      "name": "getDurationField",
      "params": []
     },
     {
      "type": "DurationField",
      "name": "getRangeDurationField",
      "params": []
     },
     {
      "type": "long",
      "name": "roundFloor",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDurationUnitMillis",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "ImpreciseDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "StrictDateTimeField",
    "methods": [
     {
      "type": "DateTimeField",
      "name": "getInstance",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLenient",
      "params": []
     },
     {
      "type": "long",
      "name": "set",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "StrictDateTimeField.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "iScalar"
     }
    ],
    "name": "ScaledDurationField",
    "methods": [
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getValueAsLong",
      "params": [
       {
        "type": "long",
        "name": "duration"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": [
       {
        "type": "long",
        "name": "value"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "long",
      "name": "add",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDifference",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDifferenceAsLong",
      "params": [
       {
        "type": "long",
        "name": "minuendInstant"
       },
       {
        "type": "long",
        "name": "subtrahendInstant"
       }
      ]
     },
     {
      "type": "long",
      "name": "getUnitMillis",
      "params": []
     },
     {
      "type": "int",
      "name": "getScalar",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.field",
  "filename": "ScaledDurationField.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "PeriodConverter",
    "methods": [
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritablePeriod",
        "name": "period"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "PeriodConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "CalendarConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "CalendarConverter",
    "methods": [
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "long",
      "name": "getInstantMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "CalendarConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ReadableDurationConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "ReadableDurationConverter",
    "methods": [
     {
      "type": "long",
      "name": "getDurationMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritablePeriod",
        "name": "writablePeriod"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "ReadableDurationConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ReadableInstantConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "ReadableInstantConverter",
    "methods": [
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "long",
      "name": "getInstantMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "ReadableInstantConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "StringConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "StringConverter",
    "methods": [
     {
      "type": "long",
      "name": "getInstantMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "getPartialValues",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "fieldSource"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       },
       {
        "type": "DateTimeFormatter",
        "name": "parser"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDurationMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritablePeriod",
        "name": "period"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritableInterval",
        "name": "writableInterval"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "StringConverter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "IntervalConverter",
    "methods": [
     {
      "type": "boolean",
      "name": "isReadableInterval",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritableInterval",
        "name": "writableInterval"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "IntervalConverter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AbstractConverter",
    "methods": [
     {
      "type": "long",
      "name": "getInstantMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "getPartialValues",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "fieldSource"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "getPartialValues",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "fieldSource"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       },
       {
        "type": "DateTimeFormatter",
        "name": "parser"
       }
      ]
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isReadableInterval",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "AbstractConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Converter",
      "name": "iConverters"
     },
     {
      "type": "Entry",
      "name": "iSelectEntries"
     }
    ],
    "name": "ConverterSet",
    "methods": [
     {
      "type": "Converter",
      "name": "select",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": null,
      "name": "copyInto",
      "params": [
       {
        "type": "Converter",
        "name": "converters"
       }
      ]
     },
     {
      "type": "ConverterSet",
      "name": "add",
      "params": [
       {
        "type": "Converter",
        "name": "converter"
       },
       {
        "type": "Converter",
        "name": "removed"
       }
      ]
     },
     {
      "type": "ConverterSet",
      "name": "remove",
      "params": [
       {
        "type": "Converter",
        "name": "converter"
       },
       {
        "type": "Converter",
        "name": "removed"
       }
      ]
     },
     {
      "type": "ConverterSet",
      "name": "remove",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Converter",
        "name": "removed"
       }
      ]
     },
     {
      "type": "Converter",
      "name": "selectSlow",
      "params": [
       {
        "type": "ConverterSet",
        "name": "set"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "ConverterSet.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "PartialConverter",
    "methods": [
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "getPartialValues",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "fieldSource"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "getPartialValues",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "fieldSource"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       },
       {
        "type": "DateTimeFormatter",
        "name": "parser"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "PartialConverter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "InstantConverter",
    "methods": [
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "long",
      "name": "getInstantMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "InstantConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ReadableIntervalConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "ReadableIntervalConverter",
    "methods": [
     {
      "type": "long",
      "name": "getDurationMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritablePeriod",
        "name": "writablePeriod"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isReadableInterval",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritableInterval",
        "name": "writableInterval"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "ReadableIntervalConverter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Converter",
    "methods": [
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "Converter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "DateConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "DateConverter",
    "methods": [
     {
      "type": "long",
      "name": "getInstantMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "DateConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "NullConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "NullConverter",
    "methods": [
     {
      "type": "long",
      "name": "getDurationMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritablePeriod",
        "name": "duration"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritableInterval",
        "name": "writableInterval"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "NullConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ReadablePartialConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "ReadablePartialConverter",
    "methods": [
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "int",
      "name": "getPartialValues",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "fieldSource"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "ReadablePartialConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ReadablePeriodConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "ReadablePeriodConverter",
    "methods": [
     {
      "type": null,
      "name": "setInto",
      "params": [
       {
        "type": "ReadWritablePeriod",
        "name": "duration"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "ReadablePeriodConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "LongConverter",
      "name": "INSTANCE"
     }
    ],
    "name": "LongConverter",
    "methods": [
     {
      "type": "long",
      "name": "getInstantMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "long",
      "name": "getDurationMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "Class",
      "name": "getSupportedType",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "LongConverter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DurationConverter",
    "methods": [
     {
      "type": "long",
      "name": "getDurationMillis",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "DurationConverter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ConverterManager",
      "name": "INSTANCE"
     },
     {
      "type": "ConverterSet",
      "name": "iInstantConverters"
     },
     {
      "type": "ConverterSet",
      "name": "iPartialConverters"
     },
     {
      "type": "ConverterSet",
      "name": "iDurationConverters"
     },
     {
      "type": "ConverterSet",
      "name": "iPeriodConverters"
     },
     {
      "type": "ConverterSet",
      "name": "iIntervalConverters"
     }
    ],
    "name": "ConverterManager",
    "methods": [
     {
      "type": "ConverterManager",
      "name": "getInstance",
      "params": []
     },
     {
      "type": "InstantConverter",
      "name": "getInstantConverter",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "InstantConverter",
      "name": "getInstantConverters",
      "params": []
     },
     {
      "type": "InstantConverter",
      "name": "addInstantConverter",
      "params": [
       {
        "type": "InstantConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": "InstantConverter",
      "name": "removeInstantConverter",
      "params": [
       {
        "type": "InstantConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": null,
      "name": "checkAlterInstantConverters",
      "params": []
     },
     {
      "type": "PartialConverter",
      "name": "getPartialConverter",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "PartialConverter",
      "name": "getPartialConverters",
      "params": []
     },
     {
      "type": "PartialConverter",
      "name": "addPartialConverter",
      "params": [
       {
        "type": "PartialConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": "PartialConverter",
      "name": "removePartialConverter",
      "params": [
       {
        "type": "PartialConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": null,
      "name": "checkAlterPartialConverters",
      "params": []
     },
     {
      "type": "DurationConverter",
      "name": "getDurationConverter",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "DurationConverter",
      "name": "getDurationConverters",
      "params": []
     },
     {
      "type": "DurationConverter",
      "name": "addDurationConverter",
      "params": [
       {
        "type": "DurationConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": "DurationConverter",
      "name": "removeDurationConverter",
      "params": [
       {
        "type": "DurationConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": null,
      "name": "checkAlterDurationConverters",
      "params": []
     },
     {
      "type": "PeriodConverter",
      "name": "getPeriodConverter",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "PeriodConverter",
      "name": "getPeriodConverters",
      "params": []
     },
     {
      "type": "PeriodConverter",
      "name": "addPeriodConverter",
      "params": [
       {
        "type": "PeriodConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": "PeriodConverter",
      "name": "removePeriodConverter",
      "params": [
       {
        "type": "PeriodConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": null,
      "name": "checkAlterPeriodConverters",
      "params": []
     },
     {
      "type": "IntervalConverter",
      "name": "getIntervalConverter",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ]
     },
     {
      "type": "IntervalConverter",
      "name": "getIntervalConverters",
      "params": []
     },
     {
      "type": "IntervalConverter",
      "name": "addIntervalConverter",
      "params": [
       {
        "type": "IntervalConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": "IntervalConverter",
      "name": "removeIntervalConverter",
      "params": [
       {
        "type": "IntervalConverter",
        "name": "converter"
       }
      ]
     },
     {
      "type": null,
      "name": "checkAlterIntervalConverters",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.convert",
  "filename": "ConverterManager.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "DateTimePrinter",
      "name": "iPrinter"
     },
     {
      "type": "DateTimeParser",
      "name": "iParser"
     },
     {
      "type": "Locale",
      "name": "iLocale"
     },
     {
      "type": "boolean",
      "name": "iOffsetParsed"
     },
     {
      "type": "Chronology",
      "name": "iChrono"
     },
     {
      "type": "DateTimeZone",
      "name": "iZone"
     },
     {
      "type": "Integer",
      "name": "iPivotYear"
     },
     {
      "type": "int",
      "name": "iDefaultYear"
     }
    ],
    "name": "DateTimeFormatter",
    "methods": [
     {
      "type": "boolean",
      "name": "isPrinter",
      "params": []
     },
     {
      "type": "DateTimePrinter",
      "name": "getPrinter",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isParser",
      "params": []
     },
     {
      "type": "DateTimeParser",
      "name": "getParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "withLocale",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "Locale",
      "name": "getLocale",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "withOffsetParsed",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isOffsetParsed",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "withChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronolgy",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "withZoneUTC",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "withZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "withPivotYear",
      "params": [
       {
        "type": "Integer",
        "name": "pivotYear"
       }
      ]
     },
     {
      "type": "DateTimeFormatter",
      "name": "withPivotYear",
      "params": [
       {
        "type": "int",
        "name": "pivotYear"
       }
      ]
     },
     {
      "type": "Integer",
      "name": "getPivotYear",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "withDefaultYear",
      "params": [
       {
        "type": "int",
        "name": "defaultYear"
       }
      ]
     },
     {
      "type": "int",
      "name": "getDefaultYear",
      "params": []
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Appendable",
        "name": "appendable"
       },
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Appendable",
        "name": "appendable"
       },
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Appendable",
        "name": "appendable"
       },
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "String",
      "name": "print",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "print",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "print",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Writer",
        "name": "buf"
       },
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "DateTimePrinter",
      "name": "requirePrinter",
      "params": []
     },
     {
      "type": "int",
      "name": "parseInto",
      "params": [
       {
        "type": "ReadWritableInstant",
        "name": "instant"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "int",
        "name": "position"
       }
      ]
     },
     {
      "type": "long",
      "name": "parseMillis",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "LocalDate",
      "name": "parseLocalDate",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "LocalTime",
      "name": "parseLocalTime",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "LocalDateTime",
      "name": "parseLocalDateTime",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "parseDateTime",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "MutableDateTime",
      "name": "parseMutableDateTime",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "DateTimeParser",
      "name": "requireParser",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "selectChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "DateTimeFormatter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "FULL"
     },
     {
      "type": "int",
      "name": "LONG"
     },
     {
      "type": "int",
      "name": "MEDIUM"
     },
     {
      "type": "int",
      "name": "SHORT"
     },
     {
      "type": "int",
      "name": "NONE"
     },
     {
      "type": "int",
      "name": "DATE"
     },
     {
      "type": "int",
      "name": "TIME"
     },
     {
      "type": "int",
      "name": "DATETIME"
     },
     {
      "type": "Map",
      "name": "cPatternedCache"
     },
     {
      "type": "DateTimeFormatter",
      "name": "cStyleCache"
     }
    ],
    "name": "DateTimeFormat",
    "methods": [
     {
      "type": "DateTimeFormatter",
      "name": "forPattern",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "DateTimeFormatter",
      "name": "forStyle",
      "params": [
       {
        "type": "String",
        "name": "style"
       }
      ]
     },
     {
      "type": "String",
      "name": "patternForStyle",
      "params": [
       {
        "type": "String",
        "name": "style"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "DateTimeFormatter",
      "name": "shortDate",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "shortTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "shortDateTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "mediumDate",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "mediumTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "mediumDateTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "longDate",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "longTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "longDateTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "fullDate",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "fullTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "fullDateTime",
      "params": []
     },
     {
      "type": null,
      "name": "appendPatternTo",
      "params": [
       {
        "type": "DateTimeFormatterBuilder",
        "name": "builder"
       },
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": null,
      "name": "parsePatternTo",
      "params": [
       {
        "type": "DateTimeFormatterBuilder",
        "name": "builder"
       },
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "parseToken",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "int",
        "name": "indexRef"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isNumericToken",
      "params": [
       {
        "type": "String",
        "name": "token"
       }
      ]
     },
     {
      "type": "DateTimeFormatter",
      "name": "createFormatterForPattern",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "DateTimeFormatter",
      "name": "createFormatterForStyle",
      "params": [
       {
        "type": "String",
        "name": "style"
       }
      ]
     },
     {
      "type": "DateTimeFormatter",
      "name": "createFormatterForStyleIndex",
      "params": [
       {
        "type": "int",
        "name": "dateStyle"
       },
       {
        "type": "int",
        "name": "timeStyle"
       }
      ]
     },
     {
      "type": "int",
      "name": "selectStyle",
      "params": [
       {
        "type": "char",
        "name": "ch"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "DateTimeFormat.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "String",
      "name": "BUNDLE_NAME"
     },
     {
      "type": "ConcurrentMap",
      "name": "FORMATTERS"
     }
    ],
    "name": "PeriodFormat",
    "methods": [
     {
      "type": "PeriodFormatter",
      "name": "getDefault",
      "params": []
     },
     {
      "type": "PeriodFormatter",
      "name": "wordBased",
      "params": []
     },
     {
      "type": "PeriodFormatter",
      "name": "wordBased",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "PeriodFormat.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DateTimePrinter",
    "methods": [
     {
      "type": "int",
      "name": "estimatePrintedLength",
      "params": []
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       },
       {
        "type": "int",
        "name": "displayOffset"
       },
       {
        "type": "DateTimeZone",
        "name": "displayZone"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       },
       {
        "type": "int",
        "name": "displayOffset"
       },
       {
        "type": "DateTimeZone",
        "name": "displayZone"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "ReadablePartial",
        "name": "partial"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "DateTimePrinter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "int",
      "name": "PRINT_ZERO_RARELY_FIRST"
     },
     {
      "type": "int",
      "name": "PRINT_ZERO_RARELY_LAST"
     },
     {
      "type": "int",
      "name": "PRINT_ZERO_IF_SUPPORTED"
     },
     {
      "type": "int",
      "name": "PRINT_ZERO_ALWAYS"
     },
     {
      "type": "int",
      "name": "PRINT_ZERO_NEVER"
     },
     {
      "type": "int",
      "name": "YEARS"
     },
     {
      "type": "int",
      "name": "MONTHS"
     },
     {
      "type": "int",
      "name": "WEEKS"
     },
     {
      "type": "int",
      "name": "DAYS"
     },
     {
      "type": "int",
      "name": "HOURS"
     },
     {
      "type": "int",
      "name": "MINUTES"
     },
     {
      "type": "int",
      "name": "SECONDS"
     },
     {
      "type": "int",
      "name": "MILLIS"
     },
     {
      "type": "int",
      "name": "SECONDS_MILLIS"
     },
     {
      "type": "int",
      "name": "SECONDS_OPTIONAL_MILLIS"
     },
     {
      "type": "int",
      "name": "MAX_FIELD"
     },
     {
      "type": "int",
      "name": "iMinPrintedDigits"
     },
     {
      "type": "int",
      "name": "iPrintZeroSetting"
     },
     {
      "type": "int",
      "name": "iMaxParsedDigits"
     },
     {
      "type": "boolean",
      "name": "iRejectSignedValues"
     },
     {
      "type": "PeriodFieldAffix",
      "name": "iPrefix"
     },
     {
      "type": "List",
      "name": "iElementPairs"
     },
     {
      "type": "boolean",
      "name": "iNotPrinter"
     },
     {
      "type": "boolean",
      "name": "iNotParser"
     },
     {
      "type": "FieldFormatter",
      "name": "iFieldFormatters"
     }
    ],
    "name": "PeriodFormatterBuilder",
    "methods": [
     {
      "type": "PeriodFormatter",
      "name": "toFormatter",
      "params": []
     },
     {
      "type": "PeriodPrinter",
      "name": "toPrinter",
      "params": []
     },
     {
      "type": "PeriodParser",
      "name": "toParser",
      "params": []
     },
     {
      "type": null,
      "name": "clear",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "append",
      "params": [
       {
        "type": "PeriodFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "append",
      "params": [
       {
        "type": "PeriodPrinter",
        "name": "printer"
       },
       {
        "type": "PeriodParser",
        "name": "parser"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendLiteral",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "minimumPrintedDigits",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "maximumParsedDigits",
      "params": [
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "rejectSignedValues",
      "params": [
       {
        "type": "boolean",
        "name": "v"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "printZeroRarelyLast",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "printZeroRarelyFirst",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "printZeroIfSupported",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "printZeroAlways",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "printZeroNever",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendPrefix",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendPrefix",
      "params": [
       {
        "type": "String",
        "name": "singularText"
       },
       {
        "type": "String",
        "name": "pluralText"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendPrefix",
      "params": [
       {
        "type": "PeriodFieldAffix",
        "name": "prefix"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendYears",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendMonths",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendWeeks",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendDays",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendHours",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendMinutes",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSeconds",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSecondsWithMillis",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSecondsWithOptionalMillis",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendMillis",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendMillis3Digit",
      "params": []
     },
     {
      "type": null,
      "name": "appendField",
      "params": [
       {
        "type": "int",
        "name": "type"
       }
      ]
     },
     {
      "type": null,
      "name": "appendField",
      "params": [
       {
        "type": "int",
        "name": "type"
       },
       {
        "type": "int",
        "name": "minPrinted"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSuffix",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSuffix",
      "params": [
       {
        "type": "String",
        "name": "singularText"
       },
       {
        "type": "String",
        "name": "pluralText"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSuffix",
      "params": [
       {
        "type": "PeriodFieldAffix",
        "name": "suffix"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSeparator",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSeparatorIfFieldsAfter",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSeparatorIfFieldsBefore",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSeparator",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "String",
        "name": "finalText"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSeparator",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "String",
        "name": "finalText"
       },
       {
        "type": "String",
        "name": "variants"
       }
      ]
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "appendSeparator",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "String",
        "name": "finalText"
       },
       {
        "type": "String",
        "name": "variants"
       },
       {
        "type": "boolean",
        "name": "useBefore"
       },
       {
        "type": "boolean",
        "name": "useAfter"
       }
      ]
     },
     {
      "type": null,
      "name": "clearPrefix",
      "params": []
     },
     {
      "type": "PeriodFormatterBuilder",
      "name": "append0",
      "params": [
       {
        "type": "PeriodPrinter",
        "name": "printer"
       },
       {
        "type": "PeriodParser",
        "name": "parser"
       }
      ]
     },
     {
      "type": "PeriodFormatter",
      "name": "toFormatter",
      "params": [
       {
        "type": "List",
        "name": "elementPairs"
       },
       {
        "type": "boolean",
        "name": "notPrinter"
       },
       {
        "type": "boolean",
        "name": "notParser"
       }
      ]
     },
     {
      "type": "Object",
      "name": "createComposite",
      "params": [
       {
        "type": "List",
        "name": "elementPairs"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "PeriodFormatterBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "DateTimeFormatter",
      "name": "ye"
     },
     {
      "type": "DateTimeFormatter",
      "name": "mye"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dme"
     },
     {
      "type": "DateTimeFormatter",
      "name": "we"
     },
     {
      "type": "DateTimeFormatter",
      "name": "wwe"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dwe"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dye"
     },
     {
      "type": "DateTimeFormatter",
      "name": "hde"
     },
     {
      "type": "DateTimeFormatter",
      "name": "mhe"
     },
     {
      "type": "DateTimeFormatter",
      "name": "sme"
     },
     {
      "type": "DateTimeFormatter",
      "name": "fse"
     },
     {
      "type": "DateTimeFormatter",
      "name": "ze"
     },
     {
      "type": "DateTimeFormatter",
      "name": "lte"
     },
     {
      "type": "DateTimeFormatter",
      "name": "ym"
     },
     {
      "type": "DateTimeFormatter",
      "name": "ymd"
     },
     {
      "type": "DateTimeFormatter",
      "name": "ww"
     },
     {
      "type": "DateTimeFormatter",
      "name": "wwd"
     },
     {
      "type": "DateTimeFormatter",
      "name": "hm"
     },
     {
      "type": "DateTimeFormatter",
      "name": "hms"
     },
     {
      "type": "DateTimeFormatter",
      "name": "hmsl"
     },
     {
      "type": "DateTimeFormatter",
      "name": "hmsf"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dh"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dhm"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dhms"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dhmsl"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dhmsf"
     },
     {
      "type": "DateTimeFormatter",
      "name": "t"
     },
     {
      "type": "DateTimeFormatter",
      "name": "tx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "tt"
     },
     {
      "type": "DateTimeFormatter",
      "name": "ttx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dt"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dtx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "wdt"
     },
     {
      "type": "DateTimeFormatter",
      "name": "wdtx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "od"
     },
     {
      "type": "DateTimeFormatter",
      "name": "odt"
     },
     {
      "type": "DateTimeFormatter",
      "name": "odtx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bd"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bt"
     },
     {
      "type": "DateTimeFormatter",
      "name": "btx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "btt"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bttx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bdt"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bdtx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bod"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bodt"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bodtx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bwd"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bwdt"
     },
     {
      "type": "DateTimeFormatter",
      "name": "bwdtx"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dpe"
     },
     {
      "type": "DateTimeFormatter",
      "name": "tpe"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dp"
     },
     {
      "type": "DateTimeFormatter",
      "name": "ldp"
     },
     {
      "type": "DateTimeFormatter",
      "name": "tp"
     },
     {
      "type": "DateTimeFormatter",
      "name": "ltp"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dtp"
     },
     {
      "type": "DateTimeFormatter",
      "name": "dotp"
     },
     {
      "type": "DateTimeFormatter",
      "name": "ldotp"
     }
    ],
    "name": "ISODateTimeFormat",
    "methods": [
     {
      "type": "DateTimeFormatter",
      "name": "forFields",
      "params": [
       {
        "type": "Collection",
        "name": "fields"
       },
       {
        "type": "boolean",
        "name": "extended"
       },
       {
        "type": "boolean",
        "name": "strictISO"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "dateByMonth",
      "params": [
       {
        "type": "DateTimeFormatterBuilder",
        "name": "bld"
       },
       {
        "type": "Collection",
        "name": "fields"
       },
       {
        "type": "boolean",
        "name": "extended"
       },
       {
        "type": "boolean",
        "name": "strictISO"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "dateByOrdinal",
      "params": [
       {
        "type": "DateTimeFormatterBuilder",
        "name": "bld"
       },
       {
        "type": "Collection",
        "name": "fields"
       },
       {
        "type": "boolean",
        "name": "extended"
       },
       {
        "type": "boolean",
        "name": "strictISO"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "dateByWeek",
      "params": [
       {
        "type": "DateTimeFormatterBuilder",
        "name": "bld"
       },
       {
        "type": "Collection",
        "name": "fields"
       },
       {
        "type": "boolean",
        "name": "extended"
       },
       {
        "type": "boolean",
        "name": "strictISO"
       }
      ]
     },
     {
      "type": null,
      "name": "time",
      "params": [
       {
        "type": "DateTimeFormatterBuilder",
        "name": "bld"
       },
       {
        "type": "Collection",
        "name": "fields"
       },
       {
        "type": "boolean",
        "name": "extended"
       },
       {
        "type": "boolean",
        "name": "strictISO"
       },
       {
        "type": "boolean",
        "name": "reducedPrec"
       },
       {
        "type": "boolean",
        "name": "datePresent"
       }
      ]
     },
     {
      "type": null,
      "name": "checkNotStrictISO",
      "params": [
       {
        "type": "Collection",
        "name": "fields"
       },
       {
        "type": "boolean",
        "name": "strictISO"
       }
      ]
     },
     {
      "type": null,
      "name": "appendSeparator",
      "params": [
       {
        "type": "DateTimeFormatterBuilder",
        "name": "bld"
       },
       {
        "type": "boolean",
        "name": "extended"
       }
      ]
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "localDateParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateElementParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "timeParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "localTimeParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "timeElementParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateTimeParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateOptionalTimeParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "localDateOptionalTimeParser",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "date",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "time",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "timeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "tTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "tTimeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateTimeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "ordinalDate",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "ordinalDateTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "ordinalDateTimeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "weekDate",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "weekDateTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "weekDateTimeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicDate",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicTimeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicTTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicTTimeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicDateTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicDateTimeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicOrdinalDate",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicOrdinalDateTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicOrdinalDateTimeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicWeekDate",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicWeekDateTime",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "basicWeekDateTimeNoMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "year",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "yearMonth",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "yearMonthDay",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "weekyear",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "weekyearWeek",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "weekyearWeekDay",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "hour",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "hourMinute",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "hourMinuteSecond",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "hourMinuteSecondMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "hourMinuteSecondFraction",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateHour",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateHourMinute",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateHourMinuteSecond",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateHourMinuteSecondMillis",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dateHourMinuteSecondFraction",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "yearElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "monthElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dayOfMonthElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "weekyearElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "weekElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dayOfWeekElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "dayOfYearElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "literalTElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "hourElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "minuteElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "secondElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "fractionElement",
      "params": []
     },
     {
      "type": "DateTimeFormatter",
      "name": "offsetElement",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "ISODateTimeFormat.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ArrayList",
      "name": "iElementPairs"
     },
     {
      "type": "Object",
      "name": "iFormatter"
     }
    ],
    "name": "DateTimeFormatterBuilder",
    "methods": [
     {
      "type": "DateTimeFormatter",
      "name": "toFormatter",
      "params": []
     },
     {
      "type": "DateTimePrinter",
      "name": "toPrinter",
      "params": []
     },
     {
      "type": "DateTimeParser",
      "name": "toParser",
      "params": []
     },
     {
      "type": "boolean",
      "name": "canBuildFormatter",
      "params": []
     },
     {
      "type": "boolean",
      "name": "canBuildPrinter",
      "params": []
     },
     {
      "type": "boolean",
      "name": "canBuildParser",
      "params": []
     },
     {
      "type": null,
      "name": "clear",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "append",
      "params": [
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "append",
      "params": [
       {
        "type": "DateTimePrinter",
        "name": "printer"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "append",
      "params": [
       {
        "type": "DateTimeParser",
        "name": "parser"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "append",
      "params": [
       {
        "type": "DateTimePrinter",
        "name": "printer"
       },
       {
        "type": "DateTimeParser",
        "name": "parser"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "append",
      "params": [
       {
        "type": "DateTimePrinter",
        "name": "printer"
       },
       {
        "type": "DateTimeParser",
        "name": "parsers"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendOptional",
      "params": [
       {
        "type": "DateTimeParser",
        "name": "parser"
       }
      ]
     },
     {
      "type": null,
      "name": "checkParser",
      "params": [
       {
        "type": "DateTimeParser",
        "name": "parser"
       }
      ]
     },
     {
      "type": null,
      "name": "checkPrinter",
      "params": [
       {
        "type": "DateTimePrinter",
        "name": "printer"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "append0",
      "params": [
       {
        "type": "Object",
        "name": "element"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "append0",
      "params": [
       {
        "type": "DateTimePrinter",
        "name": "printer"
       },
       {
        "type": "DateTimeParser",
        "name": "parser"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendLiteral",
      "params": [
       {
        "type": "char",
        "name": "c"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendLiteral",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendDecimal",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendFixedDecimal",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "numDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendSignedDecimal",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendFixedSignedDecimal",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "numDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendText",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendShortText",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendFraction",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendFractionOfSecond",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendFractionOfMinute",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendFractionOfHour",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendFractionOfDay",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendMillisOfSecond",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendMillisOfDay",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendSecondOfMinute",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendSecondOfDay",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendMinuteOfHour",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendMinuteOfDay",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendHourOfDay",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendClockhourOfDay",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendHourOfHalfday",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendClockhourOfHalfday",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendDayOfWeek",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendDayOfMonth",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendDayOfYear",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendWeekOfWeekyear",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendWeekyear",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendMonthOfYear",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendYear",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTwoDigitYear",
      "params": [
       {
        "type": "int",
        "name": "pivot"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTwoDigitYear",
      "params": [
       {
        "type": "int",
        "name": "pivot"
       },
       {
        "type": "boolean",
        "name": "lenientParse"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTwoDigitWeekyear",
      "params": [
       {
        "type": "int",
        "name": "pivot"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTwoDigitWeekyear",
      "params": [
       {
        "type": "int",
        "name": "pivot"
       },
       {
        "type": "boolean",
        "name": "lenientParse"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendYearOfEra",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendYearOfCentury",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendCenturyOfEra",
      "params": [
       {
        "type": "int",
        "name": "minDigits"
       },
       {
        "type": "int",
        "name": "maxDigits"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendHalfdayOfDayText",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendDayOfWeekText",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendDayOfWeekShortText",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendMonthOfYearText",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendMonthOfYearShortText",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendEraText",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTimeZoneName",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTimeZoneName",
      "params": [
       {
        "type": "Map",
        "name": "parseLookup"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTimeZoneShortName",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTimeZoneShortName",
      "params": [
       {
        "type": "Map",
        "name": "parseLookup"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTimeZoneId",
      "params": []
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTimeZoneOffset",
      "params": [
       {
        "type": "String",
        "name": "zeroOffsetText"
       },
       {
        "type": "boolean",
        "name": "showSeparators"
       },
       {
        "type": "int",
        "name": "minFields"
       },
       {
        "type": "int",
        "name": "maxFields"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendTimeZoneOffset",
      "params": [
       {
        "type": "String",
        "name": "zeroOffsetPrintText"
       },
       {
        "type": "String",
        "name": "zeroOffsetParseText"
       },
       {
        "type": "boolean",
        "name": "showSeparators"
       },
       {
        "type": "int",
        "name": "minFields"
       },
       {
        "type": "int",
        "name": "maxFields"
       }
      ]
     },
     {
      "type": "DateTimeFormatterBuilder",
      "name": "appendPattern",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "Object",
      "name": "getFormatter",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isPrinter",
      "params": [
       {
        "type": "Object",
        "name": "f"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isParser",
      "params": [
       {
        "type": "Object",
        "name": "f"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFormatter",
      "params": [
       {
        "type": "Object",
        "name": "f"
       }
      ]
     },
     {
      "type": null,
      "name": "appendUnknownString",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "int",
        "name": "len"
       }
      ]
     },
     {
      "type": null,
      "name": "printUnknownString",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "int",
        "name": "len"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "DateTimeFormatterBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "PeriodFormatter",
      "name": "cStandard"
     },
     {
      "type": "PeriodFormatter",
      "name": "cAlternate"
     },
     {
      "type": "PeriodFormatter",
      "name": "cAlternateExtended"
     },
     {
      "type": "PeriodFormatter",
      "name": "cAlternateWithWeeks"
     },
     {
      "type": "PeriodFormatter",
      "name": "cAlternateExtendedWihWeeks"
     }
    ],
    "name": "ISOPeriodFormat",
    "methods": [
     {
      "type": "PeriodFormatter",
      "name": "standard",
      "params": []
     },
     {
      "type": "PeriodFormatter",
      "name": "alternate",
      "params": []
     },
     {
      "type": "PeriodFormatter",
      "name": "alternateExtended",
      "params": []
     },
     {
      "type": "PeriodFormatter",
      "name": "alternateWithWeeks",
      "params": []
     },
     {
      "type": "PeriodFormatter",
      "name": "alternateExtendedWithWeeks",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "ISOPeriodFormat.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "double",
      "name": "LOG_10"
     }
    ],
    "name": "FormatUtils",
    "methods": [
     {
      "type": null,
      "name": "appendPaddedInteger",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "size"
       }
      ]
     },
     {
      "type": null,
      "name": "appendPaddedInteger",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "long",
        "name": "value"
       },
       {
        "type": "int",
        "name": "size"
       }
      ]
     },
     {
      "type": null,
      "name": "writePaddedInteger",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "int",
        "name": "value"
       },
       {
        "type": "int",
        "name": "size"
       }
      ]
     },
     {
      "type": null,
      "name": "writePaddedInteger",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "long",
        "name": "value"
       },
       {
        "type": "int",
        "name": "size"
       }
      ]
     },
     {
      "type": null,
      "name": "appendUnpaddedInteger",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "appendUnpaddedInteger",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "writeUnpaddedInteger",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "writeUnpaddedInteger",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "calculateDigitCount",
      "params": [
       {
        "type": "long",
        "name": "value"
       }
      ]
     },
     {
      "type": "int",
      "name": "parseTwoDigits",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "int",
        "name": "position"
       }
      ]
     },
     {
      "type": "String",
      "name": "createErrorMessage",
      "params": [
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "int",
        "name": "errorPos"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "FormatUtils.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "Chronology",
      "name": "iChrono"
     },
     {
      "type": "long",
      "name": "iMillis"
     },
     {
      "type": "DateTimeZone",
      "name": "iZone"
     },
     {
      "type": "Integer",
      "name": "iOffset"
     },
     {
      "type": "Locale",
      "name": "iLocale"
     },
     {
      "type": "Integer",
      "name": "iPivotYear"
     },
     {
      "type": "int",
      "name": "iDefaultYear"
     },
     {
      "type": "SavedField",
      "name": "iSavedFields"
     },
     {
      "type": "int",
      "name": "iSavedFieldsCount"
     },
     {
      "type": "boolean",
      "name": "iSavedFieldsShared"
     },
     {
      "type": "Object",
      "name": "iSavedState"
     }
    ],
    "name": "DateTimeParserBucket",
    "methods": [
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "Locale",
      "name": "getLocale",
      "params": []
     },
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": null,
      "name": "setZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "int",
      "name": "getOffset",
      "params": []
     },
     {
      "type": "Integer",
      "name": "getOffsetInteger",
      "params": []
     },
     {
      "type": null,
      "name": "setOffset",
      "params": [
       {
        "type": "int",
        "name": "offset"
       }
      ]
     },
     {
      "type": null,
      "name": "setOffset",
      "params": [
       {
        "type": "Integer",
        "name": "offset"
       }
      ]
     },
     {
      "type": "Integer",
      "name": "getPivotYear",
      "params": []
     },
     {
      "type": null,
      "name": "setPivotYear",
      "params": [
       {
        "type": "Integer",
        "name": "pivotYear"
       }
      ]
     },
     {
      "type": null,
      "name": "saveField",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "saveField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "saveField",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "fieldType"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": null,
      "name": "saveField",
      "params": [
       {
        "type": "SavedField",
        "name": "field"
       }
      ]
     },
     {
      "type": "Object",
      "name": "saveState",
      "params": []
     },
     {
      "type": "boolean",
      "name": "restoreState",
      "params": [
       {
        "type": "Object",
        "name": "savedState"
       }
      ]
     },
     {
      "type": "long",
      "name": "computeMillis",
      "params": []
     },
     {
      "type": "long",
      "name": "computeMillis",
      "params": [
       {
        "type": "boolean",
        "name": "resetFields"
       }
      ]
     },
     {
      "type": "long",
      "name": "computeMillis",
      "params": [
       {
        "type": "boolean",
        "name": "resetFields"
       },
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": null,
      "name": "sort",
      "params": [
       {
        "type": "SavedField",
        "name": "array"
       },
       {
        "type": "int",
        "name": "high"
       }
      ]
     },
     {
      "type": "int",
      "name": "compareReverse",
      "params": [
       {
        "type": "DurationField",
        "name": "a"
       },
       {
        "type": "DurationField",
        "name": "b"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "DateTimeParserBucket.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "DateTimeParser",
    "methods": [
     {
      "type": "int",
      "name": "estimateParsedLength",
      "params": []
     },
     {
      "type": "int",
      "name": "parseInto",
      "params": [
       {
        "type": "DateTimeParserBucket",
        "name": "bucket"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "int",
        "name": "position"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "DateTimeParser.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "PeriodPrinter",
      "name": "iPrinter"
     },
     {
      "type": "PeriodParser",
      "name": "iParser"
     },
     {
      "type": "Locale",
      "name": "iLocale"
     },
     {
      "type": "PeriodType",
      "name": "iParseType"
     }
    ],
    "name": "PeriodFormatter",
    "methods": [
     {
      "type": "boolean",
      "name": "isPrinter",
      "params": []
     },
     {
      "type": "PeriodPrinter",
      "name": "getPrinter",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isParser",
      "params": []
     },
     {
      "type": "PeriodParser",
      "name": "getParser",
      "params": []
     },
     {
      "type": "PeriodFormatter",
      "name": "withLocale",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "Locale",
      "name": "getLocale",
      "params": []
     },
     {
      "type": "PeriodFormatter",
      "name": "withParseType",
      "params": [
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     },
     {
      "type": "PeriodType",
      "name": "getParseType",
      "params": []
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "String",
      "name": "print",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "checkPrinter",
      "params": []
     },
     {
      "type": null,
      "name": "checkPeriod",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "int",
      "name": "parseInto",
      "params": [
       {
        "type": "ReadWritablePeriod",
        "name": "period"
       },
       {
        "type": "String",
        "name": "text"
       },
       {
        "type": "int",
        "name": "position"
       }
      ]
     },
     {
      "type": "Period",
      "name": "parsePeriod",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": "MutablePeriod",
      "name": "parseMutablePeriod",
      "params": [
       {
        "type": "String",
        "name": "text"
       }
      ]
     },
     {
      "type": null,
      "name": "checkParser",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "PeriodFormatter.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "PeriodParser",
    "methods": [
     {
      "type": "int",
      "name": "parseInto",
      "params": [
       {
        "type": "ReadWritablePeriod",
        "name": "period"
       },
       {
        "type": "String",
        "name": "periodStr"
       },
       {
        "type": "int",
        "name": "position"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "PeriodParser.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "PeriodPrinter",
    "methods": [
     {
      "type": "int",
      "name": "calculatePrintedLength",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "int",
      "name": "countFieldsToPrint",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "int",
        "name": "stopAt"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "StringBuffer",
        "name": "buf"
       },
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": null,
      "name": "printTo",
      "params": [
       {
        "type": "Writer",
        "name": "out"
       },
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.format",
  "filename": "PeriodPrinter.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "String",
      "name": "iNameKey"
     },
     {
      "type": "int",
      "name": "iWallOffset"
     },
     {
      "type": "int",
      "name": "iStandardOffset"
     }
    ],
    "name": "FixedDateTimeZone",
    "methods": [
     {
      "type": "String",
      "name": "getNameKey",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getOffset",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getStandardOffset",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getOffsetFromLocal",
      "params": [
       {
        "type": "long",
        "name": "instantLocal"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFixed",
      "params": []
     },
     {
      "type": "long",
      "name": "nextTransition",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "previousTransition",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "java",
      "name": "toTimeZone",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.tz",
  "filename": "FixedDateTimeZone.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "HashMap",
      "name": "iByLocaleCache"
     }
    ],
    "name": "DefaultNameProvider",
    "methods": [
     {
      "type": "String",
      "name": "getShortName",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       },
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "String",
        "name": "nameKey"
       }
      ]
     },
     {
      "type": "String",
      "name": "getName",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       },
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "String",
        "name": "nameKey"
       }
      ]
     },
     {
      "type": "String",
      "name": "getNameSet",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       },
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "String",
        "name": "nameKey"
       }
      ]
     },
     {
      "type": "HashMap",
      "name": "createCache",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.tz",
  "filename": "DefaultNameProvider.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "cInfoCacheMask"
     },
     {
      "type": "DateTimeZone",
      "name": "iZone"
     },
     {
      "type": "Info",
      "name": "iInfoCache"
     }
    ],
    "name": "CachedDateTimeZone",
    "methods": [
     {
      "type": "CachedDateTimeZone",
      "name": "forZone",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "getUncachedZone",
      "params": []
     },
     {
      "type": "String",
      "name": "getNameKey",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getOffset",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "getStandardOffset",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isFixed",
      "params": []
     },
     {
      "type": "long",
      "name": "nextTransition",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "long",
      "name": "previousTransition",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "obj"
       }
      ]
     },
     {
      "type": "Info",
      "name": "getInfo",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "Info",
      "name": "createInfo",
      "params": [
       {
        "type": "long",
        "name": "millis"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.tz",
  "filename": "CachedDateTimeZone.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "File",
      "name": "iFileDir"
     },
     {
      "type": "String",
      "name": "iResourcePath"
     },
     {
      "type": "ClassLoader",
      "name": "iLoader"
     },
     {
      "type": "Map",
      "name": "iZoneInfoMap"
     }
    ],
    "name": "ZoneInfoProvider",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": [
       {
        "type": "String",
        "name": "id"
       }
      ]
     },
     {
      "type": "Set",
      "name": "getAvailableIDs",
      "params": []
     },
     {
      "type": null,
      "name": "uncaughtException",
      "params": [
       {
        "type": "Exception",
        "name": "ex"
       }
      ]
     },
     {
      "type": "InputStream",
      "name": "openResource",
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "loadZoneData",
      "params": [
       {
        "type": "String",
        "name": "id"
       }
      ]
     },
     {
      "type": "Map",
      "name": "loadZoneInfoMap",
      "params": [
       {
        "type": "InputStream",
        "name": "in"
       }
      ]
     },
     {
      "type": null,
      "name": "readZoneInfoMap",
      "params": [
       {
        "type": "DataInputStream",
        "name": "din"
       },
       {
        "type": "Map",
        "name": "zimap"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.tz",
  "filename": "ZoneInfoProvider.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "UTCProvider",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": [
       {
        "type": "String",
        "name": "id"
       }
      ]
     },
     {
      "type": "Set",
      "name": "getAvailableIDs",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.tz",
  "filename": "UTCProvider.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "ArrayList",
      "name": "iRuleSets"
     }
    ],
    "name": "DateTimeZoneBuilder",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "readFrom",
      "params": [
       {
        "type": "InputStream",
        "name": "in"
       },
       {
        "type": "String",
        "name": "id"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "readFrom",
      "params": [
       {
        "type": "DataInput",
        "name": "in"
       },
       {
        "type": "String",
        "name": "id"
       }
      ]
     },
     {
      "type": null,
      "name": "writeMillis",
      "params": [
       {
        "type": "DataOutput",
        "name": "out"
       },
       {
        "type": "long",
        "name": "millis"
       }
      ]
     },
     {
      "type": "long",
      "name": "readMillis",
      "params": [
       {
        "type": "DataInput",
        "name": "in"
       }
      ]
     },
     {
      "type": "DateTimeZone",
      "name": "buildFixedZone",
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "String",
        "name": "nameKey"
       },
       {
        "type": "int",
        "name": "wallOffset"
       },
       {
        "type": "int",
        "name": "standardOffset"
       }
      ]
     },
     {
      "type": "DateTimeZoneBuilder",
      "name": "addCutover",
      "params": [
       {
        "type": "int",
        "name": "year"
       },
       {
        "type": "char",
        "name": "mode"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "dayOfWeek"
       },
       {
        "type": "boolean",
        "name": "advanceDayOfWeek"
       },
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "DateTimeZoneBuilder",
      "name": "setStandardOffset",
      "params": [
       {
        "type": "int",
        "name": "standardOffset"
       }
      ]
     },
     {
      "type": "DateTimeZoneBuilder",
      "name": "setFixedSavings",
      "params": [
       {
        "type": "String",
        "name": "nameKey"
       },
       {
        "type": "int",
        "name": "saveMillis"
       }
      ]
     },
     {
      "type": "DateTimeZoneBuilder",
      "name": "addRecurringSavings",
      "params": [
       {
        "type": "String",
        "name": "nameKey"
       },
       {
        "type": "int",
        "name": "saveMillis"
       },
       {
        "type": "int",
        "name": "fromYear"
       },
       {
        "type": "int",
        "name": "toYear"
       },
       {
        "type": "char",
        "name": "mode"
       },
       {
        "type": "int",
        "name": "monthOfYear"
       },
       {
        "type": "int",
        "name": "dayOfMonth"
       },
       {
        "type": "int",
        "name": "dayOfWeek"
       },
       {
        "type": "boolean",
        "name": "advanceDayOfWeek"
       },
       {
        "type": "int",
        "name": "millisOfDay"
       }
      ]
     },
     {
      "type": "RuleSet",
      "name": "getLastRuleSet",
      "params": []
     },
     {
      "type": "DateTimeZone",
      "name": "toDateTimeZone",
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "boolean",
        "name": "outputID"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "addTransition",
      "params": [
       {
        "type": "ArrayList",
        "name": "transitions"
       },
       {
        "type": "Transition",
        "name": "tr"
       }
      ]
     },
     {
      "type": null,
      "name": "writeTo",
      "params": [
       {
        "type": "String",
        "name": "zoneID"
       },
       {
        "type": "OutputStream",
        "name": "out"
       }
      ]
     },
     {
      "type": null,
      "name": "writeTo",
      "params": [
       {
        "type": "String",
        "name": "zoneID"
       },
       {
        "type": "DataOutput",
        "name": "out"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.tz",
  "filename": "DateTimeZoneBuilder.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "NameProvider",
    "methods": [
     {
      "type": "String",
      "name": "getShortName",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       },
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "String",
        "name": "nameKey"
       }
      ]
     },
     {
      "type": "String",
      "name": "getName",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       },
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "String",
        "name": "nameKey"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.tz",
  "filename": "NameProvider.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "DateTimeOfYear",
      "name": "cStartOfYear"
     },
     {
      "type": "Chronology",
      "name": "cLenientISO"
     },
     {
      "type": "ThreadLocal",
      "name": "cVerbose"
     },
     {
      "type": "Map",
      "name": "iRuleSets"
     },
     {
      "type": "List",
      "name": "iZones"
     },
     {
      "type": "List",
      "name": "iLinks"
     }
    ],
    "name": "ZoneInfoCompiler",
    "methods": [
     {
      "type": "boolean",
      "name": "verbose",
      "params": []
     },
     {
      "type": null,
      "name": "main",
      "params": [
       {
        "type": "String",
        "name": "args"
       }
      ]
     },
     {
      "type": null,
      "name": "printUsage",
      "params": []
     },
     {
      "type": "DateTimeOfYear",
      "name": "getStartOfYear",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getLenientISOChronology",
      "params": []
     },
     {
      "type": null,
      "name": "writeZoneInfoMap",
      "params": [
       {
        "type": "DataOutputStream",
        "name": "dout"
       },
       {
        "type": "Map",
        "name": "zimap"
       }
      ]
     },
     {
      "type": "int",
      "name": "parseYear",
      "params": [
       {
        "type": "String",
        "name": "str"
       },
       {
        "type": "int",
        "name": "def"
       }
      ]
     },
     {
      "type": "int",
      "name": "parseMonth",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "parseDayOfWeek",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "String",
      "name": "parseOptional",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "int",
      "name": "parseTime",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ]
     },
     {
      "type": "char",
      "name": "parseZoneChar",
      "params": [
       {
        "type": "char",
        "name": "c"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "test",
      "params": [
       {
        "type": "String",
        "name": "id"
       },
       {
        "type": "DateTimeZone",
        "name": "tz"
       }
      ]
     },
     {
      "type": "Map",
      "name": "compile",
      "params": [
       {
        "type": "File",
        "name": "outputDir"
       },
       {
        "type": "File",
        "name": "sources"
       }
      ]
     },
     {
      "type": null,
      "name": "parseDataFile",
      "params": [
       {
        "type": "BufferedReader",
        "name": "in"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.tz",
  "filename": "ZoneInfoCompiler.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "Provider",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": [
       {
        "type": "String",
        "name": "id"
       }
      ]
     },
     {
      "type": "Set",
      "name": "getAvailableIDs",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.tz",
  "filename": "Provider.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AbstractPeriod",
    "methods": [
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldTypes",
      "params": []
     },
     {
      "type": "int",
      "name": "getValues",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": []
     },
     {
      "type": "MutablePeriod",
      "name": "toMutablePeriod",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "period"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "PeriodFormatter",
        "name": "formatter"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "AbstractPeriod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "int",
      "name": "iPeriod"
     }
    ],
    "name": "BaseSingleFieldPeriod",
    "methods": [
     {
      "type": "int",
      "name": "between",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "start"
       },
       {
        "type": "ReadableInstant",
        "name": "end"
       },
       {
        "type": "DurationFieldType",
        "name": "field"
       }
      ]
     },
     {
      "type": "int",
      "name": "between",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "start"
       },
       {
        "type": "ReadablePartial",
        "name": "end"
       },
       {
        "type": "ReadablePeriod",
        "name": "zeroInstance"
       }
      ]
     },
     {
      "type": "int",
      "name": "standardPeriodIn",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       },
       {
        "type": "long",
        "name": "millisPerUnit"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": []
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "int",
      "name": "size",
      "params": []
     },
     {
      "type": "DurationFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": []
     },
     {
      "type": "MutablePeriod",
      "name": "toMutablePeriod",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "period"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "BaseSingleFieldPeriod",
        "name": "other"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "BaseSingleFieldPeriod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "ReadablePeriod",
      "name": "DUMMY_PERIOD"
     },
     {
      "type": "PeriodType",
      "name": "iType"
     },
     {
      "type": "int",
      "name": "iValues"
     }
    ],
    "name": "BasePeriod",
    "methods": [
     {
      "type": "PeriodType",
      "name": "checkPeriodType",
      "params": [
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     },
     {
      "type": "PeriodType",
      "name": "getPeriodType",
      "params": []
     },
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "toDurationFrom",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "startInstant"
       }
      ]
     },
     {
      "type": "Duration",
      "name": "toDurationTo",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": null,
      "name": "checkAndUpdate",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       },
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "int",
        "name": "newValue"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriodInternal",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "setPeriod",
      "params": [
       {
        "type": "int",
        "name": "years"
       },
       {
        "type": "int",
        "name": "months"
       },
       {
        "type": "int",
        "name": "weeks"
       },
       {
        "type": "int",
        "name": "days"
       },
       {
        "type": "int",
        "name": "hours"
       },
       {
        "type": "int",
        "name": "minutes"
       },
       {
        "type": "int",
        "name": "seconds"
       },
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": "int",
      "name": "setPeriodInternal",
      "params": [
       {
        "type": "int",
        "name": "years"
       },
       {
        "type": "int",
        "name": "months"
       },
       {
        "type": "int",
        "name": "weeks"
       },
       {
        "type": "int",
        "name": "days"
       },
       {
        "type": "int",
        "name": "hours"
       },
       {
        "type": "int",
        "name": "minutes"
       },
       {
        "type": "int",
        "name": "seconds"
       },
       {
        "type": "int",
        "name": "millis"
       }
      ]
     },
     {
      "type": null,
      "name": "setField",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setFieldInto",
      "params": [
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "addField",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "addFieldInto",
      "params": [
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "DurationFieldType",
        "name": "field"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "mergePeriod",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "int",
      "name": "mergePeriodInto",
      "params": [
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "addPeriod",
      "params": [
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": "int",
      "name": "addPeriodInto",
      "params": [
       {
        "type": "int",
        "name": "values"
       },
       {
        "type": "ReadablePeriod",
        "name": "period"
       }
      ]
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setValues",
      "params": [
       {
        "type": "int",
        "name": "values"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "BasePeriod.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "iMillis"
     },
     {
      "type": "Chronology",
      "name": "iChronology"
     }
    ],
    "name": "BaseDateTime",
    "methods": [
     {
      "type": "Chronology",
      "name": "checkChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "long",
      "name": "checkInstant",
      "params": [
       {
        "type": "long",
        "name": "instant"
       },
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "long",
      "name": "getMillis",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": null,
      "name": "setMillis",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": null,
      "name": "setChronology",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "BaseDateTime.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AbstractDateTime",
    "methods": [
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "getEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getCenturyOfEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getYearOfEra",
      "params": []
     },
     {
      "type": "int",
      "name": "getYearOfCentury",
      "params": []
     },
     {
      "type": "int",
      "name": "getYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeekyear",
      "params": []
     },
     {
      "type": "int",
      "name": "getMonthOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getWeekOfWeekyear",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfYear",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfMonth",
      "params": []
     },
     {
      "type": "int",
      "name": "getDayOfWeek",
      "params": []
     },
     {
      "type": "int",
      "name": "getHourOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinuteOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getMinuteOfHour",
      "params": []
     },
     {
      "type": "int",
      "name": "getSecondOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getSecondOfMinute",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillisOfDay",
      "params": []
     },
     {
      "type": "int",
      "name": "getMillisOfSecond",
      "params": []
     },
     {
      "type": "Calendar",
      "name": "toCalendar",
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     },
     {
      "type": "GregorianCalendar",
      "name": "toGregorianCalendar",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "AbstractDateTime.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AbstractPartial",
    "methods": [
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldType",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "DateTimeFieldType",
      "name": "getFieldTypes",
      "params": []
     },
     {
      "type": "DateTimeField",
      "name": "getField",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "DateTimeField",
      "name": "getFields",
      "params": []
     },
     {
      "type": "int",
      "name": "getValues",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfSupported",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOf",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "indexOfSupported",
      "params": [
       {
        "type": "DurationFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "baseInstant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "partial"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAfter",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBefore",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEqual",
      "params": [
       {
        "type": "ReadablePartial",
        "name": "partial"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "AbstractPartial.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ],
    "name": "BaseLocal",
    "methods": [
     {
      "type": "long",
      "name": "getLocalMillis",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "BaseLocal.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Chronology",
      "name": "iChronology"
     },
     {
      "type": "long",
      "name": "iStartMillis"
     },
     {
      "type": "long",
      "name": "iEndMillis"
     }
    ],
    "name": "BaseInterval",
    "methods": [
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": "long",
      "name": "getStartMillis",
      "params": []
     },
     {
      "type": "long",
      "name": "getEndMillis",
      "params": []
     },
     {
      "type": null,
      "name": "setInterval",
      "params": [
       {
        "type": "long",
        "name": "startInstant"
       },
       {
        "type": "long",
        "name": "endInstant"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "BaseInterval.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "long",
      "name": "iMillis"
     }
    ],
    "name": "BaseDuration",
    "methods": [
     {
      "type": "long",
      "name": "getMillis",
      "params": []
     },
     {
      "type": null,
      "name": "setMillis",
      "params": [
       {
        "type": "long",
        "name": "duration"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": [
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": [
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": [
       {
        "type": "PeriodType",
        "name": "type"
       },
       {
        "type": "Chronology",
        "name": "chrono"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriodFrom",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "startInstant"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriodFrom",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "startInstant"
       },
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriodTo",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "endInstant"
       }
      ]
     },
     {
      "type": "Period",
      "name": "toPeriodTo",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "endInstant"
       },
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "toIntervalFrom",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "startInstant"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "toIntervalTo",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "endInstant"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "BaseDuration.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AbstractDuration",
    "methods": [
     {
      "type": "Duration",
      "name": "toDuration",
      "params": []
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEqual",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isLongerThan",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isShorterThan",
      "params": [
       {
        "type": "ReadableDuration",
        "name": "duration"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "duration"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "AbstractDuration.java"
 },
 {
  "classes": [
   {
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Chronology",
      "name": "iChronology"
     },
     {
      "type": "int",
      "name": "iValues"
     }
    ],
    "name": "BasePartial",
    "methods": [
     {
      "type": "int",
      "name": "getValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ]
     },
     {
      "type": "int",
      "name": "getValues",
      "params": []
     },
     {
      "type": "Chronology",
      "name": "getChronology",
      "params": []
     },
     {
      "type": null,
      "name": "setValue",
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "value"
       }
      ]
     },
     {
      "type": null,
      "name": "setValues",
      "params": [
       {
        "type": "int",
        "name": "values"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "String",
        "name": "pattern"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "BasePartial.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AbstractInstant",
    "methods": [
     {
      "type": "DateTimeZone",
      "name": "getZone",
      "params": []
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isSupported",
      "params": [
       {
        "type": "DateTimeFieldType",
        "name": "type"
       }
      ]
     },
     {
      "type": "int",
      "name": "get",
      "params": [
       {
        "type": "DateTimeField",
        "name": "field"
       }
      ]
     },
     {
      "type": "Instant",
      "name": "toInstant",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTimeISO",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "toDateTime",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "MutableDateTime",
      "name": "toMutableDateTime",
      "params": []
     },
     {
      "type": "MutableDateTime",
      "name": "toMutableDateTimeISO",
      "params": []
     },
     {
      "type": "MutableDateTime",
      "name": "toMutableDateTime",
      "params": [
       {
        "type": "DateTimeZone",
        "name": "zone"
       }
      ]
     },
     {
      "type": "MutableDateTime",
      "name": "toMutableDateTime",
      "params": [
       {
        "type": "Chronology",
        "name": "chronology"
       }
      ]
     },
     {
      "type": "Date",
      "name": "toDate",
      "params": []
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "readableInstant"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "int",
      "name": "compareTo",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAfter",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAfterNow",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isAfter",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBefore",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBeforeNow",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isBefore",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEqual",
      "params": [
       {
        "type": "long",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEqualNow",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isEqual",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": [
       {
        "type": "DateTimeFormatter",
        "name": "formatter"
       }
      ]
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "AbstractInstant.java"
 },
 {
  "classes": [
   {
    "fields": [],
    "name": "AbstractInterval",
    "methods": [
     {
      "type": null,
      "name": "checkInterval",
      "params": [
       {
        "type": "long",
        "name": "start"
       },
       {
        "type": "long",
        "name": "end"
       }
      ]
     },
     {
      "type": "DateTime",
      "name": "getStart",
      "params": []
     },
     {
      "type": "DateTime",
      "name": "getEnd",
      "params": []
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "long",
        "name": "millisInstant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "containsNow",
      "params": []
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "contains",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "overlaps",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isEqual",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "other"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBefore",
      "params": [
       {
        "type": "long",
        "name": "millisInstant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBeforeNow",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isBefore",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isBefore",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAfter",
      "params": [
       {
        "type": "long",
        "name": "millisInstant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAfterNow",
      "params": []
     },
     {
      "type": "boolean",
      "name": "isAfter",
      "params": [
       {
        "type": "ReadableInstant",
        "name": "instant"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "isAfter",
      "params": [
       {
        "type": "ReadableInterval",
        "name": "interval"
       }
      ]
     },
     {
      "type": "Interval",
      "name": "toInterval",
      "params": []
     },
     {
      "type": "MutableInterval",
      "name": "toMutableInterval",
      "params": []
     },
     {
      "type": "long",
      "name": "toDurationMillis",
      "params": []
     },
     {
      "type": "Duration",
      "name": "toDuration",
      "params": []
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": []
     },
     {
      "type": "Period",
      "name": "toPeriod",
      "params": [
       {
        "type": "PeriodType",
        "name": "type"
       }
      ]
     },
     {
      "type": "boolean",
      "name": "equals",
      "params": [
       {
        "type": "Object",
        "name": "readableInterval"
       }
      ]
     },
     {
      "type": "int",
      "name": "hashCode",
      "params": []
     },
     {
      "type": "String",
      "name": "toString",
      "params": []
     }
    ]
   }
  ],
  "package_name": "org.joda.time.base",
  "filename": "AbstractInterval.java"
 }
]