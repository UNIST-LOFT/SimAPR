[
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "Object",
        "name": "contextBean"
       }
      ],
      "name": "newContext"
     },
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "JXPathContext",
        "name": "parentContext"
       },
       {
        "type": "Object",
        "name": "contextBean"
       }
      ],
      "name": "newContext"
     },
     {
      "type": "JXPathContextFactory",
      "params": [],
      "name": "getContextFactory"
     },
     {
      "type": "JXPathContext",
      "params": [],
      "name": "getParentContext"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getContextBean"
     },
     {
      "type": "Pointer",
      "params": [],
      "name": "getContextPointer"
     },
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "Pointer",
        "name": "pointer"
       }
      ],
      "name": "getRelativeContext"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Variables",
        "name": "vars"
       }
      ],
      "name": "setVariables"
     },
     {
      "type": "Variables",
      "params": [],
      "name": "getVariables"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Functions",
        "name": "functions"
       }
      ],
      "name": "setFunctions"
     },
     {
      "type": "Functions",
      "params": [],
      "name": "getFunctions"
     },
     {
      "type": null,
      "params": [
       {
        "type": "AbstractFactory",
        "name": "factory"
       }
      ],
      "name": "setFactory"
     },
     {
      "type": "AbstractFactory",
      "params": [],
      "name": "getFactory"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "setLocale"
     },
     {
      "type": "Locale",
      "params": [],
      "name": "getLocale"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "DecimalFormatSymbols",
        "name": "symbols"
       }
      ],
      "name": "setDecimalFormatSymbols"
     },
     {
      "type": "DecimalFormatSymbols",
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "name": "getDecimalFormatSymbols"
     },
     {
      "type": null,
      "params": [
       {
        "type": "boolean",
        "name": "lenient"
       }
      ],
      "name": "setLenient"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLenient"
     },
     {
      "type": "CompiledExpression",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "compile"
     },
     {
      "type": "CompiledExpression",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "compilePath"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "selectSingleNode"
     },
     {
      "type": "List",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "selectNodes"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Class",
        "name": "requiredType"
       }
      ],
      "name": "getValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPathAndSetValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "removePath"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "removeAll"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "iterate"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "getPointer"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "iteratePointers"
     },
     {
      "type": null,
      "params": [
       {
        "type": "IdentityManager",
        "name": "idManager"
       }
      ],
      "name": "setIdentityManager"
     },
     {
      "type": "IdentityManager",
      "params": [],
      "name": "getIdentityManager"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "id"
       }
      ],
      "name": "getPointerByID"
     },
     {
      "type": null,
      "params": [
       {
        "type": "KeyManager",
        "name": "keyManager"
       }
      ],
      "name": "setKeyManager"
     },
     {
      "type": "KeyManager",
      "params": [],
      "name": "getKeyManager"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "String",
        "name": "value"
       }
      ],
      "name": "getPointerByKey"
     },
     {
      "type": "NodeSet",
      "params": [
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "getNodeSetByKey"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "prefix"
       },
       {
        "type": "String",
        "name": "namespaceURI"
       }
      ],
      "name": "registerNamespace"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "getNamespaceURI"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "namespaceURI"
       }
      ],
      "name": "getPrefix"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Pointer",
        "name": "namespaceContextPointer"
       }
      ],
      "name": "setNamespaceContextPointer"
     },
     {
      "type": "Pointer",
      "params": [],
      "name": "getNamespaceContextPointer"
     }
    ],
    "name": "JXPathContext",
    "fields": [
     {
      "type": "JXPathContext",
      "name": "parentContext"
     },
     {
      "type": "Object",
      "name": "contextBean"
     },
     {
      "type": "Variables",
      "name": "vars"
     },
     {
      "type": "Functions",
      "name": "functions"
     },
     {
      "type": "AbstractFactory",
      "name": "factory"
     },
     {
      "type": "Locale",
      "name": "locale"
     },
     {
      "type": "boolean",
      "name": "lenientSet"
     },
     {
      "type": "boolean",
      "name": "lenient"
     },
     {
      "type": "IdentityManager",
      "name": "idManager"
     },
     {
      "type": "KeyManager",
      "name": "keyManager"
     },
     {
      "type": "HashMap",
      "name": "decimalFormats"
     },
     {
      "type": "JXPathContextFactory",
      "name": "contextFactory"
     },
     {
      "type": "JXPathContext",
      "name": "compilationContext"
     },
     {
      "type": "PackageFunctions",
      "name": "GENERIC_FUNCTIONS"
     }
    ]
   }
  ],
  "filename": "JXPathContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "Functions",
        "name": "functions"
       }
      ],
      "name": "addFunctions"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Functions",
        "name": "functions"
       }
      ],
      "name": "removeFunctions"
     },
     {
      "type": "Set",
      "params": [],
      "name": "getUsedNamespaces"
     },
     {
      "type": "Function",
      "params": [
       {
        "type": "String",
        "name": "namespace"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "getFunction"
     },
     {
      "type": null,
      "params": [],
      "name": "prepareCache"
     }
    ],
    "name": "FunctionLibrary",
    "fields": [
     {
      "type": "List",
      "name": "allFunctions"
     },
     {
      "type": "HashMap",
      "name": "byNamespace"
     }
    ]
   }
  ],
  "filename": "FunctionLibrary.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [],
      "name": "getMessage"
     },
     {
      "type": "Throwable",
      "params": [],
      "name": "getException"
     },
     {
      "type": "Throwable",
      "params": [],
      "name": "getCause"
     }
    ],
    "name": "JXPathException",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Throwable",
      "name": "exception"
     }
    ]
   }
  ],
  "filename": "JXPathException.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getNode"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getRootNode"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "Object",
      "params": [],
      "name": "clone"
     }
    ],
    "name": "Pointer",
    "fields": []
   }
  ],
  "filename": "Pointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Class",
        "name": "requiredType"
       }
      ],
      "name": "getValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPathAndSetValue"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "iterate"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "getPointer"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "iteratePointers"
     },
     {
      "type": null,
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "removePath"
     },
     {
      "type": null,
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "removeAll"
     }
    ],
    "name": "CompiledExpression",
    "fields": []
   }
  ],
  "filename": "CompiledExpression.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "id"
       }
      ],
      "name": "getPointerByID"
     }
    ],
    "name": "IdentityManager",
    "fields": []
   }
  ],
  "filename": "IdentityManager.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     }
    ],
    "name": "XMLDocumentContainer",
    "fields": [
     {
      "type": "DocumentContainer",
      "name": "delegate"
     },
     {
      "type": "Object",
      "name": "document"
     },
     {
      "type": "URL",
      "name": "xmlURL"
     },
     {
      "type": "Source",
      "name": "source"
     }
    ]
   }
  ],
  "filename": "XMLDocumentContainer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [],
      "name": "getMessage"
     },
     {
      "type": "Exception",
      "params": [],
      "name": "getException"
     }
    ],
    "name": "JXPathContextFactoryConfigurationError",
    "fields": [
     {
      "type": "Exception",
      "name": "exception"
     }
    ]
   }
  ],
  "filename": "JXPathContextFactoryConfigurationError.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Set",
      "params": [],
      "name": "getUsedNamespaces"
     },
     {
      "type": "Function",
      "params": [
       {
        "type": "String",
        "name": "namespace"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "getFunction"
     }
    ],
    "name": "ClassFunctions",
    "fields": [
     {
      "type": "Class",
      "name": "functionClass"
     },
     {
      "type": "String",
      "name": "namespace"
     },
     {
      "type": "Object",
      "name": "EMPTY_ARRAY"
     }
    ]
   }
  ],
  "filename": "ClassFunctions.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "isAtomic"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isDynamic"
     },
     {
      "type": "PropertyDescriptor",
      "params": [],
      "name": "getPropertyDescriptors"
     },
     {
      "type": "PropertyDescriptor",
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "name": "getPropertyDescriptor"
     },
     {
      "type": "Class",
      "params": [],
      "name": "getDynamicPropertyHandlerClass"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     }
    ],
    "name": "JXPathBasicBeanInfo",
    "fields": [
     {
      "type": "boolean",
      "name": "atomic"
     },
     {
      "type": "Class",
      "name": "clazz"
     },
     {
      "type": "PropertyDescriptor",
      "name": "propertyDescriptors"
     },
     {
      "type": "Class",
      "name": "dynamicPropertyHandlerClass"
     },
     {
      "type": "HashMap",
      "name": "propertyDescriptorMap"
     }
    ]
   }
  ],
  "filename": "JXPathBasicBeanInfo.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "ExpressionContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "invoke"
     }
    ],
    "name": "Function",
    "fields": []
   }
  ],
  "filename": "Function.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "Class",
        "name": "beanClass"
       }
      ],
      "name": "registerAtomicClass"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Class",
        "name": "beanClass"
       },
       {
        "type": "Class",
        "name": "dynamicPropertyHandlerClass"
       }
      ],
      "name": "registerDynamicClass"
     },
     {
      "type": "JXPathBeanInfo",
      "params": [
       {
        "type": "Class",
        "name": "beanClass"
       }
      ],
      "name": "getBeanInfo"
     },
     {
      "type": "JXPathBeanInfo",
      "params": [
       {
        "type": "Class",
        "name": "beanClass"
       }
      ],
      "name": "findDynamicBeanInfo"
     },
     {
      "type": "JXPathBeanInfo",
      "params": [
       {
        "type": "Class",
        "name": "beanClass"
       }
      ],
      "name": "findInformant"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Class",
        "name": "sibling"
       },
       {
        "type": "String",
        "name": "className"
       }
      ],
      "name": "instantiate"
     }
    ],
    "name": "JXPathIntrospector",
    "fields": [
     {
      "type": "HashMap",
      "name": "byClass"
     },
     {
      "type": "HashMap",
      "name": "byInterface"
     }
    ]
   }
  ],
  "filename": "JXPathIntrospector.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "varName"
       }
      ],
      "name": "isDeclaredVariable"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "varName"
       }
      ],
      "name": "getVariable"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "varName"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "declareVariable"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "varName"
       }
      ],
      "name": "undeclareVariable"
     }
    ],
    "name": "Variables",
    "fields": []
   }
  ],
  "filename": "Variables.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "List",
      "params": [],
      "name": "getNodes"
     },
     {
      "type": "List",
      "params": [],
      "name": "getPointers"
     },
     {
      "type": "List",
      "params": [],
      "name": "getValues"
     }
    ],
    "name": "NodeSet",
    "fields": []
   }
  ],
  "filename": "NodeSet.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "Pointer",
        "name": "pointer"
       }
      ],
      "name": "add"
     },
     {
      "type": null,
      "params": [
       {
        "type": "NodeSet",
        "name": "nodeSet"
       }
      ],
      "name": "add"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Pointer",
        "name": "pointer"
       }
      ],
      "name": "remove"
     },
     {
      "type": "List",
      "params": [],
      "name": "getPointers"
     },
     {
      "type": "List",
      "params": [],
      "name": "getNodes"
     },
     {
      "type": "List",
      "params": [],
      "name": "getValues"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     }
    ],
    "name": "BasicNodeSet",
    "fields": [
     {
      "type": "List",
      "name": "pointers"
     },
     {
      "type": "List",
      "name": "readOnlyPointers"
     },
     {
      "type": "List",
      "name": "nodes"
     },
     {
      "type": "List",
      "name": "values"
     }
    ]
   }
  ],
  "filename": "BasicNodeSet.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [],
    "name": "JXPathTypeConversionException",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ],
  "filename": "JXPathTypeConversionException.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "varName"
       }
      ],
      "name": "isDeclaredVariable"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "varName"
       }
      ],
      "name": "getVariable"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "varName"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "declareVariable"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "varName"
       }
      ],
      "name": "undeclareVariable"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     }
    ],
    "name": "BasicVariables",
    "fields": [
     {
      "type": "HashMap",
      "name": "vars"
     }
    ]
   }
  ],
  "filename": "BasicVariables.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [],
    "name": "JXPathInvalidAccessException",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ],
  "filename": "JXPathInvalidAccessException.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [],
    "name": "JXPathNotFoundException",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ],
  "filename": "JXPathNotFoundException.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "keyName"
       },
       {
        "type": "String",
        "name": "keyValue"
       }
      ],
      "name": "getPointerByKey"
     }
    ],
    "name": "KeyManager",
    "fields": []
   }
  ],
  "filename": "KeyManager.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "getPropertyNames"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "name": "getProperty"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "propertyName"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setProperty"
     }
    ],
    "name": "DynamicPropertyHandler",
    "fields": []
   }
  ],
  "filename": "DynamicPropertyHandler.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Set",
      "params": [],
      "name": "getUsedNamespaces"
     },
     {
      "type": "Function",
      "params": [
       {
        "type": "String",
        "name": "namespace"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "getFunction"
     }
    ],
    "name": "PackageFunctions",
    "fields": [
     {
      "type": "String",
      "name": "classPrefix"
     },
     {
      "type": "String",
      "name": "namespace"
     },
     {
      "type": "Object",
      "name": "EMPTY_ARRAY"
     }
    ]
   }
  ],
  "filename": "PackageFunctions.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "NodeSet",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "getNodeSetByKey"
     }
    ],
    "name": "ExtendedKeyManager",
    "fields": []
   }
  ],
  "filename": "ExtendedKeyManager.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "JXPathContext",
      "params": [],
      "name": "getJXPathContext"
     },
     {
      "type": "Pointer",
      "params": [],
      "name": "getContextNodePointer"
     },
     {
      "type": "List",
      "params": [],
      "name": "getContextNodeList"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     }
    ],
    "name": "ExpressionContext",
    "fields": []
   }
  ],
  "filename": "ExpressionContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "isAtomic"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isDynamic"
     },
     {
      "type": "PropertyDescriptor",
      "params": [],
      "name": "getPropertyDescriptors"
     },
     {
      "type": "PropertyDescriptor",
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "name": "getPropertyDescriptor"
     },
     {
      "type": "Class",
      "params": [],
      "name": "getDynamicPropertyHandlerClass"
     }
    ],
    "name": "JXPathBeanInfo",
    "fields": []
   }
  ],
  "filename": "JXPathBeanInfo.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Pointer",
        "name": "pointer"
       },
       {
        "type": "Object",
        "name": "parent"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createObject"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "name"
       }
      ],
      "name": "declareVariable"
     }
    ],
    "name": "AbstractFactory",
    "fields": []
   }
  ],
  "filename": "AbstractFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Set",
      "params": [],
      "name": "getUsedNamespaces"
     },
     {
      "type": "Function",
      "params": [
       {
        "type": "String",
        "name": "namespace"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "getFunction"
     }
    ],
    "name": "Functions",
    "fields": []
   }
  ],
  "filename": "Functions.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "JXPathContextFactory",
      "params": [],
      "name": "newInstance"
     },
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "JXPathContext",
        "name": "parentContext"
       },
       {
        "type": "Object",
        "name": "contextBean"
       }
      ],
      "name": "newContext"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "property"
       },
       {
        "type": "String",
        "name": "defaultFactory"
       }
      ],
      "name": "findFactory"
     }
    ],
    "name": "JXPathContextFactory",
    "fields": [
     {
      "type": "String",
      "name": "FACTORY_NAME_PROPERTY"
     },
     {
      "type": "String",
      "name": "DEFAULT_FACTORY_CLASS"
     },
     {
      "type": "String",
      "name": "factoryImplName"
     },
     {
      "type": "boolean",
      "name": "debug"
     }
    ]
   }
  ],
  "filename": "JXPathContextFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [],
    "name": "JXPathAbstractFactoryException",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ],
  "filename": "JXPathAbstractFactoryException.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     }
    ],
    "name": "Container",
    "fields": []
   }
  ],
  "filename": "Container.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "getPropertyNames"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "name": "getProperty"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "String",
        "name": "propertyName"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setProperty"
     }
    ],
    "name": "MapDynamicPropertyHandler",
    "fields": []
   }
  ],
  "filename": "MapDynamicPropertyHandler.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [],
    "name": "JXPathFunctionNotFoundException",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ],
  "filename": "JXPathFunctionNotFoundException.java"
 },
 {
  "package_name": "org.apache.commons.jxpath",
  "classes": [
   {
    "methods": [],
    "name": "JXPathInvalidSyntaxException",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     }
    ]
   }
  ],
  "filename": "JXPathInvalidSyntaxException.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [],
      "name": "getXPath"
     },
     {
      "type": "Expression",
      "params": [],
      "name": "getExpression"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Class",
        "name": "requiredType"
       }
      ],
      "name": "getValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPathAndSetValue"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "iterate"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "getPointer"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "iteratePointers"
     },
     {
      "type": null,
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "removePath"
     },
     {
      "type": null,
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "removeAll"
     }
    ],
    "name": "JXPathCompiledExpression",
    "fields": [
     {
      "type": "String",
      "name": "xpath"
     },
     {
      "type": "Expression",
      "name": "expression"
     }
    ]
   }
  ],
  "filename": "JXPathCompiledExpression.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri",
  "classes": [
   {
    "methods": [
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "JXPathContext",
        "name": "parentContext"
       },
       {
        "type": "Object",
        "name": "contextBean"
       }
      ],
      "name": "newContext"
     }
    ],
    "name": "JXPathContextFactoryReferenceImpl",
    "fields": []
   }
  ],
  "filename": "JXPathContextFactoryReferenceImpl.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "value"
       }
      ],
      "name": "number"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "value"
       }
      ],
      "name": "literal"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       },
       {
        "type": "String",
        "name": "name"
       }
      ],
      "name": "qname"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ],
      "name": "sum"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "minus"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "multiply"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "divide"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "mod"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "lessThan"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "lessThanOrEqual"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "greaterThan"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "greaterThanOrEqual"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "equal"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "notEqual"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "argument"
       }
      ],
      "name": "minus"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "qname"
       }
      ],
      "name": "variableReference"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "int",
        "name": "code"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "name": "function"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "name": "function"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ],
      "name": "and"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ],
      "name": "or"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ],
      "name": "union"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "qname"
       }
      ],
      "name": "nodeNameTest"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "int",
        "name": "nodeType"
       }
      ],
      "name": "nodeTypeTest"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "instruction"
       }
      ],
      "name": "processingInstructionTest"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "int",
        "name": "axis"
       },
       {
        "type": "Object",
        "name": "nodeTest"
       },
       {
        "type": "Object",
        "name": "predicates"
       }
      ],
      "name": "step"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "boolean",
        "name": "absolute"
       },
       {
        "type": "Object",
        "name": "steps"
       }
      ],
      "name": "locationPath"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "expression"
       },
       {
        "type": "Object",
        "name": "predicates"
       },
       {
        "type": "Object",
        "name": "steps"
       }
      ],
      "name": "expressionPath"
     }
    ],
    "name": "Compiler",
    "fields": [
     {
      "type": "int",
      "name": "NODE_TYPE_NODE"
     },
     {
      "type": "int",
      "name": "NODE_TYPE_TEXT"
     },
     {
      "type": "int",
      "name": "NODE_TYPE_COMMENT"
     },
     {
      "type": "int",
      "name": "NODE_TYPE_PI"
     },
     {
      "type": "int",
      "name": "AXIS_SELF"
     },
     {
      "type": "int",
      "name": "AXIS_CHILD"
     },
     {
      "type": "int",
      "name": "AXIS_PARENT"
     },
     {
      "type": "int",
      "name": "AXIS_ANCESTOR"
     },
     {
      "type": "int",
      "name": "AXIS_ATTRIBUTE"
     },
     {
      "type": "int",
      "name": "AXIS_NAMESPACE"
     },
     {
      "type": "int",
      "name": "AXIS_PRECEDING"
     },
     {
      "type": "int",
      "name": "AXIS_FOLLOWING"
     },
     {
      "type": "int",
      "name": "AXIS_DESCENDANT"
     },
     {
      "type": "int",
      "name": "AXIS_ANCESTOR_OR_SELF"
     },
     {
      "type": "int",
      "name": "AXIS_FOLLOWING_SIBLING"
     },
     {
      "type": "int",
      "name": "AXIS_PRECEDING_SIBLING"
     },
     {
      "type": "int",
      "name": "AXIS_DESCENDANT_OR_SELF"
     },
     {
      "type": "int",
      "name": "FUNCTION_LAST"
     },
     {
      "type": "int",
      "name": "FUNCTION_POSITION"
     },
     {
      "type": "int",
      "name": "FUNCTION_COUNT"
     },
     {
      "type": "int",
      "name": "FUNCTION_ID"
     },
     {
      "type": "int",
      "name": "FUNCTION_LOCAL_NAME"
     },
     {
      "type": "int",
      "name": "FUNCTION_NAMESPACE_URI"
     },
     {
      "type": "int",
      "name": "FUNCTION_NAME"
     },
     {
      "type": "int",
      "name": "FUNCTION_STRING"
     },
     {
      "type": "int",
      "name": "FUNCTION_CONCAT"
     },
     {
      "type": "int",
      "name": "FUNCTION_STARTS_WITH"
     },
     {
      "type": "int",
      "name": "FUNCTION_CONTAINS"
     },
     {
      "type": "int",
      "name": "FUNCTION_SUBSTRING_BEFORE"
     },
     {
      "type": "int",
      "name": "FUNCTION_SUBSTRING_AFTER"
     },
     {
      "type": "int",
      "name": "FUNCTION_SUBSTRING"
     },
     {
      "type": "int",
      "name": "FUNCTION_STRING_LENGTH"
     },
     {
      "type": "int",
      "name": "FUNCTION_NORMALIZE_SPACE"
     },
     {
      "type": "int",
      "name": "FUNCTION_TRANSLATE"
     },
     {
      "type": "int",
      "name": "FUNCTION_BOOLEAN"
     },
     {
      "type": "int",
      "name": "FUNCTION_NOT"
     },
     {
      "type": "int",
      "name": "FUNCTION_TRUE"
     },
     {
      "type": "int",
      "name": "FUNCTION_FALSE"
     },
     {
      "type": "int",
      "name": "FUNCTION_LANG"
     },
     {
      "type": "int",
      "name": "FUNCTION_NUMBER"
     },
     {
      "type": "int",
      "name": "FUNCTION_SUM"
     },
     {
      "type": "int",
      "name": "FUNCTION_FLOOR"
     },
     {
      "type": "int",
      "name": "FUNCTION_CEILING"
     },
     {
      "type": "int",
      "name": "FUNCTION_ROUND"
     },
     {
      "type": "int",
      "name": "FUNCTION_NULL"
     },
     {
      "type": "int",
      "name": "FUNCTION_KEY"
     },
     {
      "type": "int",
      "name": "FUNCTION_FORMAT_NUMBER"
     }
    ]
   }
  ],
  "filename": "Compiler.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [],
      "name": "getPrefix"
     },
     {
      "type": "String",
      "params": [],
      "name": "getName"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     }
    ],
    "name": "QName",
    "fields": [
     {
      "type": "String",
      "name": "prefix"
     },
     {
      "type": "String",
      "name": "name"
     },
     {
      "type": "String",
      "name": "qualifiedName"
     }
    ]
   }
  ],
  "filename": "QName.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri",
  "classes": [
   {
    "methods": [
     {
      "type": "Pointer",
      "params": [],
      "name": "getContextNodePointer"
     },
     {
      "type": "JXPathContext",
      "params": [],
      "name": "getJXPathContext"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "int",
      "params": [],
      "name": "getDocumentOrder"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isChildOrderingRequired"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "hasNext"
     },
     {
      "type": "Object",
      "params": [],
      "name": "next"
     },
     {
      "type": null,
      "params": [],
      "name": "performIteratorStep"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "constructIterator"
     },
     {
      "type": "List",
      "params": [],
      "name": "getContextNodeList"
     },
     {
      "type": "NodeSet",
      "params": [],
      "name": "getNodeSet"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "RootContext",
      "params": [],
      "name": "getRootContext"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "int",
      "params": [],
      "name": "getCurrentPosition"
     },
     {
      "type": "Pointer",
      "params": [],
      "name": "getSingleNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextSet"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     }
    ],
    "name": "EvalContext",
    "fields": [
     {
      "type": "EvalContext",
      "name": "parentContext"
     },
     {
      "type": "RootContext",
      "name": "rootContext"
     },
     {
      "type": "int",
      "name": "position"
     },
     {
      "type": "boolean",
      "name": "startedSetIteration"
     },
     {
      "type": "boolean",
      "name": "done"
     },
     {
      "type": "boolean",
      "name": "hasPerformedIteratorStep"
     },
     {
      "type": "Iterator",
      "name": "pointerIterator"
     }
    ]
   }
  ],
  "filename": "EvalContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "stringValue"
     },
     {
      "type": "Number",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "number"
     },
     {
      "type": "double",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "doubleValue"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "booleanValue"
     }
    ],
    "name": "InfoSetUtil",
    "fields": [
     {
      "type": "Double",
      "name": "ZERO"
     },
     {
      "type": "Double",
      "name": "ONE"
     },
     {
      "type": "Double",
      "name": "NOT_A_NUMBER"
     }
    ]
   }
  ],
  "filename": "InfoSetUtil.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [],
      "name": "createNodeFactoryArray"
     },
     {
      "type": null,
      "params": [
       {
        "type": "NodePointerFactory",
        "name": "factory"
       }
      ],
      "name": "addNodePointerFactory"
     },
     {
      "type": "NodePointerFactory",
      "params": [],
      "name": "getNodePointerFactories"
     },
     {
      "type": "Compiler",
      "params": [],
      "name": "getCompiler"
     },
     {
      "type": "CompiledExpression",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "compilePath"
     },
     {
      "type": "Expression",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "compileExpression"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       }
      ],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Class",
        "name": "requiredType"
       }
      ],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       },
       {
        "type": "Class",
        "name": "requiredType"
       }
      ],
      "name": "getValue"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "iterate"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       }
      ],
      "name": "iterate"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "getPointer"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       }
      ],
      "name": "getPointer"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPathAndSetValue"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPathAndSetValue"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       },
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "boolean",
        "name": "create"
       }
      ],
      "name": "setValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Expression",
        "name": "expr"
       }
      ],
      "name": "checkSimplePath"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "iteratePointers"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       }
      ],
      "name": "iteratePointers"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "removePath"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       }
      ],
      "name": "removePath"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "xpath"
       }
      ],
      "name": "removeAll"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "xpath"
       },
       {
        "type": "Expression",
        "name": "expr"
       }
      ],
      "name": "removeAll"
     },
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "Pointer",
        "name": "pointer"
       }
      ],
      "name": "getRelativeContext"
     },
     {
      "type": "Pointer",
      "params": [],
      "name": "getContextPointer"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getAbsoluteRootPointer"
     },
     {
      "type": "EvalContext",
      "params": [],
      "name": "getEvalContext"
     },
     {
      "type": "EvalContext",
      "params": [],
      "name": "getAbsoluteRootContext"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "getVariablePointer"
     },
     {
      "type": "Function",
      "params": [
       {
        "type": "QName",
        "name": "functionName"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "getFunction"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "prefix"
       },
       {
        "type": "String",
        "name": "namespaceURI"
       }
      ],
      "name": "registerNamespace"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "getNamespaceURI"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "namespaceURI"
       }
      ],
      "name": "getPrefix"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Pointer",
        "name": "pointer"
       }
      ],
      "name": "setNamespaceContextPointer"
     },
     {
      "type": "Pointer",
      "params": [],
      "name": "getNamespaceContextPointer"
     },
     {
      "type": "NamespaceResolver",
      "params": [],
      "name": "getNamespaceResolver"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "className"
       },
       {
        "type": "String",
        "name": "existenceCheckClassName"
       }
      ],
      "name": "allocateConditionally"
     }
    ],
    "name": "JXPathContextReferenceImpl",
    "fields": [
     {
      "type": "boolean",
      "name": "USE_SOFT_CACHE"
     },
     {
      "type": "Compiler",
      "name": "COMPILER"
     },
     {
      "type": "Map",
      "name": "compiled"
     },
     {
      "type": "int",
      "name": "cleanupCount"
     },
     {
      "type": "Vector",
      "name": "nodeFactories"
     },
     {
      "type": "NodePointerFactory",
      "name": "nodeFactoryArray"
     },
     {
      "type": "Pointer",
      "name": "rootPointer"
     },
     {
      "type": "Pointer",
      "name": "contextPointer"
     },
     {
      "type": "NamespaceResolver",
      "name": "namespaceResolver"
     },
     {
      "type": "int",
      "name": "CLEANUP_THRESHOLD"
     }
    ]
   }
  ],
  "filename": "JXPathContextReferenceImpl.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "prefix"
       },
       {
        "type": "String",
        "name": "namespaceURI"
       }
      ],
      "name": "registerNamespace"
     },
     {
      "type": null,
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer"
       }
      ],
      "name": "setNamespaceContextPointer"
     },
     {
      "type": "Pointer",
      "params": [],
      "name": "getNamespaceContextPointer"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "getNamespaceURI"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "namespaceURI"
       }
      ],
      "name": "getPrefix"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSealed"
     },
     {
      "type": null,
      "params": [],
      "name": "seal"
     },
     {
      "type": "Object",
      "params": [],
      "name": "clone"
     }
    ],
    "name": "NamespaceResolver",
    "fields": [
     {
      "type": "NamespaceResolver",
      "name": "parent"
     },
     {
      "type": "HashMap",
      "name": "namespaceMap"
     },
     {
      "type": "HashMap",
      "name": "reverseMap"
     },
     {
      "type": "NodePointer",
      "name": "pointer"
     },
     {
      "type": "boolean",
      "name": "sealed"
     }
    ]
   }
  ],
  "filename": "NamespaceResolver.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "expression"
       },
       {
        "type": "Compiler",
        "name": "compiler"
       }
      ],
      "name": "parseExpression"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "expression"
       },
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "describePosition"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "string"
       }
      ],
      "name": "addEscapes"
     }
    ],
    "name": "Parser",
    "fields": [
     {
      "type": "XPathParser",
      "name": "parser"
     }
    ]
   }
  ],
  "filename": "Parser.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.parser",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "Token",
      "params": [
       {
        "type": "int",
        "name": "ofKind"
       }
      ],
      "name": "newToken"
     }
    ],
    "name": "Token",
    "fields": [
     {
      "type": "int",
      "name": "kind"
     },
     {
      "type": "int",
      "name": "beginLine"
     },
     {
      "type": "int",
      "name": "beginColumn"
     },
     {
      "type": "int",
      "name": "endLine"
     },
     {
      "type": "int",
      "name": "endColumn"
     },
     {
      "type": "String",
      "name": "image"
     },
     {
      "type": "Token",
      "name": "next"
     },
     {
      "type": "Token",
      "name": "specialToken"
     }
    ]
   }
  ],
  "filename": "Token.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.parser",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "java",
        "name": "ds"
       }
      ],
      "name": "setDebugStream"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "int",
        "name": "pos"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjStopStringLiteralDfa_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "int",
        "name": "pos"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjStartNfa_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "int",
        "name": "pos"
       },
       {
        "type": "int",
        "name": "kind"
       }
      ],
      "name": "jjStopAtPos"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "int",
        "name": "pos"
       },
       {
        "type": "int",
        "name": "kind"
       },
       {
        "type": "int",
        "name": "state"
       }
      ],
      "name": "jjStartNfaWithStates_0"
     },
     {
      "type": "int",
      "params": [],
      "name": "jjMoveStringLiteralDfa0_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa1_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa2_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa3_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa4_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa5_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa6_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa7_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa8_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa9_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa10_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa11_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa12_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa13_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa14_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       },
       {
        "type": "long",
        "name": "old1"
       },
       {
        "type": "long",
        "name": "active1"
       }
      ],
      "name": "jjMoveStringLiteralDfa15_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       }
      ],
      "name": "jjMoveStringLiteralDfa16_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       }
      ],
      "name": "jjMoveStringLiteralDfa17_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       }
      ],
      "name": "jjMoveStringLiteralDfa18_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       }
      ],
      "name": "jjMoveStringLiteralDfa19_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       }
      ],
      "name": "jjMoveStringLiteralDfa20_0"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "long",
        "name": "old0"
       },
       {
        "type": "long",
        "name": "active0"
       }
      ],
      "name": "jjMoveStringLiteralDfa21_0"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "state"
       }
      ],
      "name": "jjCheckNAdd"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "end"
       }
      ],
      "name": "jjAddStates"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "state1"
       },
       {
        "type": "int",
        "name": "state2"
       }
      ],
      "name": "jjCheckNAddTwoStates"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "start"
       },
       {
        "type": "int",
        "name": "end"
       }
      ],
      "name": "jjCheckNAddStates"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "start"
       }
      ],
      "name": "jjCheckNAddStates"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "int",
        "name": "startState"
       },
       {
        "type": "int",
        "name": "curPos"
       }
      ],
      "name": "jjMoveNfa_0"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "hiByte"
       },
       {
        "type": "int",
        "name": "i1"
       },
       {
        "type": "int",
        "name": "i2"
       },
       {
        "type": "long",
        "name": "l1"
       },
       {
        "type": "long",
        "name": "l2"
       }
      ],
      "name": "jjCanMove_0"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "hiByte"
       },
       {
        "type": "int",
        "name": "i1"
       },
       {
        "type": "int",
        "name": "i2"
       },
       {
        "type": "long",
        "name": "l1"
       },
       {
        "type": "long",
        "name": "l2"
       }
      ],
      "name": "jjCanMove_1"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "hiByte"
       },
       {
        "type": "int",
        "name": "i1"
       },
       {
        "type": "int",
        "name": "i2"
       },
       {
        "type": "long",
        "name": "l1"
       },
       {
        "type": "long",
        "name": "l2"
       }
      ],
      "name": "jjCanMove_2"
     },
     {
      "type": null,
      "params": [
       {
        "type": "SimpleCharStream",
        "name": "stream"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": null,
      "params": [],
      "name": "ReInitRounds"
     },
     {
      "type": null,
      "params": [
       {
        "type": "SimpleCharStream",
        "name": "stream"
       },
       {
        "type": "int",
        "name": "lexState"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "lexState"
       }
      ],
      "name": "SwitchTo"
     },
     {
      "type": "Token",
      "params": [],
      "name": "jjFillToken"
     },
     {
      "type": "Token",
      "params": [],
      "name": "getNextToken"
     }
    ],
    "name": "XPathParserTokenManager",
    "fields": [
     {
      "type": "java",
      "name": "debugStream"
     },
     {
      "type": "long",
      "name": "jjbitVec0"
     },
     {
      "type": "long",
      "name": "jjbitVec2"
     },
     {
      "type": "long",
      "name": "jjbitVec3"
     },
     {
      "type": "long",
      "name": "jjbitVec4"
     },
     {
      "type": "long",
      "name": "jjbitVec5"
     },
     {
      "type": "long",
      "name": "jjbitVec6"
     },
     {
      "type": "long",
      "name": "jjbitVec7"
     },
     {
      "type": "long",
      "name": "jjbitVec8"
     },
     {
      "type": "long",
      "name": "jjbitVec9"
     },
     {
      "type": "long",
      "name": "jjbitVec10"
     },
     {
      "type": "long",
      "name": "jjbitVec11"
     },
     {
      "type": "long",
      "name": "jjbitVec12"
     },
     {
      "type": "long",
      "name": "jjbitVec13"
     },
     {
      "type": "long",
      "name": "jjbitVec14"
     },
     {
      "type": "long",
      "name": "jjbitVec15"
     },
     {
      "type": "long",
      "name": "jjbitVec16"
     },
     {
      "type": "long",
      "name": "jjbitVec17"
     },
     {
      "type": "long",
      "name": "jjbitVec18"
     },
     {
      "type": "long",
      "name": "jjbitVec19"
     },
     {
      "type": "long",
      "name": "jjbitVec20"
     },
     {
      "type": "long",
      "name": "jjbitVec21"
     },
     {
      "type": "long",
      "name": "jjbitVec22"
     },
     {
      "type": "long",
      "name": "jjbitVec23"
     },
     {
      "type": "long",
      "name": "jjbitVec24"
     },
     {
      "type": "long",
      "name": "jjbitVec25"
     },
     {
      "type": "long",
      "name": "jjbitVec26"
     },
     {
      "type": "long",
      "name": "jjbitVec27"
     },
     {
      "type": "long",
      "name": "jjbitVec28"
     },
     {
      "type": "long",
      "name": "jjbitVec29"
     },
     {
      "type": "long",
      "name": "jjbitVec30"
     },
     {
      "type": "long",
      "name": "jjbitVec31"
     },
     {
      "type": "long",
      "name": "jjbitVec32"
     },
     {
      "type": "long",
      "name": "jjbitVec33"
     },
     {
      "type": "long",
      "name": "jjbitVec34"
     },
     {
      "type": "long",
      "name": "jjbitVec35"
     },
     {
      "type": "long",
      "name": "jjbitVec36"
     },
     {
      "type": "long",
      "name": "jjbitVec37"
     },
     {
      "type": "long",
      "name": "jjbitVec38"
     },
     {
      "type": "long",
      "name": "jjbitVec39"
     },
     {
      "type": "long",
      "name": "jjbitVec40"
     },
     {
      "type": "long",
      "name": "jjbitVec41"
     },
     {
      "type": "int",
      "name": "jjnextStates"
     },
     {
      "type": "String",
      "name": "jjstrLiteralImages"
     },
     {
      "type": "String",
      "name": "lexStateNames"
     },
     {
      "type": "long",
      "name": "jjtoToken"
     },
     {
      "type": "long",
      "name": "jjtoSkip"
     },
     {
      "type": "SimpleCharStream",
      "name": "input_stream"
     },
     {
      "type": "int",
      "name": "jjrounds"
     },
     {
      "type": "int",
      "name": "jjstateSet"
     },
     {
      "type": "char",
      "name": "curChar"
     },
     {
      "type": "int",
      "name": "curLexState"
     },
     {
      "type": "int",
      "name": "defaultLexState"
     },
     {
      "type": "int",
      "name": "jjnewStateCnt"
     },
     {
      "type": "int",
      "name": "jjround"
     },
     {
      "type": "int",
      "name": "jjmatchedPos"
     },
     {
      "type": "int",
      "name": "jjmatchedKind"
     }
    ]
   }
  ],
  "filename": "XPathParserTokenManager.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.parser",
  "classes": [
   {
    "methods": [],
    "name": "XPathParserConstants",
    "fields": [
     {
      "type": "int",
      "name": "EOF"
     },
     {
      "type": "int",
      "name": "SLASH"
     },
     {
      "type": "int",
      "name": "SLASHSLASH"
     },
     {
      "type": "int",
      "name": "UNION"
     },
     {
      "type": "int",
      "name": "PLUS"
     },
     {
      "type": "int",
      "name": "MINUS"
     },
     {
      "type": "int",
      "name": "EQ"
     },
     {
      "type": "int",
      "name": "NEQ"
     },
     {
      "type": "int",
      "name": "LT"
     },
     {
      "type": "int",
      "name": "LTE"
     },
     {
      "type": "int",
      "name": "GT"
     },
     {
      "type": "int",
      "name": "GTE"
     },
     {
      "type": "int",
      "name": "VARIABLE"
     },
     {
      "type": "int",
      "name": "Literal"
     },
     {
      "type": "int",
      "name": "Digit"
     },
     {
      "type": "int",
      "name": "Number"
     },
     {
      "type": "int",
      "name": "Letter"
     },
     {
      "type": "int",
      "name": "BaseChar"
     },
     {
      "type": "int",
      "name": "Ideographic"
     },
     {
      "type": "int",
      "name": "CombiningChar"
     },
     {
      "type": "int",
      "name": "UnicodeDigit"
     },
     {
      "type": "int",
      "name": "Extender"
     },
     {
      "type": "int",
      "name": "OR"
     },
     {
      "type": "int",
      "name": "AND"
     },
     {
      "type": "int",
      "name": "MOD"
     },
     {
      "type": "int",
      "name": "DIV"
     },
     {
      "type": "int",
      "name": "NODE"
     },
     {
      "type": "int",
      "name": "TEXT"
     },
     {
      "type": "int",
      "name": "COMMENT"
     },
     {
      "type": "int",
      "name": "PI"
     },
     {
      "type": "int",
      "name": "AXIS_SELF"
     },
     {
      "type": "int",
      "name": "AXIS_CHILD"
     },
     {
      "type": "int",
      "name": "AXIS_PARENT"
     },
     {
      "type": "int",
      "name": "AXIS_ANCESTOR"
     },
     {
      "type": "int",
      "name": "AXIS_ATTRIBUTE"
     },
     {
      "type": "int",
      "name": "AXIS_NAMESPACE"
     },
     {
      "type": "int",
      "name": "AXIS_PRECEDING"
     },
     {
      "type": "int",
      "name": "AXIS_FOLLOWING"
     },
     {
      "type": "int",
      "name": "AXIS_DESCENDANT"
     },
     {
      "type": "int",
      "name": "AXIS_ANCESTOR_OR_SELF"
     },
     {
      "type": "int",
      "name": "AXIS_FOLLOWING_SIBLING"
     },
     {
      "type": "int",
      "name": "AXIS_PRECEDING_SIBLING"
     },
     {
      "type": "int",
      "name": "AXIS_DESCENDANT_OR_SELF"
     },
     {
      "type": "int",
      "name": "FUNCTION_LAST"
     },
     {
      "type": "int",
      "name": "FUNCTION_POSITION"
     },
     {
      "type": "int",
      "name": "FUNCTION_COUNT"
     },
     {
      "type": "int",
      "name": "FUNCTION_ID"
     },
     {
      "type": "int",
      "name": "FUNCTION_KEY"
     },
     {
      "type": "int",
      "name": "FUNCTION_LOCAL_NAME"
     },
     {
      "type": "int",
      "name": "FUNCTION_NAMESPACE_URI"
     },
     {
      "type": "int",
      "name": "FUNCTION_NAME"
     },
     {
      "type": "int",
      "name": "FUNCTION_STRING"
     },
     {
      "type": "int",
      "name": "FUNCTION_CONCAT"
     },
     {
      "type": "int",
      "name": "FUNCTION_STARTS_WITH"
     },
     {
      "type": "int",
      "name": "FUNCTION_CONTAINS"
     },
     {
      "type": "int",
      "name": "FUNCTION_SUBSTRING_BEFORE"
     },
     {
      "type": "int",
      "name": "FUNCTION_SUBSTRING_AFTER"
     },
     {
      "type": "int",
      "name": "FUNCTION_SUBSTRING"
     },
     {
      "type": "int",
      "name": "FUNCTION_STRING_LENGTH"
     },
     {
      "type": "int",
      "name": "FUNCTION_NORMALIZE_SPACE"
     },
     {
      "type": "int",
      "name": "FUNCTION_TRANSLATE"
     },
     {
      "type": "int",
      "name": "FUNCTION_BOOLEAN"
     },
     {
      "type": "int",
      "name": "FUNCTION_NOT"
     },
     {
      "type": "int",
      "name": "FUNCTION_TRUE"
     },
     {
      "type": "int",
      "name": "FUNCTION_FALSE"
     },
     {
      "type": "int",
      "name": "FUNCTION_NULL"
     },
     {
      "type": "int",
      "name": "FUNCTION_LANG"
     },
     {
      "type": "int",
      "name": "FUNCTION_NUMBER"
     },
     {
      "type": "int",
      "name": "FUNCTION_SUM"
     },
     {
      "type": "int",
      "name": "FUNCTION_FLOOR"
     },
     {
      "type": "int",
      "name": "FUNCTION_CEILING"
     },
     {
      "type": "int",
      "name": "FUNCTION_ROUND"
     },
     {
      "type": "int",
      "name": "FUNCTION_FORMAT_NUMBER"
     },
     {
      "type": "int",
      "name": "NCName"
     },
     {
      "type": "int",
      "name": "DEFAULT"
     },
     {
      "type": "String",
      "name": "tokenImage"
     }
    ]
   }
  ],
  "filename": "XPathParserConstants.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.parser",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [],
      "name": "getMessage"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ],
      "name": "add_escapes"
     }
    ],
    "name": "ParseException",
    "fields": [
     {
      "type": "boolean",
      "name": "specialConstructor"
     },
     {
      "type": "Token",
      "name": "currentToken"
     },
     {
      "type": "int",
      "name": "expectedTokenSequences"
     },
     {
      "type": "String",
      "name": "tokenImage"
     },
     {
      "type": "String",
      "name": "eol"
     }
    ]
   }
  ],
  "filename": "ParseException.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.parser",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "str"
       }
      ],
      "name": "addEscapes"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "boolean",
        "name": "EOFSeen"
       },
       {
        "type": "int",
        "name": "lexState"
       },
       {
        "type": "int",
        "name": "errorLine"
       },
       {
        "type": "int",
        "name": "errorColumn"
       },
       {
        "type": "String",
        "name": "errorAfter"
       },
       {
        "type": "char",
        "name": "curChar"
       }
      ],
      "name": "LexicalError"
     },
     {
      "type": "String",
      "params": [],
      "name": "getMessage"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "char",
      "params": [],
      "name": "getCharacter"
     }
    ],
    "name": "TokenMgrError",
    "fields": [
     {
      "type": "int",
      "name": "LEXICAL_ERROR"
     },
     {
      "type": "int",
      "name": "STATIC_LEXER_ERROR"
     },
     {
      "type": "int",
      "name": "INVALID_LEXICAL_STATE"
     },
     {
      "type": "int",
      "name": "LOOP_DETECTED"
     },
     {
      "type": "int",
      "name": "errorCode"
     },
     {
      "type": "int",
      "name": "position"
     },
     {
      "type": "char",
      "name": "character"
     }
    ]
   }
  ],
  "filename": "TokenMgrError.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.parser",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "boolean",
        "name": "wrapAround"
       }
      ],
      "name": "ExpandBuff"
     },
     {
      "type": null,
      "params": [],
      "name": "FillBuff"
     },
     {
      "type": "char",
      "params": [],
      "name": "BeginToken"
     },
     {
      "type": null,
      "params": [
       {
        "type": "char",
        "name": "c"
       }
      ],
      "name": "UpdateLineColumn"
     },
     {
      "type": "char",
      "params": [],
      "name": "readChar"
     },
     {
      "type": "int",
      "params": [],
      "name": "getColumn"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLine"
     },
     {
      "type": "int",
      "params": [],
      "name": "getEndColumn"
     },
     {
      "type": "int",
      "params": [],
      "name": "getEndLine"
     },
     {
      "type": "int",
      "params": [],
      "name": "getBeginColumn"
     },
     {
      "type": "int",
      "params": [],
      "name": "getBeginLine"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "amount"
       }
      ],
      "name": "backup"
     },
     {
      "type": null,
      "params": [
       {
        "type": "java",
        "name": "dstream"
       },
       {
        "type": "int",
        "name": "startline"
       },
       {
        "type": "int",
        "name": "startcolumn"
       },
       {
        "type": "int",
        "name": "buffersize"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": null,
      "params": [
       {
        "type": "java",
        "name": "dstream"
       },
       {
        "type": "int",
        "name": "startline"
       },
       {
        "type": "int",
        "name": "startcolumn"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": null,
      "params": [
       {
        "type": "java",
        "name": "dstream"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": null,
      "params": [
       {
        "type": "java",
        "name": "dstream"
       },
       {
        "type": "int",
        "name": "startline"
       },
       {
        "type": "int",
        "name": "startcolumn"
       },
       {
        "type": "int",
        "name": "buffersize"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": null,
      "params": [
       {
        "type": "java",
        "name": "dstream"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": null,
      "params": [
       {
        "type": "java",
        "name": "dstream"
       },
       {
        "type": "int",
        "name": "startline"
       },
       {
        "type": "int",
        "name": "startcolumn"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": "String",
      "params": [],
      "name": "GetImage"
     },
     {
      "type": "char",
      "params": [
       {
        "type": "int",
        "name": "len"
       }
      ],
      "name": "GetSuffix"
     },
     {
      "type": null,
      "params": [],
      "name": "Done"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "newLine"
       },
       {
        "type": "int",
        "name": "newCol"
       }
      ],
      "name": "adjustBeginLineColumn"
     }
    ],
    "name": "SimpleCharStream",
    "fields": [
     {
      "type": "boolean",
      "name": "staticFlag"
     },
     {
      "type": "int",
      "name": "bufsize"
     },
     {
      "type": "int",
      "name": "available"
     },
     {
      "type": "int",
      "name": "tokenBegin"
     },
     {
      "type": "int",
      "name": "bufpos"
     },
     {
      "type": "int",
      "name": "bufline"
     },
     {
      "type": "int",
      "name": "bufcolumn"
     },
     {
      "type": "int",
      "name": "column"
     },
     {
      "type": "int",
      "name": "line"
     },
     {
      "type": "boolean",
      "name": "prevCharIsCR"
     },
     {
      "type": "boolean",
      "name": "prevCharIsLF"
     },
     {
      "type": "java",
      "name": "inputStream"
     },
     {
      "type": "char",
      "name": "buffer"
     },
     {
      "type": "int",
      "name": "maxNextCharInd"
     },
     {
      "type": "int",
      "name": "inBuf"
     }
    ]
   }
  ],
  "filename": "SimpleCharStream.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.parser",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "Compiler",
        "name": "compiler"
       }
      ],
      "name": "setCompiler"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "string"
       }
      ],
      "name": "unescape"
     },
     {
      "type": "String",
      "params": [],
      "name": "NCName"
     },
     {
      "type": "String",
      "params": [],
      "name": "NCName_Without_CoreFunctions"
     },
     {
      "type": "int",
      "params": [],
      "name": "CoreFunctionName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "QName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "QName_Without_CoreFunctions"
     },
     {
      "type": "Object",
      "params": [],
      "name": "parseExpression"
     },
     {
      "type": "Object",
      "params": [],
      "name": "LocationPath"
     },
     {
      "type": "Object",
      "params": [],
      "name": "AbsoluteLocationPath"
     },
     {
      "type": "Object",
      "params": [],
      "name": "RelativeLocationPath"
     },
     {
      "type": null,
      "params": [
       {
        "type": "ArrayList",
        "name": "steps"
       }
      ],
      "name": "LocationStep"
     },
     {
      "type": null,
      "params": [
       {
        "type": "ArrayList",
        "name": "steps"
       }
      ],
      "name": "NodeTest"
     },
     {
      "type": "int",
      "params": [],
      "name": "AxisSpecifier"
     },
     {
      "type": "int",
      "params": [],
      "name": "AxisName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "Predicate"
     },
     {
      "type": "int",
      "params": [],
      "name": "AbbreviatedAxisSpecifier"
     },
     {
      "type": "Object",
      "params": [],
      "name": "Expression"
     },
     {
      "type": "Object",
      "params": [],
      "name": "PrimaryExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "FunctionCall"
     },
     {
      "type": "Object",
      "params": [],
      "name": "CoreFunctionCall"
     },
     {
      "type": "ArrayList",
      "params": [],
      "name": "ArgumentList"
     },
     {
      "type": "Object",
      "params": [],
      "name": "Argument"
     },
     {
      "type": "Object",
      "params": [],
      "name": "UnionExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "PathExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "FilterExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "OrExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "AndExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "EqualityExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "RelationalExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "AdditiveExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "SubtractiveExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "MultiplicativeExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "UnaryExpr"
     },
     {
      "type": "Object",
      "params": [],
      "name": "FunctionName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "VariableReference"
     },
     {
      "type": "Object",
      "params": [],
      "name": "WildcardName"
     },
     {
      "type": "int",
      "params": [],
      "name": "NodeType"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "xla"
       }
      ],
      "name": "jj_2_1"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "xla"
       }
      ],
      "name": "jj_2_2"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "xla"
       }
      ],
      "name": "jj_2_3"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "xla"
       }
      ],
      "name": "jj_2_4"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "xla"
       }
      ],
      "name": "jj_2_5"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "xla"
       }
      ],
      "name": "jj_2_6"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_65"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_104"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_64"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_63"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_62"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_18"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_111"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_110"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_109"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_108"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_107"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_173"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_98"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_171"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_172"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_153"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_130"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_54"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_170"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_53"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_52"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_51"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_50"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_49"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_48"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_176"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_47"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_175"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_46"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_174"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_45"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_44"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_43"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_42"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_41"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_116"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_40"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_39"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_38"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_37"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_36"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_168"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_35"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_34"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_33"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_32"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_31"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_30"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_29"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_169"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_28"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_27"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_152"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_26"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_25"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_151"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_24"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_150"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_23"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_149"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_163"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_22"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_148"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_21"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_147"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_20"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_146"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_145"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_162"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_144"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_143"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_142"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_15"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_141"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_140"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_129"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_159"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_158"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_122"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_121"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_167"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_112"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_166"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_165"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_157"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_164"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_156"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_161"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_160"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_102"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3_4"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3_3"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_101"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_100"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_115"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_134"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_114"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_113"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_99"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_135"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_57"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_125"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_193"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_56"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_55"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_126"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_16"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_190"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_118"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_188"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3_2"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_185"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_192"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_191"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_184"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_189"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_182"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3_6"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_187"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_186"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_183"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_181"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_180"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_178"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_179"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_177"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_136"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_137"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_127"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_119"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_61"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_60"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_59"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_58"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3_1"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_17"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_155"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_139"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_138"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_154"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_132"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_105"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_124"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_133"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_128"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_131"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_123"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_106"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_117"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3_5"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_103"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_91"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_90"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_89"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_88"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_97"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_87"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_96"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_86"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_95"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_85"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_94"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_84"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_93"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_83"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_92"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_82"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_81"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_120"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_80"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_79"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_78"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_77"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_19"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_76"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_75"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_74"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_73"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_72"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_71"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_70"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_69"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_68"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_67"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "jj_3R_66"
     },
     {
      "type": null,
      "params": [],
      "name": "jj_la1_0"
     },
     {
      "type": null,
      "params": [],
      "name": "jj_la1_1"
     },
     {
      "type": null,
      "params": [],
      "name": "jj_la1_2"
     },
     {
      "type": null,
      "params": [
       {
        "type": "java",
        "name": "stream"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": null,
      "params": [
       {
        "type": "java",
        "name": "stream"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": null,
      "params": [
       {
        "type": "XPathParserTokenManager",
        "name": "tm"
       }
      ],
      "name": "ReInit"
     },
     {
      "type": "Token",
      "params": [
       {
        "type": "int",
        "name": "kind"
       }
      ],
      "name": "jj_consume_token"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "kind"
       }
      ],
      "name": "jj_scan_token"
     },
     {
      "type": "Token",
      "params": [],
      "name": "getNextToken"
     },
     {
      "type": "Token",
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "getToken"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "kind"
       },
       {
        "type": "int",
        "name": "pos"
       }
      ],
      "name": "jj_add_error_token"
     },
     {
      "type": "ParseException",
      "params": [],
      "name": "generateParseException"
     },
     {
      "type": null,
      "params": [],
      "name": "enable_tracing"
     },
     {
      "type": null,
      "params": [],
      "name": "disable_tracing"
     },
     {
      "type": null,
      "params": [],
      "name": "jj_rescan_token"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "int",
        "name": "xla"
       }
      ],
      "name": "jj_save"
     }
    ],
    "name": "XPathParser",
    "fields": [
     {
      "type": "Compiler",
      "name": "compiler"
     },
     {
      "type": "XPathParserTokenManager",
      "name": "token_source"
     },
     {
      "type": "SimpleCharStream",
      "name": "jj_input_stream"
     },
     {
      "type": "Token",
      "name": "token"
     },
     {
      "type": "Token",
      "name": "jj_nt"
     },
     {
      "type": "Token",
      "name": "jj_scanpos"
     },
     {
      "type": "Token",
      "name": "jj_lastpos"
     },
     {
      "type": "int",
      "name": "jj_la"
     },
     {
      "type": "boolean",
      "name": "lookingAhead"
     },
     {
      "type": "boolean",
      "name": "jj_semLA"
     },
     {
      "type": "int",
      "name": "jj_gen"
     },
     {
      "type": "int",
      "name": "jj_la1"
     },
     {
      "type": "int",
      "name": "jj_la1_0"
     },
     {
      "type": "int",
      "name": "jj_la1_1"
     },
     {
      "type": "int",
      "name": "jj_la1_2"
     },
     {
      "type": "JJCalls",
      "name": "jj_2_rtns"
     },
     {
      "type": "boolean",
      "name": "jj_rescan"
     },
     {
      "type": "int",
      "name": "jj_gc"
     },
     {
      "type": "java",
      "name": "jj_expentries"
     },
     {
      "type": "int",
      "name": "jj_expentry"
     },
     {
      "type": "int",
      "name": "jj_kind"
     },
     {
      "type": "int",
      "name": "jj_lasttokens"
     },
     {
      "type": "int",
      "name": "jj_endpos"
     }
    ]
   }
  ],
  "filename": "XPathParser.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     }
    ],
    "name": "NodeIterator",
    "fields": []
   }
  ],
  "filename": "NodeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getOrder"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "createNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "createNodePointer"
     }
    ],
    "name": "NodePointerFactory",
    "fields": []
   }
  ],
  "filename": "NodePointerFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "isContainer"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActual"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setIndex"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getImmediateValuePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createCollection"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": null,
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "findVariables"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       },
       {
        "type": "boolean",
        "name": "reverse"
       },
       {
        "type": "NodePointer",
        "name": "startWith"
       }
      ],
      "name": "childIterator"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "attributeIterator"
     },
     {
      "type": "NodeIterator",
      "params": [],
      "name": "namespaceIterator"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "name": "namespacePointer"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodeTest",
        "name": "nodeTest"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "AbstractFactory",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "getAbstractFactory"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     }
    ],
    "name": "VariablePointer",
    "fields": [
     {
      "type": "Variables",
      "name": "variables"
     },
     {
      "type": "QName",
      "name": "name"
     },
     {
      "type": "NodePointer",
      "name": "valuePointer"
     },
     {
      "type": "boolean",
      "name": "actual"
     }
    ]
   }
  ],
  "filename": "VariablePointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "newNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "newChildNodePointer"
     },
     {
      "type": "NamespaceResolver",
      "params": [],
      "name": "getNamespaceResolver"
     },
     {
      "type": null,
      "params": [
       {
        "type": "NamespaceResolver",
        "name": "namespaceResolver"
       }
      ],
      "name": "setNamespaceResolver"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getParent"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getImmediateParentPointer"
     },
     {
      "type": null,
      "params": [
       {
        "type": "boolean",
        "name": "attribute"
       }
      ],
      "name": "setAttribute"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isAttribute"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isRoot"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isContainer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getIndex"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setIndex"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getValuePointer"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getImmediateValuePointer"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActual"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getNodeValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getNode"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getRootNode"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "s1"
       },
       {
        "type": "String",
        "name": "s2"
       }
      ],
      "name": "equalStrings"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPath"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "createAttribute"
     },
     {
      "type": "Locale",
      "params": [],
      "name": "getLocale"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "lang"
       }
      ],
      "name": "isLanguage"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       },
       {
        "type": "boolean",
        "name": "reverse"
       },
       {
        "type": "NodePointer",
        "name": "startWith"
       }
      ],
      "name": "childIterator"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "QName",
        "name": "qname"
       }
      ],
      "name": "attributeIterator"
     },
     {
      "type": "NodeIterator",
      "params": [],
      "name": "namespaceIterator"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "String",
        "name": "namespace"
       }
      ],
      "name": "namespacePointer"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "getNamespaceURI"
     },
     {
      "type": "String",
      "params": [],
      "name": "getNamespaceURI"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "isDefaultNamespace"
     },
     {
      "type": "String",
      "params": [],
      "name": "getDefaultNamespaceURI"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "id"
       }
      ],
      "name": "getPointerByID"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "String",
        "name": "value"
       }
      ],
      "name": "getPointerByKey"
     },
     {
      "type": "NodeSet",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "key"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "getNodeSetByKey"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "Object",
      "params": [],
      "name": "clone"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "compareTo"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "p1"
       },
       {
        "type": "int",
        "name": "depth1"
       },
       {
        "type": "NodePointer",
        "name": "p2"
       },
       {
        "type": "int",
        "name": "depth2"
       }
      ],
      "name": "compareNodePointers"
     },
     {
      "type": null,
      "params": [],
      "name": "printPointerChain"
     },
     {
      "type": null,
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer"
       },
       {
        "type": "String",
        "name": "indent"
       }
      ],
      "name": "printDeep"
     }
    ],
    "name": "NodePointer",
    "fields": [
     {
      "type": "int",
      "name": "WHOLE_COLLECTION"
     },
     {
      "type": "int",
      "name": "index"
     },
     {
      "type": "String",
      "name": "UNKNOWN_NAMESPACE"
     },
     {
      "type": "boolean",
      "name": "attribute"
     },
     {
      "type": "Object",
      "name": "rootNode"
     },
     {
      "type": "NamespaceResolver",
      "name": "namespaceResolver"
     },
     {
      "type": "NodePointer",
      "name": "parent"
     },
     {
      "type": "Locale",
      "name": "locale"
     }
    ]
   }
  ],
  "filename": "NodePointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getPropertyPointer"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPositionIndividualProperty"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPositionAllProperties"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "name": "prepareForIndividualProperty"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     }
    ],
    "name": "PropertyIterator",
    "fields": [
     {
      "type": "boolean",
      "name": "empty"
     },
     {
      "type": "boolean",
      "name": "reverse"
     },
     {
      "type": "String",
      "name": "name"
     },
     {
      "type": "int",
      "name": "startIndex"
     },
     {
      "type": "boolean",
      "name": "targetReady"
     },
     {
      "type": "int",
      "name": "position"
     },
     {
      "type": "PropertyPointer",
      "name": "propertyNodePointer"
     },
     {
      "type": "int",
      "name": "startPropertyIndex"
     },
     {
      "type": "boolean",
      "name": "includeStart"
     }
    ]
   }
  ],
  "filename": "PropertyIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActual"
     },
     {
      "type": "PropertyPointer",
      "params": [],
      "name": "getPropertyPointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     }
    ],
    "name": "NullPointer",
    "fields": [
     {
      "type": "QName",
      "name": "name"
     },
     {
      "type": "String",
      "name": "id"
     }
    ]
   }
  ],
  "filename": "NullPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodePointer",
        "name": "elementPointer"
       }
      ],
      "name": "getElementNodeIterator"
     }
    ],
    "name": "CollectionChildNodeIterator",
    "fields": [
     {
      "type": "NodeTest",
      "name": "test"
     }
    ]
   }
  ],
  "filename": "CollectionChildNodeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "PropertyPointer",
      "params": [],
      "name": "getPropertyPointer"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getValuePointer"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActual"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isContainer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     }
    ],
    "name": "NullElementPointer",
    "fields": []
   }
  ],
  "filename": "NullElementPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodePointer",
        "name": "elementPointer"
       }
      ],
      "name": "getElementNodeIterator"
     }
    ],
    "name": "CollectionAttributeNodeIterator",
    "fields": [
     {
      "type": "QName",
      "name": "name"
     }
    ]
   }
  ],
  "filename": "CollectionAttributeNodeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setPropertyIndex"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getValuePointer"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActualProperty"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActual"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isContainer"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyName"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "name": "setPropertyName"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "attributeValue"
       }
      ],
      "name": "setNameAttributeValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPropertyCount"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyNames"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "string"
       }
      ],
      "name": "escape"
     },
     {
      "type": "JXPathAbstractFactoryException",
      "params": [
       {
        "type": "AbstractFactory",
        "name": "factory"
       }
      ],
      "name": "createBadFactoryException"
     }
    ],
    "name": "NullPropertyPointer",
    "fields": [
     {
      "type": "String",
      "name": "propertyName"
     },
     {
      "type": "boolean",
      "name": "byNameAttribute"
     }
    ]
   }
  ],
  "filename": "NullPropertyPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "PropertyPointer",
      "params": [],
      "name": "getPropertyPointer"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     }
    ],
    "name": "BeanPointer",
    "fields": [
     {
      "type": "QName",
      "name": "name"
     },
     {
      "type": "Object",
      "name": "bean"
     },
     {
      "type": "JXPathBeanInfo",
      "name": "beanInfo"
     }
    ]
   }
  ],
  "filename": "BeanPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isContainer"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setIndex"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getValuePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       },
       {
        "type": "boolean",
        "name": "reverse"
       },
       {
        "type": "NodePointer",
        "name": "startWith"
       }
      ],
      "name": "childIterator"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "attributeIterator"
     },
     {
      "type": "NodeIterator",
      "params": [],
      "name": "namespaceIterator"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "String",
        "name": "namespace"
       }
      ],
      "name": "namespacePointer"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     }
    ],
    "name": "CollectionPointer",
    "fields": [
     {
      "type": "Object",
      "name": "collection"
     },
     {
      "type": "NodePointer",
      "name": "valuePointer"
     }
    ]
   }
  ],
  "filename": "CollectionPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       },
       {
        "type": "boolean",
        "name": "reverse"
       },
       {
        "type": "NodePointer",
        "name": "startWith"
       }
      ],
      "name": "childIterator"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "String",
        "name": "property"
       },
       {
        "type": "boolean",
        "name": "reverse"
       },
       {
        "type": "NodePointer",
        "name": "startWith"
       }
      ],
      "name": "createNodeIterator"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "attributeIterator"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setIndex"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": "PropertyPointer",
      "params": [],
      "name": "getPropertyPointer"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isDynamicPropertyDeclarationSupported"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     }
    ],
    "name": "PropertyOwnerPointer",
    "fields": [
     {
      "type": "Object",
      "name": "UNINITIALIZED"
     },
     {
      "type": "Object",
      "name": "value"
     }
    ]
   }
  ],
  "filename": "PropertyOwnerPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getOrder"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "createNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "createNodePointer"
     }
    ],
    "name": "BeanPointerFactory",
    "fields": [
     {
      "type": "int",
      "name": "BEAN_POINTER_FACTORY_ORDER"
     }
    ]
   }
  ],
  "filename": "BeanPointerFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getOrder"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "createNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "createNodePointer"
     }
    ],
    "name": "CollectionPointerFactory",
    "fields": [
     {
      "type": "int",
      "name": "COLLECTION_POINTER_FACTORY_ORDER"
     }
    ]
   }
  ],
  "filename": "CollectionPointerFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodePointer",
        "name": "elementPointer"
       }
      ],
      "name": "getElementNodeIterator"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     },
     {
      "type": null,
      "params": [],
      "name": "prepare"
     }
    ],
    "name": "CollectionNodeIterator",
    "fields": [
     {
      "type": "CollectionPointer",
      "name": "pointer"
     },
     {
      "type": "boolean",
      "name": "reverse"
     },
     {
      "type": "NodePointer",
      "name": "startWith"
     },
     {
      "type": "int",
      "name": "position"
     },
     {
      "type": "List",
      "name": "collection"
     }
    ]
   }
  ],
  "filename": "CollectionNodeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "String",
      "params": [],
      "name": "getNamespaceURI"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     }
    ],
    "name": "LangAttributePointer",
    "fields": []
   }
  ],
  "filename": "LangAttributePointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getPropertyIndex"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setPropertyIndex"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBean"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyName"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "name": "setPropertyName"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPropertyCount"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyNames"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActualProperty"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActual"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getImmediateValuePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     },
     {
      "type": "AbstractFactory",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "getAbstractFactory"
     }
    ],
    "name": "PropertyPointer",
    "fields": [
     {
      "type": "int",
      "name": "UNSPECIFIED_PROPERTY"
     },
     {
      "type": "int",
      "name": "propertyIndex"
     },
     {
      "type": "Object",
      "name": "bean"
     },
     {
      "type": "Object",
      "name": "UNINITIALIZED"
     },
     {
      "type": "Object",
      "name": "value"
     }
    ]
   }
  ],
  "filename": "PropertyPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     }
    ],
    "name": "BeanAttributeIterator",
    "fields": [
     {
      "type": "NodePointer",
      "name": "parent"
     },
     {
      "type": "int",
      "name": "position"
     },
     {
      "type": "boolean",
      "name": "includeXmlLang"
     }
    ]
   }
  ],
  "filename": "BeanAttributeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.beans",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "isContainer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPropertyCount"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyNames"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "name": "setPropertyName"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setPropertyIndex"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setIndex"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActualProperty"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyName"
     },
     {
      "type": "PropertyDescriptor",
      "params": [],
      "name": "getPropertyDescriptor"
     },
     {
      "type": "PropertyDescriptor",
      "params": [],
      "name": "getPropertyDescriptors"
     }
    ],
    "name": "BeanPropertyPointer",
    "fields": [
     {
      "type": "String",
      "name": "propertyName"
     },
     {
      "type": "JXPathBeanInfo",
      "name": "beanInfo"
     },
     {
      "type": "PropertyDescriptor",
      "name": "propertyDescriptors"
     },
     {
      "type": "PropertyDescriptor",
      "name": "propertyDescriptor"
     },
     {
      "type": "String",
      "name": "names"
     },
     {
      "type": "Object",
      "name": "UNINITIALIZED"
     },
     {
      "type": "Object",
      "name": "baseValue"
     },
     {
      "type": "Object",
      "name": "value"
     }
    ]
   }
  ],
  "filename": "BeanPropertyPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.jdom",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getOrder"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "createNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "createNodePointer"
     }
    ],
    "name": "JDOMPointerFactory",
    "fields": [
     {
      "type": "int",
      "name": "JDOM_POINTER_FACTORY_ORDER"
     }
    ]
   }
  ],
  "filename": "JDOMPointerFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.jdom",
  "classes": [
   {
    "methods": [
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       },
       {
        "type": "boolean",
        "name": "reverse"
       },
       {
        "type": "NodePointer",
        "name": "startWith"
       }
      ],
      "name": "childIterator"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "attributeIterator"
     },
     {
      "type": "NodeIterator",
      "params": [],
      "name": "namespaceIterator"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "namespacePointer"
     },
     {
      "type": "String",
      "params": [],
      "name": "getNamespaceURI"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "node"
       }
      ],
      "name": "getNamespaceURI"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "getNamespaceURI"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "List",
        "name": "content"
       }
      ],
      "name": "addContent"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer"
       },
       {
        "type": "Object",
        "name": "node"
       },
       {
        "type": "NodeTest",
        "name": "test"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "s1"
       },
       {
        "type": "String",
        "name": "s2"
       }
      ],
      "name": "equalStrings"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "node"
       }
      ],
      "name": "getPrefix"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "node"
       }
      ],
      "name": "getLocalName"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "lang"
       }
      ],
      "name": "isLanguage"
     },
     {
      "type": "String",
      "params": [],
      "name": "getLanguage"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "n"
       },
       {
        "type": "String",
        "name": "attrName"
       },
       {
        "type": "Namespace",
        "name": "ns"
       }
      ],
      "name": "findEnclosingAttribute"
     },
     {
      "type": "Element",
      "params": [
       {
        "type": "Object",
        "name": "node"
       }
      ],
      "name": "nodeParent"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "createAttribute"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "string"
       }
      ],
      "name": "escape"
     },
     {
      "type": "int",
      "params": [],
      "name": "getRelativePositionByName"
     },
     {
      "type": "int",
      "params": [],
      "name": "getRelativePositionOfElement"
     },
     {
      "type": "int",
      "params": [],
      "name": "getRelativePositionOfTextNode"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "String",
        "name": "target"
       }
      ],
      "name": "getRelativePositionOfPI"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "AbstractFactory",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "getAbstractFactory"
     }
    ],
    "name": "JDOMNodePointer",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Object",
      "name": "node"
     },
     {
      "type": "String",
      "name": "id"
     },
     {
      "type": "String",
      "name": "XML_NAMESPACE_URI"
     },
     {
      "type": "String",
      "name": "XMLNS_NAMESPACE_URI"
     }
    ]
   }
  ],
  "filename": "JDOMNodePointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.jdom",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "String",
      "params": [],
      "name": "getNamespaceURI"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActual"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     }
    ],
    "name": "JDOMAttributePointer",
    "fields": [
     {
      "type": "Attribute",
      "name": "attr"
     }
    ]
   }
  ],
  "filename": "JDOMAttributePointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.jdom",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "Element",
        "name": "element"
       }
      ],
      "name": "collectNamespaces"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     }
    ],
    "name": "JDOMNamespaceIterator",
    "fields": [
     {
      "type": "NodePointer",
      "name": "parent"
     },
     {
      "type": "List",
      "name": "namespaces"
     },
     {
      "type": "Set",
      "name": "prefixes"
     },
     {
      "type": "int",
      "name": "position"
     }
    ]
   }
  ],
  "filename": "JDOMNamespaceIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.jdom",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     }
    ],
    "name": "JDOMAttributeIterator",
    "fields": [
     {
      "type": "NodePointer",
      "name": "parent"
     },
     {
      "type": "List",
      "name": "attributes"
     },
     {
      "type": "int",
      "name": "position"
     }
    ]
   }
  ],
  "filename": "JDOMAttributeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.jdom",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "previous"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "next"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "testChild"
     }
    ],
    "name": "JDOMNodeIterator",
    "fields": [
     {
      "type": "NodePointer",
      "name": "parent"
     },
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "boolean",
      "name": "reverse"
     },
     {
      "type": "int",
      "name": "position"
     },
     {
      "type": "int",
      "name": "index"
     },
     {
      "type": "List",
      "name": "children"
     },
     {
      "type": "Object",
      "name": "child"
     }
    ]
   }
  ],
  "filename": "JDOMNodeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.jdom",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "String",
      "params": [],
      "name": "getNamespaceURI"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     }
    ],
    "name": "JDOMNamespacePointer",
    "fields": [
     {
      "type": "String",
      "name": "prefix"
     },
     {
      "type": "String",
      "name": "namespaceURI"
     }
    ]
   }
  ],
  "filename": "JDOMNamespacePointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dynabeans",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isContainer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPropertyCount"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyNames"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyName"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "name": "setPropertyName"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPropertyIndex"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setPropertyIndex"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActualProperty"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isIndexedProperty"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "boolean",
        "name": "element"
       }
      ],
      "name": "convert"
     }
    ],
    "name": "DynaBeanPropertyPointer",
    "fields": [
     {
      "type": "DynaBean",
      "name": "dynaBean"
     },
     {
      "type": "String",
      "name": "name"
     },
     {
      "type": "String",
      "name": "names"
     }
    ]
   }
  ],
  "filename": "DynaBeanPropertyPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dynabeans",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getOrder"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "createNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "createNodePointer"
     }
    ],
    "name": "DynaBeanPointerFactory",
    "fields": [
     {
      "type": "int",
      "name": "DYNA_BEAN_POINTER_FACTORY_ORDER"
     }
    ]
   }
  ],
  "filename": "DynaBeanPointerFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dynabeans",
  "classes": [
   {
    "methods": [
     {
      "type": "PropertyPointer",
      "params": [],
      "name": "getPropertyPointer"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "o1"
       },
       {
        "type": "Object",
        "name": "o2"
       }
      ],
      "name": "equalObjects"
     }
    ],
    "name": "DynaBeanPointer",
    "fields": [
     {
      "type": "QName",
      "name": "name"
     },
     {
      "type": "DynaBean",
      "name": "dynaBean"
     }
    ]
   }
  ],
  "filename": "DynaBeanPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.container",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "isContainer"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getImmediateValuePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       },
       {
        "type": "boolean",
        "name": "reverse"
       },
       {
        "type": "NodePointer",
        "name": "startWith"
       }
      ],
      "name": "childIterator"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "attributeIterator"
     },
     {
      "type": "NodeIterator",
      "params": [],
      "name": "namespaceIterator"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "String",
        "name": "namespace"
       }
      ],
      "name": "namespacePointer"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodeTest",
        "name": "nodeTest"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "getNamespaceURI"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     }
    ],
    "name": "ContainerPointer",
    "fields": [
     {
      "type": "Container",
      "name": "container"
     },
     {
      "type": "NodePointer",
      "name": "valuePointer"
     }
    ]
   }
  ],
  "filename": "ContainerPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.container",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getOrder"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "createNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "createNodePointer"
     }
    ],
    "name": "ContainerPointerFactory",
    "fields": [
     {
      "type": "int",
      "name": "CONTAINER_POINTER_FACTORY_ORDER"
     }
    ]
   }
  ],
  "filename": "ContainerPointerFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dynamic",
  "classes": [
   {
    "methods": [
     {
      "type": "PropertyPointer",
      "params": [],
      "name": "getPropertyPointer"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "String",
        "name": "property"
       },
       {
        "type": "boolean",
        "name": "reverse"
       },
       {
        "type": "NodePointer",
        "name": "startWith"
       }
      ],
      "name": "createNodeIterator"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "attributeIterator"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isDynamicPropertyDeclarationSupported"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     }
    ],
    "name": "DynamicPointer",
    "fields": [
     {
      "type": "QName",
      "name": "name"
     },
     {
      "type": "Object",
      "name": "bean"
     },
     {
      "type": "DynamicPropertyHandler",
      "name": "handler"
     }
    ]
   }
  ],
  "filename": "DynamicPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dynamic",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "isContainer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPropertyCount"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyNames"
     },
     {
      "type": "String",
      "params": [],
      "name": "getPropertyName"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "propertyName"
       }
      ],
      "name": "setPropertyName"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPropertyIndex"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "setPropertyIndex"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActualProperty"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "createPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createPath"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": null,
      "params": [],
      "name": "removeKey"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "string"
       }
      ],
      "name": "escape"
     },
     {
      "type": "AbstractFactory",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "getAbstractFactory"
     }
    ],
    "name": "DynamicPropertyPointer",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "DynamicPropertyHandler",
      "name": "handler"
     },
     {
      "type": "String",
      "name": "name"
     },
     {
      "type": "String",
      "name": "names"
     },
     {
      "type": "String",
      "name": "requiredPropertyName"
     }
    ]
   }
  ],
  "filename": "DynamicPropertyPointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dynamic",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "name"
       }
      ],
      "name": "prepareForIndividualProperty"
     }
    ],
    "name": "DynamicAttributeIterator",
    "fields": []
   }
  ],
  "filename": "DynamicAttributeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dynamic",
  "classes": [
   {
    "methods": [],
    "name": "DynamicPropertyIterator",
    "fields": []
   }
  ],
  "filename": "DynamicPropertyIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dynamic",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getOrder"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "createNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "createNodePointer"
     }
    ],
    "name": "DynamicPointerFactory",
    "fields": [
     {
      "type": "int",
      "name": "DYNAMIC_POINTER_FACTORY_ORDER"
     }
    ]
   }
  ],
  "filename": "DynamicPointerFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dom",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "previous"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "next"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "testChild"
     }
    ],
    "name": "DOMNodeIterator",
    "fields": [
     {
      "type": "NodePointer",
      "name": "parent"
     },
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "Node",
      "name": "node"
     },
     {
      "type": "Node",
      "name": "child"
     },
     {
      "type": "boolean",
      "name": "reverse"
     },
     {
      "type": "int",
      "name": "position"
     }
    ]
   }
  ],
  "filename": "DOMNodeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dom",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "String",
      "params": [],
      "name": "getNamespaceURI"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodeTest",
        "name": "nodeTest"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     }
    ],
    "name": "NamespacePointer",
    "fields": [
     {
      "type": "String",
      "name": "prefix"
     },
     {
      "type": "String",
      "name": "namespaceURI"
     }
    ]
   }
  ],
  "filename": "NamespacePointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dom",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "List",
        "name": "attributes"
       },
       {
        "type": "Node",
        "name": "node"
       }
      ],
      "name": "collectNamespaces"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     }
    ],
    "name": "DOMNamespaceIterator",
    "fields": [
     {
      "type": "NodePointer",
      "name": "parent"
     },
     {
      "type": "List",
      "name": "attributes"
     },
     {
      "type": "int",
      "name": "position"
     }
    ]
   }
  ],
  "filename": "DOMNamespaceIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dom",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getOrder"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "Locale",
        "name": "locale"
       }
      ],
      "name": "createNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "createNodePointer"
     }
    ],
    "name": "DOMPointerFactory",
    "fields": [
     {
      "type": "int",
      "name": "DOM_POINTER_FACTORY_ORDER"
     }
    ]
   }
  ],
  "filename": "DOMPointerFactory.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dom",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Node",
        "name": "node"
       },
       {
        "type": "NodeTest",
        "name": "test"
       }
      ],
      "name": "testNode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "s1"
       },
       {
        "type": "String",
        "name": "s2"
       }
      ],
      "name": "equalStrings"
     },
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "String",
      "params": [],
      "name": "getNamespaceURI"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "NodeTest",
        "name": "test"
       },
       {
        "type": "boolean",
        "name": "reverse"
       },
       {
        "type": "NodePointer",
        "name": "startWith"
       }
      ],
      "name": "childIterator"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "attributeIterator"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "namespacePointer"
     },
     {
      "type": "NodeIterator",
      "params": [],
      "name": "namespaceIterator"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       }
      ],
      "name": "getNamespaceURI"
     },
     {
      "type": "String",
      "params": [],
      "name": "getDefaultNamespaceURI"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActual"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "lang"
       }
      ],
      "name": "isLanguage"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Node",
        "name": "n"
       },
       {
        "type": "String",
        "name": "attrName"
       }
      ],
      "name": "findEnclosingAttribute"
     },
     {
      "type": "String",
      "params": [],
      "name": "getLanguage"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "createChild"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "createAttribute"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "String",
        "name": "string"
       }
      ],
      "name": "escape"
     },
     {
      "type": "int",
      "params": [],
      "name": "getRelativePositionByName"
     },
     {
      "type": "int",
      "params": [],
      "name": "getRelativePositionOfElement"
     },
     {
      "type": "int",
      "params": [],
      "name": "getRelativePositionOfTextNode"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "String",
        "name": "target"
       }
      ],
      "name": "getRelativePositionOfPI"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Node",
        "name": "node"
       }
      ],
      "name": "getPrefix"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Node",
        "name": "node"
       }
      ],
      "name": "getLocalName"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Node",
        "name": "node"
       }
      ],
      "name": "getNamespaceURI"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Node",
        "name": "node"
       }
      ],
      "name": "stringValue"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       },
       {
        "type": "String",
        "name": "id"
       }
      ],
      "name": "getPointerByID"
     },
     {
      "type": "AbstractFactory",
      "params": [
       {
        "type": "JXPathContext",
        "name": "context"
       }
      ],
      "name": "getAbstractFactory"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     }
    ],
    "name": "DOMNodePointer",
    "fields": [
     {
      "type": "long",
      "name": "serialVersionUID"
     },
     {
      "type": "Node",
      "name": "node"
     },
     {
      "type": "Map",
      "name": "namespaces"
     },
     {
      "type": "String",
      "name": "defaultNamespace"
     },
     {
      "type": "String",
      "name": "id"
     },
     {
      "type": "String",
      "name": "XML_NAMESPACE_URI"
     },
     {
      "type": "String",
      "name": "XMLNS_NAMESPACE_URI"
     }
    ]
   }
  ],
  "filename": "DOMNodePointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dom",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getName"
     },
     {
      "type": "String",
      "params": [],
      "name": "getNamespaceURI"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getBaseValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [],
      "name": "getLength"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getImmediateNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isActual"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isLeaf"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodeTest",
        "name": "nodeTest"
       }
      ],
      "name": "testNode"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": null,
      "params": [],
      "name": "remove"
     },
     {
      "type": "String",
      "params": [],
      "name": "asPath"
     },
     {
      "type": "int",
      "params": [],
      "name": "hashCode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "equals"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer1"
       },
       {
        "type": "NodePointer",
        "name": "pointer2"
       }
      ],
      "name": "compareChildNodePointers"
     }
    ],
    "name": "DOMAttributePointer",
    "fields": [
     {
      "type": "Attr",
      "name": "attr"
     }
    ]
   }
  ],
  "filename": "DOMAttributePointer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.model.dom",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "Attr",
        "name": "attr"
       },
       {
        "type": "QName",
        "name": "testName"
       }
      ],
      "name": "testAttr"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "s1"
       },
       {
        "type": "String",
        "name": "s2"
       }
      ],
      "name": "equalStrings"
     },
     {
      "type": "Attr",
      "params": [
       {
        "type": "Element",
        "name": "element"
       },
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "getAttribute"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPosition"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     }
    ],
    "name": "DOMAttributeIterator",
    "fields": [
     {
      "type": "NodePointer",
      "name": "parent"
     },
     {
      "type": "QName",
      "name": "name"
     },
     {
      "type": "List",
      "name": "attributes"
     },
     {
      "type": "int",
      "name": "position"
     }
    ]
   }
  ],
  "filename": "DOMAttributeIterator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "compare"
       }
      ],
      "name": "evaluateCompare"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationGreaterThanOrEqual",
    "fields": []
   }
  ],
  "filename": "CoreOperationGreaterThanOrEqual.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Step",
      "params": [],
      "name": "getSteps"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSimplePath"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Step",
        "name": "step"
       }
      ],
      "name": "isSimpleStep"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Expression",
        "name": "predicates"
       }
      ],
      "name": "areBasicPredicates"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "getSingleNodePointerForSteps"
     },
     {
      "type": "Pointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "searchForPath"
     },
     {
      "type": "EvalContext",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "evalSteps"
     },
     {
      "type": "EvalContext",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "int",
        "name": "stepCount"
       },
       {
        "type": "boolean",
        "name": "createInitialContext"
       }
      ],
      "name": "buildContextChain"
     },
     {
      "type": "EvalContext",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "int",
        "name": "axis"
       },
       {
        "type": "NodeTest",
        "name": "nodeTest"
       }
      ],
      "name": "createContextForStep"
     }
    ],
    "name": "Path",
    "fields": [
     {
      "type": "Step",
      "name": "steps"
     },
     {
      "type": "boolean",
      "name": "basicKnown"
     },
     {
      "type": "boolean",
      "name": "basic"
     }
    ]
   }
  ],
  "filename": "Path.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getAxis"
     },
     {
      "type": "NodeTest",
      "params": [],
      "name": "getNodeTest"
     },
     {
      "type": "Expression",
      "params": [],
      "name": "getPredicates"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isContextDependent"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "int",
        "name": "axis"
       }
      ],
      "name": "axisToString"
     }
    ],
    "name": "Step",
    "fields": [
     {
      "type": "int",
      "name": "axis"
     },
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "Expression",
      "name": "predicates"
     }
    ]
   }
  ],
  "filename": "Step.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Expression",
      "params": [],
      "name": "getExpression"
     },
     {
      "type": "Expression",
      "params": [],
      "name": "getPredicates"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSimpleExpressionPath"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "compute"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "evalContext"
       },
       {
        "type": "boolean",
        "name": "firstMatch"
       }
      ],
      "name": "expressionPath"
     }
    ],
    "name": "ExpressionPath",
    "fields": [
     {
      "type": "Expression",
      "name": "expression"
     },
     {
      "type": "Expression",
      "name": "predicates"
     },
     {
      "type": "boolean",
      "name": "basicKnown"
     },
     {
      "type": "boolean",
      "name": "basic"
     }
    ]
   }
  ],
  "filename": "ExpressionPath.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationAdd",
    "fields": []
   }
  ],
  "filename": "CoreOperationAdd.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [],
    "name": "NodeTest",
    "fields": []
   }
  ],
  "filename": "NodeTest.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationNegate",
    "fields": []
   }
  ],
  "filename": "CoreOperationNegate.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "isAbsolute"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "compute"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     }
    ],
    "name": "LocationPath",
    "fields": [
     {
      "type": "boolean",
      "name": "absolute"
     }
    ]
   }
  ],
  "filename": "LocationPath.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "isContextDependent"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "compute"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "iterate"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "iteratePointers"
     }
    ],
    "name": "Expression",
    "fields": [
     {
      "type": "Double",
      "name": "ZERO"
     },
     {
      "type": "Double",
      "name": "ONE"
     },
     {
      "type": "Double",
      "name": "NOT_A_NUMBER"
     },
     {
      "type": "boolean",
      "name": "contextDependencyKnown"
     },
     {
      "type": "boolean",
      "name": "contextDependent"
     }
    ]
   }
  ],
  "filename": "Expression.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationSubtract",
    "fields": []
   }
  ],
  "filename": "CoreOperationSubtract.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getVariableName"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isContextDependent"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "compute"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     }
    ],
    "name": "VariableReference",
    "fields": [
     {
      "type": "QName",
      "name": "varName"
     }
    ]
   }
  ],
  "filename": "VariableReference.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getNodeType"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "int",
        "name": "code"
       }
      ],
      "name": "nodeTypeToString"
     }
    ],
    "name": "NodeTypeTest",
    "fields": [
     {
      "type": "int",
      "name": "nodeType"
     }
    ]
   }
  ],
  "filename": "NodeTypeTest.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "Expression",
        "name": "left"
       },
       {
        "type": "Expression",
        "name": "right"
       }
      ],
      "name": "equal"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Iterator",
        "name": "it"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "contains"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Iterator",
        "name": "lit"
       },
       {
        "type": "Iterator",
        "name": "rit"
       }
      ],
      "name": "findMatch"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "l"
       },
       {
        "type": "Object",
        "name": "r"
       }
      ],
      "name": "equal"
     }
    ],
    "name": "CoreOperationCompare",
    "fields": []
   }
  ],
  "filename": "CoreOperationCompare.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationMod",
    "fields": []
   }
  ],
  "filename": "CoreOperationMod.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationOr",
    "fields": []
   }
  ],
  "filename": "CoreOperationOr.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getNodeName"
     },
     {
      "type": "String",
      "params": [],
      "name": "getNamespaceURI"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isWildcard"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     }
    ],
    "name": "NodeNameTest",
    "fields": [
     {
      "type": "QName",
      "name": "qname"
     },
     {
      "type": "String",
      "name": "namespaceURI"
     }
    ]
   }
  ],
  "filename": "NodeNameTest.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getFunctionCode"
     },
     {
      "type": "String",
      "params": [],
      "name": "getFunctionName"
     },
     {
      "type": "Expression",
      "params": [],
      "name": "getArg1"
     },
     {
      "type": "Expression",
      "params": [],
      "name": "getArg2"
     },
     {
      "type": "Expression",
      "params": [],
      "name": "getArg3"
     },
     {
      "type": "int",
      "params": [],
      "name": "getArgumentCount"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "compute"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionLast"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionPosition"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionCount"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionLang"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionID"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionKey"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionNamespaceURI"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionLocalName"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionName"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionString"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionConcat"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionStartsWith"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionContains"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionSubstringBefore"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionSubstringAfter"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionSubstring"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionStringLength"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionNormalizeSpace"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionTranslate"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionBoolean"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionNot"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionTrue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionFalse"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionNull"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionNumber"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionSum"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionFloor"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionCeiling"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionRound"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "functionFormatNumber"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "count"
       }
      ],
      "name": "assertArgCount"
     },
     {
      "type": null,
      "params": [
       {
        "type": "int",
        "name": "min"
       },
       {
        "type": "int",
        "name": "max"
       }
      ],
      "name": "assertArgRange"
     }
    ],
    "name": "CoreFunction",
    "fields": [
     {
      "type": "Double",
      "name": "ZERO"
     },
     {
      "type": "int",
      "name": "functionCode"
     }
    ]
   }
  ],
  "filename": "CoreFunction.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationUnion",
    "fields": []
   }
  ],
  "filename": "CoreOperationUnion.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "compare"
       }
      ],
      "name": "evaluateCompare"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationGreaterThan",
    "fields": []
   }
  ],
  "filename": "CoreOperationGreaterThan.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "compare"
       }
      ],
      "name": "evaluateCompare"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "compute"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "o"
       }
      ],
      "name": "reduce"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Iterator",
        "name": "it"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "containsMatch"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Iterator",
        "name": "lit"
       },
       {
        "type": "Iterator",
        "name": "rit"
       }
      ],
      "name": "findMatch"
     }
    ],
    "name": "CoreOperationRelationalExpression",
    "fields": []
   }
  ],
  "filename": "CoreOperationRelationalExpression.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationMultiply",
    "fields": []
   }
  ],
  "filename": "CoreOperationMultiply.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "value"
       }
      ],
      "name": "number"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "value"
       }
      ],
      "name": "literal"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "prefix"
       },
       {
        "type": "String",
        "name": "name"
       }
      ],
      "name": "qname"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ],
      "name": "sum"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "minus"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "multiply"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "divide"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "mod"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "lessThan"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "lessThanOrEqual"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "greaterThan"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "greaterThanOrEqual"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "equal"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "left"
       },
       {
        "type": "Object",
        "name": "right"
       }
      ],
      "name": "notEqual"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "argument"
       }
      ],
      "name": "minus"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "qName"
       }
      ],
      "name": "variableReference"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "int",
        "name": "code"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "name": "function"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "args"
       }
      ],
      "name": "function"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ],
      "name": "and"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ],
      "name": "or"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "arguments"
       }
      ],
      "name": "union"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "boolean",
        "name": "absolute"
       },
       {
        "type": "Object",
        "name": "steps"
       }
      ],
      "name": "locationPath"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "expression"
       },
       {
        "type": "Object",
        "name": "predicates"
       },
       {
        "type": "Object",
        "name": "steps"
       }
      ],
      "name": "expressionPath"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "qname"
       }
      ],
      "name": "nodeNameTest"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "int",
        "name": "nodeType"
       }
      ],
      "name": "nodeTypeTest"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "instruction"
       }
      ],
      "name": "processingInstructionTest"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "int",
        "name": "axis"
       },
       {
        "type": "Object",
        "name": "nodeTest"
       },
       {
        "type": "Object",
        "name": "predicates"
       }
      ],
      "name": "step"
     },
     {
      "type": "Expression",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ],
      "name": "toExpressionArray"
     },
     {
      "type": "Step",
      "params": [
       {
        "type": "Object",
        "name": "array"
       }
      ],
      "name": "toStepArray"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Expression",
        "name": "arg"
       }
      ],
      "name": "isNameAttributeTest"
     }
    ],
    "name": "TreeCompiler",
    "fields": [
     {
      "type": "QName",
      "name": "QNAME_NAME"
     }
    ]
   }
  ],
  "filename": "TreeCompiler.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "compare"
       }
      ],
      "name": "evaluateCompare"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationLessThanOrEqual",
    "fields": []
   }
  ],
  "filename": "CoreOperationLessThanOrEqual.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "QName",
      "params": [],
      "name": "getFunctionName"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "compute"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "convert"
     }
    ],
    "name": "ExtensionFunction",
    "fields": [
     {
      "type": "QName",
      "name": "functionName"
     }
    ]
   }
  ],
  "filename": "ExtensionFunction.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Expression",
      "params": [],
      "name": "getNameTestExpression"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     }
    ],
    "name": "NameAttributeTest",
    "fields": []
   }
  ],
  "filename": "NameAttributeTest.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationEqual",
    "fields": []
   }
  ],
  "filename": "CoreOperationEqual.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [],
      "name": "getTarget"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     }
    ],
    "name": "ProcessingInstructionTest",
    "fields": [
     {
      "type": "String",
      "name": "target"
     }
    ]
   }
  ],
  "filename": "ProcessingInstructionTest.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Expression",
      "params": [],
      "name": "getArguments"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     }
    ],
    "name": "Operation",
    "fields": [
     {
      "type": "Expression",
      "name": "args"
     }
    ]
   }
  ],
  "filename": "Operation.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationNotEqual",
    "fields": []
   }
  ],
  "filename": "CoreOperationNotEqual.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "compute"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "Expression",
        "name": "expression"
       },
       {
        "type": "boolean",
        "name": "left"
       }
      ],
      "name": "parenthesize"
     }
    ],
    "name": "CoreOperation",
    "fields": []
   }
  ],
  "filename": "CoreOperation.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "compute"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isContextDependent"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "computeContextDependent"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     }
    ],
    "name": "Constant",
    "fields": [
     {
      "type": "Object",
      "name": "value"
     }
    ]
   }
  ],
  "filename": "Constant.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationAnd",
    "fields": []
   }
  ],
  "filename": "CoreOperationAnd.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "compare"
       }
      ],
      "name": "evaluateCompare"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationLessThan",
    "fields": []
   }
  ],
  "filename": "CoreOperationLessThan.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.compiler",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       }
      ],
      "name": "computeValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getPrecedence"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isSymmetric"
     },
     {
      "type": "String",
      "params": [],
      "name": "getSymbol"
     }
    ],
    "name": "CoreOperationDivide",
    "fields": []
   }
  ],
  "filename": "CoreOperationDivide.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "root"
       },
       {
        "type": "Step",
        "name": "steps"
       }
      ],
      "name": "interpretSimpleLocationPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "root"
       },
       {
        "type": "Expression",
        "name": "predicates"
       },
       {
        "type": "Step",
        "name": "steps"
       }
      ],
      "name": "interpretSimpleExpressionPath"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       }
      ],
      "name": "doStep"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "PropertyOwnerPointer",
        "name": "parentPointer"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       }
      ],
      "name": "doStepNoPredicatesPropertyOwner"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "parentPointer"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       }
      ],
      "name": "doStepNoPredicatesStandard"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "PropertyOwnerPointer",
        "name": "parentPointer"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       }
      ],
      "name": "doStepPredicatesPropertyOwner"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "PropertyOwnerPointer",
        "name": "parentPointer"
       },
       {
        "type": "Step",
        "name": "step"
       }
      ],
      "name": "createChildPointerForStep"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       }
      ],
      "name": "doStepPredicatesStandard"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       },
       {
        "type": "Expression",
        "name": "predicates"
       },
       {
        "type": "int",
        "name": "currentPredicate"
       }
      ],
      "name": "doPredicate"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       },
       {
        "type": "Expression",
        "name": "predicates"
       },
       {
        "type": "int",
        "name": "currentPredicate"
       }
      ],
      "name": "doPredicateName"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "List",
        "name": "parents"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       },
       {
        "type": "Expression",
        "name": "predicates"
       },
       {
        "type": "int",
        "name": "currentPredicate"
       }
      ],
      "name": "doPredicatesStandard"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       },
       {
        "type": "Expression",
        "name": "predicates"
       },
       {
        "type": "int",
        "name": "currentPredicate"
       }
      ],
      "name": "doPredicateIndex"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "Expression",
        "name": "predicate"
       }
      ],
      "name": "indexFromPredicate"
     },
     {
      "type": "String",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "Expression",
        "name": "predicate"
       }
      ],
      "name": "keyFromPredicate"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer"
       }
      ],
      "name": "computeQuality"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer"
       },
       {
        "type": "String",
        "name": "name"
       }
      ],
      "name": "isNameAttributeEqual"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "isCollectionElement"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "NodePointer",
        "name": "pointer"
       }
      ],
      "name": "valuePointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       }
      ],
      "name": "createNullPointer"
     },
     {
      "type": "NodePointer",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "parent"
       },
       {
        "type": "Step",
        "name": "steps"
       },
       {
        "type": "int",
        "name": "currentStep"
       },
       {
        "type": "Expression",
        "name": "predicates"
       },
       {
        "type": "int",
        "name": "currentPredicate"
       }
      ],
      "name": "createNullPointerForPredicates"
     },
     {
      "type": "NodeIterator",
      "params": [
       {
        "type": "EvalContext",
        "name": "context"
       },
       {
        "type": "NodePointer",
        "name": "pointer"
       },
       {
        "type": "Step",
        "name": "step"
       }
      ],
      "name": "getNodeIterator"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "QName",
        "name": "name"
       }
      ],
      "name": "isLangAttribute"
     }
    ],
    "name": "SimplePathInterpreter",
    "fields": [
     {
      "type": "QName",
      "name": "QNAME_NAME"
     },
     {
      "type": "int",
      "name": "PERFECT_MATCH"
     }
    ]
   }
  ],
  "filename": "SimplePathInterpreter.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     }
    ],
    "name": "NamespaceContext",
    "fields": [
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "boolean",
      "name": "setStarted"
     },
     {
      "type": "NodeIterator",
      "name": "iterator"
     },
     {
      "type": "NodePointer",
      "name": "currentNodePointer"
     }
    ]
   }
  ],
  "filename": "NamespaceContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "isChildOrderingRequired"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isRecursive"
     }
    ],
    "name": "DescendantContext",
    "fields": [
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "boolean",
      "name": "setStarted"
     },
     {
      "type": "Stack",
      "name": "stack"
     },
     {
      "type": "NodePointer",
      "name": "currentNodePointer"
     },
     {
      "type": "boolean",
      "name": "includeSelf"
     },
     {
      "type": "NodeTest",
      "name": "ELEMENT_NODE_TEST"
     }
    ]
   }
  ],
  "filename": "DescendantContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getDocumentOrder"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     }
    ],
    "name": "AncestorContext",
    "fields": [
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "boolean",
      "name": "setStarted"
     },
     {
      "type": "NodePointer",
      "name": "currentNodePointer"
     },
     {
      "type": "boolean",
      "name": "includeSelf"
     }
    ]
   }
  ],
  "filename": "AncestorContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "Pointer",
      "params": [],
      "name": "getSingleNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     }
    ],
    "name": "SelfContext",
    "fields": [
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "boolean",
      "name": "startedSet"
     },
     {
      "type": "NodePointer",
      "name": "nodePointer"
     }
    ]
   }
  ],
  "filename": "SelfContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": "Pointer",
      "params": [],
      "name": "getSingleNodePointer"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": null,
      "params": [],
      "name": "prepare"
     }
    ],
    "name": "ChildContext",
    "fields": [
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "boolean",
      "name": "startFromParentLocation"
     },
     {
      "type": "boolean",
      "name": "reverse"
     },
     {
      "type": "NodeIterator",
      "name": "iterator"
     }
    ]
   }
  ],
  "filename": "ChildContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "Pointer",
      "params": [],
      "name": "getSingleNodePointer"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextSet"
     }
    ],
    "name": "InitialContext",
    "fields": [
     {
      "type": "boolean",
      "name": "started"
     },
     {
      "type": "boolean",
      "name": "collection"
     },
     {
      "type": "NodePointer",
      "name": "nodePointer"
     }
    ]
   }
  ],
  "filename": "InitialContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "setupDynamicPropertyPointer"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextSet"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPositionStandard"
     }
    ],
    "name": "PredicateContext",
    "fields": [
     {
      "type": "Expression",
      "name": "expression"
     },
     {
      "type": "boolean",
      "name": "done"
     },
     {
      "type": "Expression",
      "name": "nameTestExpression"
     },
     {
      "type": "PropertyPointer",
      "name": "dynamicPropertyPointer"
     }
    ]
   }
  ],
  "filename": "PredicateContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "JXPathContext",
      "params": [],
      "name": "getJXPathContext"
     },
     {
      "type": "RootContext",
      "params": [],
      "name": "getRootContext"
     },
     {
      "type": "EvalContext",
      "params": [],
      "name": "getAbsoluteRootContext"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": "int",
      "params": [],
      "name": "getCurrentPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextSet"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "EvalContext",
      "params": [
       {
        "type": "Object",
        "name": "constant"
       }
      ],
      "name": "getConstantContext"
     },
     {
      "type": "EvalContext",
      "params": [
       {
        "type": "QName",
        "name": "variableName"
       }
      ],
      "name": "getVariableContext"
     },
     {
      "type": "Function",
      "params": [
       {
        "type": "QName",
        "name": "functionName"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "getFunction"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "int",
        "name": "id"
       }
      ],
      "name": "getRegisteredValue"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setRegisteredValue"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     }
    ],
    "name": "RootContext",
    "fields": [
     {
      "type": "JXPathContextReferenceImpl",
      "name": "jxpathContext"
     },
     {
      "type": "NodePointer",
      "name": "pointer"
     },
     {
      "type": "Object",
      "name": "registers"
     },
     {
      "type": "int",
      "name": "availableRegister"
     },
     {
      "type": "Object",
      "name": "UNKNOWN_VALUE"
     },
     {
      "type": "int",
      "name": "MAX_REGISTER"
     }
    ]
   }
  ],
  "filename": "RootContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [],
      "name": "getDocumentOrder"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     }
    ],
    "name": "UnionContext",
    "fields": [
     {
      "type": "EvalContext",
      "name": "contexts"
     },
     {
      "type": "boolean",
      "name": "prepared"
     }
    ]
   }
  ],
  "filename": "UnionContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "NodeSet",
      "params": [],
      "name": "getNodeSet"
     },
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextSet"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     }
    ],
    "name": "NodeSetContext",
    "fields": [
     {
      "type": "boolean",
      "name": "startedSet"
     },
     {
      "type": "NodeSet",
      "name": "nodeSet"
     }
    ]
   }
  ],
  "filename": "NodeSetContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getCurrentPosition"
     },
     {
      "type": "int",
      "params": [],
      "name": "getDocumentOrder"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     }
    ],
    "name": "ParentContext",
    "fields": [
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "boolean",
      "name": "setStarted"
     },
     {
      "type": "NodePointer",
      "name": "currentNodePointer"
     }
    ]
   }
  ],
  "filename": "ParentContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": "int",
      "params": [],
      "name": "getDocumentOrder"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     }
    ],
    "name": "PrecedingOrFollowingContext",
    "fields": [
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "boolean",
      "name": "setStarted"
     },
     {
      "type": "Stack",
      "name": "stack"
     },
     {
      "type": "NodePointer",
      "name": "currentNodePointer"
     },
     {
      "type": "NodePointer",
      "name": "currentRootLocation"
     },
     {
      "type": "boolean",
      "name": "reverse"
     }
    ]
   }
  ],
  "filename": "PrecedingOrFollowingContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.ri.axes",
  "classes": [
   {
    "methods": [
     {
      "type": "NodePointer",
      "params": [],
      "name": "getCurrentNodePointer"
     },
     {
      "type": null,
      "params": [],
      "name": "reset"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "int",
        "name": "position"
       }
      ],
      "name": "setPosition"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "nextNode"
     }
    ],
    "name": "AttributeContext",
    "fields": [
     {
      "type": "NodeTest",
      "name": "nodeTest"
     },
     {
      "type": "boolean",
      "name": "setStarted"
     },
     {
      "type": "NodeIterator",
      "name": "iterator"
     },
     {
      "type": "NodePointer",
      "name": "currentNodePointer"
     }
    ]
   }
  ],
  "filename": "AttributeContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.xml",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "boolean",
        "name": "validating"
       }
      ],
      "name": "setValidating"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isValidating"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isNamespaceAware"
     },
     {
      "type": null,
      "params": [
       {
        "type": "boolean",
        "name": "namespaceAware"
       }
      ],
      "name": "setNamespaceAware"
     },
     {
      "type": null,
      "params": [
       {
        "type": "boolean",
        "name": "whitespace"
       }
      ],
      "name": "setIgnoringElementContentWhitespace"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isIgnoringElementContentWhitespace"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isExpandEntityReferences"
     },
     {
      "type": null,
      "params": [
       {
        "type": "boolean",
        "name": "expandEntityRef"
       }
      ],
      "name": "setExpandEntityReferences"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isIgnoringComments"
     },
     {
      "type": null,
      "params": [
       {
        "type": "boolean",
        "name": "ignoreComments"
       }
      ],
      "name": "setIgnoringComments"
     },
     {
      "type": "boolean",
      "params": [],
      "name": "isCoalescing"
     },
     {
      "type": null,
      "params": [
       {
        "type": "boolean",
        "name": "coalescing"
       }
      ],
      "name": "setCoalescing"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "InputStream",
        "name": "stream"
       }
      ],
      "name": "parseXML"
     }
    ],
    "name": "XMLParser2",
    "fields": [
     {
      "type": "boolean",
      "name": "validating"
     },
     {
      "type": "boolean",
      "name": "namespaceAware"
     },
     {
      "type": "boolean",
      "name": "whitespace"
     },
     {
      "type": "boolean",
      "name": "expandEntityRef"
     },
     {
      "type": "boolean",
      "name": "ignoreComments"
     },
     {
      "type": "boolean",
      "name": "coalescing"
     }
    ]
   }
  ],
  "filename": "XMLParser2.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.xml",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "model"
       },
       {
        "type": "XMLParser",
        "name": "parser"
       }
      ],
      "name": "registerXMLParser"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "model"
       },
       {
        "type": "String",
        "name": "parserClassName"
       }
      ],
      "name": "registerXMLParser"
     },
     {
      "type": "Object",
      "params": [],
      "name": "getValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "InputStream",
        "name": "stream"
       }
      ],
      "name": "parseXML"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "XMLParser",
      "params": [
       {
        "type": "String",
        "name": "model"
       }
      ],
      "name": "getParser"
     }
    ],
    "name": "DocumentContainer",
    "fields": [
     {
      "type": "String",
      "name": "MODEL_DOM"
     },
     {
      "type": "String",
      "name": "MODEL_JDOM"
     },
     {
      "type": "Object",
      "name": "document"
     },
     {
      "type": "URL",
      "name": "xmlURL"
     },
     {
      "type": "String",
      "name": "model"
     },
     {
      "type": "HashMap",
      "name": "parserClasses"
     },
     {
      "type": "HashMap",
      "name": "parsers"
     }
    ]
   }
  ],
  "filename": "DocumentContainer.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.xml",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "InputStream",
        "name": "stream"
       }
      ],
      "name": "parseXML"
     }
    ],
    "name": "XMLParser",
    "fields": []
   }
  ],
  "filename": "XMLParser.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.xml",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "InputStream",
        "name": "stream"
       }
      ],
      "name": "parseXML"
     }
    ],
    "name": "JDOMParser",
    "fields": []
   }
  ],
  "filename": "JDOMParser.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.xml",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "InputStream",
        "name": "stream"
       }
      ],
      "name": "parseXML"
     }
    ],
    "name": "DOMParser",
    "fields": []
   }
  ],
  "filename": "DOMParser.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.util",
  "classes": [
   {
    "methods": [
     {
      "type": "ExtendedKeyManager",
      "params": [
       {
        "type": "KeyManager",
        "name": "keyManager"
       }
      ],
      "name": "getExtendedKeyManager"
     }
    ],
    "name": "KeyManagerUtils",
    "fields": []
   }
  ],
  "filename": "KeyManagerUtils.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.util",
  "classes": [
   {
    "methods": [
     {
      "type": "int",
      "params": [
       {
        "type": "Object",
        "name": "o1"
       },
       {
        "type": "Object",
        "name": "o2"
       }
      ],
      "name": "compare"
     }
    ],
    "name": "ReverseComparator",
    "fields": [
     {
      "type": "Comparator",
      "name": "INSTANCE"
     }
    ]
   }
  ],
  "filename": "ReverseComparator.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.util",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "canConvert"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "convert"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "convertNullToPrimitive"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "convertStringToPrimitive"
     },
     {
      "type": "Number",
      "params": [
       {
        "type": "Class",
        "name": "type"
       },
       {
        "type": "double",
        "name": "value"
       }
      ],
      "name": "allocateNumber"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "name": "canCreateCollection"
     },
     {
      "type": "Collection",
      "params": [
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "name": "allocateCollection"
     },
     {
      "type": "Collection",
      "params": [
       {
        "type": "Collection",
        "name": "collection"
       }
      ],
      "name": "unmodifiableCollection"
     }
    ],
    "name": "BasicTypeConverter",
    "fields": []
   }
  ],
  "filename": "BasicTypeConverter.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.util",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "TypeConverter",
        "name": "converter"
       }
      ],
      "name": "setTypeConverter"
     },
     {
      "type": "TypeConverter",
      "params": [],
      "name": "getTypeConverter"
     },
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "canConvert"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "convert"
     },
     {
      "type": "Class",
      "params": [
       {
        "type": "Class",
        "name": "p"
       }
      ],
      "name": "wrapPrimitive"
     }
    ],
    "name": "TypeUtils",
    "fields": [
     {
      "type": "TypeConverter",
      "name": "typeConverter"
     },
     {
      "type": "HashMap",
      "name": "PRIMITIVE_TYPE_MAP"
     }
    ]
   }
  ],
  "filename": "TypeUtils.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.util",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "canConvert"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "convert"
     }
    ],
    "name": "JXPath11CompatibleTypeConverter",
    "fields": []
   }
  ],
  "filename": "JXPath11CompatibleTypeConverter.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.util",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "canConvert"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "Class",
        "name": "toType"
       }
      ],
      "name": "convert"
     }
    ],
    "name": "TypeConverter",
    "fields": []
   }
  ],
  "filename": "TypeConverter.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.util",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "isCollection"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ],
      "name": "getCollectionHint"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "Object",
        "name": "object"
       },
       {
        "type": "IndexedPropertyDescriptor",
        "name": "pd"
       }
      ],
      "name": "getIndexedPropertyLength"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "Object",
        "name": "collection"
       }
      ],
      "name": "getLength"
     },
     {
      "type": "Iterator",
      "params": [
       {
        "type": "Object",
        "name": "collection"
       }
      ],
      "name": "iterate"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "collection"
       },
       {
        "type": "int",
        "name": "size"
       }
      ],
      "name": "expandCollection"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "collection"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "remove"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "collection"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "getValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "collection"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "PropertyDescriptor",
        "name": "propertyDescriptor"
       }
      ],
      "name": "getValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "PropertyDescriptor",
        "name": "propertyDescriptor"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "value"
       },
       {
        "type": "Class",
        "name": "type"
       }
      ],
      "name": "convert"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "PropertyDescriptor",
        "name": "propertyDescriptor"
       },
       {
        "type": "int",
        "name": "index"
       }
      ],
      "name": "getValue"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "PropertyDescriptor",
        "name": "propertyDescriptor"
       },
       {
        "type": "int",
        "name": "index"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setValue"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "getValue"
     },
     {
      "type": "DynamicPropertyHandler",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       }
      ],
      "name": "getDynamicPropertyHandler"
     },
     {
      "type": "Method",
      "params": [
       {
        "type": "Method",
        "name": "method"
       }
      ],
      "name": "getAccessibleMethod"
     },
     {
      "type": "Method",
      "params": [
       {
        "type": "Class",
        "name": "clazz"
       },
       {
        "type": "String",
        "name": "methodName"
       },
       {
        "type": "Class",
        "name": "parameterTypes"
       }
      ],
      "name": "getAccessibleMethodFromInterfaceNest"
     }
    ],
    "name": "ValueUtils",
    "fields": [
     {
      "type": "Map",
      "name": "dynamicPropertyHandlerMap"
     },
     {
      "type": "int",
      "name": "UNKNOWN_LENGTH_MAX_COUNT"
     }
    ]
   }
  ],
  "filename": "ValueUtils.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.util",
  "classes": [
   {
    "methods": [
     {
      "type": "Constructor",
      "params": [
       {
        "type": "Class",
        "name": "targetClass"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "lookupConstructor"
     },
     {
      "type": "Method",
      "params": [
       {
        "type": "Class",
        "name": "targetClass"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "lookupStaticMethod"
     },
     {
      "type": "Method",
      "params": [
       {
        "type": "Class",
        "name": "targetClass"
       },
       {
        "type": "String",
        "name": "name"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "lookupMethod"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "Class",
        "name": "types"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "matchParameterTypes"
     },
     {
      "type": "int",
      "params": [
       {
        "type": "Class",
        "name": "expected"
       },
       {
        "type": "Object",
        "name": "object"
       }
      ],
      "name": "matchType"
     }
    ],
    "name": "MethodLookupUtils",
    "fields": [
     {
      "type": "int",
      "name": "NO_MATCH"
     },
     {
      "type": "int",
      "name": "APPROXIMATE_MATCH"
     },
     {
      "type": "int",
      "name": "EXACT_MATCH"
     }
    ]
   }
  ],
  "filename": "MethodLookupUtils.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.functions",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "ExpressionContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "invoke"
     }
    ],
    "name": "ConstructorFunction",
    "fields": [
     {
      "type": "Constructor",
      "name": "constructor"
     },
     {
      "type": "Object",
      "name": "EMPTY_ARRAY"
     }
    ]
   }
  ],
  "filename": "ConstructorFunction.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.functions",
  "classes": [
   {
    "methods": [
     {
      "type": "Object",
      "params": [
       {
        "type": "ExpressionContext",
        "name": "context"
       },
       {
        "type": "Object",
        "name": "parameters"
       }
      ],
      "name": "invoke"
     },
     {
      "type": "String",
      "params": [],
      "name": "toString"
     }
    ],
    "name": "MethodFunction",
    "fields": [
     {
      "type": "Method",
      "name": "method"
     },
     {
      "type": "Object",
      "name": "EMPTY_ARRAY"
     }
    ]
   }
  ],
  "filename": "MethodFunction.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "pageContext"
       }
      ],
      "name": "getPropertyNames"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "pageContext"
       },
       {
        "type": "String",
        "name": "property"
       }
      ],
      "name": "getProperty"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "pageContext"
       },
       {
        "type": "String",
        "name": "property"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setProperty"
     }
    ],
    "name": "PageContextHandler",
    "fields": []
   }
  ],
  "filename": "PageContextHandler.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "context"
       }
      ],
      "name": "getPropertyNames"
     },
     {
      "type": null,
      "params": [
       {
        "type": "HashSet",
        "name": "set"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "collectPropertyNames"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "context"
       },
       {
        "type": "String",
        "name": "property"
       }
      ],
      "name": "getProperty"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "context"
       },
       {
        "type": "String",
        "name": "property"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setProperty"
     }
    ],
    "name": "ServletContextHandler",
    "fields": [
     {
      "type": "String",
      "name": "STRING_ARRAY"
     }
    ]
   }
  ],
  "filename": "ServletContextHandler.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": "boolean",
      "params": [
       {
        "type": "String",
        "name": "variable"
       }
      ],
      "name": "isDeclaredVariable"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "variable"
       }
      ],
      "name": "getVariable"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "variable"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "declareVariable"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "variable"
       }
      ],
      "name": "undeclareVariable"
     }
    ],
    "name": "KeywordVariables",
    "fields": [
     {
      "type": "String",
      "name": "keyword"
     },
     {
      "type": "Object",
      "name": "object"
     }
    ]
   }
  ],
  "filename": "KeywordVariables.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "HashSet",
        "name": "set"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "collectPropertyNames"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "property"
       }
      ],
      "name": "getProperty"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "request"
       },
       {
        "type": "String",
        "name": "property"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setProperty"
     }
    ],
    "name": "ServletRequestHandler",
    "fields": []
   }
  ],
  "filename": "ServletRequestHandler.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": "HttpSession",
      "params": [],
      "name": "getSession"
     },
     {
      "type": "ServletRequest",
      "params": [],
      "name": "getServletRequest"
     }
    ],
    "name": "ServletRequestAndContext",
    "fields": [
     {
      "type": "ServletRequest",
      "name": "request"
     }
    ]
   }
  ],
  "filename": "ServletRequestAndContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": null,
      "params": [
       {
        "type": "HashSet",
        "name": "set"
       },
       {
        "type": "Object",
        "name": "bean"
       }
      ],
      "name": "collectPropertyNames"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "property"
       }
      ],
      "name": "getProperty"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "bean"
       },
       {
        "type": "String",
        "name": "property"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setProperty"
     }
    ],
    "name": "HttpSessionHandler",
    "fields": []
   }
  ],
  "filename": "HttpSessionHandler.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": "HttpSession",
      "params": [],
      "name": "getSession"
     },
     {
      "type": "ServletContext",
      "params": [],
      "name": "getServletContext"
     }
    ],
    "name": "HttpSessionAndServletContext",
    "fields": [
     {
      "type": "HttpSession",
      "name": "session"
     },
     {
      "type": "ServletContext",
      "name": "context"
     }
    ]
   }
  ],
  "filename": "HttpSessionAndServletContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "PageContext",
        "name": "pageContext"
       }
      ],
      "name": "getPageContext"
     },
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "ServletRequest",
        "name": "request"
       },
       {
        "type": "ServletContext",
        "name": "servletContext"
       }
      ],
      "name": "getRequestContext"
     },
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "HttpSession",
        "name": "session"
       },
       {
        "type": "ServletContext",
        "name": "servletContext"
       }
      ],
      "name": "getSessionContext"
     },
     {
      "type": "JXPathContext",
      "params": [
       {
        "type": "ServletContext",
        "name": "servletContext"
       }
      ],
      "name": "getApplicationContext"
     }
    ],
    "name": "JXPathServletContexts",
    "fields": [
     {
      "type": "JXPathContextFactory",
      "name": "factory"
     }
    ]
   }
  ],
  "filename": "JXPathServletContexts.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": "String",
      "params": [
       {
        "type": "Object",
        "name": "pageScope"
       }
      ],
      "name": "getPropertyNames"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "Object",
        "name": "pageScope"
       },
       {
        "type": "String",
        "name": "property"
       }
      ],
      "name": "getProperty"
     },
     {
      "type": null,
      "params": [
       {
        "type": "Object",
        "name": "pageScope"
       },
       {
        "type": "String",
        "name": "property"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setProperty"
     }
    ],
    "name": "PageScopeContextHandler",
    "fields": [
     {
      "type": "String",
      "name": "STRING_ARRAY"
     }
    ]
   }
  ],
  "filename": "PageScopeContextHandler.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [
     {
      "type": "Enumeration",
      "params": [],
      "name": "getAttributeNames"
     },
     {
      "type": "Object",
      "params": [
       {
        "type": "String",
        "name": "attribute"
       }
      ],
      "name": "getAttribute"
     },
     {
      "type": null,
      "params": [
       {
        "type": "String",
        "name": "attribute"
       },
       {
        "type": "Object",
        "name": "value"
       }
      ],
      "name": "setAttribute"
     }
    ],
    "name": "PageScopeContext",
    "fields": [
     {
      "type": "PageContext",
      "name": "pageContext"
     }
    ]
   }
  ],
  "filename": "PageScopeContext.java"
 },
 {
  "package_name": "org.apache.commons.jxpath.servlet",
  "classes": [
   {
    "methods": [],
    "name": "Constants",
    "fields": [
     {
      "type": "String",
      "name": "APPLICATION_SCOPE"
     },
     {
      "type": "String",
      "name": "SESSION_SCOPE"
     },
     {
      "type": "String",
      "name": "REQUEST_SCOPE"
     },
     {
      "type": "String",
      "name": "PAGE_SCOPE"
     },
     {
      "type": "String",
      "name": "JXPATH_CONTEXT"
     }
    ]
   }
  ],
  "filename": "Constants.java"
 }
]